{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { UriList } from '../../../../base/common/dataTransfer.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { relativePath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nconst builtInLabel = localize('builtIn', 'Built-in');\nclass SimplePasteAndDropProvider {\n  async provideDocumentPasteEdits(_model, _ranges, dataTransfer, token) {\n    const edit = await this.getEdit(dataTransfer, token);\n    return edit ? {\n      insertText: edit.insertText,\n      label: edit.label,\n      detail: edit.detail,\n      handledMimeType: edit.handledMimeType,\n      yieldTo: edit.yieldTo\n    } : undefined;\n  }\n  async provideDocumentOnDropEdits(_model, _position, dataTransfer, token) {\n    const edit = await this.getEdit(dataTransfer, token);\n    return edit ? {\n      insertText: edit.insertText,\n      label: edit.label,\n      handledMimeType: edit.handledMimeType,\n      yieldTo: edit.yieldTo\n    } : undefined;\n  }\n}\nclass DefaultTextProvider extends SimplePasteAndDropProvider {\n  constructor() {\n    super(...arguments);\n    this.id = 'text';\n    this.dropMimeTypes = [Mimes.text];\n    this.pasteMimeTypes = [Mimes.text];\n  }\n  async getEdit(dataTransfer, _token) {\n    const textEntry = dataTransfer.get(Mimes.text);\n    if (!textEntry) {\n      return;\n    }\n    // Suppress if there's also a uriList entry.\n    // Typically the uri-list contains the same text as the text entry so showing both is confusing.\n    if (dataTransfer.has(Mimes.uriList)) {\n      return;\n    }\n    const insertText = await textEntry.asString();\n    return {\n      handledMimeType: Mimes.text,\n      label: localize('text.label', \"Insert Plain Text\"),\n      detail: builtInLabel,\n      insertText\n    };\n  }\n}\nclass PathProvider extends SimplePasteAndDropProvider {\n  constructor() {\n    super(...arguments);\n    this.id = 'uri';\n    this.dropMimeTypes = [Mimes.uriList];\n    this.pasteMimeTypes = [Mimes.uriList];\n  }\n  async getEdit(dataTransfer, token) {\n    const entries = await extractUriList(dataTransfer);\n    if (!entries.length || token.isCancellationRequested) {\n      return;\n    }\n    let uriCount = 0;\n    const insertText = entries.map(({\n      uri,\n      originalText\n    }) => {\n      if (uri.scheme === Schemas.file) {\n        return uri.fsPath;\n      } else {\n        uriCount++;\n        return originalText;\n      }\n    }).join(' ');\n    let label;\n    if (uriCount > 0) {\n      // Dropping at least one generic uri (such as https) so use most generic label\n      label = entries.length > 1 ? localize('defaultDropProvider.uriList.uris', \"Insert Uris\") : localize('defaultDropProvider.uriList.uri', \"Insert Uri\");\n    } else {\n      // All the paths are file paths\n      label = entries.length > 1 ? localize('defaultDropProvider.uriList.paths', \"Insert Paths\") : localize('defaultDropProvider.uriList.path', \"Insert Path\");\n    }\n    return {\n      handledMimeType: Mimes.uriList,\n      insertText,\n      label,\n      detail: builtInLabel\n    };\n  }\n}\nlet RelativePathProvider = class RelativePathProvider extends SimplePasteAndDropProvider {\n  constructor(_workspaceContextService) {\n    super();\n    this._workspaceContextService = _workspaceContextService;\n    this.id = 'relativePath';\n    this.dropMimeTypes = [Mimes.uriList];\n    this.pasteMimeTypes = [Mimes.uriList];\n  }\n  async getEdit(dataTransfer, token) {\n    const entries = await extractUriList(dataTransfer);\n    if (!entries.length || token.isCancellationRequested) {\n      return;\n    }\n    const relativeUris = coalesce(entries.map(({\n      uri\n    }) => {\n      const root = this._workspaceContextService.getWorkspaceFolder(uri);\n      return root ? relativePath(root.uri, uri) : undefined;\n    }));\n    if (!relativeUris.length) {\n      return;\n    }\n    return {\n      handledMimeType: Mimes.uriList,\n      insertText: relativeUris.join(' '),\n      label: entries.length > 1 ? localize('defaultDropProvider.uriList.relativePaths', \"Insert Relative Paths\") : localize('defaultDropProvider.uriList.relativePath', \"Insert Relative Path\"),\n      detail: builtInLabel\n    };\n  }\n};\nRelativePathProvider = __decorate([__param(0, IWorkspaceContextService)], RelativePathProvider);\nasync function extractUriList(dataTransfer) {\n  const urlListEntry = dataTransfer.get(Mimes.uriList);\n  if (!urlListEntry) {\n    return [];\n  }\n  const strUriList = await urlListEntry.asString();\n  const entries = [];\n  for (const entry of UriList.parse(strUriList)) {\n    try {\n      entries.push({\n        uri: URI.parse(entry),\n        originalText: entry\n      });\n    } catch (_a) {\n      // noop\n    }\n  }\n  return entries;\n}\nlet DefaultDropProvidersFeature = class DefaultDropProvidersFeature extends Disposable {\n  constructor(languageFeaturesService, workspaceContextService) {\n    super();\n    this._register(languageFeaturesService.documentOnDropEditProvider.register('*', new DefaultTextProvider()));\n    this._register(languageFeaturesService.documentOnDropEditProvider.register('*', new PathProvider()));\n    this._register(languageFeaturesService.documentOnDropEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n  }\n};\nDefaultDropProvidersFeature = __decorate([__param(0, ILanguageFeaturesService), __param(1, IWorkspaceContextService)], DefaultDropProvidersFeature);\nexport { DefaultDropProvidersFeature };\nlet DefaultPasteProvidersFeature = class DefaultPasteProvidersFeature extends Disposable {\n  constructor(languageFeaturesService, workspaceContextService) {\n    super();\n    this._register(languageFeaturesService.documentPasteEditProvider.register('*', new DefaultTextProvider()));\n    this._register(languageFeaturesService.documentPasteEditProvider.register('*', new PathProvider()));\n    this._register(languageFeaturesService.documentPasteEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n  }\n};\nDefaultPasteProvidersFeature = __decorate([__param(0, ILanguageFeaturesService), __param(1, IWorkspaceContextService)], DefaultPasteProvidersFeature);\nexport { DefaultPasteProvidersFeature };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","coalesce","UriList","Disposable","Mimes","Schemas","relativePath","URI","ILanguageFeaturesService","localize","IWorkspaceContextService","builtInLabel","SimplePasteAndDropProvider","provideDocumentPasteEdits","_model","_ranges","dataTransfer","token","edit","getEdit","insertText","label","detail","handledMimeType","yieldTo","undefined","provideDocumentOnDropEdits","_position","DefaultTextProvider","constructor","id","dropMimeTypes","text","pasteMimeTypes","_token","textEntry","get","has","uriList","asString","PathProvider","entries","extractUriList","isCancellationRequested","uriCount","map","uri","originalText","scheme","file","fsPath","join","RelativePathProvider","_workspaceContextService","relativeUris","root","getWorkspaceFolder","urlListEntry","strUriList","entry","parse","push","_a","DefaultDropProvidersFeature","languageFeaturesService","workspaceContextService","_register","documentOnDropEditProvider","register","DefaultPasteProvidersFeature","documentPasteEditProvider"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/defaultProviders.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { UriList } from '../../../../base/common/dataTransfer.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { relativePath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nconst builtInLabel = localize('builtIn', 'Built-in');\nclass SimplePasteAndDropProvider {\n    async provideDocumentPasteEdits(_model, _ranges, dataTransfer, token) {\n        const edit = await this.getEdit(dataTransfer, token);\n        return edit ? { insertText: edit.insertText, label: edit.label, detail: edit.detail, handledMimeType: edit.handledMimeType, yieldTo: edit.yieldTo } : undefined;\n    }\n    async provideDocumentOnDropEdits(_model, _position, dataTransfer, token) {\n        const edit = await this.getEdit(dataTransfer, token);\n        return edit ? { insertText: edit.insertText, label: edit.label, handledMimeType: edit.handledMimeType, yieldTo: edit.yieldTo } : undefined;\n    }\n}\nclass DefaultTextProvider extends SimplePasteAndDropProvider {\n    constructor() {\n        super(...arguments);\n        this.id = 'text';\n        this.dropMimeTypes = [Mimes.text];\n        this.pasteMimeTypes = [Mimes.text];\n    }\n    async getEdit(dataTransfer, _token) {\n        const textEntry = dataTransfer.get(Mimes.text);\n        if (!textEntry) {\n            return;\n        }\n        // Suppress if there's also a uriList entry.\n        // Typically the uri-list contains the same text as the text entry so showing both is confusing.\n        if (dataTransfer.has(Mimes.uriList)) {\n            return;\n        }\n        const insertText = await textEntry.asString();\n        return {\n            handledMimeType: Mimes.text,\n            label: localize('text.label', \"Insert Plain Text\"),\n            detail: builtInLabel,\n            insertText\n        };\n    }\n}\nclass PathProvider extends SimplePasteAndDropProvider {\n    constructor() {\n        super(...arguments);\n        this.id = 'uri';\n        this.dropMimeTypes = [Mimes.uriList];\n        this.pasteMimeTypes = [Mimes.uriList];\n    }\n    async getEdit(dataTransfer, token) {\n        const entries = await extractUriList(dataTransfer);\n        if (!entries.length || token.isCancellationRequested) {\n            return;\n        }\n        let uriCount = 0;\n        const insertText = entries\n            .map(({ uri, originalText }) => {\n            if (uri.scheme === Schemas.file) {\n                return uri.fsPath;\n            }\n            else {\n                uriCount++;\n                return originalText;\n            }\n        })\n            .join(' ');\n        let label;\n        if (uriCount > 0) {\n            // Dropping at least one generic uri (such as https) so use most generic label\n            label = entries.length > 1\n                ? localize('defaultDropProvider.uriList.uris', \"Insert Uris\")\n                : localize('defaultDropProvider.uriList.uri', \"Insert Uri\");\n        }\n        else {\n            // All the paths are file paths\n            label = entries.length > 1\n                ? localize('defaultDropProvider.uriList.paths', \"Insert Paths\")\n                : localize('defaultDropProvider.uriList.path', \"Insert Path\");\n        }\n        return {\n            handledMimeType: Mimes.uriList,\n            insertText,\n            label,\n            detail: builtInLabel,\n        };\n    }\n}\nlet RelativePathProvider = class RelativePathProvider extends SimplePasteAndDropProvider {\n    constructor(_workspaceContextService) {\n        super();\n        this._workspaceContextService = _workspaceContextService;\n        this.id = 'relativePath';\n        this.dropMimeTypes = [Mimes.uriList];\n        this.pasteMimeTypes = [Mimes.uriList];\n    }\n    async getEdit(dataTransfer, token) {\n        const entries = await extractUriList(dataTransfer);\n        if (!entries.length || token.isCancellationRequested) {\n            return;\n        }\n        const relativeUris = coalesce(entries.map(({ uri }) => {\n            const root = this._workspaceContextService.getWorkspaceFolder(uri);\n            return root ? relativePath(root.uri, uri) : undefined;\n        }));\n        if (!relativeUris.length) {\n            return;\n        }\n        return {\n            handledMimeType: Mimes.uriList,\n            insertText: relativeUris.join(' '),\n            label: entries.length > 1\n                ? localize('defaultDropProvider.uriList.relativePaths', \"Insert Relative Paths\")\n                : localize('defaultDropProvider.uriList.relativePath', \"Insert Relative Path\"),\n            detail: builtInLabel,\n        };\n    }\n};\nRelativePathProvider = __decorate([\n    __param(0, IWorkspaceContextService)\n], RelativePathProvider);\nasync function extractUriList(dataTransfer) {\n    const urlListEntry = dataTransfer.get(Mimes.uriList);\n    if (!urlListEntry) {\n        return [];\n    }\n    const strUriList = await urlListEntry.asString();\n    const entries = [];\n    for (const entry of UriList.parse(strUriList)) {\n        try {\n            entries.push({ uri: URI.parse(entry), originalText: entry });\n        }\n        catch (_a) {\n            // noop\n        }\n    }\n    return entries;\n}\nlet DefaultDropProvidersFeature = class DefaultDropProvidersFeature extends Disposable {\n    constructor(languageFeaturesService, workspaceContextService) {\n        super();\n        this._register(languageFeaturesService.documentOnDropEditProvider.register('*', new DefaultTextProvider()));\n        this._register(languageFeaturesService.documentOnDropEditProvider.register('*', new PathProvider()));\n        this._register(languageFeaturesService.documentOnDropEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n    }\n};\nDefaultDropProvidersFeature = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, IWorkspaceContextService)\n], DefaultDropProvidersFeature);\nexport { DefaultDropProvidersFeature };\nlet DefaultPasteProvidersFeature = class DefaultPasteProvidersFeature extends Disposable {\n    constructor(languageFeaturesService, workspaceContextService) {\n        super();\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new DefaultTextProvider()));\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new PathProvider()));\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n    }\n};\nDefaultPasteProvidersFeature = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, IWorkspaceContextService)\n], DefaultPasteProvidersFeature);\nexport { DefaultPasteProvidersFeature };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}