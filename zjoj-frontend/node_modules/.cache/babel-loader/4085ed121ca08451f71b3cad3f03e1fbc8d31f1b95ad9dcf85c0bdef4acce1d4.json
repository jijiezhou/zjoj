{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\nexport default (function (CodeMirror) {\n  var START = 0,\n    FRONTMATTER = 1,\n    BODY = 2;\n\n  // a mixed mode for Markdown text with an optional YAML front matter\n  CodeMirror.defineMode(\"yaml-frontmatter\", function (config, parserConfig) {\n    var yamlMode = CodeMirror.getMode(config, \"yaml\");\n    var innerMode = CodeMirror.getMode(config, parserConfig && parserConfig.base || \"gfm\");\n    function localMode(state) {\n      return state.state == FRONTMATTER ? {\n        mode: yamlMode,\n        state: state.yaml\n      } : {\n        mode: innerMode,\n        state: state.inner\n      };\n    }\n    return {\n      startState: function () {\n        return {\n          state: START,\n          yaml: null,\n          inner: CodeMirror.startState(innerMode)\n        };\n      },\n      copyState: function (state) {\n        return {\n          state: state.state,\n          yaml: state.yaml && CodeMirror.copyState(yamlMode, state.yaml),\n          inner: CodeMirror.copyState(innerMode, state.inner)\n        };\n      },\n      token: function (stream, state) {\n        if (state.state == START) {\n          if (stream.match('---', false)) {\n            state.state = FRONTMATTER;\n            state.yaml = CodeMirror.startState(yamlMode);\n            return yamlMode.token(stream, state.yaml);\n          } else {\n            state.state = BODY;\n            return innerMode.token(stream, state.inner);\n          }\n        } else if (state.state == FRONTMATTER) {\n          var end = stream.sol() && stream.match(/(---|\\.\\.\\.)/, false);\n          var style = yamlMode.token(stream, state.yaml);\n          if (end) {\n            state.state = BODY;\n            state.yaml = null;\n          }\n          return style;\n        } else {\n          return innerMode.token(stream, state.inner);\n        }\n      },\n      innerMode: localMode,\n      indent: function (state, a, b) {\n        var m = localMode(state);\n        return m.mode.indent ? m.mode.indent(m.state, a, b) : CodeMirror.Pass;\n      },\n      blankLine: function (state) {\n        var m = localMode(state);\n        if (m.mode.blankLine) return m.mode.blankLine(m.state);\n      }\n    };\n  });\n});","map":{"version":3,"names":["CodeMirror","START","FRONTMATTER","BODY","defineMode","config","parserConfig","yamlMode","getMode","innerMode","base","localMode","state","mode","yaml","inner","startState","copyState","token","stream","match","end","sol","style","indent","a","b","m","Pass","blankLine"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/codemirror-ssr/mode/yaml-frontmatter/yaml-frontmatter.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\nexport default (function (CodeMirror) {\n\n  var START = 0, FRONTMATTER = 1, BODY = 2\n\n  // a mixed mode for Markdown text with an optional YAML front matter\n  CodeMirror.defineMode(\"yaml-frontmatter\", function (config, parserConfig) {\n    var yamlMode = CodeMirror.getMode(config, \"yaml\")\n    var innerMode = CodeMirror.getMode(config, parserConfig && parserConfig.base || \"gfm\")\n\n    function localMode(state) {\n      return state.state == FRONTMATTER ? {mode: yamlMode, state: state.yaml} : {mode: innerMode, state: state.inner}\n    }\n\n    return {\n      startState: function () {\n        return {\n          state: START,\n          yaml: null,\n          inner: CodeMirror.startState(innerMode)\n        }\n      },\n      copyState: function (state) {\n        return {\n          state: state.state,\n          yaml: state.yaml && CodeMirror.copyState(yamlMode, state.yaml),\n          inner: CodeMirror.copyState(innerMode, state.inner)\n        }\n      },\n      token: function (stream, state) {\n        if (state.state == START) {\n          if (stream.match('---', false)) {\n            state.state = FRONTMATTER\n            state.yaml = CodeMirror.startState(yamlMode)\n            return yamlMode.token(stream, state.yaml)\n          } else {\n            state.state = BODY\n            return innerMode.token(stream, state.inner)\n          }\n        } else if (state.state == FRONTMATTER) {\n          var end = stream.sol() && stream.match(/(---|\\.\\.\\.)/, false)\n          var style = yamlMode.token(stream, state.yaml)\n          if (end) {\n            state.state = BODY\n            state.yaml = null\n          }\n          return style\n        } else {\n          return innerMode.token(stream, state.inner)\n        }\n      },\n      innerMode: localMode,\n      indent: function(state, a, b) {\n        var m = localMode(state)\n        return m.mode.indent ? m.mode.indent(m.state, a, b) : CodeMirror.Pass\n      },\n      blankLine: function (state) {\n        var m = localMode(state)\n        if (m.mode.blankLine) return m.mode.blankLine(m.state)\n      }\n    }\n  })\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}