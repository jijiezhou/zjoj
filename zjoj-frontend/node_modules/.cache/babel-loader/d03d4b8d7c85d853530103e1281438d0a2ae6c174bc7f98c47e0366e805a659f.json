{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a, _b, _c, _d, _e, _f, _g, _h;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { isCodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction2 } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/embeddedCodeEditorWidget.js';\nimport * as corePosition from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { isLocationLink } from '../../../common/languages.js';\nimport { ReferencesController } from './peek/referencesController.js';\nimport { ReferencesModel } from './referencesModel.js';\nimport { ISymbolNavigationService } from './symbolNavigation.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, MenuRegistry, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { getDeclarationsAtPosition, getDefinitionsAtPosition, getImplementationsAtPosition, getReferencesAtPosition, getTypeDefinitionsAtPosition } from './goToSymbol.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { IsWebContext } from '../../../../platform/contextkey/common/contextkeys.js';\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n  submenu: MenuId.EditorContextPeek,\n  title: nls.localize('peek.submenu', \"Peek\"),\n  group: 'navigation',\n  order: 100\n});\nexport class SymbolNavigationAnchor {\n  static is(thing) {\n    if (!thing || typeof thing !== 'object') {\n      return false;\n    }\n    if (thing instanceof SymbolNavigationAnchor) {\n      return true;\n    }\n    if (corePosition.Position.isIPosition(thing.position) && thing.model) {\n      return true;\n    }\n    return false;\n  }\n  constructor(model, position) {\n    this.model = model;\n    this.position = position;\n  }\n}\nexport class SymbolNavigationAction extends EditorAction2 {\n  static all() {\n    return SymbolNavigationAction._allSymbolNavigationCommands.values();\n  }\n  static _patchConfig(opts) {\n    const result = {\n      ...opts,\n      f1: true\n    };\n    // patch context menu when clause\n    if (result.menu) {\n      for (const item of Iterable.wrap(result.menu)) {\n        if (item.id === MenuId.EditorContext || item.id === MenuId.EditorContextPeek) {\n          item.when = ContextKeyExpr.and(opts.precondition, item.when);\n        }\n      }\n    }\n    return result;\n  }\n  constructor(configuration, opts) {\n    super(SymbolNavigationAction._patchConfig(opts));\n    this.configuration = configuration;\n    SymbolNavigationAction._allSymbolNavigationCommands.set(opts.id, this);\n  }\n  runEditorCommand(accessor, editor, arg, range) {\n    if (!editor.hasModel()) {\n      return Promise.resolve(undefined);\n    }\n    const notificationService = accessor.get(INotificationService);\n    const editorService = accessor.get(ICodeEditorService);\n    const progressService = accessor.get(IEditorProgressService);\n    const symbolNavService = accessor.get(ISymbolNavigationService);\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const instaService = accessor.get(IInstantiationService);\n    const model = editor.getModel();\n    const position = editor.getPosition();\n    const anchor = SymbolNavigationAnchor.is(arg) ? arg : new SymbolNavigationAnchor(model, position);\n    const cts = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n    const promise = raceCancellation(this._getLocationModel(languageFeaturesService, anchor.model, anchor.position, cts.token), cts.token).then(async references => {\n      var _j;\n      if (!references || cts.token.isCancellationRequested) {\n        return;\n      }\n      alert(references.ariaMessage);\n      let altAction;\n      if (references.referenceAt(model.uri, position)) {\n        const altActionId = this._getAlternativeCommand(editor);\n        if (!SymbolNavigationAction._activeAlternativeCommands.has(altActionId) && SymbolNavigationAction._allSymbolNavigationCommands.has(altActionId)) {\n          altAction = SymbolNavigationAction._allSymbolNavigationCommands.get(altActionId);\n        }\n      }\n      const referenceCount = references.references.length;\n      if (referenceCount === 0) {\n        // no result -> show message\n        if (!this.configuration.muteMessage) {\n          const info = model.getWordAtPosition(position);\n          (_j = MessageController.get(editor)) === null || _j === void 0 ? void 0 : _j.showMessage(this._getNoResultFoundMessage(info), position);\n        }\n      } else if (referenceCount === 1 && altAction) {\n        // already at the only result, run alternative\n        SymbolNavigationAction._activeAlternativeCommands.add(this.desc.id);\n        instaService.invokeFunction(accessor => altAction.runEditorCommand(accessor, editor, arg, range).finally(() => {\n          SymbolNavigationAction._activeAlternativeCommands.delete(this.desc.id);\n        }));\n      } else {\n        // normal results handling\n        return this._onResult(editorService, symbolNavService, editor, references, range);\n      }\n    }, err => {\n      // report an error\n      notificationService.error(err);\n    }).finally(() => {\n      cts.dispose();\n    });\n    progressService.showWhile(promise, 250);\n    return promise;\n  }\n  async _onResult(editorService, symbolNavService, editor, model, range) {\n    const gotoLocation = this._getGoToPreference(editor);\n    if (!(editor instanceof EmbeddedCodeEditorWidget) && (this.configuration.openInPeek || gotoLocation === 'peek' && model.references.length > 1)) {\n      this._openInPeek(editor, model, range);\n    } else {\n      const next = model.firstReference();\n      const peek = model.references.length > 1 && gotoLocation === 'gotoAndPeek';\n      const targetEditor = await this._openReference(editor, editorService, next, this.configuration.openToSide, !peek);\n      if (peek && targetEditor) {\n        this._openInPeek(targetEditor, model, range);\n      } else {\n        model.dispose();\n      }\n      // keep remaining locations around when using\n      // 'goto'-mode\n      if (gotoLocation === 'goto') {\n        symbolNavService.put(next);\n      }\n    }\n  }\n  async _openReference(editor, editorService, reference, sideBySide, highlight) {\n    // range is the target-selection-range when we have one\n    // and the fallback is the 'full' range\n    let range = undefined;\n    if (isLocationLink(reference)) {\n      range = reference.targetSelectionRange;\n    }\n    if (!range) {\n      range = reference.range;\n    }\n    if (!range) {\n      return undefined;\n    }\n    const targetEditor = await editorService.openCodeEditor({\n      resource: reference.uri,\n      options: {\n        selection: Range.collapseToStart(range),\n        selectionRevealType: 3 /* TextEditorSelectionRevealType.NearTopIfOutsideViewport */,\n        selectionSource: \"code.jump\" /* TextEditorSelectionSource.JUMP */\n      }\n    }, editor, sideBySide);\n    if (!targetEditor) {\n      return undefined;\n    }\n    if (highlight) {\n      const modelNow = targetEditor.getModel();\n      const decorations = targetEditor.createDecorationsCollection([{\n        range,\n        options: {\n          description: 'symbol-navigate-action-highlight',\n          className: 'symbolHighlight'\n        }\n      }]);\n      setTimeout(() => {\n        if (targetEditor.getModel() === modelNow) {\n          decorations.clear();\n        }\n      }, 350);\n    }\n    return targetEditor;\n  }\n  _openInPeek(target, model, range) {\n    const controller = ReferencesController.get(target);\n    if (controller && target.hasModel()) {\n      controller.toggleWidget(range !== null && range !== void 0 ? range : target.getSelection(), createCancelablePromise(_ => Promise.resolve(model)), this.configuration.openInPeek);\n    } else {\n      model.dispose();\n    }\n  }\n}\nSymbolNavigationAction._allSymbolNavigationCommands = new Map();\nSymbolNavigationAction._activeAlternativeCommands = new Set();\n//#region --- DEFINITION\nexport class DefinitionAction extends SymbolNavigationAction {\n  async _getLocationModel(languageFeaturesService, model, position, token) {\n    return new ReferencesModel(await getDefinitionsAtPosition(languageFeaturesService.definitionProvider, model, position, token), nls.localize('def.title', 'Definitions'));\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('noResultWord', \"No definition found for '{0}'\", info.word) : nls.localize('generic.noResults', \"No definition found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeDefinitionCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleDefinitions;\n  }\n}\nregisterAction2((_a = class GoToDefinitionAction extends DefinitionAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: _a.id,\n      title: {\n        value: nls.localize('actions.goToDecl.label', \"Go to Definition\"),\n        original: 'Go to Definition',\n        mnemonicTitle: nls.localize({\n          key: 'miGotoDefinition',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Definition\")\n      },\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      keybinding: [{\n        when: EditorContextKeys.editorTextFocus,\n        primary: 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }, {\n        when: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, IsWebContext),\n        primary: 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }],\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.1\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 2\n      }]\n    });\n    CommandsRegistry.registerCommandAlias('editor.action.goToDeclaration', _a.id);\n  }\n}, _a.id = 'editor.action.revealDefinition', _a));\nregisterAction2((_b = class OpenDefinitionToSideAction extends DefinitionAction {\n  constructor() {\n    super({\n      openToSide: true,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: _b.id,\n      title: {\n        value: nls.localize('actions.goToDeclToSide.label', \"Open Definition to the Side\"),\n        original: 'Open Definition to the Side'\n      },\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      keybinding: [{\n        when: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 70 /* KeyCode.F12 */),\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }, {\n        when: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, IsWebContext),\n        primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */),\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }]\n    });\n    CommandsRegistry.registerCommandAlias('editor.action.openDeclarationToTheSide', _b.id);\n  }\n}, _b.id = 'editor.action.revealDefinitionAside', _b));\nregisterAction2((_c = class PeekDefinitionAction extends DefinitionAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: _c.id,\n      title: {\n        value: nls.localize('actions.previewDecl.label', \"Peek Definition\"),\n        original: 'Peek Definition'\n      },\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 512 /* KeyMod.Alt */ | 70 /* KeyCode.F12 */,\n        linux: {\n          primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 68 /* KeyCode.F10 */\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 2\n      }\n    });\n    CommandsRegistry.registerCommandAlias('editor.action.previewDeclaration', _c.id);\n  }\n}, _c.id = 'editor.action.peekDefinition', _c));\n//#endregion\n//#region --- DECLARATION\nclass DeclarationAction extends SymbolNavigationAction {\n  async _getLocationModel(languageFeaturesService, model, position, token) {\n    return new ReferencesModel(await getDeclarationsAtPosition(languageFeaturesService.declarationProvider, model, position, token), nls.localize('decl.title', 'Declarations'));\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word) : nls.localize('decl.generic.noResults', \"No declaration found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeDeclarationCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleDeclarations;\n  }\n}\nregisterAction2((_d = class GoToDeclarationAction extends DeclarationAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: _d.id,\n      title: {\n        value: nls.localize('actions.goToDeclaration.label', \"Go to Declaration\"),\n        original: 'Go to Declaration',\n        mnemonicTitle: nls.localize({\n          key: 'miGotoDeclaration',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Declaration\")\n      },\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.3\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 3\n      }]\n    });\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word) : nls.localize('decl.generic.noResults', \"No declaration found\");\n  }\n}, _d.id = 'editor.action.revealDeclaration', _d));\nregisterAction2(class PeekDeclarationAction extends DeclarationAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: 'editor.action.peekDeclaration',\n      title: {\n        value: nls.localize('actions.peekDecl.label', \"Peek Declaration\"),\n        original: 'Peek Declaration'\n      },\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 3\n      }\n    });\n  }\n});\n//#endregion\n//#region --- TYPE DEFINITION\nclass TypeDefinitionAction extends SymbolNavigationAction {\n  async _getLocationModel(languageFeaturesService, model, position, token) {\n    return new ReferencesModel(await getTypeDefinitionsAtPosition(languageFeaturesService.typeDefinitionProvider, model, position, token), nls.localize('typedef.title', 'Type Definitions'));\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('goToTypeDefinition.noResultWord', \"No type definition found for '{0}'\", info.word) : nls.localize('goToTypeDefinition.generic.noResults', \"No type definition found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeTypeDefinitionCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleTypeDefinitions;\n  }\n}\nregisterAction2((_e = class GoToTypeDefinitionAction extends TypeDefinitionAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: _e.ID,\n      title: {\n        value: nls.localize('actions.goToTypeDefinition.label', \"Go to Type Definition\"),\n        original: 'Go to Type Definition',\n        mnemonicTitle: nls.localize({\n          key: 'miGotoTypeDefinition',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Type Definition\")\n      },\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 0,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.4\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 3\n      }]\n    });\n  }\n}, _e.ID = 'editor.action.goToTypeDefinition', _e));\nregisterAction2((_f = class PeekTypeDefinitionAction extends TypeDefinitionAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: _f.ID,\n      title: {\n        value: nls.localize('actions.peekTypeDefinition.label', \"Peek Type Definition\"),\n        original: 'Peek Type Definition'\n      },\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 4\n      }\n    });\n  }\n}, _f.ID = 'editor.action.peekTypeDefinition', _f));\n//#endregion\n//#region --- IMPLEMENTATION\nclass ImplementationAction extends SymbolNavigationAction {\n  async _getLocationModel(languageFeaturesService, model, position, token) {\n    return new ReferencesModel(await getImplementationsAtPosition(languageFeaturesService.implementationProvider, model, position, token), nls.localize('impl.title', 'Implementations'));\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('goToImplementation.noResultWord', \"No implementation found for '{0}'\", info.word) : nls.localize('goToImplementation.generic.noResults', \"No implementation found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeImplementationCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleImplementations;\n  }\n}\nregisterAction2((_g = class GoToImplementationAction extends ImplementationAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: _g.ID,\n      title: {\n        value: nls.localize('actions.goToImplementation.label', \"Go to Implementations\"),\n        original: 'Go to Implementations',\n        mnemonicTitle: nls.localize({\n          key: 'miGotoImplementation',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Implementations\")\n      },\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.45\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 4\n      }]\n    });\n  }\n}, _g.ID = 'editor.action.goToImplementation', _g));\nregisterAction2((_h = class PeekImplementationAction extends ImplementationAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: _h.ID,\n      title: {\n        value: nls.localize('actions.peekImplementation.label', \"Peek Implementations\"),\n        original: 'Peek Implementations'\n      },\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 5\n      }\n    });\n  }\n}, _h.ID = 'editor.action.peekImplementation', _h));\n//#endregion\n//#region --- REFERENCES\nclass ReferencesAction extends SymbolNavigationAction {\n  _getNoResultFoundMessage(info) {\n    return info ? nls.localize('references.no', \"No references found for '{0}'\", info.word) : nls.localize('references.noGeneric', \"No references found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeReferenceCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleReferences;\n  }\n}\nregisterAction2(class GoToReferencesAction extends ReferencesAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: 'editor.action.goToReferences',\n      title: {\n        value: nls.localize('goToReferences.label', \"Go to References\"),\n        original: 'Go to References',\n        mnemonicTitle: nls.localize({\n          key: 'miGotoReference',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&References\")\n      },\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.45\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 5\n      }]\n    });\n  }\n  async _getLocationModel(languageFeaturesService, model, position, token) {\n    return new ReferencesModel(await getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, true, token), nls.localize('ref.title', 'References'));\n  }\n});\nregisterAction2(class PeekReferencesAction extends ReferencesAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: 'editor.action.referenceSearch.trigger',\n      title: {\n        value: nls.localize('references.action.label', \"Peek References\"),\n        original: 'Peek References'\n      },\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 6\n      }\n    });\n  }\n  async _getLocationModel(languageFeaturesService, model, position, token) {\n    return new ReferencesModel(await getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, false, token), nls.localize('ref.title', 'References'));\n  }\n});\n//#endregion\n//#region --- GENERIC goto symbols command\nclass GenericGoToLocationAction extends SymbolNavigationAction {\n  constructor(config, _references, _gotoMultipleBehaviour) {\n    super(config, {\n      id: 'editor.action.goToLocation',\n      title: {\n        value: nls.localize('label.generic', \"Go to Any Symbol\"),\n        original: 'Go to Any Symbol'\n      },\n      precondition: ContextKeyExpr.and(PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated())\n    });\n    this._references = _references;\n    this._gotoMultipleBehaviour = _gotoMultipleBehaviour;\n  }\n  async _getLocationModel(languageFeaturesService, _model, _position, _token) {\n    return new ReferencesModel(this._references, nls.localize('generic.title', 'Locations'));\n  }\n  _getNoResultFoundMessage(info) {\n    return info && nls.localize('generic.noResult', \"No results for '{0}'\", info.word) || '';\n  }\n  _getGoToPreference(editor) {\n    var _j;\n    return (_j = this._gotoMultipleBehaviour) !== null && _j !== void 0 ? _j : editor.getOption(58 /* EditorOption.gotoLocation */).multipleReferences;\n  }\n  _getAlternativeCommand() {\n    return '';\n  }\n}\nCommandsRegistry.registerCommand({\n  id: 'editor.action.goToLocations',\n  metadata: {\n    description: 'Go to locations from a position in a file',\n    args: [{\n      name: 'uri',\n      description: 'The text document in which to start',\n      constraint: URI\n    }, {\n      name: 'position',\n      description: 'The position at which to start',\n      constraint: corePosition.Position.isIPosition\n    }, {\n      name: 'locations',\n      description: 'An array of locations.',\n      constraint: Array\n    }, {\n      name: 'multiple',\n      description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto'\n    }, {\n      name: 'noResultsMessage',\n      description: 'Human readable message that shows when locations is empty.'\n    }]\n  },\n  handler: async (accessor, resource, position, references, multiple, noResultsMessage, openInPeek) => {\n    assertType(URI.isUri(resource));\n    assertType(corePosition.Position.isIPosition(position));\n    assertType(Array.isArray(references));\n    assertType(typeof multiple === 'undefined' || typeof multiple === 'string');\n    assertType(typeof openInPeek === 'undefined' || typeof openInPeek === 'boolean');\n    const editorService = accessor.get(ICodeEditorService);\n    const editor = await editorService.openCodeEditor({\n      resource\n    }, editorService.getFocusedCodeEditor());\n    if (isCodeEditor(editor)) {\n      editor.setPosition(position);\n      editor.revealPositionInCenterIfOutsideViewport(position, 0 /* ScrollType.Smooth */);\n      return editor.invokeWithinContext(accessor => {\n        const command = new class extends GenericGoToLocationAction {\n          _getNoResultFoundMessage(info) {\n            return noResultsMessage || super._getNoResultFoundMessage(info);\n          }\n        }({\n          muteMessage: !Boolean(noResultsMessage),\n          openInPeek: Boolean(openInPeek),\n          openToSide: false\n        }, references, multiple);\n        accessor.get(IInstantiationService).invokeFunction(command.run.bind(command), editor);\n      });\n    }\n  }\n});\nCommandsRegistry.registerCommand({\n  id: 'editor.action.peekLocations',\n  metadata: {\n    description: 'Peek locations from a position in a file',\n    args: [{\n      name: 'uri',\n      description: 'The text document in which to start',\n      constraint: URI\n    }, {\n      name: 'position',\n      description: 'The position at which to start',\n      constraint: corePosition.Position.isIPosition\n    }, {\n      name: 'locations',\n      description: 'An array of locations.',\n      constraint: Array\n    }, {\n      name: 'multiple',\n      description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto'\n    }]\n  },\n  handler: async (accessor, resource, position, references, multiple) => {\n    accessor.get(ICommandService).executeCommand('editor.action.goToLocations', resource, position, references, multiple, undefined, true);\n  }\n});\n//#endregion\n//#region --- REFERENCE search special commands\nCommandsRegistry.registerCommand({\n  id: 'editor.action.findReferences',\n  handler: (accessor, resource, position) => {\n    assertType(URI.isUri(resource));\n    assertType(corePosition.Position.isIPosition(position));\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const codeEditorService = accessor.get(ICodeEditorService);\n    return codeEditorService.openCodeEditor({\n      resource\n    }, codeEditorService.getFocusedCodeEditor()).then(control => {\n      if (!isCodeEditor(control) || !control.hasModel()) {\n        return undefined;\n      }\n      const controller = ReferencesController.get(control);\n      if (!controller) {\n        return undefined;\n      }\n      const references = createCancelablePromise(token => getReferencesAtPosition(languageFeaturesService.referenceProvider, control.getModel(), corePosition.Position.lift(position), false, token).then(references => new ReferencesModel(references, nls.localize('ref.title', 'References'))));\n      const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n      return Promise.resolve(controller.toggleWidget(range, references, false));\n    });\n  }\n});\n// use NEW command\nCommandsRegistry.registerCommandAlias('editor.action.showReferences', 'editor.action.peekLocations');\n//#endregion","map":{"version":3,"names":["_a","_b","_c","_d","_e","_f","_g","_h","alert","createCancelablePromise","raceCancellation","KeyChord","assertType","URI","EditorStateCancellationTokenSource","isCodeEditor","EditorAction2","ICodeEditorService","EmbeddedCodeEditorWidget","corePosition","Range","EditorContextKeys","isLocationLink","ReferencesController","ReferencesModel","ISymbolNavigationService","MessageController","PeekContext","nls","MenuId","MenuRegistry","registerAction2","CommandsRegistry","ICommandService","ContextKeyExpr","IInstantiationService","INotificationService","IEditorProgressService","getDeclarationsAtPosition","getDefinitionsAtPosition","getImplementationsAtPosition","getReferencesAtPosition","getTypeDefinitionsAtPosition","ILanguageFeaturesService","Iterable","IsWebContext","appendMenuItem","EditorContext","submenu","EditorContextPeek","title","localize","group","order","SymbolNavigationAnchor","is","thing","Position","isIPosition","position","model","constructor","SymbolNavigationAction","all","_allSymbolNavigationCommands","values","_patchConfig","opts","result","f1","menu","item","wrap","id","when","and","precondition","configuration","set","runEditorCommand","accessor","editor","arg","range","hasModel","Promise","resolve","undefined","notificationService","get","editorService","progressService","symbolNavService","languageFeaturesService","instaService","getModel","getPosition","anchor","cts","promise","_getLocationModel","token","then","references","_j","isCancellationRequested","ariaMessage","altAction","referenceAt","uri","altActionId","_getAlternativeCommand","_activeAlternativeCommands","has","referenceCount","length","muteMessage","info","getWordAtPosition","showMessage","_getNoResultFoundMessage","add","desc","invokeFunction","finally","delete","_onResult","err","error","dispose","showWhile","gotoLocation","_getGoToPreference","openInPeek","_openInPeek","next","firstReference","peek","targetEditor","_openReference","openToSide","put","reference","sideBySide","highlight","targetSelectionRange","openCodeEditor","resource","options","selection","collapseToStart","selectionRevealType","selectionSource","modelNow","decorations","createDecorationsCollection","description","className","setTimeout","clear","target","controller","toggleWidget","getSelection","_","Map","Set","DefinitionAction","definitionProvider","word","getOption","alternativeDefinitionCommand","multipleDefinitions","GoToDefinitionAction","value","original","mnemonicTitle","key","comment","hasDefinitionProvider","isInWalkThroughSnippet","toNegated","keybinding","editorTextFocus","primary","weight","MenubarGoMenu","registerCommandAlias","OpenDefinitionToSideAction","PeekDefinitionAction","notInPeekEditor","linux","DeclarationAction","declarationProvider","alternativeDeclarationCommand","multipleDeclarations","GoToDeclarationAction","hasDeclarationProvider","PeekDeclarationAction","TypeDefinitionAction","typeDefinitionProvider","alternativeTypeDefinitionCommand","multipleTypeDefinitions","GoToTypeDefinitionAction","ID","hasTypeDefinitionProvider","PeekTypeDefinitionAction","ImplementationAction","implementationProvider","alternativeImplementationCommand","multipleImplementations","GoToImplementationAction","hasImplementationProvider","PeekImplementationAction","ReferencesAction","alternativeReferenceCommand","multipleReferences","GoToReferencesAction","hasReferenceProvider","referenceProvider","PeekReferencesAction","GenericGoToLocationAction","config","_references","_gotoMultipleBehaviour","_model","_position","_token","registerCommand","metadata","args","name","constraint","Array","handler","multiple","noResultsMessage","isUri","isArray","getFocusedCodeEditor","setPosition","revealPositionInCenterIfOutsideViewport","invokeWithinContext","command","Boolean","run","bind","executeCommand","codeEditorService","control","lift","lineNumber","column"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/goToCommands.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a, _b, _c, _d, _e, _f, _g, _h;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { isCodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction2 } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/embeddedCodeEditorWidget.js';\nimport * as corePosition from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { isLocationLink } from '../../../common/languages.js';\nimport { ReferencesController } from './peek/referencesController.js';\nimport { ReferencesModel } from './referencesModel.js';\nimport { ISymbolNavigationService } from './symbolNavigation.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, MenuRegistry, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { getDeclarationsAtPosition, getDefinitionsAtPosition, getImplementationsAtPosition, getReferencesAtPosition, getTypeDefinitionsAtPosition } from './goToSymbol.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { IsWebContext } from '../../../../platform/contextkey/common/contextkeys.js';\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n    submenu: MenuId.EditorContextPeek,\n    title: nls.localize('peek.submenu', \"Peek\"),\n    group: 'navigation',\n    order: 100\n});\nexport class SymbolNavigationAnchor {\n    static is(thing) {\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        if (thing instanceof SymbolNavigationAnchor) {\n            return true;\n        }\n        if (corePosition.Position.isIPosition(thing.position) && thing.model) {\n            return true;\n        }\n        return false;\n    }\n    constructor(model, position) {\n        this.model = model;\n        this.position = position;\n    }\n}\nexport class SymbolNavigationAction extends EditorAction2 {\n    static all() {\n        return SymbolNavigationAction._allSymbolNavigationCommands.values();\n    }\n    static _patchConfig(opts) {\n        const result = { ...opts, f1: true };\n        // patch context menu when clause\n        if (result.menu) {\n            for (const item of Iterable.wrap(result.menu)) {\n                if (item.id === MenuId.EditorContext || item.id === MenuId.EditorContextPeek) {\n                    item.when = ContextKeyExpr.and(opts.precondition, item.when);\n                }\n            }\n        }\n        return result;\n    }\n    constructor(configuration, opts) {\n        super(SymbolNavigationAction._patchConfig(opts));\n        this.configuration = configuration;\n        SymbolNavigationAction._allSymbolNavigationCommands.set(opts.id, this);\n    }\n    runEditorCommand(accessor, editor, arg, range) {\n        if (!editor.hasModel()) {\n            return Promise.resolve(undefined);\n        }\n        const notificationService = accessor.get(INotificationService);\n        const editorService = accessor.get(ICodeEditorService);\n        const progressService = accessor.get(IEditorProgressService);\n        const symbolNavService = accessor.get(ISymbolNavigationService);\n        const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n        const instaService = accessor.get(IInstantiationService);\n        const model = editor.getModel();\n        const position = editor.getPosition();\n        const anchor = SymbolNavigationAnchor.is(arg) ? arg : new SymbolNavigationAnchor(model, position);\n        const cts = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n        const promise = raceCancellation(this._getLocationModel(languageFeaturesService, anchor.model, anchor.position, cts.token), cts.token).then(async (references) => {\n            var _j;\n            if (!references || cts.token.isCancellationRequested) {\n                return;\n            }\n            alert(references.ariaMessage);\n            let altAction;\n            if (references.referenceAt(model.uri, position)) {\n                const altActionId = this._getAlternativeCommand(editor);\n                if (!SymbolNavigationAction._activeAlternativeCommands.has(altActionId) && SymbolNavigationAction._allSymbolNavigationCommands.has(altActionId)) {\n                    altAction = SymbolNavigationAction._allSymbolNavigationCommands.get(altActionId);\n                }\n            }\n            const referenceCount = references.references.length;\n            if (referenceCount === 0) {\n                // no result -> show message\n                if (!this.configuration.muteMessage) {\n                    const info = model.getWordAtPosition(position);\n                    (_j = MessageController.get(editor)) === null || _j === void 0 ? void 0 : _j.showMessage(this._getNoResultFoundMessage(info), position);\n                }\n            }\n            else if (referenceCount === 1 && altAction) {\n                // already at the only result, run alternative\n                SymbolNavigationAction._activeAlternativeCommands.add(this.desc.id);\n                instaService.invokeFunction((accessor) => altAction.runEditorCommand(accessor, editor, arg, range).finally(() => {\n                    SymbolNavigationAction._activeAlternativeCommands.delete(this.desc.id);\n                }));\n            }\n            else {\n                // normal results handling\n                return this._onResult(editorService, symbolNavService, editor, references, range);\n            }\n        }, (err) => {\n            // report an error\n            notificationService.error(err);\n        }).finally(() => {\n            cts.dispose();\n        });\n        progressService.showWhile(promise, 250);\n        return promise;\n    }\n    async _onResult(editorService, symbolNavService, editor, model, range) {\n        const gotoLocation = this._getGoToPreference(editor);\n        if (!(editor instanceof EmbeddedCodeEditorWidget) && (this.configuration.openInPeek || (gotoLocation === 'peek' && model.references.length > 1))) {\n            this._openInPeek(editor, model, range);\n        }\n        else {\n            const next = model.firstReference();\n            const peek = model.references.length > 1 && gotoLocation === 'gotoAndPeek';\n            const targetEditor = await this._openReference(editor, editorService, next, this.configuration.openToSide, !peek);\n            if (peek && targetEditor) {\n                this._openInPeek(targetEditor, model, range);\n            }\n            else {\n                model.dispose();\n            }\n            // keep remaining locations around when using\n            // 'goto'-mode\n            if (gotoLocation === 'goto') {\n                symbolNavService.put(next);\n            }\n        }\n    }\n    async _openReference(editor, editorService, reference, sideBySide, highlight) {\n        // range is the target-selection-range when we have one\n        // and the fallback is the 'full' range\n        let range = undefined;\n        if (isLocationLink(reference)) {\n            range = reference.targetSelectionRange;\n        }\n        if (!range) {\n            range = reference.range;\n        }\n        if (!range) {\n            return undefined;\n        }\n        const targetEditor = await editorService.openCodeEditor({\n            resource: reference.uri,\n            options: {\n                selection: Range.collapseToStart(range),\n                selectionRevealType: 3 /* TextEditorSelectionRevealType.NearTopIfOutsideViewport */,\n                selectionSource: \"code.jump\" /* TextEditorSelectionSource.JUMP */\n            }\n        }, editor, sideBySide);\n        if (!targetEditor) {\n            return undefined;\n        }\n        if (highlight) {\n            const modelNow = targetEditor.getModel();\n            const decorations = targetEditor.createDecorationsCollection([{ range, options: { description: 'symbol-navigate-action-highlight', className: 'symbolHighlight' } }]);\n            setTimeout(() => {\n                if (targetEditor.getModel() === modelNow) {\n                    decorations.clear();\n                }\n            }, 350);\n        }\n        return targetEditor;\n    }\n    _openInPeek(target, model, range) {\n        const controller = ReferencesController.get(target);\n        if (controller && target.hasModel()) {\n            controller.toggleWidget(range !== null && range !== void 0 ? range : target.getSelection(), createCancelablePromise(_ => Promise.resolve(model)), this.configuration.openInPeek);\n        }\n        else {\n            model.dispose();\n        }\n    }\n}\nSymbolNavigationAction._allSymbolNavigationCommands = new Map();\nSymbolNavigationAction._activeAlternativeCommands = new Set();\n//#region --- DEFINITION\nexport class DefinitionAction extends SymbolNavigationAction {\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getDefinitionsAtPosition(languageFeaturesService.definitionProvider, model, position, token), nls.localize('def.title', 'Definitions'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('noResultWord', \"No definition found for '{0}'\", info.word)\n            : nls.localize('generic.noResults', \"No definition found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeDefinitionCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleDefinitions;\n    }\n}\nregisterAction2((_a = class GoToDefinitionAction extends DefinitionAction {\n        constructor() {\n            super({\n                openToSide: false,\n                openInPeek: false,\n                muteMessage: false\n            }, {\n                id: _a.id,\n                title: {\n                    value: nls.localize('actions.goToDecl.label', \"Go to Definition\"),\n                    original: 'Go to Definition',\n                    mnemonicTitle: nls.localize({ key: 'miGotoDefinition', comment: ['&& denotes a mnemonic'] }, \"Go to &&Definition\")\n                },\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n                keybinding: [{\n                        when: EditorContextKeys.editorTextFocus,\n                        primary: 70 /* KeyCode.F12 */,\n                        weight: 100 /* KeybindingWeight.EditorContrib */\n                    }, {\n                        when: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, IsWebContext),\n                        primary: 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */,\n                        weight: 100 /* KeybindingWeight.EditorContrib */\n                    }],\n                menu: [{\n                        id: MenuId.EditorContext,\n                        group: 'navigation',\n                        order: 1.1\n                    }, {\n                        id: MenuId.MenubarGoMenu,\n                        precondition: null,\n                        group: '4_symbol_nav',\n                        order: 2,\n                    }]\n            });\n            CommandsRegistry.registerCommandAlias('editor.action.goToDeclaration', _a.id);\n        }\n    },\n    _a.id = 'editor.action.revealDefinition',\n    _a));\nregisterAction2((_b = class OpenDefinitionToSideAction extends DefinitionAction {\n        constructor() {\n            super({\n                openToSide: true,\n                openInPeek: false,\n                muteMessage: false\n            }, {\n                id: _b.id,\n                title: {\n                    value: nls.localize('actions.goToDeclToSide.label', \"Open Definition to the Side\"),\n                    original: 'Open Definition to the Side'\n                },\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n                keybinding: [{\n                        when: EditorContextKeys.editorTextFocus,\n                        primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 70 /* KeyCode.F12 */),\n                        weight: 100 /* KeybindingWeight.EditorContrib */\n                    }, {\n                        when: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, IsWebContext),\n                        primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */),\n                        weight: 100 /* KeybindingWeight.EditorContrib */\n                    }]\n            });\n            CommandsRegistry.registerCommandAlias('editor.action.openDeclarationToTheSide', _b.id);\n        }\n    },\n    _b.id = 'editor.action.revealDefinitionAside',\n    _b));\nregisterAction2((_c = class PeekDefinitionAction extends DefinitionAction {\n        constructor() {\n            super({\n                openToSide: false,\n                openInPeek: true,\n                muteMessage: false\n            }, {\n                id: _c.id,\n                title: {\n                    value: nls.localize('actions.previewDecl.label', \"Peek Definition\"),\n                    original: 'Peek Definition'\n                },\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n                keybinding: {\n                    when: EditorContextKeys.editorTextFocus,\n                    primary: 512 /* KeyMod.Alt */ | 70 /* KeyCode.F12 */,\n                    linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 68 /* KeyCode.F10 */ },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                },\n                menu: {\n                    id: MenuId.EditorContextPeek,\n                    group: 'peek',\n                    order: 2\n                }\n            });\n            CommandsRegistry.registerCommandAlias('editor.action.previewDeclaration', _c.id);\n        }\n    },\n    _c.id = 'editor.action.peekDefinition',\n    _c));\n//#endregion\n//#region --- DECLARATION\nclass DeclarationAction extends SymbolNavigationAction {\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getDeclarationsAtPosition(languageFeaturesService.declarationProvider, model, position, token), nls.localize('decl.title', 'Declarations'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word)\n            : nls.localize('decl.generic.noResults', \"No declaration found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeDeclarationCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleDeclarations;\n    }\n}\nregisterAction2((_d = class GoToDeclarationAction extends DeclarationAction {\n        constructor() {\n            super({\n                openToSide: false,\n                openInPeek: false,\n                muteMessage: false\n            }, {\n                id: _d.id,\n                title: {\n                    value: nls.localize('actions.goToDeclaration.label', \"Go to Declaration\"),\n                    original: 'Go to Declaration',\n                    mnemonicTitle: nls.localize({ key: 'miGotoDeclaration', comment: ['&& denotes a mnemonic'] }, \"Go to &&Declaration\")\n                },\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n                menu: [{\n                        id: MenuId.EditorContext,\n                        group: 'navigation',\n                        order: 1.3\n                    }, {\n                        id: MenuId.MenubarGoMenu,\n                        precondition: null,\n                        group: '4_symbol_nav',\n                        order: 3,\n                    }],\n            });\n        }\n        _getNoResultFoundMessage(info) {\n            return info && info.word\n                ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word)\n                : nls.localize('decl.generic.noResults', \"No declaration found\");\n        }\n    },\n    _d.id = 'editor.action.revealDeclaration',\n    _d));\nregisterAction2(class PeekDeclarationAction extends DeclarationAction {\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: true,\n            muteMessage: false\n        }, {\n            id: 'editor.action.peekDeclaration',\n            title: {\n                value: nls.localize('actions.peekDecl.label', \"Peek Declaration\"),\n                original: 'Peek Declaration'\n            },\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n            menu: {\n                id: MenuId.EditorContextPeek,\n                group: 'peek',\n                order: 3\n            }\n        });\n    }\n});\n//#endregion\n//#region --- TYPE DEFINITION\nclass TypeDefinitionAction extends SymbolNavigationAction {\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getTypeDefinitionsAtPosition(languageFeaturesService.typeDefinitionProvider, model, position, token), nls.localize('typedef.title', 'Type Definitions'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('goToTypeDefinition.noResultWord', \"No type definition found for '{0}'\", info.word)\n            : nls.localize('goToTypeDefinition.generic.noResults', \"No type definition found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeTypeDefinitionCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleTypeDefinitions;\n    }\n}\nregisterAction2((_e = class GoToTypeDefinitionAction extends TypeDefinitionAction {\n        constructor() {\n            super({\n                openToSide: false,\n                openInPeek: false,\n                muteMessage: false\n            }, {\n                id: _e.ID,\n                title: {\n                    value: nls.localize('actions.goToTypeDefinition.label', \"Go to Type Definition\"),\n                    original: 'Go to Type Definition',\n                    mnemonicTitle: nls.localize({ key: 'miGotoTypeDefinition', comment: ['&& denotes a mnemonic'] }, \"Go to &&Type Definition\")\n                },\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n                keybinding: {\n                    when: EditorContextKeys.editorTextFocus,\n                    primary: 0,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                },\n                menu: [{\n                        id: MenuId.EditorContext,\n                        group: 'navigation',\n                        order: 1.4\n                    }, {\n                        id: MenuId.MenubarGoMenu,\n                        precondition: null,\n                        group: '4_symbol_nav',\n                        order: 3,\n                    }]\n            });\n        }\n    },\n    _e.ID = 'editor.action.goToTypeDefinition',\n    _e));\nregisterAction2((_f = class PeekTypeDefinitionAction extends TypeDefinitionAction {\n        constructor() {\n            super({\n                openToSide: false,\n                openInPeek: true,\n                muteMessage: false\n            }, {\n                id: _f.ID,\n                title: {\n                    value: nls.localize('actions.peekTypeDefinition.label', \"Peek Type Definition\"),\n                    original: 'Peek Type Definition'\n                },\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n                menu: {\n                    id: MenuId.EditorContextPeek,\n                    group: 'peek',\n                    order: 4\n                }\n            });\n        }\n    },\n    _f.ID = 'editor.action.peekTypeDefinition',\n    _f));\n//#endregion\n//#region --- IMPLEMENTATION\nclass ImplementationAction extends SymbolNavigationAction {\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getImplementationsAtPosition(languageFeaturesService.implementationProvider, model, position, token), nls.localize('impl.title', 'Implementations'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('goToImplementation.noResultWord', \"No implementation found for '{0}'\", info.word)\n            : nls.localize('goToImplementation.generic.noResults', \"No implementation found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeImplementationCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleImplementations;\n    }\n}\nregisterAction2((_g = class GoToImplementationAction extends ImplementationAction {\n        constructor() {\n            super({\n                openToSide: false,\n                openInPeek: false,\n                muteMessage: false\n            }, {\n                id: _g.ID,\n                title: {\n                    value: nls.localize('actions.goToImplementation.label', \"Go to Implementations\"),\n                    original: 'Go to Implementations',\n                    mnemonicTitle: nls.localize({ key: 'miGotoImplementation', comment: ['&& denotes a mnemonic'] }, \"Go to &&Implementations\")\n                },\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n                keybinding: {\n                    when: EditorContextKeys.editorTextFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                },\n                menu: [{\n                        id: MenuId.EditorContext,\n                        group: 'navigation',\n                        order: 1.45\n                    }, {\n                        id: MenuId.MenubarGoMenu,\n                        precondition: null,\n                        group: '4_symbol_nav',\n                        order: 4,\n                    }]\n            });\n        }\n    },\n    _g.ID = 'editor.action.goToImplementation',\n    _g));\nregisterAction2((_h = class PeekImplementationAction extends ImplementationAction {\n        constructor() {\n            super({\n                openToSide: false,\n                openInPeek: true,\n                muteMessage: false\n            }, {\n                id: _h.ID,\n                title: {\n                    value: nls.localize('actions.peekImplementation.label', \"Peek Implementations\"),\n                    original: 'Peek Implementations'\n                },\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n                keybinding: {\n                    when: EditorContextKeys.editorTextFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                },\n                menu: {\n                    id: MenuId.EditorContextPeek,\n                    group: 'peek',\n                    order: 5\n                }\n            });\n        }\n    },\n    _h.ID = 'editor.action.peekImplementation',\n    _h));\n//#endregion\n//#region --- REFERENCES\nclass ReferencesAction extends SymbolNavigationAction {\n    _getNoResultFoundMessage(info) {\n        return info\n            ? nls.localize('references.no', \"No references found for '{0}'\", info.word)\n            : nls.localize('references.noGeneric', \"No references found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeReferenceCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleReferences;\n    }\n}\nregisterAction2(class GoToReferencesAction extends ReferencesAction {\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: 'editor.action.goToReferences',\n            title: {\n                value: nls.localize('goToReferences.label', \"Go to References\"),\n                original: 'Go to References',\n                mnemonicTitle: nls.localize({ key: 'miGotoReference', comment: ['&& denotes a mnemonic'] }, \"Go to &&References\")\n            },\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n            keybinding: {\n                when: EditorContextKeys.editorTextFocus,\n                primary: 1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menu: [{\n                    id: MenuId.EditorContext,\n                    group: 'navigation',\n                    order: 1.45\n                }, {\n                    id: MenuId.MenubarGoMenu,\n                    precondition: null,\n                    group: '4_symbol_nav',\n                    order: 5,\n                }]\n        });\n    }\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, true, token), nls.localize('ref.title', 'References'));\n    }\n});\nregisterAction2(class PeekReferencesAction extends ReferencesAction {\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: true,\n            muteMessage: false\n        }, {\n            id: 'editor.action.referenceSearch.trigger',\n            title: {\n                value: nls.localize('references.action.label', \"Peek References\"),\n                original: 'Peek References'\n            },\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n            menu: {\n                id: MenuId.EditorContextPeek,\n                group: 'peek',\n                order: 6\n            }\n        });\n    }\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, false, token), nls.localize('ref.title', 'References'));\n    }\n});\n//#endregion\n//#region --- GENERIC goto symbols command\nclass GenericGoToLocationAction extends SymbolNavigationAction {\n    constructor(config, _references, _gotoMultipleBehaviour) {\n        super(config, {\n            id: 'editor.action.goToLocation',\n            title: {\n                value: nls.localize('label.generic', \"Go to Any Symbol\"),\n                original: 'Go to Any Symbol'\n            },\n            precondition: ContextKeyExpr.and(PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\n        });\n        this._references = _references;\n        this._gotoMultipleBehaviour = _gotoMultipleBehaviour;\n    }\n    async _getLocationModel(languageFeaturesService, _model, _position, _token) {\n        return new ReferencesModel(this._references, nls.localize('generic.title', 'Locations'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && nls.localize('generic.noResult', \"No results for '{0}'\", info.word) || '';\n    }\n    _getGoToPreference(editor) {\n        var _j;\n        return (_j = this._gotoMultipleBehaviour) !== null && _j !== void 0 ? _j : editor.getOption(58 /* EditorOption.gotoLocation */).multipleReferences;\n    }\n    _getAlternativeCommand() { return ''; }\n}\nCommandsRegistry.registerCommand({\n    id: 'editor.action.goToLocations',\n    metadata: {\n        description: 'Go to locations from a position in a file',\n        args: [\n            { name: 'uri', description: 'The text document in which to start', constraint: URI },\n            { name: 'position', description: 'The position at which to start', constraint: corePosition.Position.isIPosition },\n            { name: 'locations', description: 'An array of locations.', constraint: Array },\n            { name: 'multiple', description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto' },\n            { name: 'noResultsMessage', description: 'Human readable message that shows when locations is empty.' },\n        ]\n    },\n    handler: async (accessor, resource, position, references, multiple, noResultsMessage, openInPeek) => {\n        assertType(URI.isUri(resource));\n        assertType(corePosition.Position.isIPosition(position));\n        assertType(Array.isArray(references));\n        assertType(typeof multiple === 'undefined' || typeof multiple === 'string');\n        assertType(typeof openInPeek === 'undefined' || typeof openInPeek === 'boolean');\n        const editorService = accessor.get(ICodeEditorService);\n        const editor = await editorService.openCodeEditor({ resource }, editorService.getFocusedCodeEditor());\n        if (isCodeEditor(editor)) {\n            editor.setPosition(position);\n            editor.revealPositionInCenterIfOutsideViewport(position, 0 /* ScrollType.Smooth */);\n            return editor.invokeWithinContext(accessor => {\n                const command = new class extends GenericGoToLocationAction {\n                    _getNoResultFoundMessage(info) {\n                        return noResultsMessage || super._getNoResultFoundMessage(info);\n                    }\n                }({\n                    muteMessage: !Boolean(noResultsMessage),\n                    openInPeek: Boolean(openInPeek),\n                    openToSide: false\n                }, references, multiple);\n                accessor.get(IInstantiationService).invokeFunction(command.run.bind(command), editor);\n            });\n        }\n    }\n});\nCommandsRegistry.registerCommand({\n    id: 'editor.action.peekLocations',\n    metadata: {\n        description: 'Peek locations from a position in a file',\n        args: [\n            { name: 'uri', description: 'The text document in which to start', constraint: URI },\n            { name: 'position', description: 'The position at which to start', constraint: corePosition.Position.isIPosition },\n            { name: 'locations', description: 'An array of locations.', constraint: Array },\n            { name: 'multiple', description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto' },\n        ]\n    },\n    handler: async (accessor, resource, position, references, multiple) => {\n        accessor.get(ICommandService).executeCommand('editor.action.goToLocations', resource, position, references, multiple, undefined, true);\n    }\n});\n//#endregion\n//#region --- REFERENCE search special commands\nCommandsRegistry.registerCommand({\n    id: 'editor.action.findReferences',\n    handler: (accessor, resource, position) => {\n        assertType(URI.isUri(resource));\n        assertType(corePosition.Position.isIPosition(position));\n        const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n        const codeEditorService = accessor.get(ICodeEditorService);\n        return codeEditorService.openCodeEditor({ resource }, codeEditorService.getFocusedCodeEditor()).then(control => {\n            if (!isCodeEditor(control) || !control.hasModel()) {\n                return undefined;\n            }\n            const controller = ReferencesController.get(control);\n            if (!controller) {\n                return undefined;\n            }\n            const references = createCancelablePromise(token => getReferencesAtPosition(languageFeaturesService.referenceProvider, control.getModel(), corePosition.Position.lift(position), false, token).then(references => new ReferencesModel(references, nls.localize('ref.title', 'References'))));\n            const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n            return Promise.resolve(controller.toggleWidget(range, references, false));\n        });\n    }\n});\n// use NEW command\nCommandsRegistry.registerCommandAlias('editor.action.showReferences', 'editor.action.peekLocations');\n//#endregion\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;AAClC,SAASC,KAAK,QAAQ,0CAA0C;AAChE,SAASC,uBAAuB,EAAEC,gBAAgB,QAAQ,kCAAkC;AAC5F,SAASC,QAAQ,QAAQ,qCAAqC;AAC9D,SAASC,UAAU,QAAQ,kCAAkC;AAC7D,SAASC,GAAG,QAAQ,gCAAgC;AACpD,SAASC,kCAAkC,QAAQ,0CAA0C;AAC7F,SAASC,YAAY,QAAQ,mCAAmC;AAChE,SAASC,aAAa,QAAQ,sCAAsC;AACpE,SAASC,kBAAkB,QAAQ,gDAAgD;AACnF,SAASC,wBAAwB,QAAQ,qDAAqD;AAC9F,OAAO,KAAKC,YAAY,MAAM,kCAAkC;AAChE,SAASC,KAAK,QAAQ,+BAA+B;AACrD,SAASC,iBAAiB,QAAQ,sCAAsC;AACxE,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,oBAAoB,QAAQ,gCAAgC;AACrE,SAASC,eAAe,QAAQ,sBAAsB;AACtD,SAASC,wBAAwB,QAAQ,uBAAuB;AAChE,SAASC,iBAAiB,QAAQ,4CAA4C;AAC9E,SAASC,WAAW,QAAQ,oCAAoC;AAChE,OAAO,KAAKC,GAAG,MAAM,oBAAoB;AACzC,SAASC,MAAM,EAAEC,YAAY,EAAEC,eAAe,QAAQ,gDAAgD;AACtG,SAASC,gBAAgB,EAAEC,eAAe,QAAQ,kDAAkD;AACpG,SAASC,cAAc,QAAQ,sDAAsD;AACrF,SAASC,qBAAqB,QAAQ,4DAA4D;AAClG,SAASC,oBAAoB,QAAQ,0DAA0D;AAC/F,SAASC,sBAAsB,QAAQ,kDAAkD;AACzF,SAASC,yBAAyB,EAAEC,wBAAwB,EAAEC,4BAA4B,EAAEC,uBAAuB,EAAEC,4BAA4B,QAAQ,iBAAiB;AAC1K,SAASC,wBAAwB,QAAQ,8CAA8C;AACvF,SAASC,QAAQ,QAAQ,qCAAqC;AAC9D,SAASC,YAAY,QAAQ,uDAAuD;AACpFf,YAAY,CAACgB,cAAc,CAACjB,MAAM,CAACkB,aAAa,EAAE;EAC9CC,OAAO,EAAEnB,MAAM,CAACoB,iBAAiB;EACjCC,KAAK,EAAEtB,GAAG,CAACuB,QAAQ,CAAC,cAAc,EAAE,MAAM,CAAC;EAC3CC,KAAK,EAAE,YAAY;EACnBC,KAAK,EAAE;AACX,CAAC,CAAC;AACF,OAAO,MAAMC,sBAAsB,CAAC;EAChC,OAAOC,EAAEA,CAACC,KAAK,EAAE;IACb,IAAI,CAACA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MACrC,OAAO,KAAK;IAChB;IACA,IAAIA,KAAK,YAAYF,sBAAsB,EAAE;MACzC,OAAO,IAAI;IACf;IACA,IAAInC,YAAY,CAACsC,QAAQ,CAACC,WAAW,CAACF,KAAK,CAACG,QAAQ,CAAC,IAAIH,KAAK,CAACI,KAAK,EAAE;MAClE,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB;EACAC,WAAWA,CAACD,KAAK,EAAED,QAAQ,EAAE;IACzB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACD,QAAQ,GAAGA,QAAQ;EAC5B;AACJ;AACA,OAAO,MAAMG,sBAAsB,SAAS9C,aAAa,CAAC;EACtD,OAAO+C,GAAGA,CAAA,EAAG;IACT,OAAOD,sBAAsB,CAACE,4BAA4B,CAACC,MAAM,CAAC,CAAC;EACvE;EACA,OAAOC,YAAYA,CAACC,IAAI,EAAE;IACtB,MAAMC,MAAM,GAAG;MAAE,GAAGD,IAAI;MAAEE,EAAE,EAAE;IAAK,CAAC;IACpC;IACA,IAAID,MAAM,CAACE,IAAI,EAAE;MACb,KAAK,MAAMC,IAAI,IAAI3B,QAAQ,CAAC4B,IAAI,CAACJ,MAAM,CAACE,IAAI,CAAC,EAAE;QAC3C,IAAIC,IAAI,CAACE,EAAE,KAAK5C,MAAM,CAACkB,aAAa,IAAIwB,IAAI,CAACE,EAAE,KAAK5C,MAAM,CAACoB,iBAAiB,EAAE;UAC1EsB,IAAI,CAACG,IAAI,GAAGxC,cAAc,CAACyC,GAAG,CAACR,IAAI,CAACS,YAAY,EAAEL,IAAI,CAACG,IAAI,CAAC;QAChE;MACJ;IACJ;IACA,OAAON,MAAM;EACjB;EACAP,WAAWA,CAACgB,aAAa,EAAEV,IAAI,EAAE;IAC7B,KAAK,CAACL,sBAAsB,CAACI,YAAY,CAACC,IAAI,CAAC,CAAC;IAChD,IAAI,CAACU,aAAa,GAAGA,aAAa;IAClCf,sBAAsB,CAACE,4BAA4B,CAACc,GAAG,CAACX,IAAI,CAACM,EAAE,EAAE,IAAI,CAAC;EAC1E;EACAM,gBAAgBA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,GAAG,EAAEC,KAAK,EAAE;IAC3C,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,EAAE;MACpB,OAAOC,OAAO,CAACC,OAAO,CAACC,SAAS,CAAC;IACrC;IACA,MAAMC,mBAAmB,GAAGR,QAAQ,CAACS,GAAG,CAACrD,oBAAoB,CAAC;IAC9D,MAAMsD,aAAa,GAAGV,QAAQ,CAACS,GAAG,CAACxE,kBAAkB,CAAC;IACtD,MAAM0E,eAAe,GAAGX,QAAQ,CAACS,GAAG,CAACpD,sBAAsB,CAAC;IAC5D,MAAMuD,gBAAgB,GAAGZ,QAAQ,CAACS,GAAG,CAAChE,wBAAwB,CAAC;IAC/D,MAAMoE,uBAAuB,GAAGb,QAAQ,CAACS,GAAG,CAAC9C,wBAAwB,CAAC;IACtE,MAAMmD,YAAY,GAAGd,QAAQ,CAACS,GAAG,CAACtD,qBAAqB,CAAC;IACxD,MAAMyB,KAAK,GAAGqB,MAAM,CAACc,QAAQ,CAAC,CAAC;IAC/B,MAAMpC,QAAQ,GAAGsB,MAAM,CAACe,WAAW,CAAC,CAAC;IACrC,MAAMC,MAAM,GAAG3C,sBAAsB,CAACC,EAAE,CAAC2B,GAAG,CAAC,GAAGA,GAAG,GAAG,IAAI5B,sBAAsB,CAACM,KAAK,EAAED,QAAQ,CAAC;IACjG,MAAMuC,GAAG,GAAG,IAAIpF,kCAAkC,CAACmE,MAAM,EAAE,CAAC,CAAC,kCAAkC,CAAC,CAAC,kCAAkC,CAAC;IACpI,MAAMkB,OAAO,GAAGzF,gBAAgB,CAAC,IAAI,CAAC0F,iBAAiB,CAACP,uBAAuB,EAAEI,MAAM,CAACrC,KAAK,EAAEqC,MAAM,CAACtC,QAAQ,EAAEuC,GAAG,CAACG,KAAK,CAAC,EAAEH,GAAG,CAACG,KAAK,CAAC,CAACC,IAAI,CAAC,MAAOC,UAAU,IAAK;MAC9J,IAAIC,EAAE;MACN,IAAI,CAACD,UAAU,IAAIL,GAAG,CAACG,KAAK,CAACI,uBAAuB,EAAE;QAClD;MACJ;MACAjG,KAAK,CAAC+F,UAAU,CAACG,WAAW,CAAC;MAC7B,IAAIC,SAAS;MACb,IAAIJ,UAAU,CAACK,WAAW,CAAChD,KAAK,CAACiD,GAAG,EAAElD,QAAQ,CAAC,EAAE;QAC7C,MAAMmD,WAAW,GAAG,IAAI,CAACC,sBAAsB,CAAC9B,MAAM,CAAC;QACvD,IAAI,CAACnB,sBAAsB,CAACkD,0BAA0B,CAACC,GAAG,CAACH,WAAW,CAAC,IAAIhD,sBAAsB,CAACE,4BAA4B,CAACiD,GAAG,CAACH,WAAW,CAAC,EAAE;UAC7IH,SAAS,GAAG7C,sBAAsB,CAACE,4BAA4B,CAACyB,GAAG,CAACqB,WAAW,CAAC;QACpF;MACJ;MACA,MAAMI,cAAc,GAAGX,UAAU,CAACA,UAAU,CAACY,MAAM;MACnD,IAAID,cAAc,KAAK,CAAC,EAAE;QACtB;QACA,IAAI,CAAC,IAAI,CAACrC,aAAa,CAACuC,WAAW,EAAE;UACjC,MAAMC,IAAI,GAAGzD,KAAK,CAAC0D,iBAAiB,CAAC3D,QAAQ,CAAC;UAC9C,CAAC6C,EAAE,GAAG9E,iBAAiB,CAAC+D,GAAG,CAACR,MAAM,CAAC,MAAM,IAAI,IAAIuB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACe,WAAW,CAAC,IAAI,CAACC,wBAAwB,CAACH,IAAI,CAAC,EAAE1D,QAAQ,CAAC;QAC3I;MACJ,CAAC,MACI,IAAIuD,cAAc,KAAK,CAAC,IAAIP,SAAS,EAAE;QACxC;QACA7C,sBAAsB,CAACkD,0BAA0B,CAACS,GAAG,CAAC,IAAI,CAACC,IAAI,CAACjD,EAAE,CAAC;QACnEqB,YAAY,CAAC6B,cAAc,CAAE3C,QAAQ,IAAK2B,SAAS,CAAC5B,gBAAgB,CAACC,QAAQ,EAAEC,MAAM,EAAEC,GAAG,EAAEC,KAAK,CAAC,CAACyC,OAAO,CAAC,MAAM;UAC7G9D,sBAAsB,CAACkD,0BAA0B,CAACa,MAAM,CAAC,IAAI,CAACH,IAAI,CAACjD,EAAE,CAAC;QAC1E,CAAC,CAAC,CAAC;MACP,CAAC,MACI;QACD;QACA,OAAO,IAAI,CAACqD,SAAS,CAACpC,aAAa,EAAEE,gBAAgB,EAAEX,MAAM,EAAEsB,UAAU,EAAEpB,KAAK,CAAC;MACrF;IACJ,CAAC,EAAG4C,GAAG,IAAK;MACR;MACAvC,mBAAmB,CAACwC,KAAK,CAACD,GAAG,CAAC;IAClC,CAAC,CAAC,CAACH,OAAO,CAAC,MAAM;MACb1B,GAAG,CAAC+B,OAAO,CAAC,CAAC;IACjB,CAAC,CAAC;IACFtC,eAAe,CAACuC,SAAS,CAAC/B,OAAO,EAAE,GAAG,CAAC;IACvC,OAAOA,OAAO;EAClB;EACA,MAAM2B,SAASA,CAACpC,aAAa,EAAEE,gBAAgB,EAAEX,MAAM,EAAErB,KAAK,EAAEuB,KAAK,EAAE;IACnE,MAAMgD,YAAY,GAAG,IAAI,CAACC,kBAAkB,CAACnD,MAAM,CAAC;IACpD,IAAI,EAAEA,MAAM,YAAY/D,wBAAwB,CAAC,KAAK,IAAI,CAAC2D,aAAa,CAACwD,UAAU,IAAKF,YAAY,KAAK,MAAM,IAAIvE,KAAK,CAAC2C,UAAU,CAACY,MAAM,GAAG,CAAE,CAAC,EAAE;MAC9I,IAAI,CAACmB,WAAW,CAACrD,MAAM,EAAErB,KAAK,EAAEuB,KAAK,CAAC;IAC1C,CAAC,MACI;MACD,MAAMoD,IAAI,GAAG3E,KAAK,CAAC4E,cAAc,CAAC,CAAC;MACnC,MAAMC,IAAI,GAAG7E,KAAK,CAAC2C,UAAU,CAACY,MAAM,GAAG,CAAC,IAAIgB,YAAY,KAAK,aAAa;MAC1E,MAAMO,YAAY,GAAG,MAAM,IAAI,CAACC,cAAc,CAAC1D,MAAM,EAAES,aAAa,EAAE6C,IAAI,EAAE,IAAI,CAAC1D,aAAa,CAAC+D,UAAU,EAAE,CAACH,IAAI,CAAC;MACjH,IAAIA,IAAI,IAAIC,YAAY,EAAE;QACtB,IAAI,CAACJ,WAAW,CAACI,YAAY,EAAE9E,KAAK,EAAEuB,KAAK,CAAC;MAChD,CAAC,MACI;QACDvB,KAAK,CAACqE,OAAO,CAAC,CAAC;MACnB;MACA;MACA;MACA,IAAIE,YAAY,KAAK,MAAM,EAAE;QACzBvC,gBAAgB,CAACiD,GAAG,CAACN,IAAI,CAAC;MAC9B;IACJ;EACJ;EACA,MAAMI,cAAcA,CAAC1D,MAAM,EAAES,aAAa,EAAEoD,SAAS,EAAEC,UAAU,EAAEC,SAAS,EAAE;IAC1E;IACA;IACA,IAAI7D,KAAK,GAAGI,SAAS;IACrB,IAAIjE,cAAc,CAACwH,SAAS,CAAC,EAAE;MAC3B3D,KAAK,GAAG2D,SAAS,CAACG,oBAAoB;IAC1C;IACA,IAAI,CAAC9D,KAAK,EAAE;MACRA,KAAK,GAAG2D,SAAS,CAAC3D,KAAK;IAC3B;IACA,IAAI,CAACA,KAAK,EAAE;MACR,OAAOI,SAAS;IACpB;IACA,MAAMmD,YAAY,GAAG,MAAMhD,aAAa,CAACwD,cAAc,CAAC;MACpDC,QAAQ,EAAEL,SAAS,CAACjC,GAAG;MACvBuC,OAAO,EAAE;QACLC,SAAS,EAAEjI,KAAK,CAACkI,eAAe,CAACnE,KAAK,CAAC;QACvCoE,mBAAmB,EAAE,CAAC,CAAC;QACvBC,eAAe,EAAE,WAAW,CAAC;MACjC;IACJ,CAAC,EAAEvE,MAAM,EAAE8D,UAAU,CAAC;IACtB,IAAI,CAACL,YAAY,EAAE;MACf,OAAOnD,SAAS;IACpB;IACA,IAAIyD,SAAS,EAAE;MACX,MAAMS,QAAQ,GAAGf,YAAY,CAAC3C,QAAQ,CAAC,CAAC;MACxC,MAAM2D,WAAW,GAAGhB,YAAY,CAACiB,2BAA2B,CAAC,CAAC;QAAExE,KAAK;QAAEiE,OAAO,EAAE;UAAEQ,WAAW,EAAE,kCAAkC;UAAEC,SAAS,EAAE;QAAkB;MAAE,CAAC,CAAC,CAAC;MACrKC,UAAU,CAAC,MAAM;QACb,IAAIpB,YAAY,CAAC3C,QAAQ,CAAC,CAAC,KAAK0D,QAAQ,EAAE;UACtCC,WAAW,CAACK,KAAK,CAAC,CAAC;QACvB;MACJ,CAAC,EAAE,GAAG,CAAC;IACX;IACA,OAAOrB,YAAY;EACvB;EACAJ,WAAWA,CAAC0B,MAAM,EAAEpG,KAAK,EAAEuB,KAAK,EAAE;IAC9B,MAAM8E,UAAU,GAAG1I,oBAAoB,CAACkE,GAAG,CAACuE,MAAM,CAAC;IACnD,IAAIC,UAAU,IAAID,MAAM,CAAC5E,QAAQ,CAAC,CAAC,EAAE;MACjC6E,UAAU,CAACC,YAAY,CAAC/E,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAG6E,MAAM,CAACG,YAAY,CAAC,CAAC,EAAE1J,uBAAuB,CAAC2J,CAAC,IAAI/E,OAAO,CAACC,OAAO,CAAC1B,KAAK,CAAC,CAAC,EAAE,IAAI,CAACiB,aAAa,CAACwD,UAAU,CAAC;IACpL,CAAC,MACI;MACDzE,KAAK,CAACqE,OAAO,CAAC,CAAC;IACnB;EACJ;AACJ;AACAnE,sBAAsB,CAACE,4BAA4B,GAAG,IAAIqG,GAAG,CAAC,CAAC;AAC/DvG,sBAAsB,CAACkD,0BAA0B,GAAG,IAAIsD,GAAG,CAAC,CAAC;AAC7D;AACA,OAAO,MAAMC,gBAAgB,SAASzG,sBAAsB,CAAC;EACzD,MAAMsC,iBAAiBA,CAACP,uBAAuB,EAAEjC,KAAK,EAAED,QAAQ,EAAE0C,KAAK,EAAE;IACrE,OAAO,IAAI7E,eAAe,CAAC,MAAMe,wBAAwB,CAACsD,uBAAuB,CAAC2E,kBAAkB,EAAE5G,KAAK,EAAED,QAAQ,EAAE0C,KAAK,CAAC,EAAEzE,GAAG,CAACuB,QAAQ,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;EAC5K;EACAqE,wBAAwBA,CAACH,IAAI,EAAE;IAC3B,OAAOA,IAAI,IAAIA,IAAI,CAACoD,IAAI,GAClB7I,GAAG,CAACuB,QAAQ,CAAC,cAAc,EAAE,+BAA+B,EAAEkE,IAAI,CAACoD,IAAI,CAAC,GACxE7I,GAAG,CAACuB,QAAQ,CAAC,mBAAmB,EAAE,qBAAqB,CAAC;EAClE;EACA4D,sBAAsBA,CAAC9B,MAAM,EAAE;IAC3B,OAAOA,MAAM,CAACyF,SAAS,CAAC,EAAE,CAAC,+BAA+B,CAAC,CAACC,4BAA4B;EAC5F;EACAvC,kBAAkBA,CAACnD,MAAM,EAAE;IACvB,OAAOA,MAAM,CAACyF,SAAS,CAAC,EAAE,CAAC,+BAA+B,CAAC,CAACE,mBAAmB;EACnF;AACJ;AACA7I,eAAe,EAAE/B,EAAE,GAAG,MAAM6K,oBAAoB,SAASN,gBAAgB,CAAC;EAClE1G,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF+E,UAAU,EAAE,KAAK;MACjBP,UAAU,EAAE,KAAK;MACjBjB,WAAW,EAAE;IACjB,CAAC,EAAE;MACC3C,EAAE,EAAEzE,EAAE,CAACyE,EAAE;MACTvB,KAAK,EAAE;QACH4H,KAAK,EAAElJ,GAAG,CAACuB,QAAQ,CAAC,wBAAwB,EAAE,kBAAkB,CAAC;QACjE4H,QAAQ,EAAE,kBAAkB;QAC5BC,aAAa,EAAEpJ,GAAG,CAACuB,QAAQ,CAAC;UAAE8H,GAAG,EAAE,kBAAkB;UAAEC,OAAO,EAAE,CAAC,uBAAuB;QAAE,CAAC,EAAE,oBAAoB;MACrH,CAAC;MACDtG,YAAY,EAAE1C,cAAc,CAACyC,GAAG,CAACtD,iBAAiB,CAAC8J,qBAAqB,EAAE9J,iBAAiB,CAAC+J,sBAAsB,CAACC,SAAS,CAAC,CAAC,CAAC;MAC/HC,UAAU,EAAE,CAAC;QACL5G,IAAI,EAAErD,iBAAiB,CAACkK,eAAe;QACvCC,OAAO,EAAE,EAAE,CAAC;QACZC,MAAM,EAAE,GAAG,CAAC;MAChB,CAAC,EAAE;QACC/G,IAAI,EAAExC,cAAc,CAACyC,GAAG,CAACtD,iBAAiB,CAACkK,eAAe,EAAE1I,YAAY,CAAC;QACzE2I,OAAO,EAAE,IAAI,CAAC,uBAAuB,EAAE,CAAC;QACxCC,MAAM,EAAE,GAAG,CAAC;MAChB,CAAC,CAAC;MACNnH,IAAI,EAAE,CAAC;QACCG,EAAE,EAAE5C,MAAM,CAACkB,aAAa;QACxBK,KAAK,EAAE,YAAY;QACnBC,KAAK,EAAE;MACX,CAAC,EAAE;QACCoB,EAAE,EAAE5C,MAAM,CAAC6J,aAAa;QACxB9G,YAAY,EAAE,IAAI;QAClBxB,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE;MACX,CAAC;IACT,CAAC,CAAC;IACFrB,gBAAgB,CAAC2J,oBAAoB,CAAC,+BAA+B,EAAE3L,EAAE,CAACyE,EAAE,CAAC;EACjF;AACJ,CAAC,EACDzE,EAAE,CAACyE,EAAE,GAAG,gCAAgC,EACxCzE,EAAE,CAAC,CAAC;AACR+B,eAAe,EAAE9B,EAAE,GAAG,MAAM2L,0BAA0B,SAASrB,gBAAgB,CAAC;EACxE1G,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF+E,UAAU,EAAE,IAAI;MAChBP,UAAU,EAAE,KAAK;MACjBjB,WAAW,EAAE;IACjB,CAAC,EAAE;MACC3C,EAAE,EAAExE,EAAE,CAACwE,EAAE;MACTvB,KAAK,EAAE;QACH4H,KAAK,EAAElJ,GAAG,CAACuB,QAAQ,CAAC,8BAA8B,EAAE,6BAA6B,CAAC;QAClF4H,QAAQ,EAAE;MACd,CAAC;MACDnG,YAAY,EAAE1C,cAAc,CAACyC,GAAG,CAACtD,iBAAiB,CAAC8J,qBAAqB,EAAE9J,iBAAiB,CAAC+J,sBAAsB,CAACC,SAAS,CAAC,CAAC,CAAC;MAC/HC,UAAU,EAAE,CAAC;QACL5G,IAAI,EAAErD,iBAAiB,CAACkK,eAAe;QACvCC,OAAO,EAAE7K,QAAQ,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,oBAAoB,EAAE,CAAC,iBAAiB,CAAC;QAC1F8K,MAAM,EAAE,GAAG,CAAC;MAChB,CAAC,EAAE;QACC/G,IAAI,EAAExC,cAAc,CAACyC,GAAG,CAACtD,iBAAiB,CAACkK,eAAe,EAAE1I,YAAY,CAAC;QACzE2I,OAAO,EAAE7K,QAAQ,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,oBAAoB,IAAI,CAAC,uBAAuB,EAAE,CAAC,iBAAiB,CAAC;QACtH8K,MAAM,EAAE,GAAG,CAAC;MAChB,CAAC;IACT,CAAC,CAAC;IACFzJ,gBAAgB,CAAC2J,oBAAoB,CAAC,wCAAwC,EAAE1L,EAAE,CAACwE,EAAE,CAAC;EAC1F;AACJ,CAAC,EACDxE,EAAE,CAACwE,EAAE,GAAG,qCAAqC,EAC7CxE,EAAE,CAAC,CAAC;AACR8B,eAAe,EAAE7B,EAAE,GAAG,MAAM2L,oBAAoB,SAAStB,gBAAgB,CAAC;EAClE1G,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF+E,UAAU,EAAE,KAAK;MACjBP,UAAU,EAAE,IAAI;MAChBjB,WAAW,EAAE;IACjB,CAAC,EAAE;MACC3C,EAAE,EAAEvE,EAAE,CAACuE,EAAE;MACTvB,KAAK,EAAE;QACH4H,KAAK,EAAElJ,GAAG,CAACuB,QAAQ,CAAC,2BAA2B,EAAE,iBAAiB,CAAC;QACnE4H,QAAQ,EAAE;MACd,CAAC;MACDnG,YAAY,EAAE1C,cAAc,CAACyC,GAAG,CAACtD,iBAAiB,CAAC8J,qBAAqB,EAAExJ,WAAW,CAACmK,eAAe,EAAEzK,iBAAiB,CAAC+J,sBAAsB,CAACC,SAAS,CAAC,CAAC,CAAC;MAC5JC,UAAU,EAAE;QACR5G,IAAI,EAAErD,iBAAiB,CAACkK,eAAe;QACvCC,OAAO,EAAE,GAAG,CAAC,mBAAmB,EAAE,CAAC;QACnCO,KAAK,EAAE;UAAEP,OAAO,EAAE,IAAI,CAAC,uBAAuB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAAkB,CAAC;QAC9FC,MAAM,EAAE,GAAG,CAAC;MAChB,CAAC;MACDnH,IAAI,EAAE;QACFG,EAAE,EAAE5C,MAAM,CAACoB,iBAAiB;QAC5BG,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE;MACX;IACJ,CAAC,CAAC;IACFrB,gBAAgB,CAAC2J,oBAAoB,CAAC,kCAAkC,EAAEzL,EAAE,CAACuE,EAAE,CAAC;EACpF;AACJ,CAAC,EACDvE,EAAE,CAACuE,EAAE,GAAG,8BAA8B,EACtCvE,EAAE,CAAC,CAAC;AACR;AACA;AACA,MAAM8L,iBAAiB,SAASlI,sBAAsB,CAAC;EACnD,MAAMsC,iBAAiBA,CAACP,uBAAuB,EAAEjC,KAAK,EAAED,QAAQ,EAAE0C,KAAK,EAAE;IACrE,OAAO,IAAI7E,eAAe,CAAC,MAAMc,yBAAyB,CAACuD,uBAAuB,CAACoG,mBAAmB,EAAErI,KAAK,EAAED,QAAQ,EAAE0C,KAAK,CAAC,EAAEzE,GAAG,CAACuB,QAAQ,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;EAChL;EACAqE,wBAAwBA,CAACH,IAAI,EAAE;IAC3B,OAAOA,IAAI,IAAIA,IAAI,CAACoD,IAAI,GAClB7I,GAAG,CAACuB,QAAQ,CAAC,mBAAmB,EAAE,gCAAgC,EAAEkE,IAAI,CAACoD,IAAI,CAAC,GAC9E7I,GAAG,CAACuB,QAAQ,CAAC,wBAAwB,EAAE,sBAAsB,CAAC;EACxE;EACA4D,sBAAsBA,CAAC9B,MAAM,EAAE;IAC3B,OAAOA,MAAM,CAACyF,SAAS,CAAC,EAAE,CAAC,+BAA+B,CAAC,CAACwB,6BAA6B;EAC7F;EACA9D,kBAAkBA,CAACnD,MAAM,EAAE;IACvB,OAAOA,MAAM,CAACyF,SAAS,CAAC,EAAE,CAAC,+BAA+B,CAAC,CAACyB,oBAAoB;EACpF;AACJ;AACApK,eAAe,EAAE5B,EAAE,GAAG,MAAMiM,qBAAqB,SAASJ,iBAAiB,CAAC;EACpEnI,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF+E,UAAU,EAAE,KAAK;MACjBP,UAAU,EAAE,KAAK;MACjBjB,WAAW,EAAE;IACjB,CAAC,EAAE;MACC3C,EAAE,EAAEtE,EAAE,CAACsE,EAAE;MACTvB,KAAK,EAAE;QACH4H,KAAK,EAAElJ,GAAG,CAACuB,QAAQ,CAAC,+BAA+B,EAAE,mBAAmB,CAAC;QACzE4H,QAAQ,EAAE,mBAAmB;QAC7BC,aAAa,EAAEpJ,GAAG,CAACuB,QAAQ,CAAC;UAAE8H,GAAG,EAAE,mBAAmB;UAAEC,OAAO,EAAE,CAAC,uBAAuB;QAAE,CAAC,EAAE,qBAAqB;MACvH,CAAC;MACDtG,YAAY,EAAE1C,cAAc,CAACyC,GAAG,CAACtD,iBAAiB,CAACgL,sBAAsB,EAAEhL,iBAAiB,CAAC+J,sBAAsB,CAACC,SAAS,CAAC,CAAC,CAAC;MAChI/G,IAAI,EAAE,CAAC;QACCG,EAAE,EAAE5C,MAAM,CAACkB,aAAa;QACxBK,KAAK,EAAE,YAAY;QACnBC,KAAK,EAAE;MACX,CAAC,EAAE;QACCoB,EAAE,EAAE5C,MAAM,CAAC6J,aAAa;QACxB9G,YAAY,EAAE,IAAI;QAClBxB,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE;MACX,CAAC;IACT,CAAC,CAAC;EACN;EACAmE,wBAAwBA,CAACH,IAAI,EAAE;IAC3B,OAAOA,IAAI,IAAIA,IAAI,CAACoD,IAAI,GAClB7I,GAAG,CAACuB,QAAQ,CAAC,mBAAmB,EAAE,gCAAgC,EAAEkE,IAAI,CAACoD,IAAI,CAAC,GAC9E7I,GAAG,CAACuB,QAAQ,CAAC,wBAAwB,EAAE,sBAAsB,CAAC;EACxE;AACJ,CAAC,EACDhD,EAAE,CAACsE,EAAE,GAAG,iCAAiC,EACzCtE,EAAE,CAAC,CAAC;AACR4B,eAAe,CAAC,MAAMuK,qBAAqB,SAASN,iBAAiB,CAAC;EAClEnI,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF+E,UAAU,EAAE,KAAK;MACjBP,UAAU,EAAE,IAAI;MAChBjB,WAAW,EAAE;IACjB,CAAC,EAAE;MACC3C,EAAE,EAAE,+BAA+B;MACnCvB,KAAK,EAAE;QACH4H,KAAK,EAAElJ,GAAG,CAACuB,QAAQ,CAAC,wBAAwB,EAAE,kBAAkB,CAAC;QACjE4H,QAAQ,EAAE;MACd,CAAC;MACDnG,YAAY,EAAE1C,cAAc,CAACyC,GAAG,CAACtD,iBAAiB,CAACgL,sBAAsB,EAAE1K,WAAW,CAACmK,eAAe,EAAEzK,iBAAiB,CAAC+J,sBAAsB,CAACC,SAAS,CAAC,CAAC,CAAC;MAC7J/G,IAAI,EAAE;QACFG,EAAE,EAAE5C,MAAM,CAACoB,iBAAiB;QAC5BG,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE;MACX;IACJ,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AACF;AACA;AACA,MAAMkJ,oBAAoB,SAASzI,sBAAsB,CAAC;EACtD,MAAMsC,iBAAiBA,CAACP,uBAAuB,EAAEjC,KAAK,EAAED,QAAQ,EAAE0C,KAAK,EAAE;IACrE,OAAO,IAAI7E,eAAe,CAAC,MAAMkB,4BAA4B,CAACmD,uBAAuB,CAAC2G,sBAAsB,EAAE5I,KAAK,EAAED,QAAQ,EAAE0C,KAAK,CAAC,EAAEzE,GAAG,CAACuB,QAAQ,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC;EAC7L;EACAqE,wBAAwBA,CAACH,IAAI,EAAE;IAC3B,OAAOA,IAAI,IAAIA,IAAI,CAACoD,IAAI,GAClB7I,GAAG,CAACuB,QAAQ,CAAC,iCAAiC,EAAE,oCAAoC,EAAEkE,IAAI,CAACoD,IAAI,CAAC,GAChG7I,GAAG,CAACuB,QAAQ,CAAC,sCAAsC,EAAE,0BAA0B,CAAC;EAC1F;EACA4D,sBAAsBA,CAAC9B,MAAM,EAAE;IAC3B,OAAOA,MAAM,CAACyF,SAAS,CAAC,EAAE,CAAC,+BAA+B,CAAC,CAAC+B,gCAAgC;EAChG;EACArE,kBAAkBA,CAACnD,MAAM,EAAE;IACvB,OAAOA,MAAM,CAACyF,SAAS,CAAC,EAAE,CAAC,+BAA+B,CAAC,CAACgC,uBAAuB;EACvF;AACJ;AACA3K,eAAe,EAAE3B,EAAE,GAAG,MAAMuM,wBAAwB,SAASJ,oBAAoB,CAAC;EAC1E1I,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF+E,UAAU,EAAE,KAAK;MACjBP,UAAU,EAAE,KAAK;MACjBjB,WAAW,EAAE;IACjB,CAAC,EAAE;MACC3C,EAAE,EAAErE,EAAE,CAACwM,EAAE;MACT1J,KAAK,EAAE;QACH4H,KAAK,EAAElJ,GAAG,CAACuB,QAAQ,CAAC,kCAAkC,EAAE,uBAAuB,CAAC;QAChF4H,QAAQ,EAAE,uBAAuB;QACjCC,aAAa,EAAEpJ,GAAG,CAACuB,QAAQ,CAAC;UAAE8H,GAAG,EAAE,sBAAsB;UAAEC,OAAO,EAAE,CAAC,uBAAuB;QAAE,CAAC,EAAE,yBAAyB;MAC9H,CAAC;MACDtG,YAAY,EAAE1C,cAAc,CAACyC,GAAG,CAACtD,iBAAiB,CAACwL,yBAAyB,EAAExL,iBAAiB,CAAC+J,sBAAsB,CAACC,SAAS,CAAC,CAAC,CAAC;MACnIC,UAAU,EAAE;QACR5G,IAAI,EAAErD,iBAAiB,CAACkK,eAAe;QACvCC,OAAO,EAAE,CAAC;QACVC,MAAM,EAAE,GAAG,CAAC;MAChB,CAAC;MACDnH,IAAI,EAAE,CAAC;QACCG,EAAE,EAAE5C,MAAM,CAACkB,aAAa;QACxBK,KAAK,EAAE,YAAY;QACnBC,KAAK,EAAE;MACX,CAAC,EAAE;QACCoB,EAAE,EAAE5C,MAAM,CAAC6J,aAAa;QACxB9G,YAAY,EAAE,IAAI;QAClBxB,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE;MACX,CAAC;IACT,CAAC,CAAC;EACN;AACJ,CAAC,EACDjD,EAAE,CAACwM,EAAE,GAAG,kCAAkC,EAC1CxM,EAAE,CAAC,CAAC;AACR2B,eAAe,EAAE1B,EAAE,GAAG,MAAMyM,wBAAwB,SAASP,oBAAoB,CAAC;EAC1E1I,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF+E,UAAU,EAAE,KAAK;MACjBP,UAAU,EAAE,IAAI;MAChBjB,WAAW,EAAE;IACjB,CAAC,EAAE;MACC3C,EAAE,EAAEpE,EAAE,CAACuM,EAAE;MACT1J,KAAK,EAAE;QACH4H,KAAK,EAAElJ,GAAG,CAACuB,QAAQ,CAAC,kCAAkC,EAAE,sBAAsB,CAAC;QAC/E4H,QAAQ,EAAE;MACd,CAAC;MACDnG,YAAY,EAAE1C,cAAc,CAACyC,GAAG,CAACtD,iBAAiB,CAACwL,yBAAyB,EAAElL,WAAW,CAACmK,eAAe,EAAEzK,iBAAiB,CAAC+J,sBAAsB,CAACC,SAAS,CAAC,CAAC,CAAC;MAChK/G,IAAI,EAAE;QACFG,EAAE,EAAE5C,MAAM,CAACoB,iBAAiB;QAC5BG,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE;MACX;IACJ,CAAC,CAAC;EACN;AACJ,CAAC,EACDhD,EAAE,CAACuM,EAAE,GAAG,kCAAkC,EAC1CvM,EAAE,CAAC,CAAC;AACR;AACA;AACA,MAAM0M,oBAAoB,SAASjJ,sBAAsB,CAAC;EACtD,MAAMsC,iBAAiBA,CAACP,uBAAuB,EAAEjC,KAAK,EAAED,QAAQ,EAAE0C,KAAK,EAAE;IACrE,OAAO,IAAI7E,eAAe,CAAC,MAAMgB,4BAA4B,CAACqD,uBAAuB,CAACmH,sBAAsB,EAAEpJ,KAAK,EAAED,QAAQ,EAAE0C,KAAK,CAAC,EAAEzE,GAAG,CAACuB,QAAQ,CAAC,YAAY,EAAE,iBAAiB,CAAC,CAAC;EACzL;EACAqE,wBAAwBA,CAACH,IAAI,EAAE;IAC3B,OAAOA,IAAI,IAAIA,IAAI,CAACoD,IAAI,GAClB7I,GAAG,CAACuB,QAAQ,CAAC,iCAAiC,EAAE,mCAAmC,EAAEkE,IAAI,CAACoD,IAAI,CAAC,GAC/F7I,GAAG,CAACuB,QAAQ,CAAC,sCAAsC,EAAE,yBAAyB,CAAC;EACzF;EACA4D,sBAAsBA,CAAC9B,MAAM,EAAE;IAC3B,OAAOA,MAAM,CAACyF,SAAS,CAAC,EAAE,CAAC,+BAA+B,CAAC,CAACuC,gCAAgC;EAChG;EACA7E,kBAAkBA,CAACnD,MAAM,EAAE;IACvB,OAAOA,MAAM,CAACyF,SAAS,CAAC,EAAE,CAAC,+BAA+B,CAAC,CAACwC,uBAAuB;EACvF;AACJ;AACAnL,eAAe,EAAEzB,EAAE,GAAG,MAAM6M,wBAAwB,SAASJ,oBAAoB,CAAC;EAC1ElJ,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF+E,UAAU,EAAE,KAAK;MACjBP,UAAU,EAAE,KAAK;MACjBjB,WAAW,EAAE;IACjB,CAAC,EAAE;MACC3C,EAAE,EAAEnE,EAAE,CAACsM,EAAE;MACT1J,KAAK,EAAE;QACH4H,KAAK,EAAElJ,GAAG,CAACuB,QAAQ,CAAC,kCAAkC,EAAE,uBAAuB,CAAC;QAChF4H,QAAQ,EAAE,uBAAuB;QACjCC,aAAa,EAAEpJ,GAAG,CAACuB,QAAQ,CAAC;UAAE8H,GAAG,EAAE,sBAAsB;UAAEC,OAAO,EAAE,CAAC,uBAAuB;QAAE,CAAC,EAAE,yBAAyB;MAC9H,CAAC;MACDtG,YAAY,EAAE1C,cAAc,CAACyC,GAAG,CAACtD,iBAAiB,CAAC+L,yBAAyB,EAAE/L,iBAAiB,CAAC+J,sBAAsB,CAACC,SAAS,CAAC,CAAC,CAAC;MACnIC,UAAU,EAAE;QACR5G,IAAI,EAAErD,iBAAiB,CAACkK,eAAe;QACvCC,OAAO,EAAE,IAAI,CAAC,uBAAuB,EAAE,CAAC;QACxCC,MAAM,EAAE,GAAG,CAAC;MAChB,CAAC;MACDnH,IAAI,EAAE,CAAC;QACCG,EAAE,EAAE5C,MAAM,CAACkB,aAAa;QACxBK,KAAK,EAAE,YAAY;QACnBC,KAAK,EAAE;MACX,CAAC,EAAE;QACCoB,EAAE,EAAE5C,MAAM,CAAC6J,aAAa;QACxB9G,YAAY,EAAE,IAAI;QAClBxB,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE;MACX,CAAC;IACT,CAAC,CAAC;EACN;AACJ,CAAC,EACD/C,EAAE,CAACsM,EAAE,GAAG,kCAAkC,EAC1CtM,EAAE,CAAC,CAAC;AACRyB,eAAe,EAAExB,EAAE,GAAG,MAAM8M,wBAAwB,SAASN,oBAAoB,CAAC;EAC1ElJ,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF+E,UAAU,EAAE,KAAK;MACjBP,UAAU,EAAE,IAAI;MAChBjB,WAAW,EAAE;IACjB,CAAC,EAAE;MACC3C,EAAE,EAAElE,EAAE,CAACqM,EAAE;MACT1J,KAAK,EAAE;QACH4H,KAAK,EAAElJ,GAAG,CAACuB,QAAQ,CAAC,kCAAkC,EAAE,sBAAsB,CAAC;QAC/E4H,QAAQ,EAAE;MACd,CAAC;MACDnG,YAAY,EAAE1C,cAAc,CAACyC,GAAG,CAACtD,iBAAiB,CAAC+L,yBAAyB,EAAEzL,WAAW,CAACmK,eAAe,EAAEzK,iBAAiB,CAAC+J,sBAAsB,CAACC,SAAS,CAAC,CAAC,CAAC;MAChKC,UAAU,EAAE;QACR5G,IAAI,EAAErD,iBAAiB,CAACkK,eAAe;QACvCC,OAAO,EAAE,IAAI,CAAC,uBAAuB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAClEC,MAAM,EAAE,GAAG,CAAC;MAChB,CAAC;MACDnH,IAAI,EAAE;QACFG,EAAE,EAAE5C,MAAM,CAACoB,iBAAiB;QAC5BG,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE;MACX;IACJ,CAAC,CAAC;EACN;AACJ,CAAC,EACD9C,EAAE,CAACqM,EAAE,GAAG,kCAAkC,EAC1CrM,EAAE,CAAC,CAAC;AACR;AACA;AACA,MAAM+M,gBAAgB,SAASxJ,sBAAsB,CAAC;EAClD0D,wBAAwBA,CAACH,IAAI,EAAE;IAC3B,OAAOA,IAAI,GACLzF,GAAG,CAACuB,QAAQ,CAAC,eAAe,EAAE,+BAA+B,EAAEkE,IAAI,CAACoD,IAAI,CAAC,GACzE7I,GAAG,CAACuB,QAAQ,CAAC,sBAAsB,EAAE,qBAAqB,CAAC;EACrE;EACA4D,sBAAsBA,CAAC9B,MAAM,EAAE;IAC3B,OAAOA,MAAM,CAACyF,SAAS,CAAC,EAAE,CAAC,+BAA+B,CAAC,CAAC6C,2BAA2B;EAC3F;EACAnF,kBAAkBA,CAACnD,MAAM,EAAE;IACvB,OAAOA,MAAM,CAACyF,SAAS,CAAC,EAAE,CAAC,+BAA+B,CAAC,CAAC8C,kBAAkB;EAClF;AACJ;AACAzL,eAAe,CAAC,MAAM0L,oBAAoB,SAASH,gBAAgB,CAAC;EAChEzJ,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF+E,UAAU,EAAE,KAAK;MACjBP,UAAU,EAAE,KAAK;MACjBjB,WAAW,EAAE;IACjB,CAAC,EAAE;MACC3C,EAAE,EAAE,8BAA8B;MAClCvB,KAAK,EAAE;QACH4H,KAAK,EAAElJ,GAAG,CAACuB,QAAQ,CAAC,sBAAsB,EAAE,kBAAkB,CAAC;QAC/D4H,QAAQ,EAAE,kBAAkB;QAC5BC,aAAa,EAAEpJ,GAAG,CAACuB,QAAQ,CAAC;UAAE8H,GAAG,EAAE,iBAAiB;UAAEC,OAAO,EAAE,CAAC,uBAAuB;QAAE,CAAC,EAAE,oBAAoB;MACpH,CAAC;MACDtG,YAAY,EAAE1C,cAAc,CAACyC,GAAG,CAACtD,iBAAiB,CAACqM,oBAAoB,EAAE/L,WAAW,CAACmK,eAAe,EAAEzK,iBAAiB,CAAC+J,sBAAsB,CAACC,SAAS,CAAC,CAAC,CAAC;MAC3JC,UAAU,EAAE;QACR5G,IAAI,EAAErD,iBAAiB,CAACkK,eAAe;QACvCC,OAAO,EAAE,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACtCC,MAAM,EAAE,GAAG,CAAC;MAChB,CAAC;MACDnH,IAAI,EAAE,CAAC;QACCG,EAAE,EAAE5C,MAAM,CAACkB,aAAa;QACxBK,KAAK,EAAE,YAAY;QACnBC,KAAK,EAAE;MACX,CAAC,EAAE;QACCoB,EAAE,EAAE5C,MAAM,CAAC6J,aAAa;QACxB9G,YAAY,EAAE,IAAI;QAClBxB,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE;MACX,CAAC;IACT,CAAC,CAAC;EACN;EACA,MAAM+C,iBAAiBA,CAACP,uBAAuB,EAAEjC,KAAK,EAAED,QAAQ,EAAE0C,KAAK,EAAE;IACrE,OAAO,IAAI7E,eAAe,CAAC,MAAMiB,uBAAuB,CAACoD,uBAAuB,CAAC8H,iBAAiB,EAAE/J,KAAK,EAAED,QAAQ,EAAE,IAAI,EAAE0C,KAAK,CAAC,EAAEzE,GAAG,CAACuB,QAAQ,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;EAC/K;AACJ,CAAC,CAAC;AACFpB,eAAe,CAAC,MAAM6L,oBAAoB,SAASN,gBAAgB,CAAC;EAChEzJ,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF+E,UAAU,EAAE,KAAK;MACjBP,UAAU,EAAE,IAAI;MAChBjB,WAAW,EAAE;IACjB,CAAC,EAAE;MACC3C,EAAE,EAAE,uCAAuC;MAC3CvB,KAAK,EAAE;QACH4H,KAAK,EAAElJ,GAAG,CAACuB,QAAQ,CAAC,yBAAyB,EAAE,iBAAiB,CAAC;QACjE4H,QAAQ,EAAE;MACd,CAAC;MACDnG,YAAY,EAAE1C,cAAc,CAACyC,GAAG,CAACtD,iBAAiB,CAACqM,oBAAoB,EAAE/L,WAAW,CAACmK,eAAe,EAAEzK,iBAAiB,CAAC+J,sBAAsB,CAACC,SAAS,CAAC,CAAC,CAAC;MAC3J/G,IAAI,EAAE;QACFG,EAAE,EAAE5C,MAAM,CAACoB,iBAAiB;QAC5BG,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE;MACX;IACJ,CAAC,CAAC;EACN;EACA,MAAM+C,iBAAiBA,CAACP,uBAAuB,EAAEjC,KAAK,EAAED,QAAQ,EAAE0C,KAAK,EAAE;IACrE,OAAO,IAAI7E,eAAe,CAAC,MAAMiB,uBAAuB,CAACoD,uBAAuB,CAAC8H,iBAAiB,EAAE/J,KAAK,EAAED,QAAQ,EAAE,KAAK,EAAE0C,KAAK,CAAC,EAAEzE,GAAG,CAACuB,QAAQ,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;EAChL;AACJ,CAAC,CAAC;AACF;AACA;AACA,MAAM0K,yBAAyB,SAAS/J,sBAAsB,CAAC;EAC3DD,WAAWA,CAACiK,MAAM,EAAEC,WAAW,EAAEC,sBAAsB,EAAE;IACrD,KAAK,CAACF,MAAM,EAAE;MACVrJ,EAAE,EAAE,4BAA4B;MAChCvB,KAAK,EAAE;QACH4H,KAAK,EAAElJ,GAAG,CAACuB,QAAQ,CAAC,eAAe,EAAE,kBAAkB,CAAC;QACxD4H,QAAQ,EAAE;MACd,CAAC;MACDnG,YAAY,EAAE1C,cAAc,CAACyC,GAAG,CAAChD,WAAW,CAACmK,eAAe,EAAEzK,iBAAiB,CAAC+J,sBAAsB,CAACC,SAAS,CAAC,CAAC;IACtH,CAAC,CAAC;IACF,IAAI,CAAC0C,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,sBAAsB,GAAGA,sBAAsB;EACxD;EACA,MAAM5H,iBAAiBA,CAACP,uBAAuB,EAAEoI,MAAM,EAAEC,SAAS,EAAEC,MAAM,EAAE;IACxE,OAAO,IAAI3M,eAAe,CAAC,IAAI,CAACuM,WAAW,EAAEnM,GAAG,CAACuB,QAAQ,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;EAC5F;EACAqE,wBAAwBA,CAACH,IAAI,EAAE;IAC3B,OAAOA,IAAI,IAAIzF,GAAG,CAACuB,QAAQ,CAAC,kBAAkB,EAAE,sBAAsB,EAAEkE,IAAI,CAACoD,IAAI,CAAC,IAAI,EAAE;EAC5F;EACArC,kBAAkBA,CAACnD,MAAM,EAAE;IACvB,IAAIuB,EAAE;IACN,OAAO,CAACA,EAAE,GAAG,IAAI,CAACwH,sBAAsB,MAAM,IAAI,IAAIxH,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGvB,MAAM,CAACyF,SAAS,CAAC,EAAE,CAAC,+BAA+B,CAAC,CAAC8C,kBAAkB;EACtJ;EACAzG,sBAAsBA,CAAA,EAAG;IAAE,OAAO,EAAE;EAAE;AAC1C;AACA/E,gBAAgB,CAACoM,eAAe,CAAC;EAC7B3J,EAAE,EAAE,6BAA6B;EACjC4J,QAAQ,EAAE;IACNzE,WAAW,EAAE,2CAA2C;IACxD0E,IAAI,EAAE,CACF;MAAEC,IAAI,EAAE,KAAK;MAAE3E,WAAW,EAAE,qCAAqC;MAAE4E,UAAU,EAAE3N;IAAI,CAAC,EACpF;MAAE0N,IAAI,EAAE,UAAU;MAAE3E,WAAW,EAAE,gCAAgC;MAAE4E,UAAU,EAAErN,YAAY,CAACsC,QAAQ,CAACC;IAAY,CAAC,EAClH;MAAE6K,IAAI,EAAE,WAAW;MAAE3E,WAAW,EAAE,wBAAwB;MAAE4E,UAAU,EAAEC;IAAM,CAAC,EAC/E;MAAEF,IAAI,EAAE,UAAU;MAAE3E,WAAW,EAAE;IAAyF,CAAC,EAC3H;MAAE2E,IAAI,EAAE,kBAAkB;MAAE3E,WAAW,EAAE;IAA6D,CAAC;EAE/G,CAAC;EACD8E,OAAO,EAAE,MAAAA,CAAO1J,QAAQ,EAAEmE,QAAQ,EAAExF,QAAQ,EAAE4C,UAAU,EAAEoI,QAAQ,EAAEC,gBAAgB,EAAEvG,UAAU,KAAK;IACjGzH,UAAU,CAACC,GAAG,CAACgO,KAAK,CAAC1F,QAAQ,CAAC,CAAC;IAC/BvI,UAAU,CAACO,YAAY,CAACsC,QAAQ,CAACC,WAAW,CAACC,QAAQ,CAAC,CAAC;IACvD/C,UAAU,CAAC6N,KAAK,CAACK,OAAO,CAACvI,UAAU,CAAC,CAAC;IACrC3F,UAAU,CAAC,OAAO+N,QAAQ,KAAK,WAAW,IAAI,OAAOA,QAAQ,KAAK,QAAQ,CAAC;IAC3E/N,UAAU,CAAC,OAAOyH,UAAU,KAAK,WAAW,IAAI,OAAOA,UAAU,KAAK,SAAS,CAAC;IAChF,MAAM3C,aAAa,GAAGV,QAAQ,CAACS,GAAG,CAACxE,kBAAkB,CAAC;IACtD,MAAMgE,MAAM,GAAG,MAAMS,aAAa,CAACwD,cAAc,CAAC;MAAEC;IAAS,CAAC,EAAEzD,aAAa,CAACqJ,oBAAoB,CAAC,CAAC,CAAC;IACrG,IAAIhO,YAAY,CAACkE,MAAM,CAAC,EAAE;MACtBA,MAAM,CAAC+J,WAAW,CAACrL,QAAQ,CAAC;MAC5BsB,MAAM,CAACgK,uCAAuC,CAACtL,QAAQ,EAAE,CAAC,CAAC,uBAAuB,CAAC;MACnF,OAAOsB,MAAM,CAACiK,mBAAmB,CAAClK,QAAQ,IAAI;QAC1C,MAAMmK,OAAO,GAAG,IAAI,cAActB,yBAAyB,CAAC;UACxDrG,wBAAwBA,CAACH,IAAI,EAAE;YAC3B,OAAOuH,gBAAgB,IAAI,KAAK,CAACpH,wBAAwB,CAACH,IAAI,CAAC;UACnE;QACJ,CAAC,CAAC;UACED,WAAW,EAAE,CAACgI,OAAO,CAACR,gBAAgB,CAAC;UACvCvG,UAAU,EAAE+G,OAAO,CAAC/G,UAAU,CAAC;UAC/BO,UAAU,EAAE;QAChB,CAAC,EAAErC,UAAU,EAAEoI,QAAQ,CAAC;QACxB3J,QAAQ,CAACS,GAAG,CAACtD,qBAAqB,CAAC,CAACwF,cAAc,CAACwH,OAAO,CAACE,GAAG,CAACC,IAAI,CAACH,OAAO,CAAC,EAAElK,MAAM,CAAC;MACzF,CAAC,CAAC;IACN;EACJ;AACJ,CAAC,CAAC;AACFjD,gBAAgB,CAACoM,eAAe,CAAC;EAC7B3J,EAAE,EAAE,6BAA6B;EACjC4J,QAAQ,EAAE;IACNzE,WAAW,EAAE,0CAA0C;IACvD0E,IAAI,EAAE,CACF;MAAEC,IAAI,EAAE,KAAK;MAAE3E,WAAW,EAAE,qCAAqC;MAAE4E,UAAU,EAAE3N;IAAI,CAAC,EACpF;MAAE0N,IAAI,EAAE,UAAU;MAAE3E,WAAW,EAAE,gCAAgC;MAAE4E,UAAU,EAAErN,YAAY,CAACsC,QAAQ,CAACC;IAAY,CAAC,EAClH;MAAE6K,IAAI,EAAE,WAAW;MAAE3E,WAAW,EAAE,wBAAwB;MAAE4E,UAAU,EAAEC;IAAM,CAAC,EAC/E;MAAEF,IAAI,EAAE,UAAU;MAAE3E,WAAW,EAAE;IAAyF,CAAC;EAEnI,CAAC;EACD8E,OAAO,EAAE,MAAAA,CAAO1J,QAAQ,EAAEmE,QAAQ,EAAExF,QAAQ,EAAE4C,UAAU,EAAEoI,QAAQ,KAAK;IACnE3J,QAAQ,CAACS,GAAG,CAACxD,eAAe,CAAC,CAACsN,cAAc,CAAC,6BAA6B,EAAEpG,QAAQ,EAAExF,QAAQ,EAAE4C,UAAU,EAAEoI,QAAQ,EAAEpJ,SAAS,EAAE,IAAI,CAAC;EAC1I;AACJ,CAAC,CAAC;AACF;AACA;AACAvD,gBAAgB,CAACoM,eAAe,CAAC;EAC7B3J,EAAE,EAAE,8BAA8B;EAClCiK,OAAO,EAAEA,CAAC1J,QAAQ,EAAEmE,QAAQ,EAAExF,QAAQ,KAAK;IACvC/C,UAAU,CAACC,GAAG,CAACgO,KAAK,CAAC1F,QAAQ,CAAC,CAAC;IAC/BvI,UAAU,CAACO,YAAY,CAACsC,QAAQ,CAACC,WAAW,CAACC,QAAQ,CAAC,CAAC;IACvD,MAAMkC,uBAAuB,GAAGb,QAAQ,CAACS,GAAG,CAAC9C,wBAAwB,CAAC;IACtE,MAAM6M,iBAAiB,GAAGxK,QAAQ,CAACS,GAAG,CAACxE,kBAAkB,CAAC;IAC1D,OAAOuO,iBAAiB,CAACtG,cAAc,CAAC;MAAEC;IAAS,CAAC,EAAEqG,iBAAiB,CAACT,oBAAoB,CAAC,CAAC,CAAC,CAACzI,IAAI,CAACmJ,OAAO,IAAI;MAC5G,IAAI,CAAC1O,YAAY,CAAC0O,OAAO,CAAC,IAAI,CAACA,OAAO,CAACrK,QAAQ,CAAC,CAAC,EAAE;QAC/C,OAAOG,SAAS;MACpB;MACA,MAAM0E,UAAU,GAAG1I,oBAAoB,CAACkE,GAAG,CAACgK,OAAO,CAAC;MACpD,IAAI,CAACxF,UAAU,EAAE;QACb,OAAO1E,SAAS;MACpB;MACA,MAAMgB,UAAU,GAAG9F,uBAAuB,CAAC4F,KAAK,IAAI5D,uBAAuB,CAACoD,uBAAuB,CAAC8H,iBAAiB,EAAE8B,OAAO,CAAC1J,QAAQ,CAAC,CAAC,EAAE5E,YAAY,CAACsC,QAAQ,CAACiM,IAAI,CAAC/L,QAAQ,CAAC,EAAE,KAAK,EAAE0C,KAAK,CAAC,CAACC,IAAI,CAACC,UAAU,IAAI,IAAI/E,eAAe,CAAC+E,UAAU,EAAE3E,GAAG,CAACuB,QAAQ,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;MAC5R,MAAMgC,KAAK,GAAG,IAAI/D,KAAK,CAACuC,QAAQ,CAACgM,UAAU,EAAEhM,QAAQ,CAACiM,MAAM,EAAEjM,QAAQ,CAACgM,UAAU,EAAEhM,QAAQ,CAACiM,MAAM,CAAC;MACnG,OAAOvK,OAAO,CAACC,OAAO,CAAC2E,UAAU,CAACC,YAAY,CAAC/E,KAAK,EAAEoB,UAAU,EAAE,KAAK,CAAC,CAAC;IAC7E,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AACF;AACAvE,gBAAgB,CAAC2J,oBAAoB,CAAC,8BAA8B,EAAE,6BAA6B,CAAC;AACpG"},"metadata":{},"sourceType":"module","externalDependencies":[]}