{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, addDisposableListener, EventType, getActiveElement, getWindow, isAncestor } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { Menu } from '../../../base/browser/ui/menu/menu.js';\nimport { ActionRunner } from '../../../base/common/actions.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { combinedDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { defaultMenuStyles } from '../../theme/browser/defaultStyles.js';\nexport class ContextMenuHandler {\n  constructor(contextViewService, telemetryService, notificationService, keybindingService) {\n    this.contextViewService = contextViewService;\n    this.telemetryService = telemetryService;\n    this.notificationService = notificationService;\n    this.keybindingService = keybindingService;\n    this.focusToReturn = null;\n    this.lastContainer = null;\n    this.block = null;\n    this.blockDisposable = null;\n    this.options = {\n      blockMouse: true\n    };\n  }\n  configure(options) {\n    this.options = options;\n  }\n  showContextMenu(delegate) {\n    const actions = delegate.getActions();\n    if (!actions.length) {\n      return; // Don't render an empty context menu\n    }\n    this.focusToReturn = getActiveElement();\n    let menu;\n    const shadowRootElement = delegate.domForShadowRoot instanceof HTMLElement ? delegate.domForShadowRoot : undefined;\n    this.contextViewService.showContextView({\n      getAnchor: () => delegate.getAnchor(),\n      canRelayout: false,\n      anchorAlignment: delegate.anchorAlignment,\n      anchorAxisAlignment: delegate.anchorAxisAlignment,\n      render: container => {\n        var _a;\n        this.lastContainer = container;\n        const className = delegate.getMenuClassName ? delegate.getMenuClassName() : '';\n        if (className) {\n          container.className += ' ' + className;\n        }\n        // Render invisible div to block mouse interaction in the rest of the UI\n        if (this.options.blockMouse) {\n          this.block = container.appendChild($('.context-view-block'));\n          this.block.style.position = 'fixed';\n          this.block.style.cursor = 'initial';\n          this.block.style.left = '0';\n          this.block.style.top = '0';\n          this.block.style.width = '100%';\n          this.block.style.height = '100%';\n          this.block.style.zIndex = '-1';\n          (_a = this.blockDisposable) === null || _a === void 0 ? void 0 : _a.dispose();\n          this.blockDisposable = addDisposableListener(this.block, EventType.MOUSE_DOWN, e => e.stopPropagation());\n        }\n        const menuDisposables = new DisposableStore();\n        const actionRunner = delegate.actionRunner || new ActionRunner();\n        actionRunner.onWillRun(evt => this.onActionRun(evt, !delegate.skipTelemetry), this, menuDisposables);\n        actionRunner.onDidRun(this.onDidActionRun, this, menuDisposables);\n        menu = new Menu(container, actions, {\n          actionViewItemProvider: delegate.getActionViewItem,\n          context: delegate.getActionsContext ? delegate.getActionsContext() : null,\n          actionRunner,\n          getKeyBinding: delegate.getKeyBinding ? delegate.getKeyBinding : action => this.keybindingService.lookupKeybinding(action.id)\n        }, defaultMenuStyles);\n        menu.onDidCancel(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n        menu.onDidBlur(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n        const targetWindow = getWindow(container);\n        menuDisposables.add(addDisposableListener(targetWindow, EventType.BLUR, () => this.contextViewService.hideContextView(true)));\n        menuDisposables.add(addDisposableListener(targetWindow, EventType.MOUSE_DOWN, e => {\n          if (e.defaultPrevented) {\n            return;\n          }\n          const event = new StandardMouseEvent(targetWindow, e);\n          let element = event.target;\n          // Don't do anything as we are likely creating a context menu\n          if (event.rightButton) {\n            return;\n          }\n          while (element) {\n            if (element === container) {\n              return;\n            }\n            element = element.parentElement;\n          }\n          this.contextViewService.hideContextView(true);\n        }));\n        return combinedDisposable(menuDisposables, menu);\n      },\n      focus: () => {\n        menu === null || menu === void 0 ? void 0 : menu.focus(!!delegate.autoSelectFirstItem);\n      },\n      onHide: didCancel => {\n        var _a, _b, _c;\n        (_a = delegate.onHide) === null || _a === void 0 ? void 0 : _a.call(delegate, !!didCancel);\n        if (this.block) {\n          this.block.remove();\n          this.block = null;\n        }\n        (_b = this.blockDisposable) === null || _b === void 0 ? void 0 : _b.dispose();\n        this.blockDisposable = null;\n        if (!!this.lastContainer && (getActiveElement() === this.lastContainer || isAncestor(getActiveElement(), this.lastContainer))) {\n          (_c = this.focusToReturn) === null || _c === void 0 ? void 0 : _c.focus();\n        }\n        this.lastContainer = null;\n      }\n    }, shadowRootElement, !!shadowRootElement);\n  }\n  onActionRun(e, logTelemetry) {\n    if (logTelemetry) {\n      this.telemetryService.publicLog2('workbenchActionExecuted', {\n        id: e.action.id,\n        from: 'contextMenu'\n      });\n    }\n    this.contextViewService.hideContextView(false);\n  }\n  onDidActionRun(e) {\n    if (e.error && !isCancellationError(e.error)) {\n      this.notificationService.error(e.error);\n    }\n  }\n}","map":{"version":3,"names":["$","addDisposableListener","EventType","getActiveElement","getWindow","isAncestor","StandardMouseEvent","Menu","ActionRunner","isCancellationError","combinedDisposable","DisposableStore","defaultMenuStyles","ContextMenuHandler","constructor","contextViewService","telemetryService","notificationService","keybindingService","focusToReturn","lastContainer","block","blockDisposable","options","blockMouse","configure","showContextMenu","delegate","actions","getActions","length","menu","shadowRootElement","domForShadowRoot","HTMLElement","undefined","showContextView","getAnchor","canRelayout","anchorAlignment","anchorAxisAlignment","render","container","_a","className","getMenuClassName","appendChild","style","position","cursor","left","top","width","height","zIndex","dispose","MOUSE_DOWN","e","stopPropagation","menuDisposables","actionRunner","onWillRun","evt","onActionRun","skipTelemetry","onDidRun","onDidActionRun","actionViewItemProvider","getActionViewItem","context","getActionsContext","getKeyBinding","action","lookupKeybinding","id","onDidCancel","hideContextView","onDidBlur","targetWindow","add","BLUR","defaultPrevented","event","element","target","rightButton","parentElement","focus","autoSelectFirstItem","onHide","didCancel","_b","_c","call","remove","logTelemetry","publicLog2","from","error"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextMenuHandler.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, addDisposableListener, EventType, getActiveElement, getWindow, isAncestor } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { Menu } from '../../../base/browser/ui/menu/menu.js';\nimport { ActionRunner } from '../../../base/common/actions.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { combinedDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { defaultMenuStyles } from '../../theme/browser/defaultStyles.js';\nexport class ContextMenuHandler {\n    constructor(contextViewService, telemetryService, notificationService, keybindingService) {\n        this.contextViewService = contextViewService;\n        this.telemetryService = telemetryService;\n        this.notificationService = notificationService;\n        this.keybindingService = keybindingService;\n        this.focusToReturn = null;\n        this.lastContainer = null;\n        this.block = null;\n        this.blockDisposable = null;\n        this.options = { blockMouse: true };\n    }\n    configure(options) {\n        this.options = options;\n    }\n    showContextMenu(delegate) {\n        const actions = delegate.getActions();\n        if (!actions.length) {\n            return; // Don't render an empty context menu\n        }\n        this.focusToReturn = getActiveElement();\n        let menu;\n        const shadowRootElement = delegate.domForShadowRoot instanceof HTMLElement ? delegate.domForShadowRoot : undefined;\n        this.contextViewService.showContextView({\n            getAnchor: () => delegate.getAnchor(),\n            canRelayout: false,\n            anchorAlignment: delegate.anchorAlignment,\n            anchorAxisAlignment: delegate.anchorAxisAlignment,\n            render: (container) => {\n                var _a;\n                this.lastContainer = container;\n                const className = delegate.getMenuClassName ? delegate.getMenuClassName() : '';\n                if (className) {\n                    container.className += ' ' + className;\n                }\n                // Render invisible div to block mouse interaction in the rest of the UI\n                if (this.options.blockMouse) {\n                    this.block = container.appendChild($('.context-view-block'));\n                    this.block.style.position = 'fixed';\n                    this.block.style.cursor = 'initial';\n                    this.block.style.left = '0';\n                    this.block.style.top = '0';\n                    this.block.style.width = '100%';\n                    this.block.style.height = '100%';\n                    this.block.style.zIndex = '-1';\n                    (_a = this.blockDisposable) === null || _a === void 0 ? void 0 : _a.dispose();\n                    this.blockDisposable = addDisposableListener(this.block, EventType.MOUSE_DOWN, e => e.stopPropagation());\n                }\n                const menuDisposables = new DisposableStore();\n                const actionRunner = delegate.actionRunner || new ActionRunner();\n                actionRunner.onWillRun(evt => this.onActionRun(evt, !delegate.skipTelemetry), this, menuDisposables);\n                actionRunner.onDidRun(this.onDidActionRun, this, menuDisposables);\n                menu = new Menu(container, actions, {\n                    actionViewItemProvider: delegate.getActionViewItem,\n                    context: delegate.getActionsContext ? delegate.getActionsContext() : null,\n                    actionRunner,\n                    getKeyBinding: delegate.getKeyBinding ? delegate.getKeyBinding : action => this.keybindingService.lookupKeybinding(action.id)\n                }, defaultMenuStyles);\n                menu.onDidCancel(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n                menu.onDidBlur(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n                const targetWindow = getWindow(container);\n                menuDisposables.add(addDisposableListener(targetWindow, EventType.BLUR, () => this.contextViewService.hideContextView(true)));\n                menuDisposables.add(addDisposableListener(targetWindow, EventType.MOUSE_DOWN, (e) => {\n                    if (e.defaultPrevented) {\n                        return;\n                    }\n                    const event = new StandardMouseEvent(targetWindow, e);\n                    let element = event.target;\n                    // Don't do anything as we are likely creating a context menu\n                    if (event.rightButton) {\n                        return;\n                    }\n                    while (element) {\n                        if (element === container) {\n                            return;\n                        }\n                        element = element.parentElement;\n                    }\n                    this.contextViewService.hideContextView(true);\n                }));\n                return combinedDisposable(menuDisposables, menu);\n            },\n            focus: () => {\n                menu === null || menu === void 0 ? void 0 : menu.focus(!!delegate.autoSelectFirstItem);\n            },\n            onHide: (didCancel) => {\n                var _a, _b, _c;\n                (_a = delegate.onHide) === null || _a === void 0 ? void 0 : _a.call(delegate, !!didCancel);\n                if (this.block) {\n                    this.block.remove();\n                    this.block = null;\n                }\n                (_b = this.blockDisposable) === null || _b === void 0 ? void 0 : _b.dispose();\n                this.blockDisposable = null;\n                if (!!this.lastContainer && (getActiveElement() === this.lastContainer || isAncestor(getActiveElement(), this.lastContainer))) {\n                    (_c = this.focusToReturn) === null || _c === void 0 ? void 0 : _c.focus();\n                }\n                this.lastContainer = null;\n            }\n        }, shadowRootElement, !!shadowRootElement);\n    }\n    onActionRun(e, logTelemetry) {\n        if (logTelemetry) {\n            this.telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: 'contextMenu' });\n        }\n        this.contextViewService.hideContextView(false);\n    }\n    onDidActionRun(e) {\n        if (e.error && !isCancellationError(e.error)) {\n            this.notificationService.error(e.error);\n        }\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,CAAC,EAAEC,qBAAqB,EAAEC,SAAS,EAAEC,gBAAgB,EAAEC,SAAS,EAAEC,UAAU,QAAQ,8BAA8B;AAC3H,SAASC,kBAAkB,QAAQ,qCAAqC;AACxE,SAASC,IAAI,QAAQ,uCAAuC;AAC5D,SAASC,YAAY,QAAQ,iCAAiC;AAC9D,SAASC,mBAAmB,QAAQ,gCAAgC;AACpE,SAASC,kBAAkB,EAAEC,eAAe,QAAQ,mCAAmC;AACvF,SAASC,iBAAiB,QAAQ,sCAAsC;AACxE,OAAO,MAAMC,kBAAkB,CAAC;EAC5BC,WAAWA,CAACC,kBAAkB,EAAEC,gBAAgB,EAAEC,mBAAmB,EAAEC,iBAAiB,EAAE;IACtF,IAAI,CAACH,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAACC,mBAAmB,GAAGA,mBAAmB;IAC9C,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,KAAK,GAAG,IAAI;IACjB,IAAI,CAACC,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACC,OAAO,GAAG;MAAEC,UAAU,EAAE;IAAK,CAAC;EACvC;EACAC,SAASA,CAACF,OAAO,EAAE;IACf,IAAI,CAACA,OAAO,GAAGA,OAAO;EAC1B;EACAG,eAAeA,CAACC,QAAQ,EAAE;IACtB,MAAMC,OAAO,GAAGD,QAAQ,CAACE,UAAU,CAAC,CAAC;IACrC,IAAI,CAACD,OAAO,CAACE,MAAM,EAAE;MACjB,OAAO,CAAC;IACZ;IACA,IAAI,CAACX,aAAa,GAAGhB,gBAAgB,CAAC,CAAC;IACvC,IAAI4B,IAAI;IACR,MAAMC,iBAAiB,GAAGL,QAAQ,CAACM,gBAAgB,YAAYC,WAAW,GAAGP,QAAQ,CAACM,gBAAgB,GAAGE,SAAS;IAClH,IAAI,CAACpB,kBAAkB,CAACqB,eAAe,CAAC;MACpCC,SAAS,EAAEA,CAAA,KAAMV,QAAQ,CAACU,SAAS,CAAC,CAAC;MACrCC,WAAW,EAAE,KAAK;MAClBC,eAAe,EAAEZ,QAAQ,CAACY,eAAe;MACzCC,mBAAmB,EAAEb,QAAQ,CAACa,mBAAmB;MACjDC,MAAM,EAAGC,SAAS,IAAK;QACnB,IAAIC,EAAE;QACN,IAAI,CAACvB,aAAa,GAAGsB,SAAS;QAC9B,MAAME,SAAS,GAAGjB,QAAQ,CAACkB,gBAAgB,GAAGlB,QAAQ,CAACkB,gBAAgB,CAAC,CAAC,GAAG,EAAE;QAC9E,IAAID,SAAS,EAAE;UACXF,SAAS,CAACE,SAAS,IAAI,GAAG,GAAGA,SAAS;QAC1C;QACA;QACA,IAAI,IAAI,CAACrB,OAAO,CAACC,UAAU,EAAE;UACzB,IAAI,CAACH,KAAK,GAAGqB,SAAS,CAACI,WAAW,CAAC9C,CAAC,CAAC,qBAAqB,CAAC,CAAC;UAC5D,IAAI,CAACqB,KAAK,CAAC0B,KAAK,CAACC,QAAQ,GAAG,OAAO;UACnC,IAAI,CAAC3B,KAAK,CAAC0B,KAAK,CAACE,MAAM,GAAG,SAAS;UACnC,IAAI,CAAC5B,KAAK,CAAC0B,KAAK,CAACG,IAAI,GAAG,GAAG;UAC3B,IAAI,CAAC7B,KAAK,CAAC0B,KAAK,CAACI,GAAG,GAAG,GAAG;UAC1B,IAAI,CAAC9B,KAAK,CAAC0B,KAAK,CAACK,KAAK,GAAG,MAAM;UAC/B,IAAI,CAAC/B,KAAK,CAAC0B,KAAK,CAACM,MAAM,GAAG,MAAM;UAChC,IAAI,CAAChC,KAAK,CAAC0B,KAAK,CAACO,MAAM,GAAG,IAAI;UAC9B,CAACX,EAAE,GAAG,IAAI,CAACrB,eAAe,MAAM,IAAI,IAAIqB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACY,OAAO,CAAC,CAAC;UAC7E,IAAI,CAACjC,eAAe,GAAGrB,qBAAqB,CAAC,IAAI,CAACoB,KAAK,EAAEnB,SAAS,CAACsD,UAAU,EAAEC,CAAC,IAAIA,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC;QAC5G;QACA,MAAMC,eAAe,GAAG,IAAIhD,eAAe,CAAC,CAAC;QAC7C,MAAMiD,YAAY,GAAGjC,QAAQ,CAACiC,YAAY,IAAI,IAAIpD,YAAY,CAAC,CAAC;QAChEoD,YAAY,CAACC,SAAS,CAACC,GAAG,IAAI,IAAI,CAACC,WAAW,CAACD,GAAG,EAAE,CAACnC,QAAQ,CAACqC,aAAa,CAAC,EAAE,IAAI,EAAEL,eAAe,CAAC;QACpGC,YAAY,CAACK,QAAQ,CAAC,IAAI,CAACC,cAAc,EAAE,IAAI,EAAEP,eAAe,CAAC;QACjE5B,IAAI,GAAG,IAAIxB,IAAI,CAACmC,SAAS,EAAEd,OAAO,EAAE;UAChCuC,sBAAsB,EAAExC,QAAQ,CAACyC,iBAAiB;UAClDC,OAAO,EAAE1C,QAAQ,CAAC2C,iBAAiB,GAAG3C,QAAQ,CAAC2C,iBAAiB,CAAC,CAAC,GAAG,IAAI;UACzEV,YAAY;UACZW,aAAa,EAAE5C,QAAQ,CAAC4C,aAAa,GAAG5C,QAAQ,CAAC4C,aAAa,GAAGC,MAAM,IAAI,IAAI,CAACtD,iBAAiB,CAACuD,gBAAgB,CAACD,MAAM,CAACE,EAAE;QAChI,CAAC,EAAE9D,iBAAiB,CAAC;QACrBmB,IAAI,CAAC4C,WAAW,CAAC,MAAM,IAAI,CAAC5D,kBAAkB,CAAC6D,eAAe,CAAC,IAAI,CAAC,EAAE,IAAI,EAAEjB,eAAe,CAAC;QAC5F5B,IAAI,CAAC8C,SAAS,CAAC,MAAM,IAAI,CAAC9D,kBAAkB,CAAC6D,eAAe,CAAC,IAAI,CAAC,EAAE,IAAI,EAAEjB,eAAe,CAAC;QAC1F,MAAMmB,YAAY,GAAG1E,SAAS,CAACsC,SAAS,CAAC;QACzCiB,eAAe,CAACoB,GAAG,CAAC9E,qBAAqB,CAAC6E,YAAY,EAAE5E,SAAS,CAAC8E,IAAI,EAAE,MAAM,IAAI,CAACjE,kBAAkB,CAAC6D,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7HjB,eAAe,CAACoB,GAAG,CAAC9E,qBAAqB,CAAC6E,YAAY,EAAE5E,SAAS,CAACsD,UAAU,EAAGC,CAAC,IAAK;UACjF,IAAIA,CAAC,CAACwB,gBAAgB,EAAE;YACpB;UACJ;UACA,MAAMC,KAAK,GAAG,IAAI5E,kBAAkB,CAACwE,YAAY,EAAErB,CAAC,CAAC;UACrD,IAAI0B,OAAO,GAAGD,KAAK,CAACE,MAAM;UAC1B;UACA,IAAIF,KAAK,CAACG,WAAW,EAAE;YACnB;UACJ;UACA,OAAOF,OAAO,EAAE;YACZ,IAAIA,OAAO,KAAKzC,SAAS,EAAE;cACvB;YACJ;YACAyC,OAAO,GAAGA,OAAO,CAACG,aAAa;UACnC;UACA,IAAI,CAACvE,kBAAkB,CAAC6D,eAAe,CAAC,IAAI,CAAC;QACjD,CAAC,CAAC,CAAC;QACH,OAAOlE,kBAAkB,CAACiD,eAAe,EAAE5B,IAAI,CAAC;MACpD,CAAC;MACDwD,KAAK,EAAEA,CAAA,KAAM;QACTxD,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACwD,KAAK,CAAC,CAAC,CAAC5D,QAAQ,CAAC6D,mBAAmB,CAAC;MAC1F,CAAC;MACDC,MAAM,EAAGC,SAAS,IAAK;QACnB,IAAI/C,EAAE,EAAEgD,EAAE,EAAEC,EAAE;QACd,CAACjD,EAAE,GAAGhB,QAAQ,CAAC8D,MAAM,MAAM,IAAI,IAAI9C,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACkD,IAAI,CAAClE,QAAQ,EAAE,CAAC,CAAC+D,SAAS,CAAC;QAC1F,IAAI,IAAI,CAACrE,KAAK,EAAE;UACZ,IAAI,CAACA,KAAK,CAACyE,MAAM,CAAC,CAAC;UACnB,IAAI,CAACzE,KAAK,GAAG,IAAI;QACrB;QACA,CAACsE,EAAE,GAAG,IAAI,CAACrE,eAAe,MAAM,IAAI,IAAIqE,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACpC,OAAO,CAAC,CAAC;QAC7E,IAAI,CAACjC,eAAe,GAAG,IAAI;QAC3B,IAAI,CAAC,CAAC,IAAI,CAACF,aAAa,KAAKjB,gBAAgB,CAAC,CAAC,KAAK,IAAI,CAACiB,aAAa,IAAIf,UAAU,CAACF,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAACiB,aAAa,CAAC,CAAC,EAAE;UAC3H,CAACwE,EAAE,GAAG,IAAI,CAACzE,aAAa,MAAM,IAAI,IAAIyE,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACL,KAAK,CAAC,CAAC;QAC7E;QACA,IAAI,CAACnE,aAAa,GAAG,IAAI;MAC7B;IACJ,CAAC,EAAEY,iBAAiB,EAAE,CAAC,CAACA,iBAAiB,CAAC;EAC9C;EACA+B,WAAWA,CAACN,CAAC,EAAEsC,YAAY,EAAE;IACzB,IAAIA,YAAY,EAAE;MACd,IAAI,CAAC/E,gBAAgB,CAACgF,UAAU,CAAC,yBAAyB,EAAE;QAAEtB,EAAE,EAAEjB,CAAC,CAACe,MAAM,CAACE,EAAE;QAAEuB,IAAI,EAAE;MAAc,CAAC,CAAC;IACzG;IACA,IAAI,CAAClF,kBAAkB,CAAC6D,eAAe,CAAC,KAAK,CAAC;EAClD;EACAV,cAAcA,CAACT,CAAC,EAAE;IACd,IAAIA,CAAC,CAACyC,KAAK,IAAI,CAACzF,mBAAmB,CAACgD,CAAC,CAACyC,KAAK,CAAC,EAAE;MAC1C,IAAI,CAACjF,mBAAmB,CAACiF,KAAK,CAACzC,CAAC,CAACyC,KAAK,CAAC;IAC3C;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}