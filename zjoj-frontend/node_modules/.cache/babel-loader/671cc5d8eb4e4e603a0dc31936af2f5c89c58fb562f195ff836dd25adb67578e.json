{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, markAsSingleton } from '../../../base/common/lifecycle.js';\nimport { RGBA8 } from '../core/rgba.js';\nimport { TokenizationRegistry } from '../languages.js';\nexport class MinimapTokensColorTracker extends Disposable {\n  static getInstance() {\n    if (!this._INSTANCE) {\n      this._INSTANCE = markAsSingleton(new MinimapTokensColorTracker());\n    }\n    return this._INSTANCE;\n  }\n  constructor() {\n    super();\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n    this._updateColorMap();\n    this._register(TokenizationRegistry.onDidChange(e => {\n      if (e.changedColorMap) {\n        this._updateColorMap();\n      }\n    }));\n  }\n  _updateColorMap() {\n    const colorMap = TokenizationRegistry.getColorMap();\n    if (!colorMap) {\n      this._colors = [RGBA8.Empty];\n      this._backgroundIsLight = true;\n      return;\n    }\n    this._colors = [RGBA8.Empty];\n    for (let colorId = 1; colorId < colorMap.length; colorId++) {\n      const source = colorMap[colorId].rgba;\n      // Use a VM friendly data-type\n      this._colors[colorId] = new RGBA8(source.r, source.g, source.b, Math.round(source.a * 255));\n    }\n    const backgroundLuminosity = colorMap[2 /* ColorId.DefaultBackground */].getRelativeLuminance();\n    this._backgroundIsLight = backgroundLuminosity >= 0.5;\n    this._onDidChange.fire(undefined);\n  }\n  getColor(colorId) {\n    if (colorId < 1 || colorId >= this._colors.length) {\n      // background color (basically invisible)\n      colorId = 2 /* ColorId.DefaultBackground */;\n    }\n    return this._colors[colorId];\n  }\n  backgroundIsLight() {\n    return this._backgroundIsLight;\n  }\n}\nMinimapTokensColorTracker._INSTANCE = null;","map":{"version":3,"names":["Emitter","Disposable","markAsSingleton","RGBA8","TokenizationRegistry","MinimapTokensColorTracker","getInstance","_INSTANCE","constructor","_onDidChange","onDidChange","event","_updateColorMap","_register","e","changedColorMap","colorMap","getColorMap","_colors","Empty","_backgroundIsLight","colorId","length","source","rgba","r","g","b","Math","round","a","backgroundLuminosity","getRelativeLuminance","fire","undefined","getColor","backgroundIsLight"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/common/viewModel/minimapTokensColorTracker.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, markAsSingleton } from '../../../base/common/lifecycle.js';\nimport { RGBA8 } from '../core/rgba.js';\nimport { TokenizationRegistry } from '../languages.js';\nexport class MinimapTokensColorTracker extends Disposable {\n    static getInstance() {\n        if (!this._INSTANCE) {\n            this._INSTANCE = markAsSingleton(new MinimapTokensColorTracker());\n        }\n        return this._INSTANCE;\n    }\n    constructor() {\n        super();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._updateColorMap();\n        this._register(TokenizationRegistry.onDidChange(e => {\n            if (e.changedColorMap) {\n                this._updateColorMap();\n            }\n        }));\n    }\n    _updateColorMap() {\n        const colorMap = TokenizationRegistry.getColorMap();\n        if (!colorMap) {\n            this._colors = [RGBA8.Empty];\n            this._backgroundIsLight = true;\n            return;\n        }\n        this._colors = [RGBA8.Empty];\n        for (let colorId = 1; colorId < colorMap.length; colorId++) {\n            const source = colorMap[colorId].rgba;\n            // Use a VM friendly data-type\n            this._colors[colorId] = new RGBA8(source.r, source.g, source.b, Math.round(source.a * 255));\n        }\n        const backgroundLuminosity = colorMap[2 /* ColorId.DefaultBackground */].getRelativeLuminance();\n        this._backgroundIsLight = backgroundLuminosity >= 0.5;\n        this._onDidChange.fire(undefined);\n    }\n    getColor(colorId) {\n        if (colorId < 1 || colorId >= this._colors.length) {\n            // background color (basically invisible)\n            colorId = 2 /* ColorId.DefaultBackground */;\n        }\n        return this._colors[colorId];\n    }\n    backgroundIsLight() {\n        return this._backgroundIsLight;\n    }\n}\nMinimapTokensColorTracker._INSTANCE = null;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,OAAO,QAAQ,+BAA+B;AACvD,SAASC,UAAU,EAAEC,eAAe,QAAQ,mCAAmC;AAC/E,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,oBAAoB,QAAQ,iBAAiB;AACtD,OAAO,MAAMC,yBAAyB,SAASJ,UAAU,CAAC;EACtD,OAAOK,WAAWA,CAAA,EAAG;IACjB,IAAI,CAAC,IAAI,CAACC,SAAS,EAAE;MACjB,IAAI,CAACA,SAAS,GAAGL,eAAe,CAAC,IAAIG,yBAAyB,CAAC,CAAC,CAAC;IACrE;IACA,OAAO,IAAI,CAACE,SAAS;EACzB;EACAC,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,YAAY,GAAG,IAAIT,OAAO,CAAC,CAAC;IACjC,IAAI,CAACU,WAAW,GAAG,IAAI,CAACD,YAAY,CAACE,KAAK;IAC1C,IAAI,CAACC,eAAe,CAAC,CAAC;IACtB,IAAI,CAACC,SAAS,CAACT,oBAAoB,CAACM,WAAW,CAACI,CAAC,IAAI;MACjD,IAAIA,CAAC,CAACC,eAAe,EAAE;QACnB,IAAI,CAACH,eAAe,CAAC,CAAC;MAC1B;IACJ,CAAC,CAAC,CAAC;EACP;EACAA,eAAeA,CAAA,EAAG;IACd,MAAMI,QAAQ,GAAGZ,oBAAoB,CAACa,WAAW,CAAC,CAAC;IACnD,IAAI,CAACD,QAAQ,EAAE;MACX,IAAI,CAACE,OAAO,GAAG,CAACf,KAAK,CAACgB,KAAK,CAAC;MAC5B,IAAI,CAACC,kBAAkB,GAAG,IAAI;MAC9B;IACJ;IACA,IAAI,CAACF,OAAO,GAAG,CAACf,KAAK,CAACgB,KAAK,CAAC;IAC5B,KAAK,IAAIE,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAGL,QAAQ,CAACM,MAAM,EAAED,OAAO,EAAE,EAAE;MACxD,MAAME,MAAM,GAAGP,QAAQ,CAACK,OAAO,CAAC,CAACG,IAAI;MACrC;MACA,IAAI,CAACN,OAAO,CAACG,OAAO,CAAC,GAAG,IAAIlB,KAAK,CAACoB,MAAM,CAACE,CAAC,EAAEF,MAAM,CAACG,CAAC,EAAEH,MAAM,CAACI,CAAC,EAAEC,IAAI,CAACC,KAAK,CAACN,MAAM,CAACO,CAAC,GAAG,GAAG,CAAC,CAAC;IAC/F;IACA,MAAMC,oBAAoB,GAAGf,QAAQ,CAAC,CAAC,CAAC,gCAAgC,CAACgB,oBAAoB,CAAC,CAAC;IAC/F,IAAI,CAACZ,kBAAkB,GAAGW,oBAAoB,IAAI,GAAG;IACrD,IAAI,CAACtB,YAAY,CAACwB,IAAI,CAACC,SAAS,CAAC;EACrC;EACAC,QAAQA,CAACd,OAAO,EAAE;IACd,IAAIA,OAAO,GAAG,CAAC,IAAIA,OAAO,IAAI,IAAI,CAACH,OAAO,CAACI,MAAM,EAAE;MAC/C;MACAD,OAAO,GAAG,CAAC,CAAC;IAChB;IACA,OAAO,IAAI,CAACH,OAAO,CAACG,OAAO,CAAC;EAChC;EACAe,iBAAiBA,CAAA,EAAG;IAChB,OAAO,IAAI,CAAChB,kBAAkB;EAClC;AACJ;AACAf,yBAAyB,CAACE,SAAS,GAAG,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}