{"ast":null,"code":"import { Disposable } from '../../../base/common/lifecycle.js';\nimport { ConfigurationModel } from './configurationModels.js';\nimport { Extensions } from './configurationRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport class DefaultConfiguration extends Disposable {\n  constructor() {\n    super(...arguments);\n    this._configurationModel = new ConfigurationModel();\n  }\n  get configurationModel() {\n    return this._configurationModel;\n  }\n  reload() {\n    this.resetConfigurationModel();\n    return this.configurationModel;\n  }\n  getConfigurationDefaultOverrides() {\n    return {};\n  }\n  resetConfigurationModel() {\n    this._configurationModel = new ConfigurationModel();\n    const properties = Registry.as(Extensions.Configuration).getConfigurationProperties();\n    this.updateConfigurationModel(Object.keys(properties), properties);\n  }\n  updateConfigurationModel(properties, configurationProperties) {\n    const configurationDefaultsOverrides = this.getConfigurationDefaultOverrides();\n    for (const key of properties) {\n      const defaultOverrideValue = configurationDefaultsOverrides[key];\n      const propertySchema = configurationProperties[key];\n      if (defaultOverrideValue !== undefined) {\n        this._configurationModel.addValue(key, defaultOverrideValue);\n      } else if (propertySchema) {\n        this._configurationModel.addValue(key, propertySchema.default);\n      } else {\n        this._configurationModel.removeValue(key);\n      }\n    }\n  }\n}","map":{"version":3,"names":["Disposable","ConfigurationModel","Extensions","Registry","DefaultConfiguration","constructor","arguments","_configurationModel","configurationModel","reload","resetConfigurationModel","getConfigurationDefaultOverrides","properties","as","Configuration","getConfigurationProperties","updateConfigurationModel","Object","keys","configurationProperties","configurationDefaultsOverrides","key","defaultOverrideValue","propertySchema","undefined","addValue","default","removeValue"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/platform/configuration/common/configurations.js"],"sourcesContent":["import { Disposable } from '../../../base/common/lifecycle.js';\nimport { ConfigurationModel } from './configurationModels.js';\nimport { Extensions } from './configurationRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport class DefaultConfiguration extends Disposable {\n    constructor() {\n        super(...arguments);\n        this._configurationModel = new ConfigurationModel();\n    }\n    get configurationModel() {\n        return this._configurationModel;\n    }\n    reload() {\n        this.resetConfigurationModel();\n        return this.configurationModel;\n    }\n    getConfigurationDefaultOverrides() {\n        return {};\n    }\n    resetConfigurationModel() {\n        this._configurationModel = new ConfigurationModel();\n        const properties = Registry.as(Extensions.Configuration).getConfigurationProperties();\n        this.updateConfigurationModel(Object.keys(properties), properties);\n    }\n    updateConfigurationModel(properties, configurationProperties) {\n        const configurationDefaultsOverrides = this.getConfigurationDefaultOverrides();\n        for (const key of properties) {\n            const defaultOverrideValue = configurationDefaultsOverrides[key];\n            const propertySchema = configurationProperties[key];\n            if (defaultOverrideValue !== undefined) {\n                this._configurationModel.addValue(key, defaultOverrideValue);\n            }\n            else if (propertySchema) {\n                this._configurationModel.addValue(key, propertySchema.default);\n            }\n            else {\n                this._configurationModel.removeValue(key);\n            }\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,mCAAmC;AAC9D,SAASC,kBAAkB,QAAQ,0BAA0B;AAC7D,SAASC,UAAU,QAAQ,4BAA4B;AACvD,SAASC,QAAQ,QAAQ,mCAAmC;AAC5D,OAAO,MAAMC,oBAAoB,SAASJ,UAAU,CAAC;EACjDK,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACC,mBAAmB,GAAG,IAAIN,kBAAkB,CAAC,CAAC;EACvD;EACA,IAAIO,kBAAkBA,CAAA,EAAG;IACrB,OAAO,IAAI,CAACD,mBAAmB;EACnC;EACAE,MAAMA,CAAA,EAAG;IACL,IAAI,CAACC,uBAAuB,CAAC,CAAC;IAC9B,OAAO,IAAI,CAACF,kBAAkB;EAClC;EACAG,gCAAgCA,CAAA,EAAG;IAC/B,OAAO,CAAC,CAAC;EACb;EACAD,uBAAuBA,CAAA,EAAG;IACtB,IAAI,CAACH,mBAAmB,GAAG,IAAIN,kBAAkB,CAAC,CAAC;IACnD,MAAMW,UAAU,GAAGT,QAAQ,CAACU,EAAE,CAACX,UAAU,CAACY,aAAa,CAAC,CAACC,0BAA0B,CAAC,CAAC;IACrF,IAAI,CAACC,wBAAwB,CAACC,MAAM,CAACC,IAAI,CAACN,UAAU,CAAC,EAAEA,UAAU,CAAC;EACtE;EACAI,wBAAwBA,CAACJ,UAAU,EAAEO,uBAAuB,EAAE;IAC1D,MAAMC,8BAA8B,GAAG,IAAI,CAACT,gCAAgC,CAAC,CAAC;IAC9E,KAAK,MAAMU,GAAG,IAAIT,UAAU,EAAE;MAC1B,MAAMU,oBAAoB,GAAGF,8BAA8B,CAACC,GAAG,CAAC;MAChE,MAAME,cAAc,GAAGJ,uBAAuB,CAACE,GAAG,CAAC;MACnD,IAAIC,oBAAoB,KAAKE,SAAS,EAAE;QACpC,IAAI,CAACjB,mBAAmB,CAACkB,QAAQ,CAACJ,GAAG,EAAEC,oBAAoB,CAAC;MAChE,CAAC,MACI,IAAIC,cAAc,EAAE;QACrB,IAAI,CAAChB,mBAAmB,CAACkB,QAAQ,CAACJ,GAAG,EAAEE,cAAc,CAACG,OAAO,CAAC;MAClE,CAAC,MACI;QACD,IAAI,CAACnB,mBAAmB,CAACoB,WAAW,CAACN,GAAG,CAAC;MAC7C;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}