{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.regexp.flags.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { IntervalTimer, timeout } from '../../../base/common/async.js';\nimport { Disposable, dispose, toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { SimpleWorkerClient, logOnceWebWorkerWarning } from '../../../base/common/worker/simpleWorker.js';\nimport { DefaultWorkerFactory } from '../../../base/browser/defaultWorkerFactory.js';\nimport { Range } from '../../common/core/range.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { EditorSimpleWorker } from '../../common/services/editorSimpleWorker.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ITextResourceConfigurationService } from '../../common/services/textResourceConfiguration.js';\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { canceled } from '../../../base/common/errors.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { MovedText } from '../../common/diff/linesDiffComputer.js';\nimport { DetailedLineRangeMapping, RangeMapping, LineRangeMapping } from '../../common/diff/rangeMapping.js';\nimport { LineRange } from '../../common/core/lineRange.js';\nimport { $window } from '../../../base/browser/window.js';\nimport { WindowIntervalTimer } from '../../../base/browser/dom.js';\n/**\n * Stop syncing a model to the worker if it was not needed for 1 min.\n */\nconst STOP_SYNC_MODEL_DELTA_TIME_MS = 60 * 1000;\n/**\n * Stop the worker if it was not needed for 5 min.\n */\nconst STOP_WORKER_DELTA_TIME_MS = 5 * 60 * 1000;\nfunction canSyncModel(modelService, resource) {\n  const model = modelService.getModel(resource);\n  if (!model) {\n    return false;\n  }\n  if (model.isTooLargeForSyncing()) {\n    return false;\n  }\n  return true;\n}\nlet EditorWorkerService = class EditorWorkerService extends Disposable {\n  constructor(modelService, configurationService, logService, languageConfigurationService, languageFeaturesService) {\n    super();\n    this._modelService = modelService;\n    this._workerManager = this._register(new WorkerManager(this._modelService, languageConfigurationService));\n    this._logService = logService;\n    // register default link-provider and default completions-provider\n    this._register(languageFeaturesService.linkProvider.register({\n      language: '*',\n      hasAccessToAllModels: true\n    }, {\n      provideLinks: (model, token) => {\n        if (!canSyncModel(this._modelService, model.uri)) {\n          return Promise.resolve({\n            links: []\n          }); // File too large\n        }\n        return this._workerManager.withWorker().then(client => client.computeLinks(model.uri)).then(links => {\n          return links && {\n            links\n          };\n        });\n      }\n    }));\n    this._register(languageFeaturesService.completionProvider.register('*', new WordBasedCompletionItemProvider(this._workerManager, configurationService, this._modelService, languageConfigurationService)));\n  }\n  dispose() {\n    super.dispose();\n  }\n  canComputeUnicodeHighlights(uri) {\n    return canSyncModel(this._modelService, uri);\n  }\n  computedUnicodeHighlights(uri, options, range) {\n    return this._workerManager.withWorker().then(client => client.computedUnicodeHighlights(uri, options, range));\n  }\n  async computeDiff(original, modified, options, algorithm) {\n    const result = await this._workerManager.withWorker().then(client => client.computeDiff(original, modified, options, algorithm));\n    if (!result) {\n      return null;\n    }\n    // Convert from space efficient JSON data to rich objects.\n    const diff = {\n      identical: result.identical,\n      quitEarly: result.quitEarly,\n      changes: toLineRangeMappings(result.changes),\n      moves: result.moves.map(m => new MovedText(new LineRangeMapping(new LineRange(m[0], m[1]), new LineRange(m[2], m[3])), toLineRangeMappings(m[4])))\n    };\n    return diff;\n    function toLineRangeMappings(changes) {\n      return changes.map(c => {\n        var _a;\n        return new DetailedLineRangeMapping(new LineRange(c[0], c[1]), new LineRange(c[2], c[3]), (_a = c[4]) === null || _a === void 0 ? void 0 : _a.map(c => new RangeMapping(new Range(c[0], c[1], c[2], c[3]), new Range(c[4], c[5], c[6], c[7]))));\n      });\n    }\n  }\n  computeMoreMinimalEdits(resource, edits, pretty = false) {\n    if (isNonEmptyArray(edits)) {\n      if (!canSyncModel(this._modelService, resource)) {\n        return Promise.resolve(edits); // File too large\n      }\n      const sw = StopWatch.create();\n      const result = this._workerManager.withWorker().then(client => client.computeMoreMinimalEdits(resource, edits, pretty));\n      result.finally(() => this._logService.trace('FORMAT#computeMoreMinimalEdits', resource.toString(true), sw.elapsed()));\n      return Promise.race([result, timeout(1000).then(() => edits)]);\n    } else {\n      return Promise.resolve(undefined);\n    }\n  }\n  canNavigateValueSet(resource) {\n    return canSyncModel(this._modelService, resource);\n  }\n  navigateValueSet(resource, range, up) {\n    return this._workerManager.withWorker().then(client => client.navigateValueSet(resource, range, up));\n  }\n  canComputeWordRanges(resource) {\n    return canSyncModel(this._modelService, resource);\n  }\n  computeWordRanges(resource, range) {\n    return this._workerManager.withWorker().then(client => client.computeWordRanges(resource, range));\n  }\n};\nEditorWorkerService = __decorate([__param(0, IModelService), __param(1, ITextResourceConfigurationService), __param(2, ILogService), __param(3, ILanguageConfigurationService), __param(4, ILanguageFeaturesService)], EditorWorkerService);\nexport { EditorWorkerService };\nclass WordBasedCompletionItemProvider {\n  constructor(workerManager, configurationService, modelService, languageConfigurationService) {\n    this.languageConfigurationService = languageConfigurationService;\n    this._debugDisplayName = 'wordbasedCompletions';\n    this._workerManager = workerManager;\n    this._configurationService = configurationService;\n    this._modelService = modelService;\n  }\n  async provideCompletionItems(model, position) {\n    const config = this._configurationService.getValue(model.uri, position, 'editor');\n    if (config.wordBasedSuggestions === 'off') {\n      return undefined;\n    }\n    const models = [];\n    if (config.wordBasedSuggestions === 'currentDocument') {\n      // only current file and only if not too large\n      if (canSyncModel(this._modelService, model.uri)) {\n        models.push(model.uri);\n      }\n    } else {\n      // either all files or files of same language\n      for (const candidate of this._modelService.getModels()) {\n        if (!canSyncModel(this._modelService, candidate.uri)) {\n          continue;\n        }\n        if (candidate === model) {\n          models.unshift(candidate.uri);\n        } else if (config.wordBasedSuggestions === 'allDocuments' || candidate.getLanguageId() === model.getLanguageId()) {\n          models.push(candidate.uri);\n        }\n      }\n    }\n    if (models.length === 0) {\n      return undefined; // File too large, no other files\n    }\n    const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n    const word = model.getWordAtPosition(position);\n    const replace = !word ? Range.fromPositions(position) : new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n    const insert = replace.setEndPosition(position.lineNumber, position.column);\n    const client = await this._workerManager.withWorker();\n    const data = await client.textualSuggest(models, word === null || word === void 0 ? void 0 : word.word, wordDefRegExp);\n    if (!data) {\n      return undefined;\n    }\n    return {\n      duration: data.duration,\n      suggestions: data.words.map(word => {\n        return {\n          kind: 18 /* languages.CompletionItemKind.Text */,\n          label: word,\n          insertText: word,\n          range: {\n            insert,\n            replace\n          }\n        };\n      })\n    };\n  }\n}\nclass WorkerManager extends Disposable {\n  constructor(modelService, languageConfigurationService) {\n    super();\n    this.languageConfigurationService = languageConfigurationService;\n    this._modelService = modelService;\n    this._editorWorkerClient = null;\n    this._lastWorkerUsedTime = new Date().getTime();\n    const stopWorkerInterval = this._register(new WindowIntervalTimer());\n    stopWorkerInterval.cancelAndSet(() => this._checkStopIdleWorker(), Math.round(STOP_WORKER_DELTA_TIME_MS / 2), $window);\n    this._register(this._modelService.onModelRemoved(_ => this._checkStopEmptyWorker()));\n  }\n  dispose() {\n    if (this._editorWorkerClient) {\n      this._editorWorkerClient.dispose();\n      this._editorWorkerClient = null;\n    }\n    super.dispose();\n  }\n  /**\n   * Check if the model service has no more models and stop the worker if that is the case.\n   */\n  _checkStopEmptyWorker() {\n    if (!this._editorWorkerClient) {\n      return;\n    }\n    const models = this._modelService.getModels();\n    if (models.length === 0) {\n      // There are no more models => nothing possible for me to do\n      this._editorWorkerClient.dispose();\n      this._editorWorkerClient = null;\n    }\n  }\n  /**\n   * Check if the worker has been idle for a while and then stop it.\n   */\n  _checkStopIdleWorker() {\n    if (!this._editorWorkerClient) {\n      return;\n    }\n    const timeSinceLastWorkerUsedTime = new Date().getTime() - this._lastWorkerUsedTime;\n    if (timeSinceLastWorkerUsedTime > STOP_WORKER_DELTA_TIME_MS) {\n      this._editorWorkerClient.dispose();\n      this._editorWorkerClient = null;\n    }\n  }\n  withWorker() {\n    this._lastWorkerUsedTime = new Date().getTime();\n    if (!this._editorWorkerClient) {\n      this._editorWorkerClient = new EditorWorkerClient(this._modelService, false, 'editorWorkerService', this.languageConfigurationService);\n    }\n    return Promise.resolve(this._editorWorkerClient);\n  }\n}\nclass EditorModelManager extends Disposable {\n  constructor(proxy, modelService, keepIdleModels) {\n    super();\n    this._syncedModels = Object.create(null);\n    this._syncedModelsLastUsedTime = Object.create(null);\n    this._proxy = proxy;\n    this._modelService = modelService;\n    if (!keepIdleModels) {\n      const timer = new IntervalTimer();\n      timer.cancelAndSet(() => this._checkStopModelSync(), Math.round(STOP_SYNC_MODEL_DELTA_TIME_MS / 2));\n      this._register(timer);\n    }\n  }\n  dispose() {\n    for (const modelUrl in this._syncedModels) {\n      dispose(this._syncedModels[modelUrl]);\n    }\n    this._syncedModels = Object.create(null);\n    this._syncedModelsLastUsedTime = Object.create(null);\n    super.dispose();\n  }\n  ensureSyncedResources(resources, forceLargeModels) {\n    for (const resource of resources) {\n      const resourceStr = resource.toString();\n      if (!this._syncedModels[resourceStr]) {\n        this._beginModelSync(resource, forceLargeModels);\n      }\n      if (this._syncedModels[resourceStr]) {\n        this._syncedModelsLastUsedTime[resourceStr] = new Date().getTime();\n      }\n    }\n  }\n  _checkStopModelSync() {\n    const currentTime = new Date().getTime();\n    const toRemove = [];\n    for (const modelUrl in this._syncedModelsLastUsedTime) {\n      const elapsedTime = currentTime - this._syncedModelsLastUsedTime[modelUrl];\n      if (elapsedTime > STOP_SYNC_MODEL_DELTA_TIME_MS) {\n        toRemove.push(modelUrl);\n      }\n    }\n    for (const e of toRemove) {\n      this._stopModelSync(e);\n    }\n  }\n  _beginModelSync(resource, forceLargeModels) {\n    const model = this._modelService.getModel(resource);\n    if (!model) {\n      return;\n    }\n    if (!forceLargeModels && model.isTooLargeForSyncing()) {\n      return;\n    }\n    const modelUrl = resource.toString();\n    this._proxy.acceptNewModel({\n      url: model.uri.toString(),\n      lines: model.getLinesContent(),\n      EOL: model.getEOL(),\n      versionId: model.getVersionId()\n    });\n    const toDispose = new DisposableStore();\n    toDispose.add(model.onDidChangeContent(e => {\n      this._proxy.acceptModelChanged(modelUrl.toString(), e);\n    }));\n    toDispose.add(model.onWillDispose(() => {\n      this._stopModelSync(modelUrl);\n    }));\n    toDispose.add(toDisposable(() => {\n      this._proxy.acceptRemovedModel(modelUrl);\n    }));\n    this._syncedModels[modelUrl] = toDispose;\n  }\n  _stopModelSync(modelUrl) {\n    const toDispose = this._syncedModels[modelUrl];\n    delete this._syncedModels[modelUrl];\n    delete this._syncedModelsLastUsedTime[modelUrl];\n    dispose(toDispose);\n  }\n}\nclass SynchronousWorkerClient {\n  constructor(instance) {\n    this._instance = instance;\n    this._proxyObj = Promise.resolve(this._instance);\n  }\n  dispose() {\n    this._instance.dispose();\n  }\n  getProxyObject() {\n    return this._proxyObj;\n  }\n}\nexport class EditorWorkerHost {\n  constructor(workerClient) {\n    this._workerClient = workerClient;\n  }\n  // foreign host request\n  fhr(method, args) {\n    return this._workerClient.fhr(method, args);\n  }\n}\nexport class EditorWorkerClient extends Disposable {\n  constructor(modelService, keepIdleModels, label, languageConfigurationService) {\n    super();\n    this.languageConfigurationService = languageConfigurationService;\n    this._disposed = false;\n    this._modelService = modelService;\n    this._keepIdleModels = keepIdleModels;\n    this._workerFactory = new DefaultWorkerFactory(label);\n    this._worker = null;\n    this._modelManager = null;\n  }\n  // foreign host request\n  fhr(method, args) {\n    throw new Error(`Not implemented!`);\n  }\n  _getOrCreateWorker() {\n    if (!this._worker) {\n      try {\n        this._worker = this._register(new SimpleWorkerClient(this._workerFactory, 'vs/editor/common/services/editorSimpleWorker', new EditorWorkerHost(this)));\n      } catch (err) {\n        logOnceWebWorkerWarning(err);\n        this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\n      }\n    }\n    return this._worker;\n  }\n  _getProxy() {\n    return this._getOrCreateWorker().getProxyObject().then(undefined, err => {\n      logOnceWebWorkerWarning(err);\n      this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\n      return this._getOrCreateWorker().getProxyObject();\n    });\n  }\n  _getOrCreateModelManager(proxy) {\n    if (!this._modelManager) {\n      this._modelManager = this._register(new EditorModelManager(proxy, this._modelService, this._keepIdleModels));\n    }\n    return this._modelManager;\n  }\n  async _withSyncedResources(resources, forceLargeModels = false) {\n    if (this._disposed) {\n      return Promise.reject(canceled());\n    }\n    return this._getProxy().then(proxy => {\n      this._getOrCreateModelManager(proxy).ensureSyncedResources(resources, forceLargeModels);\n      return proxy;\n    });\n  }\n  computedUnicodeHighlights(uri, options, range) {\n    return this._withSyncedResources([uri]).then(proxy => {\n      return proxy.computeUnicodeHighlights(uri.toString(), options, range);\n    });\n  }\n  computeDiff(original, modified, options, algorithm) {\n    return this._withSyncedResources([original, modified], /* forceLargeModels */true).then(proxy => {\n      return proxy.computeDiff(original.toString(), modified.toString(), options, algorithm);\n    });\n  }\n  computeMoreMinimalEdits(resource, edits, pretty) {\n    return this._withSyncedResources([resource]).then(proxy => {\n      return proxy.computeMoreMinimalEdits(resource.toString(), edits, pretty);\n    });\n  }\n  computeLinks(resource) {\n    return this._withSyncedResources([resource]).then(proxy => {\n      return proxy.computeLinks(resource.toString());\n    });\n  }\n  computeDefaultDocumentColors(resource) {\n    return this._withSyncedResources([resource]).then(proxy => {\n      return proxy.computeDefaultDocumentColors(resource.toString());\n    });\n  }\n  async textualSuggest(resources, leadingWord, wordDefRegExp) {\n    const proxy = await this._withSyncedResources(resources);\n    const wordDef = wordDefRegExp.source;\n    const wordDefFlags = wordDefRegExp.flags;\n    return proxy.textualSuggest(resources.map(r => r.toString()), leadingWord, wordDef, wordDefFlags);\n  }\n  computeWordRanges(resource, range) {\n    return this._withSyncedResources([resource]).then(proxy => {\n      const model = this._modelService.getModel(resource);\n      if (!model) {\n        return Promise.resolve(null);\n      }\n      const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n      const wordDef = wordDefRegExp.source;\n      const wordDefFlags = wordDefRegExp.flags;\n      return proxy.computeWordRanges(resource.toString(), range, wordDef, wordDefFlags);\n    });\n  }\n  navigateValueSet(resource, range, up) {\n    return this._withSyncedResources([resource]).then(proxy => {\n      const model = this._modelService.getModel(resource);\n      if (!model) {\n        return null;\n      }\n      const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n      const wordDef = wordDefRegExp.source;\n      const wordDefFlags = wordDefRegExp.flags;\n      return proxy.navigateValueSet(resource.toString(), range, up, wordDef, wordDefFlags);\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._disposed = true;\n  }\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","IntervalTimer","timeout","Disposable","dispose","toDisposable","DisposableStore","SimpleWorkerClient","logOnceWebWorkerWarning","DefaultWorkerFactory","Range","ILanguageConfigurationService","EditorSimpleWorker","IModelService","ITextResourceConfigurationService","isNonEmptyArray","ILogService","StopWatch","canceled","ILanguageFeaturesService","MovedText","DetailedLineRangeMapping","RangeMapping","LineRangeMapping","LineRange","$window","WindowIntervalTimer","STOP_SYNC_MODEL_DELTA_TIME_MS","STOP_WORKER_DELTA_TIME_MS","canSyncModel","modelService","resource","model","getModel","isTooLargeForSyncing","EditorWorkerService","constructor","configurationService","logService","languageConfigurationService","languageFeaturesService","_modelService","_workerManager","_register","WorkerManager","_logService","linkProvider","register","language","hasAccessToAllModels","provideLinks","token","uri","Promise","resolve","links","withWorker","then","client","computeLinks","completionProvider","WordBasedCompletionItemProvider","canComputeUnicodeHighlights","computedUnicodeHighlights","options","range","computeDiff","original","modified","algorithm","result","diff","identical","quitEarly","changes","toLineRangeMappings","moves","map","m","_a","computeMoreMinimalEdits","edits","pretty","sw","create","finally","trace","toString","elapsed","race","undefined","canNavigateValueSet","navigateValueSet","up","canComputeWordRanges","computeWordRanges","workerManager","_debugDisplayName","_configurationService","provideCompletionItems","position","config","getValue","wordBasedSuggestions","models","push","candidate","getModels","unshift","getLanguageId","wordDefRegExp","getLanguageConfiguration","getWordDefinition","word","getWordAtPosition","replace","fromPositions","lineNumber","startColumn","endColumn","insert","setEndPosition","column","data","textualSuggest","duration","suggestions","words","kind","label","insertText","_editorWorkerClient","_lastWorkerUsedTime","Date","getTime","stopWorkerInterval","cancelAndSet","_checkStopIdleWorker","Math","round","onModelRemoved","_","_checkStopEmptyWorker","timeSinceLastWorkerUsedTime","EditorWorkerClient","EditorModelManager","proxy","keepIdleModels","_syncedModels","_syncedModelsLastUsedTime","_proxy","timer","_checkStopModelSync","modelUrl","ensureSyncedResources","resources","forceLargeModels","resourceStr","_beginModelSync","currentTime","toRemove","elapsedTime","e","_stopModelSync","acceptNewModel","url","lines","getLinesContent","EOL","getEOL","versionId","getVersionId","toDispose","add","onDidChangeContent","acceptModelChanged","onWillDispose","acceptRemovedModel","SynchronousWorkerClient","instance","_instance","_proxyObj","getProxyObject","EditorWorkerHost","workerClient","_workerClient","fhr","method","args","_disposed","_keepIdleModels","_workerFactory","_worker","_modelManager","Error","_getOrCreateWorker","err","_getProxy","_getOrCreateModelManager","_withSyncedResources","reject","computeUnicodeHighlights","computeDefaultDocumentColors","leadingWord","wordDef","source","wordDefFlags","flags"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/browser/services/editorWorkerService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { IntervalTimer, timeout } from '../../../base/common/async.js';\nimport { Disposable, dispose, toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { SimpleWorkerClient, logOnceWebWorkerWarning } from '../../../base/common/worker/simpleWorker.js';\nimport { DefaultWorkerFactory } from '../../../base/browser/defaultWorkerFactory.js';\nimport { Range } from '../../common/core/range.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { EditorSimpleWorker } from '../../common/services/editorSimpleWorker.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ITextResourceConfigurationService } from '../../common/services/textResourceConfiguration.js';\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { canceled } from '../../../base/common/errors.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { MovedText } from '../../common/diff/linesDiffComputer.js';\nimport { DetailedLineRangeMapping, RangeMapping, LineRangeMapping } from '../../common/diff/rangeMapping.js';\nimport { LineRange } from '../../common/core/lineRange.js';\nimport { $window } from '../../../base/browser/window.js';\nimport { WindowIntervalTimer } from '../../../base/browser/dom.js';\n/**\n * Stop syncing a model to the worker if it was not needed for 1 min.\n */\nconst STOP_SYNC_MODEL_DELTA_TIME_MS = 60 * 1000;\n/**\n * Stop the worker if it was not needed for 5 min.\n */\nconst STOP_WORKER_DELTA_TIME_MS = 5 * 60 * 1000;\nfunction canSyncModel(modelService, resource) {\n    const model = modelService.getModel(resource);\n    if (!model) {\n        return false;\n    }\n    if (model.isTooLargeForSyncing()) {\n        return false;\n    }\n    return true;\n}\nlet EditorWorkerService = class EditorWorkerService extends Disposable {\n    constructor(modelService, configurationService, logService, languageConfigurationService, languageFeaturesService) {\n        super();\n        this._modelService = modelService;\n        this._workerManager = this._register(new WorkerManager(this._modelService, languageConfigurationService));\n        this._logService = logService;\n        // register default link-provider and default completions-provider\n        this._register(languageFeaturesService.linkProvider.register({ language: '*', hasAccessToAllModels: true }, {\n            provideLinks: (model, token) => {\n                if (!canSyncModel(this._modelService, model.uri)) {\n                    return Promise.resolve({ links: [] }); // File too large\n                }\n                return this._workerManager.withWorker().then(client => client.computeLinks(model.uri)).then(links => {\n                    return links && { links };\n                });\n            }\n        }));\n        this._register(languageFeaturesService.completionProvider.register('*', new WordBasedCompletionItemProvider(this._workerManager, configurationService, this._modelService, languageConfigurationService)));\n    }\n    dispose() {\n        super.dispose();\n    }\n    canComputeUnicodeHighlights(uri) {\n        return canSyncModel(this._modelService, uri);\n    }\n    computedUnicodeHighlights(uri, options, range) {\n        return this._workerManager.withWorker().then(client => client.computedUnicodeHighlights(uri, options, range));\n    }\n    async computeDiff(original, modified, options, algorithm) {\n        const result = await this._workerManager.withWorker().then(client => client.computeDiff(original, modified, options, algorithm));\n        if (!result) {\n            return null;\n        }\n        // Convert from space efficient JSON data to rich objects.\n        const diff = {\n            identical: result.identical,\n            quitEarly: result.quitEarly,\n            changes: toLineRangeMappings(result.changes),\n            moves: result.moves.map(m => new MovedText(new LineRangeMapping(new LineRange(m[0], m[1]), new LineRange(m[2], m[3])), toLineRangeMappings(m[4])))\n        };\n        return diff;\n        function toLineRangeMappings(changes) {\n            return changes.map((c) => {\n                var _a;\n                return new DetailedLineRangeMapping(new LineRange(c[0], c[1]), new LineRange(c[2], c[3]), (_a = c[4]) === null || _a === void 0 ? void 0 : _a.map((c) => new RangeMapping(new Range(c[0], c[1], c[2], c[3]), new Range(c[4], c[5], c[6], c[7]))));\n            });\n        }\n    }\n    computeMoreMinimalEdits(resource, edits, pretty = false) {\n        if (isNonEmptyArray(edits)) {\n            if (!canSyncModel(this._modelService, resource)) {\n                return Promise.resolve(edits); // File too large\n            }\n            const sw = StopWatch.create();\n            const result = this._workerManager.withWorker().then(client => client.computeMoreMinimalEdits(resource, edits, pretty));\n            result.finally(() => this._logService.trace('FORMAT#computeMoreMinimalEdits', resource.toString(true), sw.elapsed()));\n            return Promise.race([result, timeout(1000).then(() => edits)]);\n        }\n        else {\n            return Promise.resolve(undefined);\n        }\n    }\n    canNavigateValueSet(resource) {\n        return (canSyncModel(this._modelService, resource));\n    }\n    navigateValueSet(resource, range, up) {\n        return this._workerManager.withWorker().then(client => client.navigateValueSet(resource, range, up));\n    }\n    canComputeWordRanges(resource) {\n        return canSyncModel(this._modelService, resource);\n    }\n    computeWordRanges(resource, range) {\n        return this._workerManager.withWorker().then(client => client.computeWordRanges(resource, range));\n    }\n};\nEditorWorkerService = __decorate([\n    __param(0, IModelService),\n    __param(1, ITextResourceConfigurationService),\n    __param(2, ILogService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeaturesService)\n], EditorWorkerService);\nexport { EditorWorkerService };\nclass WordBasedCompletionItemProvider {\n    constructor(workerManager, configurationService, modelService, languageConfigurationService) {\n        this.languageConfigurationService = languageConfigurationService;\n        this._debugDisplayName = 'wordbasedCompletions';\n        this._workerManager = workerManager;\n        this._configurationService = configurationService;\n        this._modelService = modelService;\n    }\n    async provideCompletionItems(model, position) {\n        const config = this._configurationService.getValue(model.uri, position, 'editor');\n        if (config.wordBasedSuggestions === 'off') {\n            return undefined;\n        }\n        const models = [];\n        if (config.wordBasedSuggestions === 'currentDocument') {\n            // only current file and only if not too large\n            if (canSyncModel(this._modelService, model.uri)) {\n                models.push(model.uri);\n            }\n        }\n        else {\n            // either all files or files of same language\n            for (const candidate of this._modelService.getModels()) {\n                if (!canSyncModel(this._modelService, candidate.uri)) {\n                    continue;\n                }\n                if (candidate === model) {\n                    models.unshift(candidate.uri);\n                }\n                else if (config.wordBasedSuggestions === 'allDocuments' || candidate.getLanguageId() === model.getLanguageId()) {\n                    models.push(candidate.uri);\n                }\n            }\n        }\n        if (models.length === 0) {\n            return undefined; // File too large, no other files\n        }\n        const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n        const word = model.getWordAtPosition(position);\n        const replace = !word ? Range.fromPositions(position) : new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n        const insert = replace.setEndPosition(position.lineNumber, position.column);\n        const client = await this._workerManager.withWorker();\n        const data = await client.textualSuggest(models, word === null || word === void 0 ? void 0 : word.word, wordDefRegExp);\n        if (!data) {\n            return undefined;\n        }\n        return {\n            duration: data.duration,\n            suggestions: data.words.map((word) => {\n                return {\n                    kind: 18 /* languages.CompletionItemKind.Text */,\n                    label: word,\n                    insertText: word,\n                    range: { insert, replace }\n                };\n            }),\n        };\n    }\n}\nclass WorkerManager extends Disposable {\n    constructor(modelService, languageConfigurationService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._modelService = modelService;\n        this._editorWorkerClient = null;\n        this._lastWorkerUsedTime = (new Date()).getTime();\n        const stopWorkerInterval = this._register(new WindowIntervalTimer());\n        stopWorkerInterval.cancelAndSet(() => this._checkStopIdleWorker(), Math.round(STOP_WORKER_DELTA_TIME_MS / 2), $window);\n        this._register(this._modelService.onModelRemoved(_ => this._checkStopEmptyWorker()));\n    }\n    dispose() {\n        if (this._editorWorkerClient) {\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n        super.dispose();\n    }\n    /**\n     * Check if the model service has no more models and stop the worker if that is the case.\n     */\n    _checkStopEmptyWorker() {\n        if (!this._editorWorkerClient) {\n            return;\n        }\n        const models = this._modelService.getModels();\n        if (models.length === 0) {\n            // There are no more models => nothing possible for me to do\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n    }\n    /**\n     * Check if the worker has been idle for a while and then stop it.\n     */\n    _checkStopIdleWorker() {\n        if (!this._editorWorkerClient) {\n            return;\n        }\n        const timeSinceLastWorkerUsedTime = (new Date()).getTime() - this._lastWorkerUsedTime;\n        if (timeSinceLastWorkerUsedTime > STOP_WORKER_DELTA_TIME_MS) {\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n    }\n    withWorker() {\n        this._lastWorkerUsedTime = (new Date()).getTime();\n        if (!this._editorWorkerClient) {\n            this._editorWorkerClient = new EditorWorkerClient(this._modelService, false, 'editorWorkerService', this.languageConfigurationService);\n        }\n        return Promise.resolve(this._editorWorkerClient);\n    }\n}\nclass EditorModelManager extends Disposable {\n    constructor(proxy, modelService, keepIdleModels) {\n        super();\n        this._syncedModels = Object.create(null);\n        this._syncedModelsLastUsedTime = Object.create(null);\n        this._proxy = proxy;\n        this._modelService = modelService;\n        if (!keepIdleModels) {\n            const timer = new IntervalTimer();\n            timer.cancelAndSet(() => this._checkStopModelSync(), Math.round(STOP_SYNC_MODEL_DELTA_TIME_MS / 2));\n            this._register(timer);\n        }\n    }\n    dispose() {\n        for (const modelUrl in this._syncedModels) {\n            dispose(this._syncedModels[modelUrl]);\n        }\n        this._syncedModels = Object.create(null);\n        this._syncedModelsLastUsedTime = Object.create(null);\n        super.dispose();\n    }\n    ensureSyncedResources(resources, forceLargeModels) {\n        for (const resource of resources) {\n            const resourceStr = resource.toString();\n            if (!this._syncedModels[resourceStr]) {\n                this._beginModelSync(resource, forceLargeModels);\n            }\n            if (this._syncedModels[resourceStr]) {\n                this._syncedModelsLastUsedTime[resourceStr] = (new Date()).getTime();\n            }\n        }\n    }\n    _checkStopModelSync() {\n        const currentTime = (new Date()).getTime();\n        const toRemove = [];\n        for (const modelUrl in this._syncedModelsLastUsedTime) {\n            const elapsedTime = currentTime - this._syncedModelsLastUsedTime[modelUrl];\n            if (elapsedTime > STOP_SYNC_MODEL_DELTA_TIME_MS) {\n                toRemove.push(modelUrl);\n            }\n        }\n        for (const e of toRemove) {\n            this._stopModelSync(e);\n        }\n    }\n    _beginModelSync(resource, forceLargeModels) {\n        const model = this._modelService.getModel(resource);\n        if (!model) {\n            return;\n        }\n        if (!forceLargeModels && model.isTooLargeForSyncing()) {\n            return;\n        }\n        const modelUrl = resource.toString();\n        this._proxy.acceptNewModel({\n            url: model.uri.toString(),\n            lines: model.getLinesContent(),\n            EOL: model.getEOL(),\n            versionId: model.getVersionId()\n        });\n        const toDispose = new DisposableStore();\n        toDispose.add(model.onDidChangeContent((e) => {\n            this._proxy.acceptModelChanged(modelUrl.toString(), e);\n        }));\n        toDispose.add(model.onWillDispose(() => {\n            this._stopModelSync(modelUrl);\n        }));\n        toDispose.add(toDisposable(() => {\n            this._proxy.acceptRemovedModel(modelUrl);\n        }));\n        this._syncedModels[modelUrl] = toDispose;\n    }\n    _stopModelSync(modelUrl) {\n        const toDispose = this._syncedModels[modelUrl];\n        delete this._syncedModels[modelUrl];\n        delete this._syncedModelsLastUsedTime[modelUrl];\n        dispose(toDispose);\n    }\n}\nclass SynchronousWorkerClient {\n    constructor(instance) {\n        this._instance = instance;\n        this._proxyObj = Promise.resolve(this._instance);\n    }\n    dispose() {\n        this._instance.dispose();\n    }\n    getProxyObject() {\n        return this._proxyObj;\n    }\n}\nexport class EditorWorkerHost {\n    constructor(workerClient) {\n        this._workerClient = workerClient;\n    }\n    // foreign host request\n    fhr(method, args) {\n        return this._workerClient.fhr(method, args);\n    }\n}\nexport class EditorWorkerClient extends Disposable {\n    constructor(modelService, keepIdleModels, label, languageConfigurationService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._disposed = false;\n        this._modelService = modelService;\n        this._keepIdleModels = keepIdleModels;\n        this._workerFactory = new DefaultWorkerFactory(label);\n        this._worker = null;\n        this._modelManager = null;\n    }\n    // foreign host request\n    fhr(method, args) {\n        throw new Error(`Not implemented!`);\n    }\n    _getOrCreateWorker() {\n        if (!this._worker) {\n            try {\n                this._worker = this._register(new SimpleWorkerClient(this._workerFactory, 'vs/editor/common/services/editorSimpleWorker', new EditorWorkerHost(this)));\n            }\n            catch (err) {\n                logOnceWebWorkerWarning(err);\n                this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\n            }\n        }\n        return this._worker;\n    }\n    _getProxy() {\n        return this._getOrCreateWorker().getProxyObject().then(undefined, (err) => {\n            logOnceWebWorkerWarning(err);\n            this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\n            return this._getOrCreateWorker().getProxyObject();\n        });\n    }\n    _getOrCreateModelManager(proxy) {\n        if (!this._modelManager) {\n            this._modelManager = this._register(new EditorModelManager(proxy, this._modelService, this._keepIdleModels));\n        }\n        return this._modelManager;\n    }\n    async _withSyncedResources(resources, forceLargeModels = false) {\n        if (this._disposed) {\n            return Promise.reject(canceled());\n        }\n        return this._getProxy().then((proxy) => {\n            this._getOrCreateModelManager(proxy).ensureSyncedResources(resources, forceLargeModels);\n            return proxy;\n        });\n    }\n    computedUnicodeHighlights(uri, options, range) {\n        return this._withSyncedResources([uri]).then(proxy => {\n            return proxy.computeUnicodeHighlights(uri.toString(), options, range);\n        });\n    }\n    computeDiff(original, modified, options, algorithm) {\n        return this._withSyncedResources([original, modified], /* forceLargeModels */ true).then(proxy => {\n            return proxy.computeDiff(original.toString(), modified.toString(), options, algorithm);\n        });\n    }\n    computeMoreMinimalEdits(resource, edits, pretty) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            return proxy.computeMoreMinimalEdits(resource.toString(), edits, pretty);\n        });\n    }\n    computeLinks(resource) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            return proxy.computeLinks(resource.toString());\n        });\n    }\n    computeDefaultDocumentColors(resource) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            return proxy.computeDefaultDocumentColors(resource.toString());\n        });\n    }\n    async textualSuggest(resources, leadingWord, wordDefRegExp) {\n        const proxy = await this._withSyncedResources(resources);\n        const wordDef = wordDefRegExp.source;\n        const wordDefFlags = wordDefRegExp.flags;\n        return proxy.textualSuggest(resources.map(r => r.toString()), leadingWord, wordDef, wordDefFlags);\n    }\n    computeWordRanges(resource, range) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            const model = this._modelService.getModel(resource);\n            if (!model) {\n                return Promise.resolve(null);\n            }\n            const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n            const wordDef = wordDefRegExp.source;\n            const wordDefFlags = wordDefRegExp.flags;\n            return proxy.computeWordRanges(resource.toString(), range, wordDef, wordDefFlags);\n        });\n    }\n    navigateValueSet(resource, range, up) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            const model = this._modelService.getModel(resource);\n            if (!model) {\n                return null;\n            }\n            const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n            const wordDef = wordDefRegExp.source;\n            const wordDefFlags = wordDefRegExp.flags;\n            return proxy.navigateValueSet(resource.toString(), range, up, wordDef, wordDefFlags);\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._disposed = true;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}