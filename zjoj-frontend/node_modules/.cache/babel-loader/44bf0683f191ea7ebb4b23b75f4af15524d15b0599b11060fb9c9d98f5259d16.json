{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nimport { isArray } from \"../_utils/is.js\";\nimport { getDocumentSize } from \"../_utils/dom.js\";\nconst getViewPortSize = () => {\n  const {\n    height,\n    width\n  } = getDocumentSize();\n  return {\n    width: Math.min(width, window.innerWidth),\n    height: Math.min(height, window.innerHeight)\n  };\n};\nconst getElementScrollRect = (element, containerRect) => {\n  var _a, _b;\n  const rect = element.getBoundingClientRect();\n  return {\n    top: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    right: rect.right,\n    scrollTop: rect.top - containerRect.top,\n    scrollBottom: rect.bottom - containerRect.top,\n    scrollLeft: rect.left - containerRect.left,\n    scrollRight: rect.right - containerRect.left,\n    width: (_a = element.offsetWidth) != null ? _a : element.clientWidth,\n    height: (_b = element.offsetHeight) != null ? _b : element.clientHeight\n  };\n};\nconst getBoundaryPosition = position => {\n  switch (position) {\n    case \"top\":\n    case \"tl\":\n    case \"tr\":\n      return \"top\";\n    case \"bottom\":\n    case \"bl\":\n    case \"br\":\n      return \"bottom\";\n    case \"left\":\n    case \"lt\":\n    case \"lb\":\n      return \"left\";\n    case \"right\":\n    case \"rt\":\n    case \"rb\":\n      return \"right\";\n    default:\n      return \"top\";\n  }\n};\nconst changePosition = (position, direction) => {\n  switch (direction) {\n    case \"top\":\n      switch (position) {\n        case \"bottom\":\n          return \"top\";\n        case \"bl\":\n          return \"tl\";\n        case \"br\":\n          return \"tr\";\n        default:\n          return position;\n      }\n    case \"bottom\":\n      switch (position) {\n        case \"top\":\n          return \"bottom\";\n        case \"tl\":\n          return \"bl\";\n        case \"tr\":\n          return \"br\";\n        default:\n          return position;\n      }\n    case \"left\":\n      switch (position) {\n        case \"right\":\n          return \"left\";\n        case \"rt\":\n          return \"lt\";\n        case \"rb\":\n          return \"lb\";\n        default:\n          return position;\n      }\n    case \"right\":\n      switch (position) {\n        case \"left\":\n          return \"right\";\n        case \"lt\":\n          return \"rt\";\n        case \"lb\":\n          return \"rb\";\n        default:\n          return position;\n      }\n    default:\n      return position;\n  }\n};\nconst getFitPosition = (position, popupPosition, {\n  containerRect,\n  triggerRect,\n  popupRect,\n  offset,\n  translate\n}) => {\n  const direction = getBoundaryPosition(position);\n  const viewPortSize = getViewPortSize();\n  const viewPortBoundary = {\n    top: containerRect.top + popupPosition.top,\n    bottom: viewPortSize.height - (containerRect.top + popupPosition.top + popupRect.height),\n    left: containerRect.left + popupPosition.left,\n    right: viewPortSize.width - (containerRect.left + popupPosition.left + popupRect.width)\n  };\n  let finalPosition = position;\n  if (direction === \"top\" && viewPortBoundary.top < 0) {\n    if (triggerRect.top > popupRect.height) {\n      popupPosition.top = -containerRect.top;\n    } else {\n      const fitPosition = getPopupOffset(\"bottom\", triggerRect, popupRect, {\n        offset,\n        translate\n      });\n      if (viewPortSize.height - (containerRect.top + fitPosition.top + popupRect.height) > 0) {\n        finalPosition = changePosition(position, \"bottom\");\n        popupPosition.top = fitPosition.top;\n      }\n    }\n  }\n  if (direction === \"bottom\" && viewPortBoundary.bottom < 0) {\n    if (viewPortSize.height - triggerRect.bottom > popupRect.height) {\n      popupPosition.top = -containerRect.top + (viewPortSize.height - popupRect.height);\n    } else {\n      const fitPosition = getPopupOffset(\"top\", triggerRect, popupRect, {\n        offset,\n        translate\n      });\n      if (containerRect.top + fitPosition.top > 0) {\n        finalPosition = changePosition(position, \"top\");\n        popupPosition.top = fitPosition.top;\n      }\n    }\n  }\n  if (direction === \"left\" && viewPortBoundary.left < 0) {\n    if (triggerRect.left > popupRect.width) {\n      popupPosition.left = -containerRect.left;\n    } else {\n      const fitPosition = getPopupOffset(\"right\", triggerRect, popupRect, {\n        offset,\n        translate\n      });\n      if (viewPortSize.width - (containerRect.left + fitPosition.left + popupRect.width) > 0) {\n        finalPosition = changePosition(position, \"right\");\n        popupPosition.left = fitPosition.left;\n      }\n    }\n  }\n  if (direction === \"right\" && viewPortBoundary.right < 0) {\n    if (viewPortSize.width - triggerRect.right > popupRect.width) {\n      popupPosition.left = -containerRect.left + (viewPortSize.width - popupRect.width);\n    } else {\n      const fitPosition = getPopupOffset(\"left\", triggerRect, popupRect, {\n        offset,\n        translate\n      });\n      if (containerRect.left + fitPosition.left > 0) {\n        finalPosition = changePosition(position, \"left\");\n        popupPosition.left = fitPosition.left;\n      }\n    }\n  }\n  if (direction === \"top\" || direction === \"bottom\") {\n    if (viewPortBoundary.left < 0) {\n      popupPosition.left = -containerRect.left;\n    } else if (viewPortBoundary.right < 0) {\n      popupPosition.left = -containerRect.left + (viewPortSize.width - popupRect.width);\n    }\n  }\n  if (direction === \"left\" || direction === \"right\") {\n    if (viewPortBoundary.top < 0) {\n      popupPosition.top = -containerRect.top;\n    } else if (viewPortBoundary.bottom < 0) {\n      popupPosition.top = -containerRect.top + (viewPortSize.height - popupRect.height);\n    }\n  }\n  return {\n    popupPosition,\n    position: finalPosition\n  };\n};\nconst getPopupOffset = (position, triggerRect, popupRect, {\n  offset = 0,\n  translate = [0, 0]\n} = {}) => {\n  var _a;\n  const _translate = (_a = isArray(translate) ? translate : translate[position]) != null ? _a : [0, 0];\n  switch (position) {\n    case \"top\":\n      return {\n        left: triggerRect.scrollLeft + Math.round(triggerRect.width / 2) - Math.round(popupRect.width / 2) + _translate[0],\n        top: triggerRect.scrollTop - popupRect.height - offset + _translate[1]\n      };\n    case \"tl\":\n      return {\n        left: triggerRect.scrollLeft + _translate[0],\n        top: triggerRect.scrollTop - popupRect.height - offset + _translate[1]\n      };\n    case \"tr\":\n      return {\n        left: triggerRect.scrollRight - popupRect.width + _translate[0],\n        top: triggerRect.scrollTop - popupRect.height - offset + _translate[1]\n      };\n    case \"bottom\":\n      return {\n        left: triggerRect.scrollLeft + Math.round(triggerRect.width / 2) - Math.round(popupRect.width / 2) + _translate[0],\n        top: triggerRect.scrollBottom + offset + _translate[1]\n      };\n    case \"bl\":\n      return {\n        left: triggerRect.scrollLeft + _translate[0],\n        top: triggerRect.scrollBottom + offset + _translate[1]\n      };\n    case \"br\":\n      return {\n        left: triggerRect.scrollRight - popupRect.width + _translate[0],\n        top: triggerRect.scrollBottom + offset + _translate[1]\n      };\n    case \"left\":\n      return {\n        left: triggerRect.scrollLeft - popupRect.width - offset + _translate[0],\n        top: triggerRect.scrollTop + Math.round(triggerRect.height / 2) - Math.round(popupRect.height / 2) + _translate[1]\n      };\n    case \"lt\":\n      return {\n        left: triggerRect.scrollLeft - popupRect.width - offset + _translate[0],\n        top: triggerRect.scrollTop + _translate[1]\n      };\n    case \"lb\":\n      return {\n        left: triggerRect.scrollLeft - popupRect.width - offset + _translate[0],\n        top: triggerRect.scrollBottom - popupRect.height + _translate[1]\n      };\n    case \"right\":\n      return {\n        left: triggerRect.scrollRight + offset + _translate[0],\n        top: triggerRect.scrollTop + Math.round(triggerRect.height / 2) - Math.round(popupRect.height / 2) + _translate[1]\n      };\n    case \"rt\":\n      return {\n        left: triggerRect.scrollRight + offset + _translate[0],\n        top: triggerRect.scrollTop + _translate[1]\n      };\n    case \"rb\":\n      return {\n        left: triggerRect.scrollRight + offset + _translate[0],\n        top: triggerRect.scrollBottom - popupRect.height + _translate[1]\n      };\n    default:\n      return {\n        left: 0,\n        top: 0\n      };\n  }\n};\nconst getTransformOrigin = position => {\n  let originX = \"0\";\n  if ([\"top\", \"bottom\"].includes(position)) {\n    originX = \"50%\";\n  } else if ([\"left\", \"lt\", \"lb\", \"tr\", \"br\"].includes(position)) {\n    originX = \"100%\";\n  }\n  let originY = \"0\";\n  if ([\"left\", \"right\"].includes(position)) {\n    originY = \"50%\";\n  } else if ([\"top\", \"tl\", \"tr\", \"lt\", \"rt\"].includes(position)) {\n    originY = \"100%\";\n  }\n  return `${originX} ${originY}`;\n};\nconst getPopupStyle = (position, containerRect, triggerRect, popupRect, {\n  offset = 0,\n  translate = [0, 0],\n  customStyle = {},\n  autoFitPosition = false\n} = {}) => {\n  let finalPosition = position;\n  let popupPosition = getPopupOffset(position, triggerRect, popupRect, {\n    offset,\n    translate\n  });\n  if (autoFitPosition) {\n    const result = getFitPosition(position, popupPosition, {\n      containerRect,\n      popupRect,\n      triggerRect,\n      offset,\n      translate\n    });\n    popupPosition = result.popupPosition;\n    finalPosition = result.position;\n  }\n  const style = __spreadValues({\n    left: `${popupPosition.left}px`,\n    top: `${popupPosition.top}px`\n  }, customStyle);\n  return {\n    style,\n    position: finalPosition\n  };\n};\nconst getArrowStyle = (position, triggerRect, popupRect, {\n  customStyle = {}\n}) => {\n  if ([\"top\", \"tl\", \"tr\", \"bottom\", \"bl\", \"br\"].includes(position)) {\n    let offsetLeft = Math.abs(triggerRect.scrollLeft + triggerRect.width / 2 - popupRect.scrollLeft);\n    if (offsetLeft > popupRect.width - 8) {\n      if (triggerRect.width > popupRect.width) {\n        offsetLeft = popupRect.width / 2;\n      } else {\n        offsetLeft = popupRect.width - 8;\n      }\n    }\n    if ([\"top\", \"tl\", \"tr\"].includes(position)) {\n      return __spreadValues({\n        left: `${offsetLeft}px`,\n        bottom: \"0\",\n        transform: \"translate(-50%,50%) rotate(45deg)\"\n      }, customStyle);\n    }\n    return __spreadValues({\n      left: `${offsetLeft}px`,\n      top: \"0\",\n      transform: \"translate(-50%,-50%) rotate(45deg)\"\n    }, customStyle);\n  }\n  let offsetTop = Math.abs(triggerRect.scrollTop + triggerRect.height / 2 - popupRect.scrollTop);\n  if (offsetTop > popupRect.height - 8) {\n    if (triggerRect.height > popupRect.height) {\n      offsetTop = popupRect.height / 2;\n    } else {\n      offsetTop = popupRect.height - 8;\n    }\n  }\n  if ([\"left\", \"lt\", \"lb\"].includes(position)) {\n    return __spreadValues({\n      top: `${offsetTop}px`,\n      right: \"0\",\n      transform: \"translate(50%,-50%) rotate(45deg)\"\n    }, customStyle);\n  }\n  return __spreadValues({\n    top: `${offsetTop}px`,\n    left: \"0\",\n    transform: \"translate(-50%,-50%) rotate(45deg)\"\n  }, customStyle);\n};\nconst isScrollElement = element => {\n  return element.scrollHeight > element.offsetHeight || element.scrollWidth > element.offsetWidth;\n};\nconst getScrollElements = container => {\n  var _a;\n  const scrollElements = [];\n  let element = container;\n  while (element && element !== document.documentElement) {\n    if (isScrollElement(element)) {\n      scrollElements.push(element);\n    }\n    element = (_a = element.parentElement) != null ? _a : void 0;\n  }\n  return scrollElements;\n};\nexport { getArrowStyle, getElementScrollRect, getPopupStyle, getScrollElements, getTransformOrigin, isScrollElement };","map":{"version":3,"names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","isArray","getDocumentSize","getViewPortSize","height","width","Math","min","window","innerWidth","innerHeight","getElementScrollRect","element","containerRect","_a","_b","rect","getBoundingClientRect","top","bottom","left","right","scrollTop","scrollBottom","scrollLeft","scrollRight","offsetWidth","clientWidth","offsetHeight","clientHeight","getBoundaryPosition","position","changePosition","direction","getFitPosition","popupPosition","triggerRect","popupRect","offset","translate","viewPortSize","viewPortBoundary","finalPosition","fitPosition","getPopupOffset","_translate","round","getTransformOrigin","originX","includes","originY","getPopupStyle","customStyle","autoFitPosition","result","style","getArrowStyle","offsetLeft","abs","transform","offsetTop","isScrollElement","scrollHeight","scrollWidth","getScrollElements","container","scrollElements","document","documentElement","push","parentElement"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/@arco-design/web-vue/es/trigger/utils.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nimport { isArray } from \"../_utils/is.js\";\nimport { getDocumentSize } from \"../_utils/dom.js\";\nconst getViewPortSize = () => {\n  const { height, width } = getDocumentSize();\n  return {\n    width: Math.min(width, window.innerWidth),\n    height: Math.min(height, window.innerHeight)\n  };\n};\nconst getElementScrollRect = (element, containerRect) => {\n  var _a, _b;\n  const rect = element.getBoundingClientRect();\n  return {\n    top: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    right: rect.right,\n    scrollTop: rect.top - containerRect.top,\n    scrollBottom: rect.bottom - containerRect.top,\n    scrollLeft: rect.left - containerRect.left,\n    scrollRight: rect.right - containerRect.left,\n    width: (_a = element.offsetWidth) != null ? _a : element.clientWidth,\n    height: (_b = element.offsetHeight) != null ? _b : element.clientHeight\n  };\n};\nconst getBoundaryPosition = (position) => {\n  switch (position) {\n    case \"top\":\n    case \"tl\":\n    case \"tr\":\n      return \"top\";\n    case \"bottom\":\n    case \"bl\":\n    case \"br\":\n      return \"bottom\";\n    case \"left\":\n    case \"lt\":\n    case \"lb\":\n      return \"left\";\n    case \"right\":\n    case \"rt\":\n    case \"rb\":\n      return \"right\";\n    default:\n      return \"top\";\n  }\n};\nconst changePosition = (position, direction) => {\n  switch (direction) {\n    case \"top\":\n      switch (position) {\n        case \"bottom\":\n          return \"top\";\n        case \"bl\":\n          return \"tl\";\n        case \"br\":\n          return \"tr\";\n        default:\n          return position;\n      }\n    case \"bottom\":\n      switch (position) {\n        case \"top\":\n          return \"bottom\";\n        case \"tl\":\n          return \"bl\";\n        case \"tr\":\n          return \"br\";\n        default:\n          return position;\n      }\n    case \"left\":\n      switch (position) {\n        case \"right\":\n          return \"left\";\n        case \"rt\":\n          return \"lt\";\n        case \"rb\":\n          return \"lb\";\n        default:\n          return position;\n      }\n    case \"right\":\n      switch (position) {\n        case \"left\":\n          return \"right\";\n        case \"lt\":\n          return \"rt\";\n        case \"lb\":\n          return \"rb\";\n        default:\n          return position;\n      }\n    default:\n      return position;\n  }\n};\nconst getFitPosition = (position, popupPosition, {\n  containerRect,\n  triggerRect,\n  popupRect,\n  offset,\n  translate\n}) => {\n  const direction = getBoundaryPosition(position);\n  const viewPortSize = getViewPortSize();\n  const viewPortBoundary = {\n    top: containerRect.top + popupPosition.top,\n    bottom: viewPortSize.height - (containerRect.top + popupPosition.top + popupRect.height),\n    left: containerRect.left + popupPosition.left,\n    right: viewPortSize.width - (containerRect.left + popupPosition.left + popupRect.width)\n  };\n  let finalPosition = position;\n  if (direction === \"top\" && viewPortBoundary.top < 0) {\n    if (triggerRect.top > popupRect.height) {\n      popupPosition.top = -containerRect.top;\n    } else {\n      const fitPosition = getPopupOffset(\"bottom\", triggerRect, popupRect, {\n        offset,\n        translate\n      });\n      if (viewPortSize.height - (containerRect.top + fitPosition.top + popupRect.height) > 0) {\n        finalPosition = changePosition(position, \"bottom\");\n        popupPosition.top = fitPosition.top;\n      }\n    }\n  }\n  if (direction === \"bottom\" && viewPortBoundary.bottom < 0) {\n    if (viewPortSize.height - triggerRect.bottom > popupRect.height) {\n      popupPosition.top = -containerRect.top + (viewPortSize.height - popupRect.height);\n    } else {\n      const fitPosition = getPopupOffset(\"top\", triggerRect, popupRect, {\n        offset,\n        translate\n      });\n      if (containerRect.top + fitPosition.top > 0) {\n        finalPosition = changePosition(position, \"top\");\n        popupPosition.top = fitPosition.top;\n      }\n    }\n  }\n  if (direction === \"left\" && viewPortBoundary.left < 0) {\n    if (triggerRect.left > popupRect.width) {\n      popupPosition.left = -containerRect.left;\n    } else {\n      const fitPosition = getPopupOffset(\"right\", triggerRect, popupRect, {\n        offset,\n        translate\n      });\n      if (viewPortSize.width - (containerRect.left + fitPosition.left + popupRect.width) > 0) {\n        finalPosition = changePosition(position, \"right\");\n        popupPosition.left = fitPosition.left;\n      }\n    }\n  }\n  if (direction === \"right\" && viewPortBoundary.right < 0) {\n    if (viewPortSize.width - triggerRect.right > popupRect.width) {\n      popupPosition.left = -containerRect.left + (viewPortSize.width - popupRect.width);\n    } else {\n      const fitPosition = getPopupOffset(\"left\", triggerRect, popupRect, {\n        offset,\n        translate\n      });\n      if (containerRect.left + fitPosition.left > 0) {\n        finalPosition = changePosition(position, \"left\");\n        popupPosition.left = fitPosition.left;\n      }\n    }\n  }\n  if (direction === \"top\" || direction === \"bottom\") {\n    if (viewPortBoundary.left < 0) {\n      popupPosition.left = -containerRect.left;\n    } else if (viewPortBoundary.right < 0) {\n      popupPosition.left = -containerRect.left + (viewPortSize.width - popupRect.width);\n    }\n  }\n  if (direction === \"left\" || direction === \"right\") {\n    if (viewPortBoundary.top < 0) {\n      popupPosition.top = -containerRect.top;\n    } else if (viewPortBoundary.bottom < 0) {\n      popupPosition.top = -containerRect.top + (viewPortSize.height - popupRect.height);\n    }\n  }\n  return {\n    popupPosition,\n    position: finalPosition\n  };\n};\nconst getPopupOffset = (position, triggerRect, popupRect, {\n  offset = 0,\n  translate = [0, 0]\n} = {}) => {\n  var _a;\n  const _translate = (_a = isArray(translate) ? translate : translate[position]) != null ? _a : [0, 0];\n  switch (position) {\n    case \"top\":\n      return {\n        left: triggerRect.scrollLeft + Math.round(triggerRect.width / 2) - Math.round(popupRect.width / 2) + _translate[0],\n        top: triggerRect.scrollTop - popupRect.height - offset + _translate[1]\n      };\n    case \"tl\":\n      return {\n        left: triggerRect.scrollLeft + _translate[0],\n        top: triggerRect.scrollTop - popupRect.height - offset + _translate[1]\n      };\n    case \"tr\":\n      return {\n        left: triggerRect.scrollRight - popupRect.width + _translate[0],\n        top: triggerRect.scrollTop - popupRect.height - offset + _translate[1]\n      };\n    case \"bottom\":\n      return {\n        left: triggerRect.scrollLeft + Math.round(triggerRect.width / 2) - Math.round(popupRect.width / 2) + _translate[0],\n        top: triggerRect.scrollBottom + offset + _translate[1]\n      };\n    case \"bl\":\n      return {\n        left: triggerRect.scrollLeft + _translate[0],\n        top: triggerRect.scrollBottom + offset + _translate[1]\n      };\n    case \"br\":\n      return {\n        left: triggerRect.scrollRight - popupRect.width + _translate[0],\n        top: triggerRect.scrollBottom + offset + _translate[1]\n      };\n    case \"left\":\n      return {\n        left: triggerRect.scrollLeft - popupRect.width - offset + _translate[0],\n        top: triggerRect.scrollTop + Math.round(triggerRect.height / 2) - Math.round(popupRect.height / 2) + _translate[1]\n      };\n    case \"lt\":\n      return {\n        left: triggerRect.scrollLeft - popupRect.width - offset + _translate[0],\n        top: triggerRect.scrollTop + _translate[1]\n      };\n    case \"lb\":\n      return {\n        left: triggerRect.scrollLeft - popupRect.width - offset + _translate[0],\n        top: triggerRect.scrollBottom - popupRect.height + _translate[1]\n      };\n    case \"right\":\n      return {\n        left: triggerRect.scrollRight + offset + _translate[0],\n        top: triggerRect.scrollTop + Math.round(triggerRect.height / 2) - Math.round(popupRect.height / 2) + _translate[1]\n      };\n    case \"rt\":\n      return {\n        left: triggerRect.scrollRight + offset + _translate[0],\n        top: triggerRect.scrollTop + _translate[1]\n      };\n    case \"rb\":\n      return {\n        left: triggerRect.scrollRight + offset + _translate[0],\n        top: triggerRect.scrollBottom - popupRect.height + _translate[1]\n      };\n    default:\n      return {\n        left: 0,\n        top: 0\n      };\n  }\n};\nconst getTransformOrigin = (position) => {\n  let originX = \"0\";\n  if ([\"top\", \"bottom\"].includes(position)) {\n    originX = \"50%\";\n  } else if ([\"left\", \"lt\", \"lb\", \"tr\", \"br\"].includes(position)) {\n    originX = \"100%\";\n  }\n  let originY = \"0\";\n  if ([\"left\", \"right\"].includes(position)) {\n    originY = \"50%\";\n  } else if ([\"top\", \"tl\", \"tr\", \"lt\", \"rt\"].includes(position)) {\n    originY = \"100%\";\n  }\n  return `${originX} ${originY}`;\n};\nconst getPopupStyle = (position, containerRect, triggerRect, popupRect, {\n  offset = 0,\n  translate = [0, 0],\n  customStyle = {},\n  autoFitPosition = false\n} = {}) => {\n  let finalPosition = position;\n  let popupPosition = getPopupOffset(position, triggerRect, popupRect, {\n    offset,\n    translate\n  });\n  if (autoFitPosition) {\n    const result = getFitPosition(position, popupPosition, {\n      containerRect,\n      popupRect,\n      triggerRect,\n      offset,\n      translate\n    });\n    popupPosition = result.popupPosition;\n    finalPosition = result.position;\n  }\n  const style = __spreadValues({\n    left: `${popupPosition.left}px`,\n    top: `${popupPosition.top}px`\n  }, customStyle);\n  return {\n    style,\n    position: finalPosition\n  };\n};\nconst getArrowStyle = (position, triggerRect, popupRect, {\n  customStyle = {}\n}) => {\n  if ([\"top\", \"tl\", \"tr\", \"bottom\", \"bl\", \"br\"].includes(position)) {\n    let offsetLeft = Math.abs(triggerRect.scrollLeft + triggerRect.width / 2 - popupRect.scrollLeft);\n    if (offsetLeft > popupRect.width - 8) {\n      if (triggerRect.width > popupRect.width) {\n        offsetLeft = popupRect.width / 2;\n      } else {\n        offsetLeft = popupRect.width - 8;\n      }\n    }\n    if ([\"top\", \"tl\", \"tr\"].includes(position)) {\n      return __spreadValues({\n        left: `${offsetLeft}px`,\n        bottom: \"0\",\n        transform: \"translate(-50%,50%) rotate(45deg)\"\n      }, customStyle);\n    }\n    return __spreadValues({\n      left: `${offsetLeft}px`,\n      top: \"0\",\n      transform: \"translate(-50%,-50%) rotate(45deg)\"\n    }, customStyle);\n  }\n  let offsetTop = Math.abs(triggerRect.scrollTop + triggerRect.height / 2 - popupRect.scrollTop);\n  if (offsetTop > popupRect.height - 8) {\n    if (triggerRect.height > popupRect.height) {\n      offsetTop = popupRect.height / 2;\n    } else {\n      offsetTop = popupRect.height - 8;\n    }\n  }\n  if ([\"left\", \"lt\", \"lb\"].includes(position)) {\n    return __spreadValues({\n      top: `${offsetTop}px`,\n      right: \"0\",\n      transform: \"translate(50%,-50%) rotate(45deg)\"\n    }, customStyle);\n  }\n  return __spreadValues({\n    top: `${offsetTop}px`,\n    left: \"0\",\n    transform: \"translate(-50%,-50%) rotate(45deg)\"\n  }, customStyle);\n};\nconst isScrollElement = (element) => {\n  return element.scrollHeight > element.offsetHeight || element.scrollWidth > element.offsetWidth;\n};\nconst getScrollElements = (container) => {\n  var _a;\n  const scrollElements = [];\n  let element = container;\n  while (element && element !== document.documentElement) {\n    if (isScrollElement(element)) {\n      scrollElements.push(element);\n    }\n    element = (_a = element.parentElement) != null ? _a : void 0;\n  }\n  return scrollElements;\n};\nexport { getArrowStyle, getElementScrollRect, getPopupStyle, getScrollElements, getTransformOrigin, isScrollElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}