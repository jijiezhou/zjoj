{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const SEMANTIC_HIGHLIGHTING_SETTING_ID = 'editor.semanticHighlighting';\nexport function isSemanticColoringEnabled(model, themeService, configurationService) {\n  var _a;\n  const setting = (_a = configurationService.getValue(SEMANTIC_HIGHLIGHTING_SETTING_ID, {\n    overrideIdentifier: model.getLanguageId(),\n    resource: model.uri\n  })) === null || _a === void 0 ? void 0 : _a.enabled;\n  if (typeof setting === 'boolean') {\n    return setting;\n  }\n  return themeService.getColorTheme().semanticHighlighting;\n}","map":{"version":3,"names":["SEMANTIC_HIGHLIGHTING_SETTING_ID","isSemanticColoringEnabled","model","themeService","configurationService","_a","setting","getValue","overrideIdentifier","getLanguageId","resource","uri","enabled","getColorTheme","semanticHighlighting"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/semanticTokens/common/semanticTokensConfig.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const SEMANTIC_HIGHLIGHTING_SETTING_ID = 'editor.semanticHighlighting';\nexport function isSemanticColoringEnabled(model, themeService, configurationService) {\n    var _a;\n    const setting = (_a = configurationService.getValue(SEMANTIC_HIGHLIGHTING_SETTING_ID, { overrideIdentifier: model.getLanguageId(), resource: model.uri })) === null || _a === void 0 ? void 0 : _a.enabled;\n    if (typeof setting === 'boolean') {\n        return setting;\n    }\n    return themeService.getColorTheme().semanticHighlighting;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,MAAMA,gCAAgC,GAAG,6BAA6B;AAC7E,OAAO,SAASC,yBAAyBA,CAACC,KAAK,EAAEC,YAAY,EAAEC,oBAAoB,EAAE;EACjF,IAAIC,EAAE;EACN,MAAMC,OAAO,GAAG,CAACD,EAAE,GAAGD,oBAAoB,CAACG,QAAQ,CAACP,gCAAgC,EAAE;IAAEQ,kBAAkB,EAAEN,KAAK,CAACO,aAAa,CAAC,CAAC;IAAEC,QAAQ,EAAER,KAAK,CAACS;EAAI,CAAC,CAAC,MAAM,IAAI,IAAIN,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACO,OAAO;EAC1M,IAAI,OAAON,OAAO,KAAK,SAAS,EAAE;IAC9B,OAAOA,OAAO;EAClB;EACA,OAAOH,YAAY,CAACU,aAAa,CAAC,CAAC,CAACC,oBAAoB;AAC5D"},"metadata":{},"sourceType":"module","externalDependencies":[]}