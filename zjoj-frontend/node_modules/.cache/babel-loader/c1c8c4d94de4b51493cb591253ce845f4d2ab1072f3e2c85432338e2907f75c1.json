{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function countEOL(text) {\n  let eolCount = 0;\n  let firstLineLength = 0;\n  let lastLineStart = 0;\n  let eol = 0 /* StringEOL.Unknown */;\n  for (let i = 0, len = text.length; i < len; i++) {\n    const chr = text.charCodeAt(i);\n    if (chr === 13 /* CharCode.CarriageReturn */) {\n      if (eolCount === 0) {\n        firstLineLength = i;\n      }\n      eolCount++;\n      if (i + 1 < len && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n        // \\r\\n... case\n        eol |= 2 /* StringEOL.CRLF */;\n        i++; // skip \\n\n      } else {\n        // \\r... case\n        eol |= 3 /* StringEOL.Invalid */;\n      }\n      lastLineStart = i + 1;\n    } else if (chr === 10 /* CharCode.LineFeed */) {\n      // \\n... case\n      eol |= 1 /* StringEOL.LF */;\n      if (eolCount === 0) {\n        firstLineLength = i;\n      }\n      eolCount++;\n      lastLineStart = i + 1;\n    }\n  }\n  if (eolCount === 0) {\n    firstLineLength = text.length;\n  }\n  return [eolCount, firstLineLength, text.length - lastLineStart, eol];\n}","map":{"version":3,"names":["countEOL","text","eolCount","firstLineLength","lastLineStart","eol","i","len","length","chr","charCodeAt"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/common/core/eolCounter.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function countEOL(text) {\n    let eolCount = 0;\n    let firstLineLength = 0;\n    let lastLineStart = 0;\n    let eol = 0 /* StringEOL.Unknown */;\n    for (let i = 0, len = text.length; i < len; i++) {\n        const chr = text.charCodeAt(i);\n        if (chr === 13 /* CharCode.CarriageReturn */) {\n            if (eolCount === 0) {\n                firstLineLength = i;\n            }\n            eolCount++;\n            if (i + 1 < len && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                // \\r\\n... case\n                eol |= 2 /* StringEOL.CRLF */;\n                i++; // skip \\n\n            }\n            else {\n                // \\r... case\n                eol |= 3 /* StringEOL.Invalid */;\n            }\n            lastLineStart = i + 1;\n        }\n        else if (chr === 10 /* CharCode.LineFeed */) {\n            // \\n... case\n            eol |= 1 /* StringEOL.LF */;\n            if (eolCount === 0) {\n                firstLineLength = i;\n            }\n            eolCount++;\n            lastLineStart = i + 1;\n        }\n    }\n    if (eolCount === 0) {\n        firstLineLength = text.length;\n    }\n    return [eolCount, firstLineLength, text.length - lastLineStart, eol];\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,QAAQA,CAACC,IAAI,EAAE;EAC3B,IAAIC,QAAQ,GAAG,CAAC;EAChB,IAAIC,eAAe,GAAG,CAAC;EACvB,IAAIC,aAAa,GAAG,CAAC;EACrB,IAAIC,GAAG,GAAG,CAAC,CAAC;EACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGN,IAAI,CAACO,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;IAC7C,MAAMG,GAAG,GAAGR,IAAI,CAACS,UAAU,CAACJ,CAAC,CAAC;IAC9B,IAAIG,GAAG,KAAK,EAAE,CAAC,+BAA+B;MAC1C,IAAIP,QAAQ,KAAK,CAAC,EAAE;QAChBC,eAAe,GAAGG,CAAC;MACvB;MACAJ,QAAQ,EAAE;MACV,IAAII,CAAC,GAAG,CAAC,GAAGC,GAAG,IAAIN,IAAI,CAACS,UAAU,CAACJ,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,yBAAyB;QACtE;QACAD,GAAG,IAAI,CAAC,CAAC;QACTC,CAAC,EAAE,CAAC,CAAC;MACT,CAAC,MACI;QACD;QACAD,GAAG,IAAI,CAAC,CAAC;MACb;MACAD,aAAa,GAAGE,CAAC,GAAG,CAAC;IACzB,CAAC,MACI,IAAIG,GAAG,KAAK,EAAE,CAAC,yBAAyB;MACzC;MACAJ,GAAG,IAAI,CAAC,CAAC;MACT,IAAIH,QAAQ,KAAK,CAAC,EAAE;QAChBC,eAAe,GAAGG,CAAC;MACvB;MACAJ,QAAQ,EAAE;MACVE,aAAa,GAAGE,CAAC,GAAG,CAAC;IACzB;EACJ;EACA,IAAIJ,QAAQ,KAAK,CAAC,EAAE;IAChBC,eAAe,GAAGF,IAAI,CAACO,MAAM;EACjC;EACA,OAAO,CAACN,QAAQ,EAAEC,eAAe,EAAEF,IAAI,CAACO,MAAM,GAAGJ,aAAa,EAAEC,GAAG,CAAC;AACxE"},"metadata":{},"sourceType":"module","externalDependencies":[]}