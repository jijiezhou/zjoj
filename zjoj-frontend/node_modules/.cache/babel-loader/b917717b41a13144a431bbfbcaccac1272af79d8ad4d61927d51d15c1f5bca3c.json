{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { TabFocus } from '../../../browser/config/tabFocus.js';\nimport * as nls from '../../../../nls.js';\nimport { Action2, registerAction2 } from '../../../../platform/actions/common/actions.js';\nexport class ToggleTabFocusModeAction extends Action2 {\n  constructor() {\n    super({\n      id: ToggleTabFocusModeAction.ID,\n      title: {\n        value: nls.localize({\n          key: 'toggle.tabMovesFocus',\n          comment: ['Turn on/off use of tab key for moving focus around VS Code']\n        }, 'Toggle Tab Key Moves Focus'),\n        original: 'Toggle Tab Key Moves Focus'\n      },\n      precondition: undefined,\n      keybinding: {\n        primary: 2048 /* KeyMod.CtrlCmd */ | 43 /* KeyCode.KeyM */,\n        mac: {\n          primary: 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 43 /* KeyCode.KeyM */\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      f1: true\n    });\n  }\n  run() {\n    const oldValue = TabFocus.getTabFocusMode();\n    const newValue = !oldValue;\n    TabFocus.setTabFocusMode(newValue);\n    if (newValue) {\n      alert(nls.localize('toggle.tabMovesFocus.on', \"Pressing Tab will now move focus to the next focusable element\"));\n    } else {\n      alert(nls.localize('toggle.tabMovesFocus.off', \"Pressing Tab will now insert the tab character\"));\n    }\n  }\n}\nToggleTabFocusModeAction.ID = 'editor.action.toggleTabFocusMode';\nregisterAction2(ToggleTabFocusModeAction);","map":{"version":3,"names":["alert","TabFocus","nls","Action2","registerAction2","ToggleTabFocusModeAction","constructor","id","ID","title","value","localize","key","comment","original","precondition","undefined","keybinding","primary","mac","weight","f1","run","oldValue","getTabFocusMode","newValue","setTabFocusMode"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/toggleTabFocusMode/browser/toggleTabFocusMode.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { TabFocus } from '../../../browser/config/tabFocus.js';\nimport * as nls from '../../../../nls.js';\nimport { Action2, registerAction2 } from '../../../../platform/actions/common/actions.js';\nexport class ToggleTabFocusModeAction extends Action2 {\n    constructor() {\n        super({\n            id: ToggleTabFocusModeAction.ID,\n            title: { value: nls.localize({ key: 'toggle.tabMovesFocus', comment: ['Turn on/off use of tab key for moving focus around VS Code'] }, 'Toggle Tab Key Moves Focus'), original: 'Toggle Tab Key Moves Focus' },\n            precondition: undefined,\n            keybinding: {\n                primary: 2048 /* KeyMod.CtrlCmd */ | 43 /* KeyCode.KeyM */,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 43 /* KeyCode.KeyM */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            f1: true\n        });\n    }\n    run() {\n        const oldValue = TabFocus.getTabFocusMode();\n        const newValue = !oldValue;\n        TabFocus.setTabFocusMode(newValue);\n        if (newValue) {\n            alert(nls.localize('toggle.tabMovesFocus.on', \"Pressing Tab will now move focus to the next focusable element\"));\n        }\n        else {\n            alert(nls.localize('toggle.tabMovesFocus.off', \"Pressing Tab will now insert the tab character\"));\n        }\n    }\n}\nToggleTabFocusModeAction.ID = 'editor.action.toggleTabFocusMode';\nregisterAction2(ToggleTabFocusModeAction);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,KAAK,QAAQ,0CAA0C;AAChE,SAASC,QAAQ,QAAQ,qCAAqC;AAC9D,OAAO,KAAKC,GAAG,MAAM,oBAAoB;AACzC,SAASC,OAAO,EAAEC,eAAe,QAAQ,gDAAgD;AACzF,OAAO,MAAMC,wBAAwB,SAASF,OAAO,CAAC;EAClDG,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAEF,wBAAwB,CAACG,EAAE;MAC/BC,KAAK,EAAE;QAAEC,KAAK,EAAER,GAAG,CAACS,QAAQ,CAAC;UAAEC,GAAG,EAAE,sBAAsB;UAAEC,OAAO,EAAE,CAAC,4DAA4D;QAAE,CAAC,EAAE,4BAA4B,CAAC;QAAEC,QAAQ,EAAE;MAA6B,CAAC;MAC9MC,YAAY,EAAEC,SAAS;MACvBC,UAAU,EAAE;QACRC,OAAO,EAAE,IAAI,CAAC,uBAAuB,EAAE,CAAC;QACxCC,GAAG,EAAE;UAAED,OAAO,EAAE,GAAG,CAAC,uBAAuB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAAmB,CAAC;QAC5FE,MAAM,EAAE,GAAG,CAAC;MAChB,CAAC;MACDC,EAAE,EAAE;IACR,CAAC,CAAC;EACN;EACAC,GAAGA,CAAA,EAAG;IACF,MAAMC,QAAQ,GAAGtB,QAAQ,CAACuB,eAAe,CAAC,CAAC;IAC3C,MAAMC,QAAQ,GAAG,CAACF,QAAQ;IAC1BtB,QAAQ,CAACyB,eAAe,CAACD,QAAQ,CAAC;IAClC,IAAIA,QAAQ,EAAE;MACVzB,KAAK,CAACE,GAAG,CAACS,QAAQ,CAAC,yBAAyB,EAAE,gEAAgE,CAAC,CAAC;IACpH,CAAC,MACI;MACDX,KAAK,CAACE,GAAG,CAACS,QAAQ,CAAC,0BAA0B,EAAE,gDAAgD,CAAC,CAAC;IACrG;EACJ;AACJ;AACAN,wBAAwB,CAACG,EAAE,GAAG,kCAAkC;AAChEJ,eAAe,CAACC,wBAAwB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}