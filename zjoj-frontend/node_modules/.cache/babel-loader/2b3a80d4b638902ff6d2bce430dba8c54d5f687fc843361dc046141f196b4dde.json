{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { asCSSPropertyValue, asCSSUrl } from '../../../base/browser/dom.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { getIconRegistry } from '../common/iconRegistry.js';\nexport function getIconsStyleSheet(themeService) {\n  const disposable = new DisposableStore();\n  const onDidChangeEmmiter = disposable.add(new Emitter());\n  const iconRegistry = getIconRegistry();\n  disposable.add(iconRegistry.onDidChange(() => onDidChangeEmmiter.fire()));\n  if (themeService) {\n    disposable.add(themeService.onDidProductIconThemeChange(() => onDidChangeEmmiter.fire()));\n  }\n  return {\n    dispose: () => disposable.dispose(),\n    onDidChange: onDidChangeEmmiter.event,\n    getCSS() {\n      const productIconTheme = themeService ? themeService.getProductIconTheme() : new UnthemedProductIconTheme();\n      const usedFontIds = {};\n      const formatIconRule = contribution => {\n        const definition = productIconTheme.getIcon(contribution);\n        if (!definition) {\n          return undefined;\n        }\n        const fontContribution = definition.font;\n        if (fontContribution) {\n          usedFontIds[fontContribution.id] = fontContribution.definition;\n          return `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; font-family: ${asCSSPropertyValue(fontContribution.id)}; }`;\n        }\n        // default font (codicon)\n        return `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; }`;\n      };\n      const rules = [];\n      for (const contribution of iconRegistry.getIcons()) {\n        const rule = formatIconRule(contribution);\n        if (rule) {\n          rules.push(rule);\n        }\n      }\n      for (const id in usedFontIds) {\n        const definition = usedFontIds[id];\n        const fontWeight = definition.weight ? `font-weight: ${definition.weight};` : '';\n        const fontStyle = definition.style ? `font-style: ${definition.style};` : '';\n        const src = definition.src.map(l => `${asCSSUrl(l.location)} format('${l.format}')`).join(', ');\n        rules.push(`@font-face { src: ${src}; font-family: ${asCSSPropertyValue(id)};${fontWeight}${fontStyle} font-display: block; }`);\n      }\n      return rules.join('\\n');\n    }\n  };\n}\nexport class UnthemedProductIconTheme {\n  getIcon(contribution) {\n    const iconRegistry = getIconRegistry();\n    let definition = contribution.defaults;\n    while (ThemeIcon.isThemeIcon(definition)) {\n      const c = iconRegistry.getIcon(definition.id);\n      if (!c) {\n        return undefined;\n      }\n      definition = c.defaults;\n    }\n    return definition;\n  }\n}","map":{"version":3,"names":["asCSSPropertyValue","asCSSUrl","Emitter","DisposableStore","ThemeIcon","getIconRegistry","getIconsStyleSheet","themeService","disposable","onDidChangeEmmiter","add","iconRegistry","onDidChange","fire","onDidProductIconThemeChange","dispose","event","getCSS","productIconTheme","getProductIconTheme","UnthemedProductIconTheme","usedFontIds","formatIconRule","contribution","definition","getIcon","undefined","fontContribution","font","id","fontCharacter","rules","getIcons","rule","push","fontWeight","weight","fontStyle","style","src","map","l","location","format","join","defaults","isThemeIcon","c"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/platform/theme/browser/iconsStyleSheet.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { asCSSPropertyValue, asCSSUrl } from '../../../base/browser/dom.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { getIconRegistry } from '../common/iconRegistry.js';\nexport function getIconsStyleSheet(themeService) {\n    const disposable = new DisposableStore();\n    const onDidChangeEmmiter = disposable.add(new Emitter());\n    const iconRegistry = getIconRegistry();\n    disposable.add(iconRegistry.onDidChange(() => onDidChangeEmmiter.fire()));\n    if (themeService) {\n        disposable.add(themeService.onDidProductIconThemeChange(() => onDidChangeEmmiter.fire()));\n    }\n    return {\n        dispose: () => disposable.dispose(),\n        onDidChange: onDidChangeEmmiter.event,\n        getCSS() {\n            const productIconTheme = themeService ? themeService.getProductIconTheme() : new UnthemedProductIconTheme();\n            const usedFontIds = {};\n            const formatIconRule = (contribution) => {\n                const definition = productIconTheme.getIcon(contribution);\n                if (!definition) {\n                    return undefined;\n                }\n                const fontContribution = definition.font;\n                if (fontContribution) {\n                    usedFontIds[fontContribution.id] = fontContribution.definition;\n                    return `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; font-family: ${asCSSPropertyValue(fontContribution.id)}; }`;\n                }\n                // default font (codicon)\n                return `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; }`;\n            };\n            const rules = [];\n            for (const contribution of iconRegistry.getIcons()) {\n                const rule = formatIconRule(contribution);\n                if (rule) {\n                    rules.push(rule);\n                }\n            }\n            for (const id in usedFontIds) {\n                const definition = usedFontIds[id];\n                const fontWeight = definition.weight ? `font-weight: ${definition.weight};` : '';\n                const fontStyle = definition.style ? `font-style: ${definition.style};` : '';\n                const src = definition.src.map(l => `${asCSSUrl(l.location)} format('${l.format}')`).join(', ');\n                rules.push(`@font-face { src: ${src}; font-family: ${asCSSPropertyValue(id)};${fontWeight}${fontStyle} font-display: block; }`);\n            }\n            return rules.join('\\n');\n        }\n    };\n}\nexport class UnthemedProductIconTheme {\n    getIcon(contribution) {\n        const iconRegistry = getIconRegistry();\n        let definition = contribution.defaults;\n        while (ThemeIcon.isThemeIcon(definition)) {\n            const c = iconRegistry.getIcon(definition.id);\n            if (!c) {\n                return undefined;\n            }\n            definition = c.defaults;\n        }\n        return definition;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}