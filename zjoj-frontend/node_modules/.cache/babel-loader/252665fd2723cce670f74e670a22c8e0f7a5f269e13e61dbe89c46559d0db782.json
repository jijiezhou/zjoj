{"ast":null,"code":"import { Emitter, Event, PauseableEmitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { isUndefinedOrNull } from '../../../base/common/types.js';\nimport { InMemoryStorageDatabase, Storage, StorageHint } from '../../../base/parts/storage/common/storage.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const TARGET_KEY = '__$__targetStorageMarker';\nexport const IStorageService = createDecorator('storageService');\nexport var WillSaveStateReason;\n(function (WillSaveStateReason) {\n  /**\n   * No specific reason to save state.\n   */\n  WillSaveStateReason[WillSaveStateReason[\"NONE\"] = 0] = \"NONE\";\n  /**\n   * A hint that the workbench is about to shutdown.\n   */\n  WillSaveStateReason[WillSaveStateReason[\"SHUTDOWN\"] = 1] = \"SHUTDOWN\";\n})(WillSaveStateReason || (WillSaveStateReason = {}));\nexport function loadKeyTargets(storage) {\n  const keysRaw = storage.get(TARGET_KEY);\n  if (keysRaw) {\n    try {\n      return JSON.parse(keysRaw);\n    } catch (error) {\n      // Fail gracefully\n    }\n  }\n  return Object.create(null);\n}\nexport class AbstractStorageService extends Disposable {\n  constructor(options = {\n    flushInterval: AbstractStorageService.DEFAULT_FLUSH_INTERVAL\n  }) {\n    super();\n    this.options = options;\n    this._onDidChangeValue = this._register(new PauseableEmitter());\n    this._onDidChangeTarget = this._register(new PauseableEmitter());\n    this._onWillSaveState = this._register(new Emitter());\n    this.onWillSaveState = this._onWillSaveState.event;\n    this._workspaceKeyTargets = undefined;\n    this._profileKeyTargets = undefined;\n    this._applicationKeyTargets = undefined;\n  }\n  onDidChangeValue(scope, key, disposable) {\n    return Event.filter(this._onDidChangeValue.event, e => e.scope === scope && (key === undefined || e.key === key), disposable);\n  }\n  emitDidChangeValue(scope, event) {\n    const {\n      key,\n      external\n    } = event;\n    // Specially handle `TARGET_KEY`\n    if (key === TARGET_KEY) {\n      // Clear our cached version which is now out of date\n      switch (scope) {\n        case -1 /* StorageScope.APPLICATION */:\n          this._applicationKeyTargets = undefined;\n          break;\n        case 0 /* StorageScope.PROFILE */:\n          this._profileKeyTargets = undefined;\n          break;\n        case 1 /* StorageScope.WORKSPACE */:\n          this._workspaceKeyTargets = undefined;\n          break;\n      }\n      // Emit as `didChangeTarget` event\n      this._onDidChangeTarget.fire({\n        scope\n      });\n    }\n    // Emit any other key to outside\n    else {\n      this._onDidChangeValue.fire({\n        scope,\n        key,\n        target: this.getKeyTargets(scope)[key],\n        external\n      });\n    }\n  }\n  get(key, scope, fallbackValue) {\n    var _a;\n    return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.get(key, fallbackValue);\n  }\n  getBoolean(key, scope, fallbackValue) {\n    var _a;\n    return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getBoolean(key, fallbackValue);\n  }\n  getNumber(key, scope, fallbackValue) {\n    var _a;\n    return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getNumber(key, fallbackValue);\n  }\n  store(key, value, scope, target, external = false) {\n    // We remove the key for undefined/null values\n    if (isUndefinedOrNull(value)) {\n      this.remove(key, scope, external);\n      return;\n    }\n    // Update our datastructures but send events only after\n    this.withPausedEmitters(() => {\n      var _a;\n      // Update key-target map\n      this.updateKeyTarget(key, scope, target);\n      // Store actual value\n      (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(key, value, external);\n    });\n  }\n  remove(key, scope, external = false) {\n    // Update our datastructures but send events only after\n    this.withPausedEmitters(() => {\n      var _a;\n      // Update key-target map\n      this.updateKeyTarget(key, scope, undefined);\n      // Remove actual key\n      (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.delete(key, external);\n    });\n  }\n  withPausedEmitters(fn) {\n    // Pause emitters\n    this._onDidChangeValue.pause();\n    this._onDidChangeTarget.pause();\n    try {\n      fn();\n    } finally {\n      // Resume emitters\n      this._onDidChangeValue.resume();\n      this._onDidChangeTarget.resume();\n    }\n  }\n  updateKeyTarget(key, scope, target, external = false) {\n    var _a, _b;\n    // Add\n    const keyTargets = this.getKeyTargets(scope);\n    if (typeof target === 'number') {\n      if (keyTargets[key] !== target) {\n        keyTargets[key] = target;\n        (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(TARGET_KEY, JSON.stringify(keyTargets), external);\n      }\n    }\n    // Remove\n    else {\n      if (typeof keyTargets[key] === 'number') {\n        delete keyTargets[key];\n        (_b = this.getStorage(scope)) === null || _b === void 0 ? void 0 : _b.set(TARGET_KEY, JSON.stringify(keyTargets), external);\n      }\n    }\n  }\n  get workspaceKeyTargets() {\n    if (!this._workspaceKeyTargets) {\n      this._workspaceKeyTargets = this.loadKeyTargets(1 /* StorageScope.WORKSPACE */);\n    }\n    return this._workspaceKeyTargets;\n  }\n  get profileKeyTargets() {\n    if (!this._profileKeyTargets) {\n      this._profileKeyTargets = this.loadKeyTargets(0 /* StorageScope.PROFILE */);\n    }\n    return this._profileKeyTargets;\n  }\n  get applicationKeyTargets() {\n    if (!this._applicationKeyTargets) {\n      this._applicationKeyTargets = this.loadKeyTargets(-1 /* StorageScope.APPLICATION */);\n    }\n    return this._applicationKeyTargets;\n  }\n  getKeyTargets(scope) {\n    switch (scope) {\n      case -1 /* StorageScope.APPLICATION */:\n        return this.applicationKeyTargets;\n      case 0 /* StorageScope.PROFILE */:\n        return this.profileKeyTargets;\n      default:\n        return this.workspaceKeyTargets;\n    }\n  }\n  loadKeyTargets(scope) {\n    const storage = this.getStorage(scope);\n    return storage ? loadKeyTargets(storage) : Object.create(null);\n  }\n}\nAbstractStorageService.DEFAULT_FLUSH_INTERVAL = 60 * 1000; // every minute\nexport class InMemoryStorageService extends AbstractStorageService {\n  constructor() {\n    super();\n    this.applicationStorage = this._register(new Storage(new InMemoryStorageDatabase(), {\n      hint: StorageHint.STORAGE_IN_MEMORY\n    }));\n    this.profileStorage = this._register(new Storage(new InMemoryStorageDatabase(), {\n      hint: StorageHint.STORAGE_IN_MEMORY\n    }));\n    this.workspaceStorage = this._register(new Storage(new InMemoryStorageDatabase(), {\n      hint: StorageHint.STORAGE_IN_MEMORY\n    }));\n    this._register(this.workspaceStorage.onDidChangeStorage(e => this.emitDidChangeValue(1 /* StorageScope.WORKSPACE */, e)));\n    this._register(this.profileStorage.onDidChangeStorage(e => this.emitDidChangeValue(0 /* StorageScope.PROFILE */, e)));\n    this._register(this.applicationStorage.onDidChangeStorage(e => this.emitDidChangeValue(-1 /* StorageScope.APPLICATION */, e)));\n  }\n  getStorage(scope) {\n    switch (scope) {\n      case -1 /* StorageScope.APPLICATION */:\n        return this.applicationStorage;\n      case 0 /* StorageScope.PROFILE */:\n        return this.profileStorage;\n      default:\n        return this.workspaceStorage;\n    }\n  }\n}","map":{"version":3,"names":["Emitter","Event","PauseableEmitter","Disposable","isUndefinedOrNull","InMemoryStorageDatabase","Storage","StorageHint","createDecorator","TARGET_KEY","IStorageService","WillSaveStateReason","loadKeyTargets","storage","keysRaw","get","JSON","parse","error","Object","create","AbstractStorageService","constructor","options","flushInterval","DEFAULT_FLUSH_INTERVAL","_onDidChangeValue","_register","_onDidChangeTarget","_onWillSaveState","onWillSaveState","event","_workspaceKeyTargets","undefined","_profileKeyTargets","_applicationKeyTargets","onDidChangeValue","scope","key","disposable","filter","e","emitDidChangeValue","external","fire","target","getKeyTargets","fallbackValue","_a","getStorage","getBoolean","getNumber","store","value","remove","withPausedEmitters","updateKeyTarget","set","delete","fn","pause","resume","_b","keyTargets","stringify","workspaceKeyTargets","profileKeyTargets","applicationKeyTargets","InMemoryStorageService","applicationStorage","hint","STORAGE_IN_MEMORY","profileStorage","workspaceStorage","onDidChangeStorage"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/platform/storage/common/storage.js"],"sourcesContent":["import { Emitter, Event, PauseableEmitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { isUndefinedOrNull } from '../../../base/common/types.js';\nimport { InMemoryStorageDatabase, Storage, StorageHint } from '../../../base/parts/storage/common/storage.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const TARGET_KEY = '__$__targetStorageMarker';\nexport const IStorageService = createDecorator('storageService');\nexport var WillSaveStateReason;\n(function (WillSaveStateReason) {\n    /**\n     * No specific reason to save state.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * A hint that the workbench is about to shutdown.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"SHUTDOWN\"] = 1] = \"SHUTDOWN\";\n})(WillSaveStateReason || (WillSaveStateReason = {}));\nexport function loadKeyTargets(storage) {\n    const keysRaw = storage.get(TARGET_KEY);\n    if (keysRaw) {\n        try {\n            return JSON.parse(keysRaw);\n        }\n        catch (error) {\n            // Fail gracefully\n        }\n    }\n    return Object.create(null);\n}\nexport class AbstractStorageService extends Disposable {\n    constructor(options = { flushInterval: AbstractStorageService.DEFAULT_FLUSH_INTERVAL }) {\n        super();\n        this.options = options;\n        this._onDidChangeValue = this._register(new PauseableEmitter());\n        this._onDidChangeTarget = this._register(new PauseableEmitter());\n        this._onWillSaveState = this._register(new Emitter());\n        this.onWillSaveState = this._onWillSaveState.event;\n        this._workspaceKeyTargets = undefined;\n        this._profileKeyTargets = undefined;\n        this._applicationKeyTargets = undefined;\n    }\n    onDidChangeValue(scope, key, disposable) {\n        return Event.filter(this._onDidChangeValue.event, e => e.scope === scope && (key === undefined || e.key === key), disposable);\n    }\n    emitDidChangeValue(scope, event) {\n        const { key, external } = event;\n        // Specially handle `TARGET_KEY`\n        if (key === TARGET_KEY) {\n            // Clear our cached version which is now out of date\n            switch (scope) {\n                case -1 /* StorageScope.APPLICATION */:\n                    this._applicationKeyTargets = undefined;\n                    break;\n                case 0 /* StorageScope.PROFILE */:\n                    this._profileKeyTargets = undefined;\n                    break;\n                case 1 /* StorageScope.WORKSPACE */:\n                    this._workspaceKeyTargets = undefined;\n                    break;\n            }\n            // Emit as `didChangeTarget` event\n            this._onDidChangeTarget.fire({ scope });\n        }\n        // Emit any other key to outside\n        else {\n            this._onDidChangeValue.fire({ scope, key, target: this.getKeyTargets(scope)[key], external });\n        }\n    }\n    get(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.get(key, fallbackValue);\n    }\n    getBoolean(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getBoolean(key, fallbackValue);\n    }\n    getNumber(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getNumber(key, fallbackValue);\n    }\n    store(key, value, scope, target, external = false) {\n        // We remove the key for undefined/null values\n        if (isUndefinedOrNull(value)) {\n            this.remove(key, scope, external);\n            return;\n        }\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            var _a;\n            // Update key-target map\n            this.updateKeyTarget(key, scope, target);\n            // Store actual value\n            (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(key, value, external);\n        });\n    }\n    remove(key, scope, external = false) {\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            var _a;\n            // Update key-target map\n            this.updateKeyTarget(key, scope, undefined);\n            // Remove actual key\n            (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.delete(key, external);\n        });\n    }\n    withPausedEmitters(fn) {\n        // Pause emitters\n        this._onDidChangeValue.pause();\n        this._onDidChangeTarget.pause();\n        try {\n            fn();\n        }\n        finally {\n            // Resume emitters\n            this._onDidChangeValue.resume();\n            this._onDidChangeTarget.resume();\n        }\n    }\n    updateKeyTarget(key, scope, target, external = false) {\n        var _a, _b;\n        // Add\n        const keyTargets = this.getKeyTargets(scope);\n        if (typeof target === 'number') {\n            if (keyTargets[key] !== target) {\n                keyTargets[key] = target;\n                (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(TARGET_KEY, JSON.stringify(keyTargets), external);\n            }\n        }\n        // Remove\n        else {\n            if (typeof keyTargets[key] === 'number') {\n                delete keyTargets[key];\n                (_b = this.getStorage(scope)) === null || _b === void 0 ? void 0 : _b.set(TARGET_KEY, JSON.stringify(keyTargets), external);\n            }\n        }\n    }\n    get workspaceKeyTargets() {\n        if (!this._workspaceKeyTargets) {\n            this._workspaceKeyTargets = this.loadKeyTargets(1 /* StorageScope.WORKSPACE */);\n        }\n        return this._workspaceKeyTargets;\n    }\n    get profileKeyTargets() {\n        if (!this._profileKeyTargets) {\n            this._profileKeyTargets = this.loadKeyTargets(0 /* StorageScope.PROFILE */);\n        }\n        return this._profileKeyTargets;\n    }\n    get applicationKeyTargets() {\n        if (!this._applicationKeyTargets) {\n            this._applicationKeyTargets = this.loadKeyTargets(-1 /* StorageScope.APPLICATION */);\n        }\n        return this._applicationKeyTargets;\n    }\n    getKeyTargets(scope) {\n        switch (scope) {\n            case -1 /* StorageScope.APPLICATION */:\n                return this.applicationKeyTargets;\n            case 0 /* StorageScope.PROFILE */:\n                return this.profileKeyTargets;\n            default:\n                return this.workspaceKeyTargets;\n        }\n    }\n    loadKeyTargets(scope) {\n        const storage = this.getStorage(scope);\n        return storage ? loadKeyTargets(storage) : Object.create(null);\n    }\n}\nAbstractStorageService.DEFAULT_FLUSH_INTERVAL = 60 * 1000; // every minute\nexport class InMemoryStorageService extends AbstractStorageService {\n    constructor() {\n        super();\n        this.applicationStorage = this._register(new Storage(new InMemoryStorageDatabase(), { hint: StorageHint.STORAGE_IN_MEMORY }));\n        this.profileStorage = this._register(new Storage(new InMemoryStorageDatabase(), { hint: StorageHint.STORAGE_IN_MEMORY }));\n        this.workspaceStorage = this._register(new Storage(new InMemoryStorageDatabase(), { hint: StorageHint.STORAGE_IN_MEMORY }));\n        this._register(this.workspaceStorage.onDidChangeStorage(e => this.emitDidChangeValue(1 /* StorageScope.WORKSPACE */, e)));\n        this._register(this.profileStorage.onDidChangeStorage(e => this.emitDidChangeValue(0 /* StorageScope.PROFILE */, e)));\n        this._register(this.applicationStorage.onDidChangeStorage(e => this.emitDidChangeValue(-1 /* StorageScope.APPLICATION */, e)));\n    }\n    getStorage(scope) {\n        switch (scope) {\n            case -1 /* StorageScope.APPLICATION */:\n                return this.applicationStorage;\n            case 0 /* StorageScope.PROFILE */:\n                return this.profileStorage;\n            default:\n                return this.workspaceStorage;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}