{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { CharacterSet } from '../../../common/core/characterClassifier.js';\nexport class CommitCharacterController {\n  constructor(editor, widget, model, accept) {\n    this._disposables = new DisposableStore();\n    this._disposables.add(model.onDidSuggest(e => {\n      if (e.completionModel.items.length === 0) {\n        this.reset();\n      }\n    }));\n    this._disposables.add(model.onDidCancel(e => {\n      this.reset();\n    }));\n    this._disposables.add(widget.onDidShow(() => this._onItem(widget.getFocusedItem())));\n    this._disposables.add(widget.onDidFocus(this._onItem, this));\n    this._disposables.add(widget.onDidHide(this.reset, this));\n    this._disposables.add(editor.onWillType(text => {\n      if (this._active && !widget.isFrozen() && model.state !== 0 /* State.Idle */) {\n        const ch = text.charCodeAt(text.length - 1);\n        if (this._active.acceptCharacters.has(ch) && editor.getOption(0 /* EditorOption.acceptSuggestionOnCommitCharacter */)) {\n          accept(this._active.item);\n        }\n      }\n    }));\n  }\n  _onItem(selected) {\n    if (!selected || !isNonEmptyArray(selected.item.completion.commitCharacters)) {\n      // no item or no commit characters\n      this.reset();\n      return;\n    }\n    if (this._active && this._active.item.item === selected.item) {\n      // still the same item\n      return;\n    }\n    // keep item and its commit characters\n    const acceptCharacters = new CharacterSet();\n    for (const ch of selected.item.completion.commitCharacters) {\n      if (ch.length > 0) {\n        acceptCharacters.add(ch.charCodeAt(0));\n      }\n    }\n    this._active = {\n      acceptCharacters,\n      item: selected\n    };\n  }\n  reset() {\n    this._active = undefined;\n  }\n  dispose() {\n    this._disposables.dispose();\n  }\n}","map":{"version":3,"names":["isNonEmptyArray","DisposableStore","CharacterSet","CommitCharacterController","constructor","editor","widget","model","accept","_disposables","add","onDidSuggest","e","completionModel","items","length","reset","onDidCancel","onDidShow","_onItem","getFocusedItem","onDidFocus","onDidHide","onWillType","text","_active","isFrozen","state","ch","charCodeAt","acceptCharacters","has","getOption","item","selected","completion","commitCharacters","undefined","dispose"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestCommitCharacters.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { CharacterSet } from '../../../common/core/characterClassifier.js';\nexport class CommitCharacterController {\n    constructor(editor, widget, model, accept) {\n        this._disposables = new DisposableStore();\n        this._disposables.add(model.onDidSuggest(e => {\n            if (e.completionModel.items.length === 0) {\n                this.reset();\n            }\n        }));\n        this._disposables.add(model.onDidCancel(e => {\n            this.reset();\n        }));\n        this._disposables.add(widget.onDidShow(() => this._onItem(widget.getFocusedItem())));\n        this._disposables.add(widget.onDidFocus(this._onItem, this));\n        this._disposables.add(widget.onDidHide(this.reset, this));\n        this._disposables.add(editor.onWillType(text => {\n            if (this._active && !widget.isFrozen() && model.state !== 0 /* State.Idle */) {\n                const ch = text.charCodeAt(text.length - 1);\n                if (this._active.acceptCharacters.has(ch) && editor.getOption(0 /* EditorOption.acceptSuggestionOnCommitCharacter */)) {\n                    accept(this._active.item);\n                }\n            }\n        }));\n    }\n    _onItem(selected) {\n        if (!selected || !isNonEmptyArray(selected.item.completion.commitCharacters)) {\n            // no item or no commit characters\n            this.reset();\n            return;\n        }\n        if (this._active && this._active.item.item === selected.item) {\n            // still the same item\n            return;\n        }\n        // keep item and its commit characters\n        const acceptCharacters = new CharacterSet();\n        for (const ch of selected.item.completion.commitCharacters) {\n            if (ch.length > 0) {\n                acceptCharacters.add(ch.charCodeAt(0));\n            }\n        }\n        this._active = { acceptCharacters, item: selected };\n    }\n    reset() {\n        this._active = undefined;\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}