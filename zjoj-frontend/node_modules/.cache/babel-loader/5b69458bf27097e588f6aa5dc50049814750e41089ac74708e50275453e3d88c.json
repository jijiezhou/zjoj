{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Token, TokenizationResult, EncodedTokenizationResult } from '../languages.js';\nexport const NullState = new class {\n  clone() {\n    return this;\n  }\n  equals(other) {\n    return this === other;\n  }\n}();\nexport function nullTokenize(languageId, state) {\n  return new TokenizationResult([new Token(0, '', languageId)], state);\n}\nexport function nullTokenizeEncoded(languageId, state) {\n  const tokens = new Uint32Array(2);\n  tokens[0] = 0;\n  tokens[1] = (languageId << 0 /* MetadataConsts.LANGUAGEID_OFFSET */ | 0 /* StandardTokenType.Other */ << 8 /* MetadataConsts.TOKEN_TYPE_OFFSET */ | 0 /* FontStyle.None */ << 11 /* MetadataConsts.FONT_STYLE_OFFSET */ | 1 /* ColorId.DefaultForeground */ << 15 /* MetadataConsts.FOREGROUND_OFFSET */ | 2 /* ColorId.DefaultBackground */ << 24 /* MetadataConsts.BACKGROUND_OFFSET */) >>> 0;\n  return new EncodedTokenizationResult(tokens, state === null ? NullState : state);\n}","map":{"version":3,"names":["Token","TokenizationResult","EncodedTokenizationResult","NullState","clone","equals","other","nullTokenize","languageId","state","nullTokenizeEncoded","tokens","Uint32Array"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/common/languages/nullTokenize.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Token, TokenizationResult, EncodedTokenizationResult } from '../languages.js';\nexport const NullState = new class {\n    clone() {\n        return this;\n    }\n    equals(other) {\n        return (this === other);\n    }\n};\nexport function nullTokenize(languageId, state) {\n    return new TokenizationResult([new Token(0, '', languageId)], state);\n}\nexport function nullTokenizeEncoded(languageId, state) {\n    const tokens = new Uint32Array(2);\n    tokens[0] = 0;\n    tokens[1] = ((languageId << 0 /* MetadataConsts.LANGUAGEID_OFFSET */)\n        | (0 /* StandardTokenType.Other */ << 8 /* MetadataConsts.TOKEN_TYPE_OFFSET */)\n        | (0 /* FontStyle.None */ << 11 /* MetadataConsts.FONT_STYLE_OFFSET */)\n        | (1 /* ColorId.DefaultForeground */ << 15 /* MetadataConsts.FOREGROUND_OFFSET */)\n        | (2 /* ColorId.DefaultBackground */ << 24 /* MetadataConsts.BACKGROUND_OFFSET */)) >>> 0;\n    return new EncodedTokenizationResult(tokens, state === null ? NullState : state);\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,SAASA,KAAK,EAAEC,kBAAkB,EAAEC,yBAAyB,QAAQ,iBAAiB;AACtF,OAAO,MAAMC,SAAS,GAAG,IAAI,MAAM;EAC/BC,KAAKA,CAAA,EAAG;IACJ,OAAO,IAAI;EACf;EACAC,MAAMA,CAACC,KAAK,EAAE;IACV,OAAQ,IAAI,KAAKA,KAAK;EAC1B;AACJ,CAAC,CAAD,CAAC;AACD,OAAO,SAASC,YAAYA,CAACC,UAAU,EAAEC,KAAK,EAAE;EAC5C,OAAO,IAAIR,kBAAkB,CAAC,CAAC,IAAID,KAAK,CAAC,CAAC,EAAE,EAAE,EAAEQ,UAAU,CAAC,CAAC,EAAEC,KAAK,CAAC;AACxE;AACA,OAAO,SAASC,mBAAmBA,CAACF,UAAU,EAAEC,KAAK,EAAE;EACnD,MAAME,MAAM,GAAG,IAAIC,WAAW,CAAC,CAAC,CAAC;EACjCD,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;EACbA,MAAM,CAAC,CAAC,CAAC,GAAG,CAAEH,UAAU,IAAI,CAAC,CAAC,yCACvB,CAAC,CAAC,iCAAiC,CAAC,CAAC,sCAAuC,GAC5E,CAAC,CAAC,wBAAwB,EAAE,CAAC,sCAAuC,GACpE,CAAC,CAAC,mCAAmC,EAAE,CAAC,sCAAuC,GAC/E,CAAC,CAAC,mCAAmC,EAAE,CAAC,sCAAuC,MAAM,CAAC;EAC7F,OAAO,IAAIN,yBAAyB,CAACS,MAAM,EAAEF,KAAK,KAAK,IAAI,GAAGN,SAAS,GAAGM,KAAK,CAAC;AACpF"},"metadata":{},"sourceType":"module","externalDependencies":[]}