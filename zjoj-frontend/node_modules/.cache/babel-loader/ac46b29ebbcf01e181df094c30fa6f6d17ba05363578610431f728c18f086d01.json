{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.45.0(5e5af013f8d295555a7210df0d5f2cea0bf5dd56)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/fsharp/fsharp.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"(*\", \"*)\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*//\\\\s*#region\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#region(.*)\\\\*\\\\)\"),\n      end: new RegExp(\"^\\\\s*//\\\\s*#endregion\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#endregion\\\\s*\\\\*\\\\)\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".fs\",\n  keywords: [\"abstract\", \"and\", \"atomic\", \"as\", \"assert\", \"asr\", \"base\", \"begin\", \"break\", \"checked\", \"component\", \"const\", \"constraint\", \"constructor\", \"continue\", \"class\", \"default\", \"delegate\", \"do\", \"done\", \"downcast\", \"downto\", \"elif\", \"else\", \"end\", \"exception\", \"eager\", \"event\", \"external\", \"extern\", \"false\", \"finally\", \"for\", \"fun\", \"function\", \"fixed\", \"functor\", \"global\", \"if\", \"in\", \"include\", \"inherit\", \"inline\", \"interface\", \"internal\", \"land\", \"lor\", \"lsl\", \"lsr\", \"lxor\", \"lazy\", \"let\", \"match\", \"member\", \"mod\", \"module\", \"mutable\", \"namespace\", \"method\", \"mixin\", \"new\", \"not\", \"null\", \"of\", \"open\", \"or\", \"object\", \"override\", \"private\", \"parallel\", \"process\", \"protected\", \"pure\", \"public\", \"rec\", \"return\", \"static\", \"sealed\", \"struct\", \"sig\", \"then\", \"to\", \"true\", \"tailcall\", \"trait\", \"try\", \"type\", \"upcast\", \"use\", \"val\", \"void\", \"virtual\", \"volatile\", \"when\", \"while\", \"with\", \"yield\"],\n  symbols: /[=><!~?:&|+\\-*\\^%;\\.,\\/]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  integersuffix: /[uU]?[yslnLI]?/,\n  floatsuffix: /[fFmM]?/,\n  tokenizer: {\n    root: [[/[a-zA-Z_]\\w*/, {\n      cases: {\n        \"@keywords\": {\n          token: \"keyword.$0\"\n        },\n        \"@default\": \"identifier\"\n      }\n    }], {\n      include: \"@whitespace\"\n    }, [/\\[<.*>\\]/, \"annotation\"], [/^#(if|else|endif)/, \"keyword\"], [/[{}()\\[\\]]/, \"@brackets\"], [/[<>](?!@symbols)/, \"@brackets\"], [/@symbols/, \"delimiter\"], [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, \"number.float\"], [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, \"number.float\"], [/0x[0-9a-fA-F]+LF/, \"number.float\"], [/0x[0-9a-fA-F]+(@integersuffix)/, \"number.hex\"], [/0b[0-1]+(@integersuffix)/, \"number.bin\"], [/\\d+(@integersuffix)/, \"number\"], [/[;,.]/, \"delimiter\"], [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"\"\"/, \"string\", '@string.\"\"\"'], [/\"/, \"string\", '@string.\"'], [/\\@\"/, {\n      token: \"string.quote\",\n      next: \"@litstring\"\n    }], [/'[^\\\\']'B?/, \"string\"], [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]], [/'/, \"string.invalid\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/\\(\\*(?!\\))/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]],\n    comment: [[/[^*(]+/, \"comment\"], [/\\*\\)/, \"comment\", \"@pop\"], [/\\*/, \"comment\"], [/\\(\\*\\)/, \"comment\"], [/\\(/, \"comment\"]],\n    string: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/(\"\"\"|\"B?)/, {\n      cases: {\n        \"$#==$S2\": {\n          token: \"string\",\n          next: \"@pop\"\n        },\n        \"@default\": \"string\"\n      }\n    }]],\n    litstring: [[/[^\"]+/, \"string\"], [/\"\"/, \"string.escape\"], [/\"/, {\n      token: \"string.quote\",\n      next: \"@pop\"\n    }]]\n  }\n};\nexport { conf, language };","map":{"version":3,"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","keywords","symbols","escapes","integersuffix","floatsuffix","tokenizer","root","cases","token","include","next","whitespace","comment","string","litstring"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/basic-languages/fsharp/fsharp.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.45.0(5e5af013f8d295555a7210df0d5f2cea0bf5dd56)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/fsharp/fsharp.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"(*\", \"*)\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*//\\\\s*#region\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#region(.*)\\\\*\\\\)\"),\n      end: new RegExp(\"^\\\\s*//\\\\s*#endregion\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#endregion\\\\s*\\\\*\\\\)\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".fs\",\n  keywords: [\n    \"abstract\",\n    \"and\",\n    \"atomic\",\n    \"as\",\n    \"assert\",\n    \"asr\",\n    \"base\",\n    \"begin\",\n    \"break\",\n    \"checked\",\n    \"component\",\n    \"const\",\n    \"constraint\",\n    \"constructor\",\n    \"continue\",\n    \"class\",\n    \"default\",\n    \"delegate\",\n    \"do\",\n    \"done\",\n    \"downcast\",\n    \"downto\",\n    \"elif\",\n    \"else\",\n    \"end\",\n    \"exception\",\n    \"eager\",\n    \"event\",\n    \"external\",\n    \"extern\",\n    \"false\",\n    \"finally\",\n    \"for\",\n    \"fun\",\n    \"function\",\n    \"fixed\",\n    \"functor\",\n    \"global\",\n    \"if\",\n    \"in\",\n    \"include\",\n    \"inherit\",\n    \"inline\",\n    \"interface\",\n    \"internal\",\n    \"land\",\n    \"lor\",\n    \"lsl\",\n    \"lsr\",\n    \"lxor\",\n    \"lazy\",\n    \"let\",\n    \"match\",\n    \"member\",\n    \"mod\",\n    \"module\",\n    \"mutable\",\n    \"namespace\",\n    \"method\",\n    \"mixin\",\n    \"new\",\n    \"not\",\n    \"null\",\n    \"of\",\n    \"open\",\n    \"or\",\n    \"object\",\n    \"override\",\n    \"private\",\n    \"parallel\",\n    \"process\",\n    \"protected\",\n    \"pure\",\n    \"public\",\n    \"rec\",\n    \"return\",\n    \"static\",\n    \"sealed\",\n    \"struct\",\n    \"sig\",\n    \"then\",\n    \"to\",\n    \"true\",\n    \"tailcall\",\n    \"trait\",\n    \"try\",\n    \"type\",\n    \"upcast\",\n    \"use\",\n    \"val\",\n    \"void\",\n    \"virtual\",\n    \"volatile\",\n    \"when\",\n    \"while\",\n    \"with\",\n    \"yield\"\n  ],\n  symbols: /[=><!~?:&|+\\-*\\^%;\\.,\\/]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  integersuffix: /[uU]?[yslnLI]?/,\n  floatsuffix: /[fFmM]?/,\n  tokenizer: {\n    root: [\n      [\n        /[a-zA-Z_]\\w*/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      { include: \"@whitespace\" },\n      [/\\[<.*>\\]/, \"annotation\"],\n      [/^#(if|else|endif)/, \"keyword\"],\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/[<>](?!@symbols)/, \"@brackets\"],\n      [/@symbols/, \"delimiter\"],\n      [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, \"number.float\"],\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, \"number.float\"],\n      [/0x[0-9a-fA-F]+LF/, \"number.float\"],\n      [/0x[0-9a-fA-F]+(@integersuffix)/, \"number.hex\"],\n      [/0b[0-1]+(@integersuffix)/, \"number.bin\"],\n      [/\\d+(@integersuffix)/, \"number\"],\n      [/[;,.]/, \"delimiter\"],\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n      [/\"\"\"/, \"string\", '@string.\"\"\"'],\n      [/\"/, \"string\", '@string.\"'],\n      [/\\@\"/, { token: \"string.quote\", next: \"@litstring\" }],\n      [/'[^\\\\']'B?/, \"string\"],\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]],\n      [/'/, \"string.invalid\"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/\\(\\*(?!\\))/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ],\n    comment: [\n      [/[^*(]+/, \"comment\"],\n      [/\\*\\)/, \"comment\", \"@pop\"],\n      [/\\*/, \"comment\"],\n      [/\\(\\*\\)/, \"comment\"],\n      [/\\(/, \"comment\"]\n    ],\n    string: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [\n        /(\"\"\"|\"B?)/,\n        {\n          cases: {\n            \"$#==$S2\": { token: \"string\", next: \"@pop\" },\n            \"@default\": \"string\"\n          }\n        }\n      ]\n    ],\n    litstring: [\n      [/[^\"]+/, \"string\"],\n      [/\"\"/, \"string.escape\"],\n      [/\"/, { token: \"string.quote\", next: \"@pop\" }]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}