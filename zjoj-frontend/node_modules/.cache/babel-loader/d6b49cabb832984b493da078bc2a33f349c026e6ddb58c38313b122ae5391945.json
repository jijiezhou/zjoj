{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { InvisibleCharacters, isBasicASCII } from '../../../../base/common/strings.js';\nimport './unicodeHighlighter.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { inUntrustedWorkspace, unicodeHighlightConfigKeys } from '../../../common/config/editorOptions.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { UnicodeTextModelHighlighter } from '../../../common/services/unicodeTextModelHighlighter.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { isModelDecorationInComment, isModelDecorationInString, isModelDecorationVisible } from '../../../common/viewModel/viewModelDecorations.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { MarkdownHover, renderMarkdownHovers } from '../../hover/browser/markdownHoverParticipant.js';\nimport { BannerController } from './bannerController.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { IWorkspaceTrustManagementService } from '../../../../platform/workspace/common/workspaceTrust.js';\nexport const warningIcon = registerIcon('extensions-warning-message', Codicon.warning, nls.localize('warningIcon', 'Icon shown with a warning message in the extensions editor.'));\nlet UnicodeHighlighter = class UnicodeHighlighter extends Disposable {\n  constructor(_editor, _editorWorkerService, _workspaceTrustService, instantiationService) {\n    super();\n    this._editor = _editor;\n    this._editorWorkerService = _editorWorkerService;\n    this._workspaceTrustService = _workspaceTrustService;\n    this._highlighter = null;\n    this._bannerClosed = false;\n    this._updateState = state => {\n      if (state && state.hasMore) {\n        if (this._bannerClosed) {\n          return;\n        }\n        // This document contains many non-basic ASCII characters.\n        const max = Math.max(state.ambiguousCharacterCount, state.nonBasicAsciiCharacterCount, state.invisibleCharacterCount);\n        let data;\n        if (state.nonBasicAsciiCharacterCount >= max) {\n          data = {\n            message: nls.localize('unicodeHighlighting.thisDocumentHasManyNonBasicAsciiUnicodeCharacters', 'This document contains many non-basic ASCII unicode characters'),\n            command: new DisableHighlightingOfNonBasicAsciiCharactersAction()\n          };\n        } else if (state.ambiguousCharacterCount >= max) {\n          data = {\n            message: nls.localize('unicodeHighlighting.thisDocumentHasManyAmbiguousUnicodeCharacters', 'This document contains many ambiguous unicode characters'),\n            command: new DisableHighlightingOfAmbiguousCharactersAction()\n          };\n        } else if (state.invisibleCharacterCount >= max) {\n          data = {\n            message: nls.localize('unicodeHighlighting.thisDocumentHasManyInvisibleUnicodeCharacters', 'This document contains many invisible unicode characters'),\n            command: new DisableHighlightingOfInvisibleCharactersAction()\n          };\n        } else {\n          throw new Error('Unreachable');\n        }\n        this._bannerController.show({\n          id: 'unicodeHighlightBanner',\n          message: data.message,\n          icon: warningIcon,\n          actions: [{\n            label: data.command.shortLabel,\n            href: `command:${data.command.id}`\n          }],\n          onClose: () => {\n            this._bannerClosed = true;\n          }\n        });\n      } else {\n        this._bannerController.hide();\n      }\n    };\n    this._bannerController = this._register(instantiationService.createInstance(BannerController, _editor));\n    this._register(this._editor.onDidChangeModel(() => {\n      this._bannerClosed = false;\n      this._updateHighlighter();\n    }));\n    this._options = _editor.getOption(124 /* EditorOption.unicodeHighlighting */);\n    this._register(_workspaceTrustService.onDidChangeTrust(e => {\n      this._updateHighlighter();\n    }));\n    this._register(_editor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(124 /* EditorOption.unicodeHighlighting */)) {\n        this._options = _editor.getOption(124 /* EditorOption.unicodeHighlighting */);\n        this._updateHighlighter();\n      }\n    }));\n    this._updateHighlighter();\n  }\n  dispose() {\n    if (this._highlighter) {\n      this._highlighter.dispose();\n      this._highlighter = null;\n    }\n    super.dispose();\n  }\n  _updateHighlighter() {\n    this._updateState(null);\n    if (this._highlighter) {\n      this._highlighter.dispose();\n      this._highlighter = null;\n    }\n    if (!this._editor.hasModel()) {\n      return;\n    }\n    const options = resolveOptions(this._workspaceTrustService.isWorkspaceTrusted(), this._options);\n    if ([options.nonBasicASCII, options.ambiguousCharacters, options.invisibleCharacters].every(option => option === false)) {\n      // Don't do anything if the feature is fully disabled\n      return;\n    }\n    const highlightOptions = {\n      nonBasicASCII: options.nonBasicASCII,\n      ambiguousCharacters: options.ambiguousCharacters,\n      invisibleCharacters: options.invisibleCharacters,\n      includeComments: options.includeComments,\n      includeStrings: options.includeStrings,\n      allowedCodePoints: Object.keys(options.allowedCharacters).map(c => c.codePointAt(0)),\n      allowedLocales: Object.keys(options.allowedLocales).map(locale => {\n        if (locale === '_os') {\n          const osLocale = new Intl.NumberFormat().resolvedOptions().locale;\n          return osLocale;\n        } else if (locale === '_vscode') {\n          return platform.language;\n        }\n        return locale;\n      })\n    };\n    if (this._editorWorkerService.canComputeUnicodeHighlights(this._editor.getModel().uri)) {\n      this._highlighter = new DocumentUnicodeHighlighter(this._editor, highlightOptions, this._updateState, this._editorWorkerService);\n    } else {\n      this._highlighter = new ViewportUnicodeHighlighter(this._editor, highlightOptions, this._updateState);\n    }\n  }\n  getDecorationInfo(decoration) {\n    if (this._highlighter) {\n      return this._highlighter.getDecorationInfo(decoration);\n    }\n    return null;\n  }\n};\nUnicodeHighlighter.ID = 'editor.contrib.unicodeHighlighter';\nUnicodeHighlighter = __decorate([__param(1, IEditorWorkerService), __param(2, IWorkspaceTrustManagementService), __param(3, IInstantiationService)], UnicodeHighlighter);\nexport { UnicodeHighlighter };\nfunction resolveOptions(trusted, options) {\n  return {\n    nonBasicASCII: options.nonBasicASCII === inUntrustedWorkspace ? !trusted : options.nonBasicASCII,\n    ambiguousCharacters: options.ambiguousCharacters,\n    invisibleCharacters: options.invisibleCharacters,\n    includeComments: options.includeComments === inUntrustedWorkspace ? !trusted : options.includeComments,\n    includeStrings: options.includeStrings === inUntrustedWorkspace ? !trusted : options.includeStrings,\n    allowedCharacters: options.allowedCharacters,\n    allowedLocales: options.allowedLocales\n  };\n}\nlet DocumentUnicodeHighlighter = class DocumentUnicodeHighlighter extends Disposable {\n  constructor(_editor, _options, _updateState, _editorWorkerService) {\n    super();\n    this._editor = _editor;\n    this._options = _options;\n    this._updateState = _updateState;\n    this._editorWorkerService = _editorWorkerService;\n    this._model = this._editor.getModel();\n    this._decorations = this._editor.createDecorationsCollection();\n    this._updateSoon = this._register(new RunOnceScheduler(() => this._update(), 250));\n    this._register(this._editor.onDidChangeModelContent(() => {\n      this._updateSoon.schedule();\n    }));\n    this._updateSoon.schedule();\n  }\n  dispose() {\n    this._decorations.clear();\n    super.dispose();\n  }\n  _update() {\n    if (this._model.isDisposed()) {\n      return;\n    }\n    if (!this._model.mightContainNonBasicASCII()) {\n      this._decorations.clear();\n      return;\n    }\n    const modelVersionId = this._model.getVersionId();\n    this._editorWorkerService.computedUnicodeHighlights(this._model.uri, this._options).then(info => {\n      if (this._model.isDisposed()) {\n        return;\n      }\n      if (this._model.getVersionId() !== modelVersionId) {\n        // model changed in the meantime\n        return;\n      }\n      this._updateState(info);\n      const decorations = [];\n      if (!info.hasMore) {\n        // Don't show decoration if there are too many.\n        // In this case, a banner is shown.\n        for (const range of info.ranges) {\n          decorations.push({\n            range: range,\n            options: Decorations.instance.getDecorationFromOptions(this._options)\n          });\n        }\n      }\n      this._decorations.set(decorations);\n    });\n  }\n  getDecorationInfo(decoration) {\n    if (!this._decorations.has(decoration)) {\n      return null;\n    }\n    const model = this._editor.getModel();\n    if (!isModelDecorationVisible(model, decoration)) {\n      return null;\n    }\n    const text = model.getValueInRange(decoration.range);\n    return {\n      reason: computeReason(text, this._options),\n      inComment: isModelDecorationInComment(model, decoration),\n      inString: isModelDecorationInString(model, decoration)\n    };\n  }\n};\nDocumentUnicodeHighlighter = __decorate([__param(3, IEditorWorkerService)], DocumentUnicodeHighlighter);\nclass ViewportUnicodeHighlighter extends Disposable {\n  constructor(_editor, _options, _updateState) {\n    super();\n    this._editor = _editor;\n    this._options = _options;\n    this._updateState = _updateState;\n    this._model = this._editor.getModel();\n    this._decorations = this._editor.createDecorationsCollection();\n    this._updateSoon = this._register(new RunOnceScheduler(() => this._update(), 250));\n    this._register(this._editor.onDidLayoutChange(() => {\n      this._updateSoon.schedule();\n    }));\n    this._register(this._editor.onDidScrollChange(() => {\n      this._updateSoon.schedule();\n    }));\n    this._register(this._editor.onDidChangeHiddenAreas(() => {\n      this._updateSoon.schedule();\n    }));\n    this._register(this._editor.onDidChangeModelContent(() => {\n      this._updateSoon.schedule();\n    }));\n    this._updateSoon.schedule();\n  }\n  dispose() {\n    this._decorations.clear();\n    super.dispose();\n  }\n  _update() {\n    if (this._model.isDisposed()) {\n      return;\n    }\n    if (!this._model.mightContainNonBasicASCII()) {\n      this._decorations.clear();\n      return;\n    }\n    const ranges = this._editor.getVisibleRanges();\n    const decorations = [];\n    const totalResult = {\n      ranges: [],\n      ambiguousCharacterCount: 0,\n      invisibleCharacterCount: 0,\n      nonBasicAsciiCharacterCount: 0,\n      hasMore: false\n    };\n    for (const range of ranges) {\n      const result = UnicodeTextModelHighlighter.computeUnicodeHighlights(this._model, this._options, range);\n      for (const r of result.ranges) {\n        totalResult.ranges.push(r);\n      }\n      totalResult.ambiguousCharacterCount += totalResult.ambiguousCharacterCount;\n      totalResult.invisibleCharacterCount += totalResult.invisibleCharacterCount;\n      totalResult.nonBasicAsciiCharacterCount += totalResult.nonBasicAsciiCharacterCount;\n      totalResult.hasMore = totalResult.hasMore || result.hasMore;\n    }\n    if (!totalResult.hasMore) {\n      // Don't show decorations if there are too many.\n      // A banner will be shown instead.\n      for (const range of totalResult.ranges) {\n        decorations.push({\n          range,\n          options: Decorations.instance.getDecorationFromOptions(this._options)\n        });\n      }\n    }\n    this._updateState(totalResult);\n    this._decorations.set(decorations);\n  }\n  getDecorationInfo(decoration) {\n    if (!this._decorations.has(decoration)) {\n      return null;\n    }\n    const model = this._editor.getModel();\n    const text = model.getValueInRange(decoration.range);\n    if (!isModelDecorationVisible(model, decoration)) {\n      return null;\n    }\n    return {\n      reason: computeReason(text, this._options),\n      inComment: isModelDecorationInComment(model, decoration),\n      inString: isModelDecorationInString(model, decoration)\n    };\n  }\n}\nlet UnicodeHighlighterHoverParticipant = class UnicodeHighlighterHoverParticipant {\n  constructor(_editor, _languageService, _openerService) {\n    this._editor = _editor;\n    this._languageService = _languageService;\n    this._openerService = _openerService;\n    this.hoverOrdinal = 5;\n  }\n  computeSync(anchor, lineDecorations) {\n    if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n      return [];\n    }\n    const model = this._editor.getModel();\n    const unicodeHighlighter = this._editor.getContribution(UnicodeHighlighter.ID);\n    if (!unicodeHighlighter) {\n      return [];\n    }\n    const result = [];\n    const existedReason = new Set();\n    let index = 300;\n    for (const d of lineDecorations) {\n      const highlightInfo = unicodeHighlighter.getDecorationInfo(d);\n      if (!highlightInfo) {\n        continue;\n      }\n      const char = model.getValueInRange(d.range);\n      // text refers to a single character.\n      const codePoint = char.codePointAt(0);\n      const codePointStr = formatCodePointMarkdown(codePoint);\n      let reason;\n      switch (highlightInfo.reason.kind) {\n        case 0 /* UnicodeHighlighterReasonKind.Ambiguous */:\n          {\n            if (isBasicASCII(highlightInfo.reason.confusableWith)) {\n              reason = nls.localize('unicodeHighlight.characterIsAmbiguousASCII', 'The character {0} could be confused with the ASCII character {1}, which is more common in source code.', codePointStr, formatCodePointMarkdown(highlightInfo.reason.confusableWith.codePointAt(0)));\n            } else {\n              reason = nls.localize('unicodeHighlight.characterIsAmbiguous', 'The character {0} could be confused with the character {1}, which is more common in source code.', codePointStr, formatCodePointMarkdown(highlightInfo.reason.confusableWith.codePointAt(0)));\n            }\n            break;\n          }\n        case 1 /* UnicodeHighlighterReasonKind.Invisible */:\n          reason = nls.localize('unicodeHighlight.characterIsInvisible', 'The character {0} is invisible.', codePointStr);\n          break;\n        case 2 /* UnicodeHighlighterReasonKind.NonBasicAscii */:\n          reason = nls.localize('unicodeHighlight.characterIsNonBasicAscii', 'The character {0} is not a basic ASCII character.', codePointStr);\n          break;\n      }\n      if (existedReason.has(reason)) {\n        continue;\n      }\n      existedReason.add(reason);\n      const adjustSettingsArgs = {\n        codePoint: codePoint,\n        reason: highlightInfo.reason,\n        inComment: highlightInfo.inComment,\n        inString: highlightInfo.inString\n      };\n      const adjustSettings = nls.localize('unicodeHighlight.adjustSettings', 'Adjust settings');\n      const uri = `command:${ShowExcludeOptions.ID}?${encodeURIComponent(JSON.stringify(adjustSettingsArgs))}`;\n      const markdown = new MarkdownString('', true).appendMarkdown(reason).appendText(' ').appendLink(uri, adjustSettings);\n      result.push(new MarkdownHover(this, d.range, [markdown], false, index++));\n    }\n    return result;\n  }\n  renderHoverParts(context, hoverParts) {\n    return renderMarkdownHovers(context, hoverParts, this._editor, this._languageService, this._openerService);\n  }\n};\nUnicodeHighlighterHoverParticipant = __decorate([__param(1, ILanguageService), __param(2, IOpenerService)], UnicodeHighlighterHoverParticipant);\nexport { UnicodeHighlighterHoverParticipant };\nfunction codePointToHex(codePoint) {\n  return `U+${codePoint.toString(16).padStart(4, '0')}`;\n}\nfunction formatCodePointMarkdown(codePoint) {\n  let value = `\\`${codePointToHex(codePoint)}\\``;\n  if (!InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n    // Don't render any control characters or any invisible characters, as they cannot be seen anyways.\n    value += ` \"${`${renderCodePointAsInlineCode(codePoint)}`}\"`;\n  }\n  return value;\n}\nfunction renderCodePointAsInlineCode(codePoint) {\n  if (codePoint === 96 /* CharCode.BackTick */) {\n    return '`` ` ``';\n  }\n  return '`' + String.fromCodePoint(codePoint) + '`';\n}\nfunction computeReason(char, options) {\n  return UnicodeTextModelHighlighter.computeUnicodeHighlightReason(char, options);\n}\nclass Decorations {\n  constructor() {\n    this.map = new Map();\n  }\n  getDecorationFromOptions(options) {\n    return this.getDecoration(!options.includeComments, !options.includeStrings);\n  }\n  getDecoration(hideInComments, hideInStrings) {\n    const key = `${hideInComments}${hideInStrings}`;\n    let options = this.map.get(key);\n    if (!options) {\n      options = ModelDecorationOptions.createDynamic({\n        description: 'unicode-highlight',\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        className: 'unicode-highlight',\n        showIfCollapsed: true,\n        overviewRuler: null,\n        minimap: null,\n        hideInCommentTokens: hideInComments,\n        hideInStringTokens: hideInStrings\n      });\n      this.map.set(key, options);\n    }\n    return options;\n  }\n}\nDecorations.instance = new Decorations();\nexport class DisableHighlightingInCommentsAction extends EditorAction {\n  constructor() {\n    super({\n      id: DisableHighlightingOfAmbiguousCharactersAction.ID,\n      label: nls.localize('action.unicodeHighlight.disableHighlightingInComments', 'Disable highlighting of characters in comments'),\n      alias: 'Disable highlighting of characters in comments',\n      precondition: undefined\n    });\n    this.shortLabel = nls.localize('unicodeHighlight.disableHighlightingInComments.shortLabel', 'Disable Highlight In Comments');\n  }\n  async run(accessor, editor, args) {\n    const configurationService = accessor === null || accessor === void 0 ? void 0 : accessor.get(IConfigurationService);\n    if (configurationService) {\n      this.runAction(configurationService);\n    }\n  }\n  async runAction(configurationService) {\n    await configurationService.updateValue(unicodeHighlightConfigKeys.includeComments, false, 2 /* ConfigurationTarget.USER */);\n  }\n}\nexport class DisableHighlightingInStringsAction extends EditorAction {\n  constructor() {\n    super({\n      id: DisableHighlightingOfAmbiguousCharactersAction.ID,\n      label: nls.localize('action.unicodeHighlight.disableHighlightingInStrings', 'Disable highlighting of characters in strings'),\n      alias: 'Disable highlighting of characters in strings',\n      precondition: undefined\n    });\n    this.shortLabel = nls.localize('unicodeHighlight.disableHighlightingInStrings.shortLabel', 'Disable Highlight In Strings');\n  }\n  async run(accessor, editor, args) {\n    const configurationService = accessor === null || accessor === void 0 ? void 0 : accessor.get(IConfigurationService);\n    if (configurationService) {\n      this.runAction(configurationService);\n    }\n  }\n  async runAction(configurationService) {\n    await configurationService.updateValue(unicodeHighlightConfigKeys.includeStrings, false, 2 /* ConfigurationTarget.USER */);\n  }\n}\nexport class DisableHighlightingOfAmbiguousCharactersAction extends EditorAction {\n  constructor() {\n    super({\n      id: DisableHighlightingOfAmbiguousCharactersAction.ID,\n      label: nls.localize('action.unicodeHighlight.disableHighlightingOfAmbiguousCharacters', 'Disable highlighting of ambiguous characters'),\n      alias: 'Disable highlighting of ambiguous characters',\n      precondition: undefined\n    });\n    this.shortLabel = nls.localize('unicodeHighlight.disableHighlightingOfAmbiguousCharacters.shortLabel', 'Disable Ambiguous Highlight');\n  }\n  async run(accessor, editor, args) {\n    const configurationService = accessor === null || accessor === void 0 ? void 0 : accessor.get(IConfigurationService);\n    if (configurationService) {\n      this.runAction(configurationService);\n    }\n  }\n  async runAction(configurationService) {\n    await configurationService.updateValue(unicodeHighlightConfigKeys.ambiguousCharacters, false, 2 /* ConfigurationTarget.USER */);\n  }\n}\nDisableHighlightingOfAmbiguousCharactersAction.ID = 'editor.action.unicodeHighlight.disableHighlightingOfAmbiguousCharacters';\nexport class DisableHighlightingOfInvisibleCharactersAction extends EditorAction {\n  constructor() {\n    super({\n      id: DisableHighlightingOfInvisibleCharactersAction.ID,\n      label: nls.localize('action.unicodeHighlight.disableHighlightingOfInvisibleCharacters', 'Disable highlighting of invisible characters'),\n      alias: 'Disable highlighting of invisible characters',\n      precondition: undefined\n    });\n    this.shortLabel = nls.localize('unicodeHighlight.disableHighlightingOfInvisibleCharacters.shortLabel', 'Disable Invisible Highlight');\n  }\n  async run(accessor, editor, args) {\n    const configurationService = accessor === null || accessor === void 0 ? void 0 : accessor.get(IConfigurationService);\n    if (configurationService) {\n      this.runAction(configurationService);\n    }\n  }\n  async runAction(configurationService) {\n    await configurationService.updateValue(unicodeHighlightConfigKeys.invisibleCharacters, false, 2 /* ConfigurationTarget.USER */);\n  }\n}\nDisableHighlightingOfInvisibleCharactersAction.ID = 'editor.action.unicodeHighlight.disableHighlightingOfInvisibleCharacters';\nexport class DisableHighlightingOfNonBasicAsciiCharactersAction extends EditorAction {\n  constructor() {\n    super({\n      id: DisableHighlightingOfNonBasicAsciiCharactersAction.ID,\n      label: nls.localize('action.unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters', 'Disable highlighting of non basic ASCII characters'),\n      alias: 'Disable highlighting of non basic ASCII characters',\n      precondition: undefined\n    });\n    this.shortLabel = nls.localize('unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters.shortLabel', 'Disable Non ASCII Highlight');\n  }\n  async run(accessor, editor, args) {\n    const configurationService = accessor === null || accessor === void 0 ? void 0 : accessor.get(IConfigurationService);\n    if (configurationService) {\n      this.runAction(configurationService);\n    }\n  }\n  async runAction(configurationService) {\n    await configurationService.updateValue(unicodeHighlightConfigKeys.nonBasicASCII, false, 2 /* ConfigurationTarget.USER */);\n  }\n}\nDisableHighlightingOfNonBasicAsciiCharactersAction.ID = 'editor.action.unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters';\nexport class ShowExcludeOptions extends EditorAction {\n  constructor() {\n    super({\n      id: ShowExcludeOptions.ID,\n      label: nls.localize('action.unicodeHighlight.showExcludeOptions', \"Show Exclude Options\"),\n      alias: 'Show Exclude Options',\n      precondition: undefined\n    });\n  }\n  async run(accessor, editor, args) {\n    const {\n      codePoint,\n      reason,\n      inString,\n      inComment\n    } = args;\n    const char = String.fromCodePoint(codePoint);\n    const quickPickService = accessor.get(IQuickInputService);\n    const configurationService = accessor.get(IConfigurationService);\n    function getExcludeCharFromBeingHighlightedLabel(codePoint) {\n      if (InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n        return nls.localize('unicodeHighlight.excludeInvisibleCharFromBeingHighlighted', 'Exclude {0} (invisible character) from being highlighted', codePointToHex(codePoint));\n      }\n      return nls.localize('unicodeHighlight.excludeCharFromBeingHighlighted', 'Exclude {0} from being highlighted', `${codePointToHex(codePoint)} \"${char}\"`);\n    }\n    const options = [];\n    if (reason.kind === 0 /* UnicodeHighlighterReasonKind.Ambiguous */) {\n      for (const locale of reason.notAmbiguousInLocales) {\n        options.push({\n          label: nls.localize(\"unicodeHighlight.allowCommonCharactersInLanguage\", \"Allow unicode characters that are more common in the language \\\"{0}\\\".\", locale),\n          run: async () => {\n            excludeLocaleFromBeingHighlighted(configurationService, [locale]);\n          }\n        });\n      }\n    }\n    options.push({\n      label: getExcludeCharFromBeingHighlightedLabel(codePoint),\n      run: () => excludeCharFromBeingHighlighted(configurationService, [codePoint])\n    });\n    if (inComment) {\n      const action = new DisableHighlightingInCommentsAction();\n      options.push({\n        label: action.label,\n        run: async () => action.runAction(configurationService)\n      });\n    } else if (inString) {\n      const action = new DisableHighlightingInStringsAction();\n      options.push({\n        label: action.label,\n        run: async () => action.runAction(configurationService)\n      });\n    }\n    if (reason.kind === 0 /* UnicodeHighlighterReasonKind.Ambiguous */) {\n      const action = new DisableHighlightingOfAmbiguousCharactersAction();\n      options.push({\n        label: action.label,\n        run: async () => action.runAction(configurationService)\n      });\n    } else if (reason.kind === 1 /* UnicodeHighlighterReasonKind.Invisible */) {\n      const action = new DisableHighlightingOfInvisibleCharactersAction();\n      options.push({\n        label: action.label,\n        run: async () => action.runAction(configurationService)\n      });\n    } else if (reason.kind === 2 /* UnicodeHighlighterReasonKind.NonBasicAscii */) {\n      const action = new DisableHighlightingOfNonBasicAsciiCharactersAction();\n      options.push({\n        label: action.label,\n        run: async () => action.runAction(configurationService)\n      });\n    } else {\n      expectNever(reason);\n    }\n    const result = await quickPickService.pick(options, {\n      title: nls.localize('unicodeHighlight.configureUnicodeHighlightOptions', 'Configure Unicode Highlight Options')\n    });\n    if (result) {\n      await result.run();\n    }\n  }\n}\nShowExcludeOptions.ID = 'editor.action.unicodeHighlight.showExcludeOptions';\nasync function excludeCharFromBeingHighlighted(configurationService, charCodes) {\n  const existingValue = configurationService.getValue(unicodeHighlightConfigKeys.allowedCharacters);\n  let value;\n  if (typeof existingValue === 'object' && existingValue) {\n    value = existingValue;\n  } else {\n    value = {};\n  }\n  for (const charCode of charCodes) {\n    value[String.fromCodePoint(charCode)] = true;\n  }\n  await configurationService.updateValue(unicodeHighlightConfigKeys.allowedCharacters, value, 2 /* ConfigurationTarget.USER */);\n}\nasync function excludeLocaleFromBeingHighlighted(configurationService, locales) {\n  var _a;\n  const existingValue = (_a = configurationService.inspect(unicodeHighlightConfigKeys.allowedLocales).user) === null || _a === void 0 ? void 0 : _a.value;\n  let value;\n  if (typeof existingValue === 'object' && existingValue) {\n    // Copy value, as the existing value is read only\n    value = Object.assign({}, existingValue);\n  } else {\n    value = {};\n  }\n  for (const locale of locales) {\n    value[locale] = true;\n  }\n  await configurationService.updateValue(unicodeHighlightConfigKeys.allowedLocales, value, 2 /* ConfigurationTarget.USER */);\n}\nfunction expectNever(value) {\n  throw new Error(`Unexpected value: ${value}`);\n}\nregisterEditorAction(DisableHighlightingOfAmbiguousCharactersAction);\nregisterEditorAction(DisableHighlightingOfInvisibleCharactersAction);\nregisterEditorAction(DisableHighlightingOfNonBasicAsciiCharactersAction);\nregisterEditorAction(ShowExcludeOptions);\nregisterEditorContribution(UnicodeHighlighter.ID, UnicodeHighlighter, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nHoverParticipantRegistry.register(UnicodeHighlighterHoverParticipant);","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","RunOnceScheduler","Codicon","MarkdownString","Disposable","platform","InvisibleCharacters","isBasicASCII","EditorAction","registerEditorAction","registerEditorContribution","inUntrustedWorkspace","unicodeHighlightConfigKeys","ModelDecorationOptions","UnicodeTextModelHighlighter","IEditorWorkerService","ILanguageService","isModelDecorationInComment","isModelDecorationInString","isModelDecorationVisible","HoverParticipantRegistry","MarkdownHover","renderMarkdownHovers","BannerController","nls","IConfigurationService","IInstantiationService","IOpenerService","IQuickInputService","registerIcon","IWorkspaceTrustManagementService","warningIcon","warning","localize","UnicodeHighlighter","constructor","_editor","_editorWorkerService","_workspaceTrustService","instantiationService","_highlighter","_bannerClosed","_updateState","state","hasMore","max","Math","ambiguousCharacterCount","nonBasicAsciiCharacterCount","invisibleCharacterCount","data","message","command","DisableHighlightingOfNonBasicAsciiCharactersAction","DisableHighlightingOfAmbiguousCharactersAction","DisableHighlightingOfInvisibleCharactersAction","Error","_bannerController","show","id","icon","actions","label","shortLabel","href","onClose","hide","_register","createInstance","onDidChangeModel","_updateHighlighter","_options","getOption","onDidChangeTrust","e","onDidChangeConfiguration","hasChanged","dispose","hasModel","options","resolveOptions","isWorkspaceTrusted","nonBasicASCII","ambiguousCharacters","invisibleCharacters","every","option","highlightOptions","includeComments","includeStrings","allowedCodePoints","keys","allowedCharacters","map","codePointAt","allowedLocales","locale","osLocale","Intl","NumberFormat","resolvedOptions","language","canComputeUnicodeHighlights","getModel","uri","DocumentUnicodeHighlighter","ViewportUnicodeHighlighter","getDecorationInfo","decoration","ID","trusted","_model","_decorations","createDecorationsCollection","_updateSoon","_update","onDidChangeModelContent","schedule","clear","isDisposed","mightContainNonBasicASCII","modelVersionId","getVersionId","computedUnicodeHighlights","then","info","decorations","range","ranges","push","Decorations","instance","getDecorationFromOptions","set","has","model","text","getValueInRange","reason","computeReason","inComment","inString","onDidLayoutChange","onDidScrollChange","onDidChangeHiddenAreas","getVisibleRanges","totalResult","result","computeUnicodeHighlights","UnicodeHighlighterHoverParticipant","_languageService","_openerService","hoverOrdinal","computeSync","anchor","lineDecorations","type","unicodeHighlighter","getContribution","existedReason","Set","index","highlightInfo","char","codePoint","codePointStr","formatCodePointMarkdown","kind","confusableWith","add","adjustSettingsArgs","adjustSettings","ShowExcludeOptions","encodeURIComponent","JSON","stringify","markdown","appendMarkdown","appendText","appendLink","renderHoverParts","context","hoverParts","codePointToHex","toString","padStart","value","isInvisibleCharacter","renderCodePointAsInlineCode","String","fromCodePoint","computeUnicodeHighlightReason","Map","getDecoration","hideInComments","hideInStrings","get","createDynamic","description","stickiness","className","showIfCollapsed","overviewRuler","minimap","hideInCommentTokens","hideInStringTokens","DisableHighlightingInCommentsAction","alias","precondition","undefined","run","accessor","editor","args","configurationService","runAction","updateValue","DisableHighlightingInStringsAction","quickPickService","getExcludeCharFromBeingHighlightedLabel","notAmbiguousInLocales","excludeLocaleFromBeingHighlighted","excludeCharFromBeingHighlighted","action","expectNever","pick","title","charCodes","existingValue","getValue","charCode","locales","_a","inspect","user","assign","register"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/unicodeHighlighter/browser/unicodeHighlighter.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { InvisibleCharacters, isBasicASCII } from '../../../../base/common/strings.js';\nimport './unicodeHighlighter.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { inUntrustedWorkspace, unicodeHighlightConfigKeys } from '../../../common/config/editorOptions.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { UnicodeTextModelHighlighter } from '../../../common/services/unicodeTextModelHighlighter.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { isModelDecorationInComment, isModelDecorationInString, isModelDecorationVisible } from '../../../common/viewModel/viewModelDecorations.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { MarkdownHover, renderMarkdownHovers } from '../../hover/browser/markdownHoverParticipant.js';\nimport { BannerController } from './bannerController.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { IWorkspaceTrustManagementService } from '../../../../platform/workspace/common/workspaceTrust.js';\nexport const warningIcon = registerIcon('extensions-warning-message', Codicon.warning, nls.localize('warningIcon', 'Icon shown with a warning message in the extensions editor.'));\nlet UnicodeHighlighter = class UnicodeHighlighter extends Disposable {\n    constructor(_editor, _editorWorkerService, _workspaceTrustService, instantiationService) {\n        super();\n        this._editor = _editor;\n        this._editorWorkerService = _editorWorkerService;\n        this._workspaceTrustService = _workspaceTrustService;\n        this._highlighter = null;\n        this._bannerClosed = false;\n        this._updateState = (state) => {\n            if (state && state.hasMore) {\n                if (this._bannerClosed) {\n                    return;\n                }\n                // This document contains many non-basic ASCII characters.\n                const max = Math.max(state.ambiguousCharacterCount, state.nonBasicAsciiCharacterCount, state.invisibleCharacterCount);\n                let data;\n                if (state.nonBasicAsciiCharacterCount >= max) {\n                    data = {\n                        message: nls.localize('unicodeHighlighting.thisDocumentHasManyNonBasicAsciiUnicodeCharacters', 'This document contains many non-basic ASCII unicode characters'),\n                        command: new DisableHighlightingOfNonBasicAsciiCharactersAction(),\n                    };\n                }\n                else if (state.ambiguousCharacterCount >= max) {\n                    data = {\n                        message: nls.localize('unicodeHighlighting.thisDocumentHasManyAmbiguousUnicodeCharacters', 'This document contains many ambiguous unicode characters'),\n                        command: new DisableHighlightingOfAmbiguousCharactersAction(),\n                    };\n                }\n                else if (state.invisibleCharacterCount >= max) {\n                    data = {\n                        message: nls.localize('unicodeHighlighting.thisDocumentHasManyInvisibleUnicodeCharacters', 'This document contains many invisible unicode characters'),\n                        command: new DisableHighlightingOfInvisibleCharactersAction(),\n                    };\n                }\n                else {\n                    throw new Error('Unreachable');\n                }\n                this._bannerController.show({\n                    id: 'unicodeHighlightBanner',\n                    message: data.message,\n                    icon: warningIcon,\n                    actions: [\n                        {\n                            label: data.command.shortLabel,\n                            href: `command:${data.command.id}`\n                        }\n                    ],\n                    onClose: () => {\n                        this._bannerClosed = true;\n                    },\n                });\n            }\n            else {\n                this._bannerController.hide();\n            }\n        };\n        this._bannerController = this._register(instantiationService.createInstance(BannerController, _editor));\n        this._register(this._editor.onDidChangeModel(() => {\n            this._bannerClosed = false;\n            this._updateHighlighter();\n        }));\n        this._options = _editor.getOption(124 /* EditorOption.unicodeHighlighting */);\n        this._register(_workspaceTrustService.onDidChangeTrust(e => {\n            this._updateHighlighter();\n        }));\n        this._register(_editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(124 /* EditorOption.unicodeHighlighting */)) {\n                this._options = _editor.getOption(124 /* EditorOption.unicodeHighlighting */);\n                this._updateHighlighter();\n            }\n        }));\n        this._updateHighlighter();\n    }\n    dispose() {\n        if (this._highlighter) {\n            this._highlighter.dispose();\n            this._highlighter = null;\n        }\n        super.dispose();\n    }\n    _updateHighlighter() {\n        this._updateState(null);\n        if (this._highlighter) {\n            this._highlighter.dispose();\n            this._highlighter = null;\n        }\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const options = resolveOptions(this._workspaceTrustService.isWorkspaceTrusted(), this._options);\n        if ([\n            options.nonBasicASCII,\n            options.ambiguousCharacters,\n            options.invisibleCharacters,\n        ].every((option) => option === false)) {\n            // Don't do anything if the feature is fully disabled\n            return;\n        }\n        const highlightOptions = {\n            nonBasicASCII: options.nonBasicASCII,\n            ambiguousCharacters: options.ambiguousCharacters,\n            invisibleCharacters: options.invisibleCharacters,\n            includeComments: options.includeComments,\n            includeStrings: options.includeStrings,\n            allowedCodePoints: Object.keys(options.allowedCharacters).map(c => c.codePointAt(0)),\n            allowedLocales: Object.keys(options.allowedLocales).map(locale => {\n                if (locale === '_os') {\n                    const osLocale = new Intl.NumberFormat().resolvedOptions().locale;\n                    return osLocale;\n                }\n                else if (locale === '_vscode') {\n                    return platform.language;\n                }\n                return locale;\n            }),\n        };\n        if (this._editorWorkerService.canComputeUnicodeHighlights(this._editor.getModel().uri)) {\n            this._highlighter = new DocumentUnicodeHighlighter(this._editor, highlightOptions, this._updateState, this._editorWorkerService);\n        }\n        else {\n            this._highlighter = new ViewportUnicodeHighlighter(this._editor, highlightOptions, this._updateState);\n        }\n    }\n    getDecorationInfo(decoration) {\n        if (this._highlighter) {\n            return this._highlighter.getDecorationInfo(decoration);\n        }\n        return null;\n    }\n};\nUnicodeHighlighter.ID = 'editor.contrib.unicodeHighlighter';\nUnicodeHighlighter = __decorate([\n    __param(1, IEditorWorkerService),\n    __param(2, IWorkspaceTrustManagementService),\n    __param(3, IInstantiationService)\n], UnicodeHighlighter);\nexport { UnicodeHighlighter };\nfunction resolveOptions(trusted, options) {\n    return {\n        nonBasicASCII: options.nonBasicASCII === inUntrustedWorkspace ? !trusted : options.nonBasicASCII,\n        ambiguousCharacters: options.ambiguousCharacters,\n        invisibleCharacters: options.invisibleCharacters,\n        includeComments: options.includeComments === inUntrustedWorkspace ? !trusted : options.includeComments,\n        includeStrings: options.includeStrings === inUntrustedWorkspace ? !trusted : options.includeStrings,\n        allowedCharacters: options.allowedCharacters,\n        allowedLocales: options.allowedLocales,\n    };\n}\nlet DocumentUnicodeHighlighter = class DocumentUnicodeHighlighter extends Disposable {\n    constructor(_editor, _options, _updateState, _editorWorkerService) {\n        super();\n        this._editor = _editor;\n        this._options = _options;\n        this._updateState = _updateState;\n        this._editorWorkerService = _editorWorkerService;\n        this._model = this._editor.getModel();\n        this._decorations = this._editor.createDecorationsCollection();\n        this._updateSoon = this._register(new RunOnceScheduler(() => this._update(), 250));\n        this._register(this._editor.onDidChangeModelContent(() => {\n            this._updateSoon.schedule();\n        }));\n        this._updateSoon.schedule();\n    }\n    dispose() {\n        this._decorations.clear();\n        super.dispose();\n    }\n    _update() {\n        if (this._model.isDisposed()) {\n            return;\n        }\n        if (!this._model.mightContainNonBasicASCII()) {\n            this._decorations.clear();\n            return;\n        }\n        const modelVersionId = this._model.getVersionId();\n        this._editorWorkerService\n            .computedUnicodeHighlights(this._model.uri, this._options)\n            .then((info) => {\n            if (this._model.isDisposed()) {\n                return;\n            }\n            if (this._model.getVersionId() !== modelVersionId) {\n                // model changed in the meantime\n                return;\n            }\n            this._updateState(info);\n            const decorations = [];\n            if (!info.hasMore) {\n                // Don't show decoration if there are too many.\n                // In this case, a banner is shown.\n                for (const range of info.ranges) {\n                    decorations.push({\n                        range: range,\n                        options: Decorations.instance.getDecorationFromOptions(this._options),\n                    });\n                }\n            }\n            this._decorations.set(decorations);\n        });\n    }\n    getDecorationInfo(decoration) {\n        if (!this._decorations.has(decoration)) {\n            return null;\n        }\n        const model = this._editor.getModel();\n        if (!isModelDecorationVisible(model, decoration)) {\n            return null;\n        }\n        const text = model.getValueInRange(decoration.range);\n        return {\n            reason: computeReason(text, this._options),\n            inComment: isModelDecorationInComment(model, decoration),\n            inString: isModelDecorationInString(model, decoration),\n        };\n    }\n};\nDocumentUnicodeHighlighter = __decorate([\n    __param(3, IEditorWorkerService)\n], DocumentUnicodeHighlighter);\nclass ViewportUnicodeHighlighter extends Disposable {\n    constructor(_editor, _options, _updateState) {\n        super();\n        this._editor = _editor;\n        this._options = _options;\n        this._updateState = _updateState;\n        this._model = this._editor.getModel();\n        this._decorations = this._editor.createDecorationsCollection();\n        this._updateSoon = this._register(new RunOnceScheduler(() => this._update(), 250));\n        this._register(this._editor.onDidLayoutChange(() => {\n            this._updateSoon.schedule();\n        }));\n        this._register(this._editor.onDidScrollChange(() => {\n            this._updateSoon.schedule();\n        }));\n        this._register(this._editor.onDidChangeHiddenAreas(() => {\n            this._updateSoon.schedule();\n        }));\n        this._register(this._editor.onDidChangeModelContent(() => {\n            this._updateSoon.schedule();\n        }));\n        this._updateSoon.schedule();\n    }\n    dispose() {\n        this._decorations.clear();\n        super.dispose();\n    }\n    _update() {\n        if (this._model.isDisposed()) {\n            return;\n        }\n        if (!this._model.mightContainNonBasicASCII()) {\n            this._decorations.clear();\n            return;\n        }\n        const ranges = this._editor.getVisibleRanges();\n        const decorations = [];\n        const totalResult = {\n            ranges: [],\n            ambiguousCharacterCount: 0,\n            invisibleCharacterCount: 0,\n            nonBasicAsciiCharacterCount: 0,\n            hasMore: false,\n        };\n        for (const range of ranges) {\n            const result = UnicodeTextModelHighlighter.computeUnicodeHighlights(this._model, this._options, range);\n            for (const r of result.ranges) {\n                totalResult.ranges.push(r);\n            }\n            totalResult.ambiguousCharacterCount += totalResult.ambiguousCharacterCount;\n            totalResult.invisibleCharacterCount += totalResult.invisibleCharacterCount;\n            totalResult.nonBasicAsciiCharacterCount += totalResult.nonBasicAsciiCharacterCount;\n            totalResult.hasMore = totalResult.hasMore || result.hasMore;\n        }\n        if (!totalResult.hasMore) {\n            // Don't show decorations if there are too many.\n            // A banner will be shown instead.\n            for (const range of totalResult.ranges) {\n                decorations.push({ range, options: Decorations.instance.getDecorationFromOptions(this._options) });\n            }\n        }\n        this._updateState(totalResult);\n        this._decorations.set(decorations);\n    }\n    getDecorationInfo(decoration) {\n        if (!this._decorations.has(decoration)) {\n            return null;\n        }\n        const model = this._editor.getModel();\n        const text = model.getValueInRange(decoration.range);\n        if (!isModelDecorationVisible(model, decoration)) {\n            return null;\n        }\n        return {\n            reason: computeReason(text, this._options),\n            inComment: isModelDecorationInComment(model, decoration),\n            inString: isModelDecorationInString(model, decoration),\n        };\n    }\n}\nlet UnicodeHighlighterHoverParticipant = class UnicodeHighlighterHoverParticipant {\n    constructor(_editor, _languageService, _openerService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this.hoverOrdinal = 5;\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const unicodeHighlighter = this._editor.getContribution(UnicodeHighlighter.ID);\n        if (!unicodeHighlighter) {\n            return [];\n        }\n        const result = [];\n        const existedReason = new Set();\n        let index = 300;\n        for (const d of lineDecorations) {\n            const highlightInfo = unicodeHighlighter.getDecorationInfo(d);\n            if (!highlightInfo) {\n                continue;\n            }\n            const char = model.getValueInRange(d.range);\n            // text refers to a single character.\n            const codePoint = char.codePointAt(0);\n            const codePointStr = formatCodePointMarkdown(codePoint);\n            let reason;\n            switch (highlightInfo.reason.kind) {\n                case 0 /* UnicodeHighlighterReasonKind.Ambiguous */: {\n                    if (isBasicASCII(highlightInfo.reason.confusableWith)) {\n                        reason = nls.localize('unicodeHighlight.characterIsAmbiguousASCII', 'The character {0} could be confused with the ASCII character {1}, which is more common in source code.', codePointStr, formatCodePointMarkdown(highlightInfo.reason.confusableWith.codePointAt(0)));\n                    }\n                    else {\n                        reason = nls.localize('unicodeHighlight.characterIsAmbiguous', 'The character {0} could be confused with the character {1}, which is more common in source code.', codePointStr, formatCodePointMarkdown(highlightInfo.reason.confusableWith.codePointAt(0)));\n                    }\n                    break;\n                }\n                case 1 /* UnicodeHighlighterReasonKind.Invisible */:\n                    reason = nls.localize('unicodeHighlight.characterIsInvisible', 'The character {0} is invisible.', codePointStr);\n                    break;\n                case 2 /* UnicodeHighlighterReasonKind.NonBasicAscii */:\n                    reason = nls.localize('unicodeHighlight.characterIsNonBasicAscii', 'The character {0} is not a basic ASCII character.', codePointStr);\n                    break;\n            }\n            if (existedReason.has(reason)) {\n                continue;\n            }\n            existedReason.add(reason);\n            const adjustSettingsArgs = {\n                codePoint: codePoint,\n                reason: highlightInfo.reason,\n                inComment: highlightInfo.inComment,\n                inString: highlightInfo.inString,\n            };\n            const adjustSettings = nls.localize('unicodeHighlight.adjustSettings', 'Adjust settings');\n            const uri = `command:${ShowExcludeOptions.ID}?${encodeURIComponent(JSON.stringify(adjustSettingsArgs))}`;\n            const markdown = new MarkdownString('', true)\n                .appendMarkdown(reason)\n                .appendText(' ')\n                .appendLink(uri, adjustSettings);\n            result.push(new MarkdownHover(this, d.range, [markdown], false, index++));\n        }\n        return result;\n    }\n    renderHoverParts(context, hoverParts) {\n        return renderMarkdownHovers(context, hoverParts, this._editor, this._languageService, this._openerService);\n    }\n};\nUnicodeHighlighterHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService)\n], UnicodeHighlighterHoverParticipant);\nexport { UnicodeHighlighterHoverParticipant };\nfunction codePointToHex(codePoint) {\n    return `U+${codePoint.toString(16).padStart(4, '0')}`;\n}\nfunction formatCodePointMarkdown(codePoint) {\n    let value = `\\`${codePointToHex(codePoint)}\\``;\n    if (!InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n        // Don't render any control characters or any invisible characters, as they cannot be seen anyways.\n        value += ` \"${`${renderCodePointAsInlineCode(codePoint)}`}\"`;\n    }\n    return value;\n}\nfunction renderCodePointAsInlineCode(codePoint) {\n    if (codePoint === 96 /* CharCode.BackTick */) {\n        return '`` ` ``';\n    }\n    return '`' + String.fromCodePoint(codePoint) + '`';\n}\nfunction computeReason(char, options) {\n    return UnicodeTextModelHighlighter.computeUnicodeHighlightReason(char, options);\n}\nclass Decorations {\n    constructor() {\n        this.map = new Map();\n    }\n    getDecorationFromOptions(options) {\n        return this.getDecoration(!options.includeComments, !options.includeStrings);\n    }\n    getDecoration(hideInComments, hideInStrings) {\n        const key = `${hideInComments}${hideInStrings}`;\n        let options = this.map.get(key);\n        if (!options) {\n            options = ModelDecorationOptions.createDynamic({\n                description: 'unicode-highlight',\n                stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n                className: 'unicode-highlight',\n                showIfCollapsed: true,\n                overviewRuler: null,\n                minimap: null,\n                hideInCommentTokens: hideInComments,\n                hideInStringTokens: hideInStrings,\n            });\n            this.map.set(key, options);\n        }\n        return options;\n    }\n}\nDecorations.instance = new Decorations();\nexport class DisableHighlightingInCommentsAction extends EditorAction {\n    constructor() {\n        super({\n            id: DisableHighlightingOfAmbiguousCharactersAction.ID,\n            label: nls.localize('action.unicodeHighlight.disableHighlightingInComments', 'Disable highlighting of characters in comments'),\n            alias: 'Disable highlighting of characters in comments',\n            precondition: undefined\n        });\n        this.shortLabel = nls.localize('unicodeHighlight.disableHighlightingInComments.shortLabel', 'Disable Highlight In Comments');\n    }\n    async run(accessor, editor, args) {\n        const configurationService = accessor === null || accessor === void 0 ? void 0 : accessor.get(IConfigurationService);\n        if (configurationService) {\n            this.runAction(configurationService);\n        }\n    }\n    async runAction(configurationService) {\n        await configurationService.updateValue(unicodeHighlightConfigKeys.includeComments, false, 2 /* ConfigurationTarget.USER */);\n    }\n}\nexport class DisableHighlightingInStringsAction extends EditorAction {\n    constructor() {\n        super({\n            id: DisableHighlightingOfAmbiguousCharactersAction.ID,\n            label: nls.localize('action.unicodeHighlight.disableHighlightingInStrings', 'Disable highlighting of characters in strings'),\n            alias: 'Disable highlighting of characters in strings',\n            precondition: undefined\n        });\n        this.shortLabel = nls.localize('unicodeHighlight.disableHighlightingInStrings.shortLabel', 'Disable Highlight In Strings');\n    }\n    async run(accessor, editor, args) {\n        const configurationService = accessor === null || accessor === void 0 ? void 0 : accessor.get(IConfigurationService);\n        if (configurationService) {\n            this.runAction(configurationService);\n        }\n    }\n    async runAction(configurationService) {\n        await configurationService.updateValue(unicodeHighlightConfigKeys.includeStrings, false, 2 /* ConfigurationTarget.USER */);\n    }\n}\nexport class DisableHighlightingOfAmbiguousCharactersAction extends EditorAction {\n    constructor() {\n        super({\n            id: DisableHighlightingOfAmbiguousCharactersAction.ID,\n            label: nls.localize('action.unicodeHighlight.disableHighlightingOfAmbiguousCharacters', 'Disable highlighting of ambiguous characters'),\n            alias: 'Disable highlighting of ambiguous characters',\n            precondition: undefined\n        });\n        this.shortLabel = nls.localize('unicodeHighlight.disableHighlightingOfAmbiguousCharacters.shortLabel', 'Disable Ambiguous Highlight');\n    }\n    async run(accessor, editor, args) {\n        const configurationService = accessor === null || accessor === void 0 ? void 0 : accessor.get(IConfigurationService);\n        if (configurationService) {\n            this.runAction(configurationService);\n        }\n    }\n    async runAction(configurationService) {\n        await configurationService.updateValue(unicodeHighlightConfigKeys.ambiguousCharacters, false, 2 /* ConfigurationTarget.USER */);\n    }\n}\nDisableHighlightingOfAmbiguousCharactersAction.ID = 'editor.action.unicodeHighlight.disableHighlightingOfAmbiguousCharacters';\nexport class DisableHighlightingOfInvisibleCharactersAction extends EditorAction {\n    constructor() {\n        super({\n            id: DisableHighlightingOfInvisibleCharactersAction.ID,\n            label: nls.localize('action.unicodeHighlight.disableHighlightingOfInvisibleCharacters', 'Disable highlighting of invisible characters'),\n            alias: 'Disable highlighting of invisible characters',\n            precondition: undefined\n        });\n        this.shortLabel = nls.localize('unicodeHighlight.disableHighlightingOfInvisibleCharacters.shortLabel', 'Disable Invisible Highlight');\n    }\n    async run(accessor, editor, args) {\n        const configurationService = accessor === null || accessor === void 0 ? void 0 : accessor.get(IConfigurationService);\n        if (configurationService) {\n            this.runAction(configurationService);\n        }\n    }\n    async runAction(configurationService) {\n        await configurationService.updateValue(unicodeHighlightConfigKeys.invisibleCharacters, false, 2 /* ConfigurationTarget.USER */);\n    }\n}\nDisableHighlightingOfInvisibleCharactersAction.ID = 'editor.action.unicodeHighlight.disableHighlightingOfInvisibleCharacters';\nexport class DisableHighlightingOfNonBasicAsciiCharactersAction extends EditorAction {\n    constructor() {\n        super({\n            id: DisableHighlightingOfNonBasicAsciiCharactersAction.ID,\n            label: nls.localize('action.unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters', 'Disable highlighting of non basic ASCII characters'),\n            alias: 'Disable highlighting of non basic ASCII characters',\n            precondition: undefined\n        });\n        this.shortLabel = nls.localize('unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters.shortLabel', 'Disable Non ASCII Highlight');\n    }\n    async run(accessor, editor, args) {\n        const configurationService = accessor === null || accessor === void 0 ? void 0 : accessor.get(IConfigurationService);\n        if (configurationService) {\n            this.runAction(configurationService);\n        }\n    }\n    async runAction(configurationService) {\n        await configurationService.updateValue(unicodeHighlightConfigKeys.nonBasicASCII, false, 2 /* ConfigurationTarget.USER */);\n    }\n}\nDisableHighlightingOfNonBasicAsciiCharactersAction.ID = 'editor.action.unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters';\nexport class ShowExcludeOptions extends EditorAction {\n    constructor() {\n        super({\n            id: ShowExcludeOptions.ID,\n            label: nls.localize('action.unicodeHighlight.showExcludeOptions', \"Show Exclude Options\"),\n            alias: 'Show Exclude Options',\n            precondition: undefined\n        });\n    }\n    async run(accessor, editor, args) {\n        const { codePoint, reason, inString, inComment } = args;\n        const char = String.fromCodePoint(codePoint);\n        const quickPickService = accessor.get(IQuickInputService);\n        const configurationService = accessor.get(IConfigurationService);\n        function getExcludeCharFromBeingHighlightedLabel(codePoint) {\n            if (InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                return nls.localize('unicodeHighlight.excludeInvisibleCharFromBeingHighlighted', 'Exclude {0} (invisible character) from being highlighted', codePointToHex(codePoint));\n            }\n            return nls.localize('unicodeHighlight.excludeCharFromBeingHighlighted', 'Exclude {0} from being highlighted', `${codePointToHex(codePoint)} \"${char}\"`);\n        }\n        const options = [];\n        if (reason.kind === 0 /* UnicodeHighlighterReasonKind.Ambiguous */) {\n            for (const locale of reason.notAmbiguousInLocales) {\n                options.push({\n                    label: nls.localize(\"unicodeHighlight.allowCommonCharactersInLanguage\", \"Allow unicode characters that are more common in the language \\\"{0}\\\".\", locale),\n                    run: async () => {\n                        excludeLocaleFromBeingHighlighted(configurationService, [locale]);\n                    },\n                });\n            }\n        }\n        options.push({\n            label: getExcludeCharFromBeingHighlightedLabel(codePoint),\n            run: () => excludeCharFromBeingHighlighted(configurationService, [codePoint])\n        });\n        if (inComment) {\n            const action = new DisableHighlightingInCommentsAction();\n            options.push({ label: action.label, run: async () => action.runAction(configurationService) });\n        }\n        else if (inString) {\n            const action = new DisableHighlightingInStringsAction();\n            options.push({ label: action.label, run: async () => action.runAction(configurationService) });\n        }\n        if (reason.kind === 0 /* UnicodeHighlighterReasonKind.Ambiguous */) {\n            const action = new DisableHighlightingOfAmbiguousCharactersAction();\n            options.push({ label: action.label, run: async () => action.runAction(configurationService) });\n        }\n        else if (reason.kind === 1 /* UnicodeHighlighterReasonKind.Invisible */) {\n            const action = new DisableHighlightingOfInvisibleCharactersAction();\n            options.push({ label: action.label, run: async () => action.runAction(configurationService) });\n        }\n        else if (reason.kind === 2 /* UnicodeHighlighterReasonKind.NonBasicAscii */) {\n            const action = new DisableHighlightingOfNonBasicAsciiCharactersAction();\n            options.push({ label: action.label, run: async () => action.runAction(configurationService) });\n        }\n        else {\n            expectNever(reason);\n        }\n        const result = await quickPickService.pick(options, { title: nls.localize('unicodeHighlight.configureUnicodeHighlightOptions', 'Configure Unicode Highlight Options') });\n        if (result) {\n            await result.run();\n        }\n    }\n}\nShowExcludeOptions.ID = 'editor.action.unicodeHighlight.showExcludeOptions';\nasync function excludeCharFromBeingHighlighted(configurationService, charCodes) {\n    const existingValue = configurationService.getValue(unicodeHighlightConfigKeys.allowedCharacters);\n    let value;\n    if ((typeof existingValue === 'object') && existingValue) {\n        value = existingValue;\n    }\n    else {\n        value = {};\n    }\n    for (const charCode of charCodes) {\n        value[String.fromCodePoint(charCode)] = true;\n    }\n    await configurationService.updateValue(unicodeHighlightConfigKeys.allowedCharacters, value, 2 /* ConfigurationTarget.USER */);\n}\nasync function excludeLocaleFromBeingHighlighted(configurationService, locales) {\n    var _a;\n    const existingValue = (_a = configurationService.inspect(unicodeHighlightConfigKeys.allowedLocales).user) === null || _a === void 0 ? void 0 : _a.value;\n    let value;\n    if ((typeof existingValue === 'object') && existingValue) {\n        // Copy value, as the existing value is read only\n        value = Object.assign({}, existingValue);\n    }\n    else {\n        value = {};\n    }\n    for (const locale of locales) {\n        value[locale] = true;\n    }\n    await configurationService.updateValue(unicodeHighlightConfigKeys.allowedLocales, value, 2 /* ConfigurationTarget.USER */);\n}\nfunction expectNever(value) {\n    throw new Error(`Unexpected value: ${value}`);\n}\nregisterEditorAction(DisableHighlightingOfAmbiguousCharactersAction);\nregisterEditorAction(DisableHighlightingOfInvisibleCharactersAction);\nregisterEditorAction(DisableHighlightingOfNonBasicAsciiCharactersAction);\nregisterEditorAction(ShowExcludeOptions);\nregisterEditorContribution(UnicodeHighlighter.ID, UnicodeHighlighter, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nHoverParticipantRegistry.register(UnicodeHighlighterHoverParticipant);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}