{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar SuggestController_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { KeyCodeChord } from '../../../../base/common/keybindings.js';\nimport { DisposableStore, dispose, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { assertType, isObject } from '../../../../base/common/types.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { ISuggestMemoryService } from './suggestMemory.js';\nimport { WordContextKey } from './wordContextKey.js';\nimport * as nls from '../../../../nls.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { Context as SuggestContext, suggestWidgetStatusbarMenu } from './suggest.js';\nimport { SuggestAlternatives } from './suggestAlternatives.js';\nimport { CommitCharacterController } from './suggestCommitCharacters.js';\nimport { SuggestModel } from './suggestModel.js';\nimport { OvertypingCapturer } from './suggestOvertypingCapturer.js';\nimport { SuggestWidget } from './suggestWidget.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { basename, extname } from '../../../../base/common/resources.js';\nimport { hash } from '../../../../base/common/hash.js';\nimport { WindowIdleValue, getWindow } from '../../../../base/browser/dom.js';\n// sticky suggest widget which doesn't disappear on focus out and such\nconst _sticky = false;\nclass LineSuffix {\n  constructor(_model, _position) {\n    this._model = _model;\n    this._position = _position;\n    // spy on what's happening right of the cursor. two cases:\n    // 1. end of line -> check that it's still end of line\n    // 2. mid of line -> add a marker and compute the delta\n    const maxColumn = _model.getLineMaxColumn(_position.lineNumber);\n    if (maxColumn !== _position.column) {\n      const offset = _model.getOffsetAt(_position);\n      const end = _model.getPositionAt(offset + 1);\n      this._marker = _model.deltaDecorations([], [{\n        range: Range.fromPositions(_position, end),\n        options: {\n          description: 'suggest-line-suffix',\n          stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */\n        }\n      }]);\n    }\n  }\n  dispose() {\n    if (this._marker && !this._model.isDisposed()) {\n      this._model.deltaDecorations(this._marker, []);\n    }\n  }\n  delta(position) {\n    if (this._model.isDisposed() || this._position.lineNumber !== position.lineNumber) {\n      // bail out early if things seems fishy\n      return 0;\n    }\n    // read the marker (in case suggest was triggered at line end) or compare\n    // the cursor to the line end.\n    if (this._marker) {\n      const range = this._model.getDecorationRange(this._marker[0]);\n      const end = this._model.getOffsetAt(range.getStartPosition());\n      return end - this._model.getOffsetAt(position);\n    } else {\n      return this._model.getLineMaxColumn(position.lineNumber) - position.column;\n    }\n  }\n}\nlet SuggestController = SuggestController_1 = class SuggestController {\n  static get(editor) {\n    return editor.getContribution(SuggestController_1.ID);\n  }\n  constructor(editor, _memoryService, _commandService, _contextKeyService, _instantiationService, _logService, _telemetryService) {\n    this._memoryService = _memoryService;\n    this._commandService = _commandService;\n    this._contextKeyService = _contextKeyService;\n    this._instantiationService = _instantiationService;\n    this._logService = _logService;\n    this._telemetryService = _telemetryService;\n    this._lineSuffix = new MutableDisposable();\n    this._toDispose = new DisposableStore();\n    this._selectors = new PriorityRegistry(s => s.priority);\n    this._onWillInsertSuggestItem = new Emitter();\n    this.onWillInsertSuggestItem = this._onWillInsertSuggestItem.event;\n    this.editor = editor;\n    this.model = _instantiationService.createInstance(SuggestModel, this.editor);\n    // default selector\n    this._selectors.register({\n      priority: 0,\n      select: (model, pos, items) => this._memoryService.select(model, pos, items)\n    });\n    // context key: update insert/replace mode\n    const ctxInsertMode = SuggestContext.InsertMode.bindTo(_contextKeyService);\n    ctxInsertMode.set(editor.getOption(117 /* EditorOption.suggest */).insertMode);\n    this._toDispose.add(this.model.onDidTrigger(() => ctxInsertMode.set(editor.getOption(117 /* EditorOption.suggest */).insertMode)));\n    this.widget = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n      const widget = this._instantiationService.createInstance(SuggestWidget, this.editor);\n      this._toDispose.add(widget);\n      this._toDispose.add(widget.onDidSelect(item => this._insertSuggestion(item, 0 /* InsertFlags.None */), this));\n      // Wire up logic to accept a suggestion on certain characters\n      const commitCharacterController = new CommitCharacterController(this.editor, widget, this.model, item => this._insertSuggestion(item, 2 /* InsertFlags.NoAfterUndoStop */));\n      this._toDispose.add(commitCharacterController);\n      // Wire up makes text edit context key\n      const ctxMakesTextEdit = SuggestContext.MakesTextEdit.bindTo(this._contextKeyService);\n      const ctxHasInsertAndReplace = SuggestContext.HasInsertAndReplaceRange.bindTo(this._contextKeyService);\n      const ctxCanResolve = SuggestContext.CanResolve.bindTo(this._contextKeyService);\n      this._toDispose.add(toDisposable(() => {\n        ctxMakesTextEdit.reset();\n        ctxHasInsertAndReplace.reset();\n        ctxCanResolve.reset();\n      }));\n      this._toDispose.add(widget.onDidFocus(({\n        item\n      }) => {\n        // (ctx: makesTextEdit)\n        const position = this.editor.getPosition();\n        const startColumn = item.editStart.column;\n        const endColumn = position.column;\n        let value = true;\n        if (this.editor.getOption(1 /* EditorOption.acceptSuggestionOnEnter */) === 'smart' && this.model.state === 2 /* State.Auto */ && !item.completion.additionalTextEdits && !(item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */) && endColumn - startColumn === item.completion.insertText.length) {\n          const oldText = this.editor.getModel().getValueInRange({\n            startLineNumber: position.lineNumber,\n            startColumn,\n            endLineNumber: position.lineNumber,\n            endColumn\n          });\n          value = oldText !== item.completion.insertText;\n        }\n        ctxMakesTextEdit.set(value);\n        // (ctx: hasInsertAndReplaceRange)\n        ctxHasInsertAndReplace.set(!Position.equals(item.editInsertEnd, item.editReplaceEnd));\n        // (ctx: canResolve)\n        ctxCanResolve.set(Boolean(item.provider.resolveCompletionItem) || Boolean(item.completion.documentation) || item.completion.detail !== item.completion.label);\n      }));\n      this._toDispose.add(widget.onDetailsKeyDown(e => {\n        // cmd + c on macOS, ctrl + c on Win / Linux\n        if (e.toKeyCodeChord().equals(new KeyCodeChord(true, false, false, false, 33 /* KeyCode.KeyC */)) || platform.isMacintosh && e.toKeyCodeChord().equals(new KeyCodeChord(false, false, false, true, 33 /* KeyCode.KeyC */))) {\n          e.stopPropagation();\n          return;\n        }\n        if (!e.toKeyCodeChord().isModifierKey()) {\n          this.editor.focus();\n        }\n      }));\n      return widget;\n    }));\n    // Wire up text overtyping capture\n    this._overtypingCapturer = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n      return this._toDispose.add(new OvertypingCapturer(this.editor, this.model));\n    }));\n    this._alternatives = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n      return this._toDispose.add(new SuggestAlternatives(this.editor, this._contextKeyService));\n    }));\n    this._toDispose.add(_instantiationService.createInstance(WordContextKey, editor));\n    this._toDispose.add(this.model.onDidTrigger(e => {\n      this.widget.value.showTriggered(e.auto, e.shy ? 250 : 50);\n      this._lineSuffix.value = new LineSuffix(this.editor.getModel(), e.position);\n    }));\n    this._toDispose.add(this.model.onDidSuggest(e => {\n      if (e.triggerOptions.shy) {\n        return;\n      }\n      let index = -1;\n      for (const selector of this._selectors.itemsOrderedByPriorityDesc) {\n        index = selector.select(this.editor.getModel(), this.editor.getPosition(), e.completionModel.items);\n        if (index !== -1) {\n          break;\n        }\n      }\n      if (index === -1) {\n        index = 0;\n      }\n      let noFocus = false;\n      if (e.triggerOptions.auto) {\n        // don't \"focus\" item when configured to do\n        const options = this.editor.getOption(117 /* EditorOption.suggest */);\n        if (options.selectionMode === 'never' || options.selectionMode === 'always') {\n          // simple: always or never\n          noFocus = options.selectionMode === 'never';\n        } else if (options.selectionMode === 'whenTriggerCharacter') {\n          // on with trigger character\n          noFocus = e.triggerOptions.triggerKind !== 1 /* CompletionTriggerKind.TriggerCharacter */;\n        } else if (options.selectionMode === 'whenQuickSuggestion') {\n          // without trigger character or when refiltering\n          noFocus = e.triggerOptions.triggerKind === 1 /* CompletionTriggerKind.TriggerCharacter */ && !e.triggerOptions.refilter;\n        }\n      }\n      this.widget.value.showSuggestions(e.completionModel, index, e.isFrozen, e.triggerOptions.auto, noFocus);\n    }));\n    this._toDispose.add(this.model.onDidCancel(e => {\n      if (!e.retrigger) {\n        this.widget.value.hideWidget();\n      }\n    }));\n    this._toDispose.add(this.editor.onDidBlurEditorWidget(() => {\n      if (!_sticky) {\n        this.model.cancel();\n        this.model.clear();\n      }\n    }));\n    // Manage the acceptSuggestionsOnEnter context key\n    const acceptSuggestionsOnEnter = SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\n    const updateFromConfig = () => {\n      const acceptSuggestionOnEnter = this.editor.getOption(1 /* EditorOption.acceptSuggestionOnEnter */);\n      acceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\n    };\n    this._toDispose.add(this.editor.onDidChangeConfiguration(() => updateFromConfig()));\n    updateFromConfig();\n  }\n  dispose() {\n    this._alternatives.dispose();\n    this._toDispose.dispose();\n    this.widget.dispose();\n    this.model.dispose();\n    this._lineSuffix.dispose();\n    this._onWillInsertSuggestItem.dispose();\n  }\n  _insertSuggestion(event, flags) {\n    if (!event || !event.item) {\n      this._alternatives.value.reset();\n      this.model.cancel();\n      this.model.clear();\n      return;\n    }\n    if (!this.editor.hasModel()) {\n      return;\n    }\n    const snippetController = SnippetController2.get(this.editor);\n    if (!snippetController) {\n      return;\n    }\n    this._onWillInsertSuggestItem.fire({\n      item: event.item\n    });\n    const model = this.editor.getModel();\n    const modelVersionNow = model.getAlternativeVersionId();\n    const {\n      item\n    } = event;\n    //\n    const tasks = [];\n    const cts = new CancellationTokenSource();\n    // pushing undo stops *before* additional text edits and\n    // *after* the main edit\n    if (!(flags & 1 /* InsertFlags.NoBeforeUndoStop */)) {\n      this.editor.pushUndoStop();\n    }\n    // compute overwrite[Before|After] deltas BEFORE applying extra edits\n    const info = this.getOverwriteInfo(item, Boolean(flags & 8 /* InsertFlags.AlternativeOverwriteConfig */));\n    // keep item in memory\n    this._memoryService.memorize(model, this.editor.getPosition(), item);\n    const isResolved = item.isResolved;\n    // telemetry data points: duration of command execution, info about async additional edits (-1=n/a, -2=none, 1=success, 0=failed)\n    let _commandExectionDuration = -1;\n    let _additionalEditsAppliedAsync = -1;\n    if (Array.isArray(item.completion.additionalTextEdits)) {\n      // cancel -> stops all listening and closes widget\n      this.model.cancel();\n      // sync additional edits\n      const scrollState = StableEditorScrollState.capture(this.editor);\n      this.editor.executeEdits('suggestController.additionalTextEdits.sync', item.completion.additionalTextEdits.map(edit => EditOperation.replaceMove(Range.lift(edit.range), edit.text)));\n      scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n    } else if (!isResolved) {\n      // async additional edits\n      const sw = new StopWatch();\n      let position;\n      const docListener = model.onDidChangeContent(e => {\n        if (e.isFlush) {\n          cts.cancel();\n          docListener.dispose();\n          return;\n        }\n        for (const change of e.changes) {\n          const thisPosition = Range.getEndPosition(change.range);\n          if (!position || Position.isBefore(thisPosition, position)) {\n            position = thisPosition;\n          }\n        }\n      });\n      const oldFlags = flags;\n      flags |= 2 /* InsertFlags.NoAfterUndoStop */;\n      let didType = false;\n      const typeListener = this.editor.onWillType(() => {\n        typeListener.dispose();\n        didType = true;\n        if (!(oldFlags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n          this.editor.pushUndoStop();\n        }\n      });\n      tasks.push(item.resolve(cts.token).then(() => {\n        if (!item.completion.additionalTextEdits || cts.token.isCancellationRequested) {\n          return undefined;\n        }\n        if (position && item.completion.additionalTextEdits.some(edit => Position.isBefore(position, Range.getStartPosition(edit.range)))) {\n          return false;\n        }\n        if (didType) {\n          this.editor.pushUndoStop();\n        }\n        const scrollState = StableEditorScrollState.capture(this.editor);\n        this.editor.executeEdits('suggestController.additionalTextEdits.async', item.completion.additionalTextEdits.map(edit => EditOperation.replaceMove(Range.lift(edit.range), edit.text)));\n        scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n        if (didType || !(oldFlags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n          this.editor.pushUndoStop();\n        }\n        return true;\n      }).then(applied => {\n        this._logService.trace('[suggest] async resolving of edits DONE (ms, applied?)', sw.elapsed(), applied);\n        _additionalEditsAppliedAsync = applied === true ? 1 : applied === false ? 0 : -2;\n      }).finally(() => {\n        docListener.dispose();\n        typeListener.dispose();\n      }));\n    }\n    let {\n      insertText\n    } = item.completion;\n    if (!(item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */)) {\n      insertText = SnippetParser.escape(insertText);\n    }\n    // cancel -> stops all listening and closes widget\n    this.model.cancel();\n    snippetController.insert(insertText, {\n      overwriteBefore: info.overwriteBefore,\n      overwriteAfter: info.overwriteAfter,\n      undoStopBefore: false,\n      undoStopAfter: false,\n      adjustWhitespace: !(item.completion.insertTextRules & 1 /* CompletionItemInsertTextRule.KeepWhitespace */),\n      clipboardText: event.model.clipboardText,\n      overtypingCapturer: this._overtypingCapturer.value\n    });\n    if (!(flags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n      this.editor.pushUndoStop();\n    }\n    if (item.completion.command) {\n      if (item.completion.command.id === TriggerSuggestAction.id) {\n        // retigger\n        this.model.trigger({\n          auto: true,\n          retrigger: true\n        });\n      } else {\n        // exec command, done\n        const sw = new StopWatch();\n        tasks.push(this._commandService.executeCommand(item.completion.command.id, ...(item.completion.command.arguments ? [...item.completion.command.arguments] : [])).catch(e => {\n          if (item.completion.extensionId) {\n            onUnexpectedExternalError(e);\n          } else {\n            onUnexpectedError(e);\n          }\n        }).finally(() => {\n          _commandExectionDuration = sw.elapsed();\n        }));\n      }\n    }\n    if (flags & 4 /* InsertFlags.KeepAlternativeSuggestions */) {\n      this._alternatives.value.set(event, next => {\n        // cancel resolving of additional edits\n        cts.cancel();\n        // this is not so pretty. when inserting the 'next'\n        // suggestion we undo until we are at the state at\n        // which we were before inserting the previous suggestion...\n        while (model.canUndo()) {\n          if (modelVersionNow !== model.getAlternativeVersionId()) {\n            model.undo();\n          }\n          this._insertSuggestion(next, 1 /* InsertFlags.NoBeforeUndoStop */ | 2 /* InsertFlags.NoAfterUndoStop */ | (flags & 8 /* InsertFlags.AlternativeOverwriteConfig */ ? 8 /* InsertFlags.AlternativeOverwriteConfig */ : 0));\n          break;\n        }\n      });\n    }\n    this._alertCompletionItem(item);\n    // clear only now - after all tasks are done\n    Promise.all(tasks).finally(() => {\n      this._reportSuggestionAcceptedTelemetry(item, model, isResolved, _commandExectionDuration, _additionalEditsAppliedAsync);\n      this.model.clear();\n      cts.dispose();\n    });\n  }\n  _reportSuggestionAcceptedTelemetry(item, model, itemResolved, commandExectionDuration, additionalEditsAppliedAsync) {\n    var _a, _b, _c;\n    if (Math.floor(Math.random() * 100) === 0) {\n      // throttle telemetry event because accepting completions happens a lot\n      return;\n    }\n    this._telemetryService.publicLog2('suggest.acceptedSuggestion', {\n      extensionId: (_b = (_a = item.extensionId) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 'unknown',\n      providerId: (_c = item.provider._debugDisplayName) !== null && _c !== void 0 ? _c : 'unknown',\n      kind: item.completion.kind,\n      basenameHash: hash(basename(model.uri)).toString(16),\n      languageId: model.getLanguageId(),\n      fileExtension: extname(model.uri),\n      resolveInfo: !item.provider.resolveCompletionItem ? -1 : itemResolved ? 1 : 0,\n      resolveDuration: item.resolveDuration,\n      commandDuration: commandExectionDuration,\n      additionalEditsAsync: additionalEditsAppliedAsync\n    });\n  }\n  getOverwriteInfo(item, toggleMode) {\n    assertType(this.editor.hasModel());\n    let replace = this.editor.getOption(117 /* EditorOption.suggest */).insertMode === 'replace';\n    if (toggleMode) {\n      replace = !replace;\n    }\n    const overwriteBefore = item.position.column - item.editStart.column;\n    const overwriteAfter = (replace ? item.editReplaceEnd.column : item.editInsertEnd.column) - item.position.column;\n    const columnDelta = this.editor.getPosition().column - item.position.column;\n    const suffixDelta = this._lineSuffix.value ? this._lineSuffix.value.delta(this.editor.getPosition()) : 0;\n    return {\n      overwriteBefore: overwriteBefore + columnDelta,\n      overwriteAfter: overwriteAfter + suffixDelta\n    };\n  }\n  _alertCompletionItem(item) {\n    if (isNonEmptyArray(item.completion.additionalTextEdits)) {\n      const msg = nls.localize('aria.alert.snippet', \"Accepting '{0}' made {1} additional edits\", item.textLabel, item.completion.additionalTextEdits.length);\n      alert(msg);\n    }\n  }\n  triggerSuggest(onlyFrom, auto, noFilter) {\n    if (this.editor.hasModel()) {\n      this.model.trigger({\n        auto: auto !== null && auto !== void 0 ? auto : false,\n        completionOptions: {\n          providerFilter: onlyFrom,\n          kindFilter: noFilter ? new Set() : undefined\n        }\n      });\n      this.editor.revealPosition(this.editor.getPosition(), 0 /* ScrollType.Smooth */);\n      this.editor.focus();\n    }\n  }\n  triggerSuggestAndAcceptBest(arg) {\n    if (!this.editor.hasModel()) {\n      return;\n    }\n    const positionNow = this.editor.getPosition();\n    const fallback = () => {\n      if (positionNow.equals(this.editor.getPosition())) {\n        this._commandService.executeCommand(arg.fallback);\n      }\n    };\n    const makesTextEdit = item => {\n      if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */ || item.completion.additionalTextEdits) {\n        // snippet, other editor -> makes edit\n        return true;\n      }\n      const position = this.editor.getPosition();\n      const startColumn = item.editStart.column;\n      const endColumn = position.column;\n      if (endColumn - startColumn !== item.completion.insertText.length) {\n        // unequal lengths -> makes edit\n        return true;\n      }\n      const textNow = this.editor.getModel().getValueInRange({\n        startLineNumber: position.lineNumber,\n        startColumn,\n        endLineNumber: position.lineNumber,\n        endColumn\n      });\n      // unequal text -> makes edit\n      return textNow !== item.completion.insertText;\n    };\n    Event.once(this.model.onDidTrigger)(_ => {\n      // wait for trigger because only then the cancel-event is trustworthy\n      const listener = [];\n      Event.any(this.model.onDidTrigger, this.model.onDidCancel)(() => {\n        // retrigger or cancel -> try to type default text\n        dispose(listener);\n        fallback();\n      }, undefined, listener);\n      this.model.onDidSuggest(({\n        completionModel\n      }) => {\n        dispose(listener);\n        if (completionModel.items.length === 0) {\n          fallback();\n          return;\n        }\n        const index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), completionModel.items);\n        const item = completionModel.items[index];\n        if (!makesTextEdit(item)) {\n          fallback();\n          return;\n        }\n        this.editor.pushUndoStop();\n        this._insertSuggestion({\n          index,\n          item,\n          model: completionModel\n        }, 4 /* InsertFlags.KeepAlternativeSuggestions */ | 1 /* InsertFlags.NoBeforeUndoStop */ | 2 /* InsertFlags.NoAfterUndoStop */);\n      }, undefined, listener);\n    });\n    this.model.trigger({\n      auto: false,\n      shy: true\n    });\n    this.editor.revealPosition(positionNow, 0 /* ScrollType.Smooth */);\n    this.editor.focus();\n  }\n  acceptSelectedSuggestion(keepAlternativeSuggestions, alternativeOverwriteConfig) {\n    const item = this.widget.value.getFocusedItem();\n    let flags = 0;\n    if (keepAlternativeSuggestions) {\n      flags |= 4 /* InsertFlags.KeepAlternativeSuggestions */;\n    }\n    if (alternativeOverwriteConfig) {\n      flags |= 8 /* InsertFlags.AlternativeOverwriteConfig */;\n    }\n    this._insertSuggestion(item, flags);\n  }\n  acceptNextSuggestion() {\n    this._alternatives.value.next();\n  }\n  acceptPrevSuggestion() {\n    this._alternatives.value.prev();\n  }\n  cancelSuggestWidget() {\n    this.model.cancel();\n    this.model.clear();\n    this.widget.value.hideWidget();\n  }\n  focusSuggestion() {\n    this.widget.value.focusSelected();\n  }\n  selectNextSuggestion() {\n    this.widget.value.selectNext();\n  }\n  selectNextPageSuggestion() {\n    this.widget.value.selectNextPage();\n  }\n  selectLastSuggestion() {\n    this.widget.value.selectLast();\n  }\n  selectPrevSuggestion() {\n    this.widget.value.selectPrevious();\n  }\n  selectPrevPageSuggestion() {\n    this.widget.value.selectPreviousPage();\n  }\n  selectFirstSuggestion() {\n    this.widget.value.selectFirst();\n  }\n  toggleSuggestionDetails() {\n    this.widget.value.toggleDetails();\n  }\n  toggleExplainMode() {\n    this.widget.value.toggleExplainMode();\n  }\n  toggleSuggestionFocus() {\n    this.widget.value.toggleDetailsFocus();\n  }\n  resetWidgetSize() {\n    this.widget.value.resetPersistedSize();\n  }\n  forceRenderingAbove() {\n    this.widget.value.forceRenderingAbove();\n  }\n  stopForceRenderingAbove() {\n    if (!this.widget.isInitialized) {\n      // This method has no effect if the widget is not initialized yet.\n      return;\n    }\n    this.widget.value.stopForceRenderingAbove();\n  }\n  registerSelector(selector) {\n    return this._selectors.register(selector);\n  }\n};\nSuggestController.ID = 'editor.contrib.suggestController';\nSuggestController = SuggestController_1 = __decorate([__param(1, ISuggestMemoryService), __param(2, ICommandService), __param(3, IContextKeyService), __param(4, IInstantiationService), __param(5, ILogService), __param(6, ITelemetryService)], SuggestController);\nexport { SuggestController };\nclass PriorityRegistry {\n  constructor(prioritySelector) {\n    this.prioritySelector = prioritySelector;\n    this._items = new Array();\n  }\n  register(value) {\n    if (this._items.indexOf(value) !== -1) {\n      throw new Error('Value is already registered');\n    }\n    this._items.push(value);\n    this._items.sort((s1, s2) => this.prioritySelector(s2) - this.prioritySelector(s1));\n    return {\n      dispose: () => {\n        const idx = this._items.indexOf(value);\n        if (idx >= 0) {\n          this._items.splice(idx, 1);\n        }\n      }\n    };\n  }\n  get itemsOrderedByPriorityDesc() {\n    return this._items;\n  }\n}\nexport class TriggerSuggestAction extends EditorAction {\n  constructor() {\n    super({\n      id: TriggerSuggestAction.id,\n      label: nls.localize('suggest.trigger.label', \"Trigger Suggest\"),\n      alias: 'Trigger Suggest',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCompletionItemProvider, SuggestContext.Visible.toNegated()),\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n        mac: {\n          primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */,\n          secondary: [512 /* KeyMod.Alt */ | 9 /* KeyCode.Escape */, 2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */]\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  run(_accessor, editor, args) {\n    const controller = SuggestController.get(editor);\n    if (!controller) {\n      return;\n    }\n    let auto;\n    if (args && typeof args === 'object') {\n      if (args.auto === true) {\n        auto = true;\n      }\n    }\n    controller.triggerSuggest(undefined, auto, undefined);\n  }\n}\nTriggerSuggestAction.id = 'editor.action.triggerSuggest';\nregisterEditorContribution(SuggestController.ID, SuggestController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(TriggerSuggestAction);\nconst weight = 100 /* KeybindingWeight.EditorContrib */ + 90;\nconst SuggestCommand = EditorCommand.bindToContribution(SuggestController.get);\nregisterEditorCommand(new SuggestCommand({\n  id: 'acceptSelectedSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion),\n  handler(x) {\n    x.acceptSelectedSuggestion(true, false);\n  },\n  kbOpts: [{\n    // normal tab\n    primary: 2 /* KeyCode.Tab */,\n    kbExpr: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\n    weight\n  }, {\n    // accept on enter has special rules\n    primary: 3 /* KeyCode.Enter */,\n    kbExpr: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.AcceptSuggestionsOnEnter, SuggestContext.MakesTextEdit),\n    weight\n  }],\n  menuOpts: [{\n    menuId: suggestWidgetStatusbarMenu,\n    title: nls.localize('accept.insert', \"Insert\"),\n    group: 'left',\n    order: 1,\n    when: SuggestContext.HasInsertAndReplaceRange.toNegated()\n  }, {\n    menuId: suggestWidgetStatusbarMenu,\n    title: nls.localize('accept.insert', \"Insert\"),\n    group: 'left',\n    order: 1,\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert'))\n  }, {\n    menuId: suggestWidgetStatusbarMenu,\n    title: nls.localize('accept.replace', \"Replace\"),\n    group: 'left',\n    order: 1,\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace'))\n  }]\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'acceptAlternativeSelectedSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.HasFocusedSuggestion),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n    secondary: [1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */]\n  },\n  handler(x) {\n    x.acceptSelectedSuggestion(false, true);\n  },\n  menuOpts: [{\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'left',\n    order: 2,\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert')),\n    title: nls.localize('accept.replace', \"Replace\")\n  }, {\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'left',\n    order: 2,\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace')),\n    title: nls.localize('accept.insert', \"Insert\")\n  }]\n}));\n// continue to support the old command\nCommandsRegistry.registerCommandAlias('acceptSelectedSuggestionOnEnter', 'acceptSelectedSuggestion');\nregisterEditorCommand(new SuggestCommand({\n  id: 'hideSuggestWidget',\n  precondition: SuggestContext.Visible,\n  handler: x => x.cancelSuggestWidget(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 9 /* KeyCode.Escape */,\n    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectNextSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n  handler: c => c.selectNextSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 18 /* KeyCode.DownArrow */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\n    mac: {\n      primary: 18 /* KeyCode.DownArrow */,\n      secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */, 256 /* KeyMod.WinCtrl */ | 44 /* KeyCode.KeyN */]\n    }\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectNextPageSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n  handler: c => c.selectNextPageSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 12 /* KeyCode.PageDown */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 12 /* KeyCode.PageDown */]\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectLastSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n  handler: c => c.selectLastSuggestion()\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectPrevSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n  handler: c => c.selectPrevSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 16 /* KeyCode.UpArrow */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\n    mac: {\n      primary: 16 /* KeyCode.UpArrow */,\n      secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */, 256 /* KeyMod.WinCtrl */ | 46 /* KeyCode.KeyP */]\n    }\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectPrevPageSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n  handler: c => c.selectPrevPageSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 11 /* KeyCode.PageUp */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 11 /* KeyCode.PageUp */]\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectFirstSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n  handler: c => c.selectFirstSuggestion()\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'focusSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion.negate()),\n  handler: x => x.focusSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n    mac: {\n      primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */,\n      secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */]\n    }\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'focusAndAcceptSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion.negate()),\n  handler: c => {\n    c.focusSuggestion();\n    c.acceptSelectedSuggestion(true, false);\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'toggleSuggestionDetails',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion),\n  handler: x => x.toggleSuggestionDetails(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n    mac: {\n      primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */,\n      secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */]\n    }\n  },\n  menuOpts: [{\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'right',\n    order: 1,\n    when: ContextKeyExpr.and(SuggestContext.DetailsVisible, SuggestContext.CanResolve),\n    title: nls.localize('detail.more', \"show less\")\n  }, {\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'right',\n    order: 1,\n    when: ContextKeyExpr.and(SuggestContext.DetailsVisible.toNegated(), SuggestContext.CanResolve),\n    title: nls.localize('detail.less', \"show more\")\n  }]\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'toggleExplainMode',\n  precondition: SuggestContext.Visible,\n  handler: x => x.toggleExplainMode(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 90 /* KeyCode.Slash */\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'toggleSuggestionFocus',\n  precondition: SuggestContext.Visible,\n  handler: x => x.toggleSuggestionFocus(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 10 /* KeyCode.Space */,\n    mac: {\n      primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 10 /* KeyCode.Space */\n    }\n  }\n}));\n//#region tab completions\nregisterEditorCommand(new SuggestCommand({\n  id: 'insertBestCompletion',\n  precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), WordContextKey.AtEnd, SuggestContext.Visible.toNegated(), SuggestAlternatives.OtherSuggestions.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n  handler: (x, arg) => {\n    x.triggerSuggestAndAcceptBest(isObject(arg) ? {\n      fallback: 'tab',\n      ...arg\n    } : {\n      fallback: 'tab'\n    });\n  },\n  kbOpts: {\n    weight,\n    primary: 2 /* KeyCode.Tab */\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'insertNextSuggestion',\n  precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n  handler: x => x.acceptNextSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2 /* KeyCode.Tab */\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'insertPrevSuggestion',\n  precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n  handler: x => x.acceptPrevSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */\n  }\n}));\nregisterEditorAction(class extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.resetSuggestSize',\n      label: nls.localize('suggest.reset.label', \"Reset Suggest Widget Size\"),\n      alias: 'Reset Suggest Widget Size',\n      precondition: undefined\n    });\n  }\n  run(_accessor, editor) {\n    var _a;\n    (_a = SuggestController.get(editor)) === null || _a === void 0 ? void 0 : _a.resetWidgetSize();\n  }\n});","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","SuggestController_1","alert","isNonEmptyArray","CancellationTokenSource","onUnexpectedError","onUnexpectedExternalError","Emitter","Event","KeyCodeChord","DisposableStore","dispose","MutableDisposable","toDisposable","platform","StopWatch","assertType","isObject","StableEditorScrollState","EditorAction","EditorCommand","registerEditorAction","registerEditorCommand","registerEditorContribution","EditOperation","Position","Range","EditorContextKeys","SnippetController2","SnippetParser","ISuggestMemoryService","WordContextKey","nls","CommandsRegistry","ICommandService","ContextKeyExpr","IContextKeyService","IInstantiationService","ILogService","Context","SuggestContext","suggestWidgetStatusbarMenu","SuggestAlternatives","CommitCharacterController","SuggestModel","OvertypingCapturer","SuggestWidget","ITelemetryService","basename","extname","hash","WindowIdleValue","getWindow","_sticky","LineSuffix","constructor","_model","_position","maxColumn","getLineMaxColumn","lineNumber","column","offset","getOffsetAt","end","getPositionAt","_marker","deltaDecorations","range","fromPositions","options","description","stickiness","isDisposed","delta","position","getDecorationRange","getStartPosition","SuggestController","get","editor","getContribution","ID","_memoryService","_commandService","_contextKeyService","_instantiationService","_logService","_telemetryService","_lineSuffix","_toDispose","_selectors","PriorityRegistry","s","priority","_onWillInsertSuggestItem","onWillInsertSuggestItem","event","model","createInstance","register","select","pos","items","ctxInsertMode","InsertMode","bindTo","set","getOption","insertMode","add","onDidTrigger","widget","getDomNode","onDidSelect","item","_insertSuggestion","commitCharacterController","ctxMakesTextEdit","MakesTextEdit","ctxHasInsertAndReplace","HasInsertAndReplaceRange","ctxCanResolve","CanResolve","reset","onDidFocus","getPosition","startColumn","editStart","endColumn","value","state","completion","additionalTextEdits","insertTextRules","insertText","oldText","getModel","getValueInRange","startLineNumber","endLineNumber","equals","editInsertEnd","editReplaceEnd","Boolean","provider","resolveCompletionItem","documentation","detail","label","onDetailsKeyDown","e","toKeyCodeChord","isMacintosh","stopPropagation","isModifierKey","focus","_overtypingCapturer","_alternatives","showTriggered","auto","shy","onDidSuggest","triggerOptions","index","selector","itemsOrderedByPriorityDesc","completionModel","noFocus","selectionMode","triggerKind","refilter","showSuggestions","isFrozen","onDidCancel","retrigger","hideWidget","onDidBlurEditorWidget","cancel","clear","acceptSuggestionsOnEnter","AcceptSuggestionsOnEnter","updateFromConfig","acceptSuggestionOnEnter","onDidChangeConfiguration","flags","hasModel","snippetController","fire","modelVersionNow","getAlternativeVersionId","tasks","cts","pushUndoStop","info","getOverwriteInfo","memorize","isResolved","_commandExectionDuration","_additionalEditsAppliedAsync","Array","isArray","scrollState","capture","executeEdits","map","edit","replaceMove","lift","text","restoreRelativeVerticalPositionOfCursor","sw","docListener","onDidChangeContent","isFlush","change","changes","thisPosition","getEndPosition","isBefore","oldFlags","didType","typeListener","onWillType","push","resolve","token","then","isCancellationRequested","undefined","some","applied","trace","elapsed","finally","escape","insert","overwriteBefore","overwriteAfter","undoStopBefore","undoStopAfter","adjustWhitespace","clipboardText","overtypingCapturer","command","id","TriggerSuggestAction","trigger","executeCommand","catch","extensionId","next","canUndo","undo","_alertCompletionItem","Promise","all","_reportSuggestionAcceptedTelemetry","itemResolved","commandExectionDuration","additionalEditsAppliedAsync","_a","_b","_c","Math","floor","random","publicLog2","providerId","_debugDisplayName","kind","basenameHash","uri","toString","languageId","getLanguageId","fileExtension","resolveInfo","resolveDuration","commandDuration","additionalEditsAsync","toggleMode","replace","columnDelta","suffixDelta","msg","localize","textLabel","triggerSuggest","onlyFrom","noFilter","completionOptions","providerFilter","kindFilter","Set","revealPosition","triggerSuggestAndAcceptBest","arg","positionNow","fallback","makesTextEdit","textNow","once","_","listener","any","acceptSelectedSuggestion","keepAlternativeSuggestions","alternativeOverwriteConfig","getFocusedItem","acceptNextSuggestion","acceptPrevSuggestion","prev","cancelSuggestWidget","focusSuggestion","focusSelected","selectNextSuggestion","selectNext","selectNextPageSuggestion","selectNextPage","selectLastSuggestion","selectLast","selectPrevSuggestion","selectPrevious","selectPrevPageSuggestion","selectPreviousPage","selectFirstSuggestion","selectFirst","toggleSuggestionDetails","toggleDetails","toggleExplainMode","toggleSuggestionFocus","toggleDetailsFocus","resetWidgetSize","resetPersistedSize","forceRenderingAbove","stopForceRenderingAbove","isInitialized","registerSelector","prioritySelector","_items","indexOf","Error","sort","s1","s2","idx","splice","alias","precondition","and","writable","hasCompletionItemProvider","Visible","toNegated","kbOpts","kbExpr","textInputFocus","primary","secondary","mac","weight","run","_accessor","args","controller","SuggestCommand","bindToContribution","HasFocusedSuggestion","handler","x","menuOpts","menuId","title","group","order","when","isEqualTo","registerCommandAlias","or","MultipleSuggestions","negate","DetailsVisible","AtEnd","OtherSuggestions","InSnippetMode"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SuggestController_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { KeyCodeChord } from '../../../../base/common/keybindings.js';\nimport { DisposableStore, dispose, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { assertType, isObject } from '../../../../base/common/types.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { ISuggestMemoryService } from './suggestMemory.js';\nimport { WordContextKey } from './wordContextKey.js';\nimport * as nls from '../../../../nls.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { Context as SuggestContext, suggestWidgetStatusbarMenu } from './suggest.js';\nimport { SuggestAlternatives } from './suggestAlternatives.js';\nimport { CommitCharacterController } from './suggestCommitCharacters.js';\nimport { SuggestModel } from './suggestModel.js';\nimport { OvertypingCapturer } from './suggestOvertypingCapturer.js';\nimport { SuggestWidget } from './suggestWidget.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { basename, extname } from '../../../../base/common/resources.js';\nimport { hash } from '../../../../base/common/hash.js';\nimport { WindowIdleValue, getWindow } from '../../../../base/browser/dom.js';\n// sticky suggest widget which doesn't disappear on focus out and such\nconst _sticky = false;\nclass LineSuffix {\n    constructor(_model, _position) {\n        this._model = _model;\n        this._position = _position;\n        // spy on what's happening right of the cursor. two cases:\n        // 1. end of line -> check that it's still end of line\n        // 2. mid of line -> add a marker and compute the delta\n        const maxColumn = _model.getLineMaxColumn(_position.lineNumber);\n        if (maxColumn !== _position.column) {\n            const offset = _model.getOffsetAt(_position);\n            const end = _model.getPositionAt(offset + 1);\n            this._marker = _model.deltaDecorations([], [{\n                    range: Range.fromPositions(_position, end),\n                    options: { description: 'suggest-line-suffix', stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */ }\n                }]);\n        }\n    }\n    dispose() {\n        if (this._marker && !this._model.isDisposed()) {\n            this._model.deltaDecorations(this._marker, []);\n        }\n    }\n    delta(position) {\n        if (this._model.isDisposed() || this._position.lineNumber !== position.lineNumber) {\n            // bail out early if things seems fishy\n            return 0;\n        }\n        // read the marker (in case suggest was triggered at line end) or compare\n        // the cursor to the line end.\n        if (this._marker) {\n            const range = this._model.getDecorationRange(this._marker[0]);\n            const end = this._model.getOffsetAt(range.getStartPosition());\n            return end - this._model.getOffsetAt(position);\n        }\n        else {\n            return this._model.getLineMaxColumn(position.lineNumber) - position.column;\n        }\n    }\n}\nlet SuggestController = SuggestController_1 = class SuggestController {\n    static get(editor) {\n        return editor.getContribution(SuggestController_1.ID);\n    }\n    constructor(editor, _memoryService, _commandService, _contextKeyService, _instantiationService, _logService, _telemetryService) {\n        this._memoryService = _memoryService;\n        this._commandService = _commandService;\n        this._contextKeyService = _contextKeyService;\n        this._instantiationService = _instantiationService;\n        this._logService = _logService;\n        this._telemetryService = _telemetryService;\n        this._lineSuffix = new MutableDisposable();\n        this._toDispose = new DisposableStore();\n        this._selectors = new PriorityRegistry(s => s.priority);\n        this._onWillInsertSuggestItem = new Emitter();\n        this.onWillInsertSuggestItem = this._onWillInsertSuggestItem.event;\n        this.editor = editor;\n        this.model = _instantiationService.createInstance(SuggestModel, this.editor);\n        // default selector\n        this._selectors.register({\n            priority: 0,\n            select: (model, pos, items) => this._memoryService.select(model, pos, items)\n        });\n        // context key: update insert/replace mode\n        const ctxInsertMode = SuggestContext.InsertMode.bindTo(_contextKeyService);\n        ctxInsertMode.set(editor.getOption(117 /* EditorOption.suggest */).insertMode);\n        this._toDispose.add(this.model.onDidTrigger(() => ctxInsertMode.set(editor.getOption(117 /* EditorOption.suggest */).insertMode)));\n        this.widget = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n            const widget = this._instantiationService.createInstance(SuggestWidget, this.editor);\n            this._toDispose.add(widget);\n            this._toDispose.add(widget.onDidSelect(item => this._insertSuggestion(item, 0 /* InsertFlags.None */), this));\n            // Wire up logic to accept a suggestion on certain characters\n            const commitCharacterController = new CommitCharacterController(this.editor, widget, this.model, item => this._insertSuggestion(item, 2 /* InsertFlags.NoAfterUndoStop */));\n            this._toDispose.add(commitCharacterController);\n            // Wire up makes text edit context key\n            const ctxMakesTextEdit = SuggestContext.MakesTextEdit.bindTo(this._contextKeyService);\n            const ctxHasInsertAndReplace = SuggestContext.HasInsertAndReplaceRange.bindTo(this._contextKeyService);\n            const ctxCanResolve = SuggestContext.CanResolve.bindTo(this._contextKeyService);\n            this._toDispose.add(toDisposable(() => {\n                ctxMakesTextEdit.reset();\n                ctxHasInsertAndReplace.reset();\n                ctxCanResolve.reset();\n            }));\n            this._toDispose.add(widget.onDidFocus(({ item }) => {\n                // (ctx: makesTextEdit)\n                const position = this.editor.getPosition();\n                const startColumn = item.editStart.column;\n                const endColumn = position.column;\n                let value = true;\n                if (this.editor.getOption(1 /* EditorOption.acceptSuggestionOnEnter */) === 'smart'\n                    && this.model.state === 2 /* State.Auto */\n                    && !item.completion.additionalTextEdits\n                    && !(item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */)\n                    && endColumn - startColumn === item.completion.insertText.length) {\n                    const oldText = this.editor.getModel().getValueInRange({\n                        startLineNumber: position.lineNumber,\n                        startColumn,\n                        endLineNumber: position.lineNumber,\n                        endColumn\n                    });\n                    value = oldText !== item.completion.insertText;\n                }\n                ctxMakesTextEdit.set(value);\n                // (ctx: hasInsertAndReplaceRange)\n                ctxHasInsertAndReplace.set(!Position.equals(item.editInsertEnd, item.editReplaceEnd));\n                // (ctx: canResolve)\n                ctxCanResolve.set(Boolean(item.provider.resolveCompletionItem) || Boolean(item.completion.documentation) || item.completion.detail !== item.completion.label);\n            }));\n            this._toDispose.add(widget.onDetailsKeyDown(e => {\n                // cmd + c on macOS, ctrl + c on Win / Linux\n                if (e.toKeyCodeChord().equals(new KeyCodeChord(true, false, false, false, 33 /* KeyCode.KeyC */)) ||\n                    (platform.isMacintosh && e.toKeyCodeChord().equals(new KeyCodeChord(false, false, false, true, 33 /* KeyCode.KeyC */)))) {\n                    e.stopPropagation();\n                    return;\n                }\n                if (!e.toKeyCodeChord().isModifierKey()) {\n                    this.editor.focus();\n                }\n            }));\n            return widget;\n        }));\n        // Wire up text overtyping capture\n        this._overtypingCapturer = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n            return this._toDispose.add(new OvertypingCapturer(this.editor, this.model));\n        }));\n        this._alternatives = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n            return this._toDispose.add(new SuggestAlternatives(this.editor, this._contextKeyService));\n        }));\n        this._toDispose.add(_instantiationService.createInstance(WordContextKey, editor));\n        this._toDispose.add(this.model.onDidTrigger(e => {\n            this.widget.value.showTriggered(e.auto, e.shy ? 250 : 50);\n            this._lineSuffix.value = new LineSuffix(this.editor.getModel(), e.position);\n        }));\n        this._toDispose.add(this.model.onDidSuggest(e => {\n            if (e.triggerOptions.shy) {\n                return;\n            }\n            let index = -1;\n            for (const selector of this._selectors.itemsOrderedByPriorityDesc) {\n                index = selector.select(this.editor.getModel(), this.editor.getPosition(), e.completionModel.items);\n                if (index !== -1) {\n                    break;\n                }\n            }\n            if (index === -1) {\n                index = 0;\n            }\n            let noFocus = false;\n            if (e.triggerOptions.auto) {\n                // don't \"focus\" item when configured to do\n                const options = this.editor.getOption(117 /* EditorOption.suggest */);\n                if (options.selectionMode === 'never' || options.selectionMode === 'always') {\n                    // simple: always or never\n                    noFocus = options.selectionMode === 'never';\n                }\n                else if (options.selectionMode === 'whenTriggerCharacter') {\n                    // on with trigger character\n                    noFocus = e.triggerOptions.triggerKind !== 1 /* CompletionTriggerKind.TriggerCharacter */;\n                }\n                else if (options.selectionMode === 'whenQuickSuggestion') {\n                    // without trigger character or when refiltering\n                    noFocus = e.triggerOptions.triggerKind === 1 /* CompletionTriggerKind.TriggerCharacter */ && !e.triggerOptions.refilter;\n                }\n            }\n            this.widget.value.showSuggestions(e.completionModel, index, e.isFrozen, e.triggerOptions.auto, noFocus);\n        }));\n        this._toDispose.add(this.model.onDidCancel(e => {\n            if (!e.retrigger) {\n                this.widget.value.hideWidget();\n            }\n        }));\n        this._toDispose.add(this.editor.onDidBlurEditorWidget(() => {\n            if (!_sticky) {\n                this.model.cancel();\n                this.model.clear();\n            }\n        }));\n        // Manage the acceptSuggestionsOnEnter context key\n        const acceptSuggestionsOnEnter = SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\n        const updateFromConfig = () => {\n            const acceptSuggestionOnEnter = this.editor.getOption(1 /* EditorOption.acceptSuggestionOnEnter */);\n            acceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\n        };\n        this._toDispose.add(this.editor.onDidChangeConfiguration(() => updateFromConfig()));\n        updateFromConfig();\n    }\n    dispose() {\n        this._alternatives.dispose();\n        this._toDispose.dispose();\n        this.widget.dispose();\n        this.model.dispose();\n        this._lineSuffix.dispose();\n        this._onWillInsertSuggestItem.dispose();\n    }\n    _insertSuggestion(event, flags) {\n        if (!event || !event.item) {\n            this._alternatives.value.reset();\n            this.model.cancel();\n            this.model.clear();\n            return;\n        }\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        const snippetController = SnippetController2.get(this.editor);\n        if (!snippetController) {\n            return;\n        }\n        this._onWillInsertSuggestItem.fire({ item: event.item });\n        const model = this.editor.getModel();\n        const modelVersionNow = model.getAlternativeVersionId();\n        const { item } = event;\n        //\n        const tasks = [];\n        const cts = new CancellationTokenSource();\n        // pushing undo stops *before* additional text edits and\n        // *after* the main edit\n        if (!(flags & 1 /* InsertFlags.NoBeforeUndoStop */)) {\n            this.editor.pushUndoStop();\n        }\n        // compute overwrite[Before|After] deltas BEFORE applying extra edits\n        const info = this.getOverwriteInfo(item, Boolean(flags & 8 /* InsertFlags.AlternativeOverwriteConfig */));\n        // keep item in memory\n        this._memoryService.memorize(model, this.editor.getPosition(), item);\n        const isResolved = item.isResolved;\n        // telemetry data points: duration of command execution, info about async additional edits (-1=n/a, -2=none, 1=success, 0=failed)\n        let _commandExectionDuration = -1;\n        let _additionalEditsAppliedAsync = -1;\n        if (Array.isArray(item.completion.additionalTextEdits)) {\n            // cancel -> stops all listening and closes widget\n            this.model.cancel();\n            // sync additional edits\n            const scrollState = StableEditorScrollState.capture(this.editor);\n            this.editor.executeEdits('suggestController.additionalTextEdits.sync', item.completion.additionalTextEdits.map(edit => EditOperation.replaceMove(Range.lift(edit.range), edit.text)));\n            scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n        }\n        else if (!isResolved) {\n            // async additional edits\n            const sw = new StopWatch();\n            let position;\n            const docListener = model.onDidChangeContent(e => {\n                if (e.isFlush) {\n                    cts.cancel();\n                    docListener.dispose();\n                    return;\n                }\n                for (const change of e.changes) {\n                    const thisPosition = Range.getEndPosition(change.range);\n                    if (!position || Position.isBefore(thisPosition, position)) {\n                        position = thisPosition;\n                    }\n                }\n            });\n            const oldFlags = flags;\n            flags |= 2 /* InsertFlags.NoAfterUndoStop */;\n            let didType = false;\n            const typeListener = this.editor.onWillType(() => {\n                typeListener.dispose();\n                didType = true;\n                if (!(oldFlags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n                    this.editor.pushUndoStop();\n                }\n            });\n            tasks.push(item.resolve(cts.token).then(() => {\n                if (!item.completion.additionalTextEdits || cts.token.isCancellationRequested) {\n                    return undefined;\n                }\n                if (position && item.completion.additionalTextEdits.some(edit => Position.isBefore(position, Range.getStartPosition(edit.range)))) {\n                    return false;\n                }\n                if (didType) {\n                    this.editor.pushUndoStop();\n                }\n                const scrollState = StableEditorScrollState.capture(this.editor);\n                this.editor.executeEdits('suggestController.additionalTextEdits.async', item.completion.additionalTextEdits.map(edit => EditOperation.replaceMove(Range.lift(edit.range), edit.text)));\n                scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n                if (didType || !(oldFlags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n                    this.editor.pushUndoStop();\n                }\n                return true;\n            }).then(applied => {\n                this._logService.trace('[suggest] async resolving of edits DONE (ms, applied?)', sw.elapsed(), applied);\n                _additionalEditsAppliedAsync = applied === true ? 1 : applied === false ? 0 : -2;\n            }).finally(() => {\n                docListener.dispose();\n                typeListener.dispose();\n            }));\n        }\n        let { insertText } = item.completion;\n        if (!(item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */)) {\n            insertText = SnippetParser.escape(insertText);\n        }\n        // cancel -> stops all listening and closes widget\n        this.model.cancel();\n        snippetController.insert(insertText, {\n            overwriteBefore: info.overwriteBefore,\n            overwriteAfter: info.overwriteAfter,\n            undoStopBefore: false,\n            undoStopAfter: false,\n            adjustWhitespace: !(item.completion.insertTextRules & 1 /* CompletionItemInsertTextRule.KeepWhitespace */),\n            clipboardText: event.model.clipboardText,\n            overtypingCapturer: this._overtypingCapturer.value\n        });\n        if (!(flags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n            this.editor.pushUndoStop();\n        }\n        if (item.completion.command) {\n            if (item.completion.command.id === TriggerSuggestAction.id) {\n                // retigger\n                this.model.trigger({ auto: true, retrigger: true });\n            }\n            else {\n                // exec command, done\n                const sw = new StopWatch();\n                tasks.push(this._commandService.executeCommand(item.completion.command.id, ...(item.completion.command.arguments ? [...item.completion.command.arguments] : [])).catch(e => {\n                    if (item.completion.extensionId) {\n                        onUnexpectedExternalError(e);\n                    }\n                    else {\n                        onUnexpectedError(e);\n                    }\n                }).finally(() => {\n                    _commandExectionDuration = sw.elapsed();\n                }));\n            }\n        }\n        if (flags & 4 /* InsertFlags.KeepAlternativeSuggestions */) {\n            this._alternatives.value.set(event, next => {\n                // cancel resolving of additional edits\n                cts.cancel();\n                // this is not so pretty. when inserting the 'next'\n                // suggestion we undo until we are at the state at\n                // which we were before inserting the previous suggestion...\n                while (model.canUndo()) {\n                    if (modelVersionNow !== model.getAlternativeVersionId()) {\n                        model.undo();\n                    }\n                    this._insertSuggestion(next, 1 /* InsertFlags.NoBeforeUndoStop */ | 2 /* InsertFlags.NoAfterUndoStop */ | (flags & 8 /* InsertFlags.AlternativeOverwriteConfig */ ? 8 /* InsertFlags.AlternativeOverwriteConfig */ : 0));\n                    break;\n                }\n            });\n        }\n        this._alertCompletionItem(item);\n        // clear only now - after all tasks are done\n        Promise.all(tasks).finally(() => {\n            this._reportSuggestionAcceptedTelemetry(item, model, isResolved, _commandExectionDuration, _additionalEditsAppliedAsync);\n            this.model.clear();\n            cts.dispose();\n        });\n    }\n    _reportSuggestionAcceptedTelemetry(item, model, itemResolved, commandExectionDuration, additionalEditsAppliedAsync) {\n        var _a, _b, _c;\n        if (Math.floor(Math.random() * 100) === 0) {\n            // throttle telemetry event because accepting completions happens a lot\n            return;\n        }\n        this._telemetryService.publicLog2('suggest.acceptedSuggestion', {\n            extensionId: (_b = (_a = item.extensionId) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 'unknown',\n            providerId: (_c = item.provider._debugDisplayName) !== null && _c !== void 0 ? _c : 'unknown',\n            kind: item.completion.kind,\n            basenameHash: hash(basename(model.uri)).toString(16),\n            languageId: model.getLanguageId(),\n            fileExtension: extname(model.uri),\n            resolveInfo: !item.provider.resolveCompletionItem ? -1 : itemResolved ? 1 : 0,\n            resolveDuration: item.resolveDuration,\n            commandDuration: commandExectionDuration,\n            additionalEditsAsync: additionalEditsAppliedAsync\n        });\n    }\n    getOverwriteInfo(item, toggleMode) {\n        assertType(this.editor.hasModel());\n        let replace = this.editor.getOption(117 /* EditorOption.suggest */).insertMode === 'replace';\n        if (toggleMode) {\n            replace = !replace;\n        }\n        const overwriteBefore = item.position.column - item.editStart.column;\n        const overwriteAfter = (replace ? item.editReplaceEnd.column : item.editInsertEnd.column) - item.position.column;\n        const columnDelta = this.editor.getPosition().column - item.position.column;\n        const suffixDelta = this._lineSuffix.value ? this._lineSuffix.value.delta(this.editor.getPosition()) : 0;\n        return {\n            overwriteBefore: overwriteBefore + columnDelta,\n            overwriteAfter: overwriteAfter + suffixDelta\n        };\n    }\n    _alertCompletionItem(item) {\n        if (isNonEmptyArray(item.completion.additionalTextEdits)) {\n            const msg = nls.localize('aria.alert.snippet', \"Accepting '{0}' made {1} additional edits\", item.textLabel, item.completion.additionalTextEdits.length);\n            alert(msg);\n        }\n    }\n    triggerSuggest(onlyFrom, auto, noFilter) {\n        if (this.editor.hasModel()) {\n            this.model.trigger({\n                auto: auto !== null && auto !== void 0 ? auto : false,\n                completionOptions: { providerFilter: onlyFrom, kindFilter: noFilter ? new Set() : undefined }\n            });\n            this.editor.revealPosition(this.editor.getPosition(), 0 /* ScrollType.Smooth */);\n            this.editor.focus();\n        }\n    }\n    triggerSuggestAndAcceptBest(arg) {\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        const positionNow = this.editor.getPosition();\n        const fallback = () => {\n            if (positionNow.equals(this.editor.getPosition())) {\n                this._commandService.executeCommand(arg.fallback);\n            }\n        };\n        const makesTextEdit = (item) => {\n            if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */ || item.completion.additionalTextEdits) {\n                // snippet, other editor -> makes edit\n                return true;\n            }\n            const position = this.editor.getPosition();\n            const startColumn = item.editStart.column;\n            const endColumn = position.column;\n            if (endColumn - startColumn !== item.completion.insertText.length) {\n                // unequal lengths -> makes edit\n                return true;\n            }\n            const textNow = this.editor.getModel().getValueInRange({\n                startLineNumber: position.lineNumber,\n                startColumn,\n                endLineNumber: position.lineNumber,\n                endColumn\n            });\n            // unequal text -> makes edit\n            return textNow !== item.completion.insertText;\n        };\n        Event.once(this.model.onDidTrigger)(_ => {\n            // wait for trigger because only then the cancel-event is trustworthy\n            const listener = [];\n            Event.any(this.model.onDidTrigger, this.model.onDidCancel)(() => {\n                // retrigger or cancel -> try to type default text\n                dispose(listener);\n                fallback();\n            }, undefined, listener);\n            this.model.onDidSuggest(({ completionModel }) => {\n                dispose(listener);\n                if (completionModel.items.length === 0) {\n                    fallback();\n                    return;\n                }\n                const index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), completionModel.items);\n                const item = completionModel.items[index];\n                if (!makesTextEdit(item)) {\n                    fallback();\n                    return;\n                }\n                this.editor.pushUndoStop();\n                this._insertSuggestion({ index, item, model: completionModel }, 4 /* InsertFlags.KeepAlternativeSuggestions */ | 1 /* InsertFlags.NoBeforeUndoStop */ | 2 /* InsertFlags.NoAfterUndoStop */);\n            }, undefined, listener);\n        });\n        this.model.trigger({ auto: false, shy: true });\n        this.editor.revealPosition(positionNow, 0 /* ScrollType.Smooth */);\n        this.editor.focus();\n    }\n    acceptSelectedSuggestion(keepAlternativeSuggestions, alternativeOverwriteConfig) {\n        const item = this.widget.value.getFocusedItem();\n        let flags = 0;\n        if (keepAlternativeSuggestions) {\n            flags |= 4 /* InsertFlags.KeepAlternativeSuggestions */;\n        }\n        if (alternativeOverwriteConfig) {\n            flags |= 8 /* InsertFlags.AlternativeOverwriteConfig */;\n        }\n        this._insertSuggestion(item, flags);\n    }\n    acceptNextSuggestion() {\n        this._alternatives.value.next();\n    }\n    acceptPrevSuggestion() {\n        this._alternatives.value.prev();\n    }\n    cancelSuggestWidget() {\n        this.model.cancel();\n        this.model.clear();\n        this.widget.value.hideWidget();\n    }\n    focusSuggestion() {\n        this.widget.value.focusSelected();\n    }\n    selectNextSuggestion() {\n        this.widget.value.selectNext();\n    }\n    selectNextPageSuggestion() {\n        this.widget.value.selectNextPage();\n    }\n    selectLastSuggestion() {\n        this.widget.value.selectLast();\n    }\n    selectPrevSuggestion() {\n        this.widget.value.selectPrevious();\n    }\n    selectPrevPageSuggestion() {\n        this.widget.value.selectPreviousPage();\n    }\n    selectFirstSuggestion() {\n        this.widget.value.selectFirst();\n    }\n    toggleSuggestionDetails() {\n        this.widget.value.toggleDetails();\n    }\n    toggleExplainMode() {\n        this.widget.value.toggleExplainMode();\n    }\n    toggleSuggestionFocus() {\n        this.widget.value.toggleDetailsFocus();\n    }\n    resetWidgetSize() {\n        this.widget.value.resetPersistedSize();\n    }\n    forceRenderingAbove() {\n        this.widget.value.forceRenderingAbove();\n    }\n    stopForceRenderingAbove() {\n        if (!this.widget.isInitialized) {\n            // This method has no effect if the widget is not initialized yet.\n            return;\n        }\n        this.widget.value.stopForceRenderingAbove();\n    }\n    registerSelector(selector) {\n        return this._selectors.register(selector);\n    }\n};\nSuggestController.ID = 'editor.contrib.suggestController';\nSuggestController = SuggestController_1 = __decorate([\n    __param(1, ISuggestMemoryService),\n    __param(2, ICommandService),\n    __param(3, IContextKeyService),\n    __param(4, IInstantiationService),\n    __param(5, ILogService),\n    __param(6, ITelemetryService)\n], SuggestController);\nexport { SuggestController };\nclass PriorityRegistry {\n    constructor(prioritySelector) {\n        this.prioritySelector = prioritySelector;\n        this._items = new Array();\n    }\n    register(value) {\n        if (this._items.indexOf(value) !== -1) {\n            throw new Error('Value is already registered');\n        }\n        this._items.push(value);\n        this._items.sort((s1, s2) => this.prioritySelector(s2) - this.prioritySelector(s1));\n        return {\n            dispose: () => {\n                const idx = this._items.indexOf(value);\n                if (idx >= 0) {\n                    this._items.splice(idx, 1);\n                }\n            }\n        };\n    }\n    get itemsOrderedByPriorityDesc() {\n        return this._items;\n    }\n}\nexport class TriggerSuggestAction extends EditorAction {\n    constructor() {\n        super({\n            id: TriggerSuggestAction.id,\n            label: nls.localize('suggest.trigger.label', \"Trigger Suggest\"),\n            alias: 'Trigger Suggest',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCompletionItemProvider, SuggestContext.Visible.toNegated()),\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */, secondary: [512 /* KeyMod.Alt */ | 9 /* KeyCode.Escape */, 2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */] },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        const controller = SuggestController.get(editor);\n        if (!controller) {\n            return;\n        }\n        let auto;\n        if (args && typeof args === 'object') {\n            if (args.auto === true) {\n                auto = true;\n            }\n        }\n        controller.triggerSuggest(undefined, auto, undefined);\n    }\n}\nTriggerSuggestAction.id = 'editor.action.triggerSuggest';\nregisterEditorContribution(SuggestController.ID, SuggestController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(TriggerSuggestAction);\nconst weight = 100 /* KeybindingWeight.EditorContrib */ + 90;\nconst SuggestCommand = EditorCommand.bindToContribution(SuggestController.get);\nregisterEditorCommand(new SuggestCommand({\n    id: 'acceptSelectedSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion),\n    handler(x) {\n        x.acceptSelectedSuggestion(true, false);\n    },\n    kbOpts: [{\n            // normal tab\n            primary: 2 /* KeyCode.Tab */,\n            kbExpr: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\n            weight,\n        }, {\n            // accept on enter has special rules\n            primary: 3 /* KeyCode.Enter */,\n            kbExpr: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.AcceptSuggestionsOnEnter, SuggestContext.MakesTextEdit),\n            weight,\n        }],\n    menuOpts: [{\n            menuId: suggestWidgetStatusbarMenu,\n            title: nls.localize('accept.insert', \"Insert\"),\n            group: 'left',\n            order: 1,\n            when: SuggestContext.HasInsertAndReplaceRange.toNegated()\n        }, {\n            menuId: suggestWidgetStatusbarMenu,\n            title: nls.localize('accept.insert', \"Insert\"),\n            group: 'left',\n            order: 1,\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert'))\n        }, {\n            menuId: suggestWidgetStatusbarMenu,\n            title: nls.localize('accept.replace', \"Replace\"),\n            group: 'left',\n            order: 1,\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace'))\n        }]\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'acceptAlternativeSelectedSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.HasFocusedSuggestion),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n        secondary: [1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */],\n    },\n    handler(x) {\n        x.acceptSelectedSuggestion(false, true);\n    },\n    menuOpts: [{\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'left',\n            order: 2,\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert')),\n            title: nls.localize('accept.replace', \"Replace\")\n        }, {\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'left',\n            order: 2,\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace')),\n            title: nls.localize('accept.insert', \"Insert\")\n        }]\n}));\n// continue to support the old command\nCommandsRegistry.registerCommandAlias('acceptSelectedSuggestionOnEnter', 'acceptSelectedSuggestion');\nregisterEditorCommand(new SuggestCommand({\n    id: 'hideSuggestWidget',\n    precondition: SuggestContext.Visible,\n    handler: x => x.cancelSuggestWidget(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectNextSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectNextSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 18 /* KeyCode.DownArrow */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\n        mac: { primary: 18 /* KeyCode.DownArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */, 256 /* KeyMod.WinCtrl */ | 44 /* KeyCode.KeyN */] }\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectNextPageSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectNextPageSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 12 /* KeyCode.PageDown */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 12 /* KeyCode.PageDown */]\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectLastSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectLastSuggestion()\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectPrevSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectPrevSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 16 /* KeyCode.UpArrow */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\n        mac: { primary: 16 /* KeyCode.UpArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */, 256 /* KeyMod.WinCtrl */ | 46 /* KeyCode.KeyP */] }\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectPrevPageSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectPrevPageSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 11 /* KeyCode.PageUp */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 11 /* KeyCode.PageUp */]\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectFirstSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectFirstSuggestion()\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'focusSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion.negate()),\n    handler: x => x.focusSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n        mac: { primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */, secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */] }\n    },\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'focusAndAcceptSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion.negate()),\n    handler: c => {\n        c.focusSuggestion();\n        c.acceptSelectedSuggestion(true, false);\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'toggleSuggestionDetails',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion),\n    handler: x => x.toggleSuggestionDetails(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n        mac: { primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */, secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */] }\n    },\n    menuOpts: [{\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'right',\n            order: 1,\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible, SuggestContext.CanResolve),\n            title: nls.localize('detail.more', \"show less\")\n        }, {\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'right',\n            order: 1,\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible.toNegated(), SuggestContext.CanResolve),\n            title: nls.localize('detail.less', \"show more\")\n        }]\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'toggleExplainMode',\n    precondition: SuggestContext.Visible,\n    handler: x => x.toggleExplainMode(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 90 /* KeyCode.Slash */,\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'toggleSuggestionFocus',\n    precondition: SuggestContext.Visible,\n    handler: x => x.toggleSuggestionFocus(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 10 /* KeyCode.Space */,\n        mac: { primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 10 /* KeyCode.Space */ }\n    }\n}));\n//#region tab completions\nregisterEditorCommand(new SuggestCommand({\n    id: 'insertBestCompletion',\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), WordContextKey.AtEnd, SuggestContext.Visible.toNegated(), SuggestAlternatives.OtherSuggestions.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n    handler: (x, arg) => {\n        x.triggerSuggestAndAcceptBest(isObject(arg) ? { fallback: 'tab', ...arg } : { fallback: 'tab' });\n    },\n    kbOpts: {\n        weight,\n        primary: 2 /* KeyCode.Tab */\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'insertNextSuggestion',\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n    handler: x => x.acceptNextSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2 /* KeyCode.Tab */\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'insertPrevSuggestion',\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n    handler: x => x.acceptPrevSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */\n    }\n}));\nregisterEditorAction(class extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.resetSuggestSize',\n            label: nls.localize('suggest.reset.label', \"Reset Suggest Widget Size\"),\n            alias: 'Reset Suggest Widget Size',\n            precondition: undefined\n        });\n    }\n    run(_accessor, editor) {\n        var _a;\n        (_a = SuggestController.get(editor)) === null || _a === void 0 ? void 0 : _a.resetWidgetSize();\n    }\n});\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA,IAAIA,UAAU,GAAI,IAAI,IAAI,IAAI,CAACA,UAAU,IAAK,UAAUC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAE;EACnF,IAAIC,CAAC,GAAGC,SAAS,CAACC,MAAM;IAAEC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGH,MAAM,GAAGE,IAAI,KAAK,IAAI,GAAGA,IAAI,GAAGK,MAAM,CAACC,wBAAwB,CAACR,MAAM,EAAEC,GAAG,CAAC,GAAGC,IAAI;IAAEO,CAAC;EAC5H,IAAI,OAAOC,OAAO,KAAK,QAAQ,IAAI,OAAOA,OAAO,CAACC,QAAQ,KAAK,UAAU,EAAEL,CAAC,GAAGI,OAAO,CAACC,QAAQ,CAACZ,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,CAAC,CAAC,KAC1H,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAM,GAAG,CAAC,EAAEO,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE,IAAIH,CAAC,GAAGV,UAAU,CAACa,CAAC,CAAC,EAAEN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAC,GAAGM,CAAC,CAACH,CAAC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGM,CAAC,CAACT,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,GAAGG,CAAC,CAACT,MAAM,EAAEC,GAAG,CAAC,KAAKK,CAAC;EACjJ,OAAOH,CAAC,GAAG,CAAC,IAAIG,CAAC,IAAIC,MAAM,CAACM,cAAc,CAACb,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,EAAEA,CAAC;AACjE,CAAC;AACD,IAAIQ,OAAO,GAAI,IAAI,IAAI,IAAI,CAACA,OAAO,IAAK,UAAUC,UAAU,EAAEC,SAAS,EAAE;EACrE,OAAO,UAAUhB,MAAM,EAAEC,GAAG,EAAE;IAAEe,SAAS,CAAChB,MAAM,EAAEC,GAAG,EAAEc,UAAU,CAAC;EAAE,CAAC;AACzE,CAAC;AACD,IAAIE,mBAAmB;AACvB,SAASC,KAAK,QAAQ,0CAA0C;AAChE,SAASC,eAAe,QAAQ,mCAAmC;AACnE,SAASC,uBAAuB,QAAQ,yCAAyC;AACjF,SAASC,iBAAiB,EAAEC,yBAAyB,QAAQ,mCAAmC;AAChG,SAASC,OAAO,EAAEC,KAAK,QAAQ,kCAAkC;AACjE,SAASC,YAAY,QAAQ,wCAAwC;AACrE,SAASC,eAAe,EAAEC,OAAO,EAAEC,iBAAiB,EAAEC,YAAY,QAAQ,sCAAsC;AAChH,OAAO,KAAKC,QAAQ,MAAM,qCAAqC;AAC/D,SAASC,SAAS,QAAQ,sCAAsC;AAChE,SAASC,UAAU,EAAEC,QAAQ,QAAQ,kCAAkC;AACvE,SAASC,uBAAuB,QAAQ,wCAAwC;AAChF,SAASC,YAAY,EAAEC,aAAa,EAAEC,oBAAoB,EAAEC,qBAAqB,EAAEC,0BAA0B,QAAQ,sCAAsC;AAC3J,SAASC,aAAa,QAAQ,uCAAuC;AACrE,SAASC,QAAQ,QAAQ,kCAAkC;AAC3D,SAASC,KAAK,QAAQ,+BAA+B;AACrD,SAASC,iBAAiB,QAAQ,sCAAsC;AACxE,SAASC,kBAAkB,QAAQ,6CAA6C;AAChF,SAASC,aAAa,QAAQ,wCAAwC;AACtE,SAASC,qBAAqB,QAAQ,oBAAoB;AAC1D,SAASC,cAAc,QAAQ,qBAAqB;AACpD,OAAO,KAAKC,GAAG,MAAM,oBAAoB;AACzC,SAASC,gBAAgB,EAAEC,eAAe,QAAQ,kDAAkD;AACpG,SAASC,cAAc,EAAEC,kBAAkB,QAAQ,sDAAsD;AACzG,SAASC,qBAAqB,QAAQ,4DAA4D;AAClG,SAASC,WAAW,QAAQ,wCAAwC;AACpE,SAASC,OAAO,IAAIC,cAAc,EAAEC,0BAA0B,QAAQ,cAAc;AACpF,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,yBAAyB,QAAQ,8BAA8B;AACxE,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,iBAAiB,QAAQ,oDAAoD;AACtF,SAASC,QAAQ,EAAEC,OAAO,QAAQ,sCAAsC;AACxE,SAASC,IAAI,QAAQ,iCAAiC;AACtD,SAASC,eAAe,EAAEC,SAAS,QAAQ,iCAAiC;AAC5E;AACA,MAAMC,OAAO,GAAG,KAAK;AACrB,MAAMC,UAAU,CAAC;EACbC,WAAWA,CAACC,MAAM,EAAEC,SAAS,EAAE;IAC3B,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B;IACA;IACA;IACA,MAAMC,SAAS,GAAGF,MAAM,CAACG,gBAAgB,CAACF,SAAS,CAACG,UAAU,CAAC;IAC/D,IAAIF,SAAS,KAAKD,SAAS,CAACI,MAAM,EAAE;MAChC,MAAMC,MAAM,GAAGN,MAAM,CAACO,WAAW,CAACN,SAAS,CAAC;MAC5C,MAAMO,GAAG,GAAGR,MAAM,CAACS,aAAa,CAACH,MAAM,GAAG,CAAC,CAAC;MAC5C,IAAI,CAACI,OAAO,GAAGV,MAAM,CAACW,gBAAgB,CAAC,EAAE,EAAE,CAAC;QACpCC,KAAK,EAAE1C,KAAK,CAAC2C,aAAa,CAACZ,SAAS,EAAEO,GAAG,CAAC;QAC1CM,OAAO,EAAE;UAAEC,WAAW,EAAE,qBAAqB;UAAEC,UAAU,EAAE,CAAC,CAAC;QAAyD;MAC1H,CAAC,CAAC,CAAC;IACX;EACJ;EACA7D,OAAOA,CAAA,EAAG;IACN,IAAI,IAAI,CAACuD,OAAO,IAAI,CAAC,IAAI,CAACV,MAAM,CAACiB,UAAU,CAAC,CAAC,EAAE;MAC3C,IAAI,CAACjB,MAAM,CAACW,gBAAgB,CAAC,IAAI,CAACD,OAAO,EAAE,EAAE,CAAC;IAClD;EACJ;EACAQ,KAAKA,CAACC,QAAQ,EAAE;IACZ,IAAI,IAAI,CAACnB,MAAM,CAACiB,UAAU,CAAC,CAAC,IAAI,IAAI,CAAChB,SAAS,CAACG,UAAU,KAAKe,QAAQ,CAACf,UAAU,EAAE;MAC/E;MACA,OAAO,CAAC;IACZ;IACA;IACA;IACA,IAAI,IAAI,CAACM,OAAO,EAAE;MACd,MAAME,KAAK,GAAG,IAAI,CAACZ,MAAM,CAACoB,kBAAkB,CAAC,IAAI,CAACV,OAAO,CAAC,CAAC,CAAC,CAAC;MAC7D,MAAMF,GAAG,GAAG,IAAI,CAACR,MAAM,CAACO,WAAW,CAACK,KAAK,CAACS,gBAAgB,CAAC,CAAC,CAAC;MAC7D,OAAOb,GAAG,GAAG,IAAI,CAACR,MAAM,CAACO,WAAW,CAACY,QAAQ,CAAC;IAClD,CAAC,MACI;MACD,OAAO,IAAI,CAACnB,MAAM,CAACG,gBAAgB,CAACgB,QAAQ,CAACf,UAAU,CAAC,GAAGe,QAAQ,CAACd,MAAM;IAC9E;EACJ;AACJ;AACA,IAAIiB,iBAAiB,GAAG7E,mBAAmB,GAAG,MAAM6E,iBAAiB,CAAC;EAClE,OAAOC,GAAGA,CAACC,MAAM,EAAE;IACf,OAAOA,MAAM,CAACC,eAAe,CAAChF,mBAAmB,CAACiF,EAAE,CAAC;EACzD;EACA3B,WAAWA,CAACyB,MAAM,EAAEG,cAAc,EAAEC,eAAe,EAAEC,kBAAkB,EAAEC,qBAAqB,EAAEC,WAAW,EAAEC,iBAAiB,EAAE;IAC5H,IAAI,CAACL,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,eAAe,GAAGA,eAAe;IACtC,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,qBAAqB,GAAGA,qBAAqB;IAClD,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACC,WAAW,GAAG,IAAI7E,iBAAiB,CAAC,CAAC;IAC1C,IAAI,CAAC8E,UAAU,GAAG,IAAIhF,eAAe,CAAC,CAAC;IACvC,IAAI,CAACiF,UAAU,GAAG,IAAIC,gBAAgB,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAAC;IACvD,IAAI,CAACC,wBAAwB,GAAG,IAAIxF,OAAO,CAAC,CAAC;IAC7C,IAAI,CAACyF,uBAAuB,GAAG,IAAI,CAACD,wBAAwB,CAACE,KAAK;IAClE,IAAI,CAACjB,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACkB,KAAK,GAAGZ,qBAAqB,CAACa,cAAc,CAACvD,YAAY,EAAE,IAAI,CAACoC,MAAM,CAAC;IAC5E;IACA,IAAI,CAACW,UAAU,CAACS,QAAQ,CAAC;MACrBN,QAAQ,EAAE,CAAC;MACXO,MAAM,EAAEA,CAACH,KAAK,EAAEI,GAAG,EAAEC,KAAK,KAAK,IAAI,CAACpB,cAAc,CAACkB,MAAM,CAACH,KAAK,EAAEI,GAAG,EAAEC,KAAK;IAC/E,CAAC,CAAC;IACF;IACA,MAAMC,aAAa,GAAGhE,cAAc,CAACiE,UAAU,CAACC,MAAM,CAACrB,kBAAkB,CAAC;IAC1EmB,aAAa,CAACG,GAAG,CAAC3B,MAAM,CAAC4B,SAAS,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAACC,UAAU,CAAC;IAC9E,IAAI,CAACnB,UAAU,CAACoB,GAAG,CAAC,IAAI,CAACZ,KAAK,CAACa,YAAY,CAAC,MAAMP,aAAa,CAACG,GAAG,CAAC3B,MAAM,CAAC4B,SAAS,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC;IAClI,IAAI,CAACG,MAAM,GAAG,IAAI,CAACtB,UAAU,CAACoB,GAAG,CAAC,IAAI3D,eAAe,CAACC,SAAS,CAAC4B,MAAM,CAACiC,UAAU,CAAC,CAAC,CAAC,EAAE,MAAM;MACxF,MAAMD,MAAM,GAAG,IAAI,CAAC1B,qBAAqB,CAACa,cAAc,CAACrD,aAAa,EAAE,IAAI,CAACkC,MAAM,CAAC;MACpF,IAAI,CAACU,UAAU,CAACoB,GAAG,CAACE,MAAM,CAAC;MAC3B,IAAI,CAACtB,UAAU,CAACoB,GAAG,CAACE,MAAM,CAACE,WAAW,CAACC,IAAI,IAAI,IAAI,CAACC,iBAAiB,CAACD,IAAI,EAAE,CAAC,CAAC,sBAAsB,CAAC,EAAE,IAAI,CAAC,CAAC;MAC7G;MACA,MAAME,yBAAyB,GAAG,IAAI1E,yBAAyB,CAAC,IAAI,CAACqC,MAAM,EAAEgC,MAAM,EAAE,IAAI,CAACd,KAAK,EAAEiB,IAAI,IAAI,IAAI,CAACC,iBAAiB,CAACD,IAAI,EAAE,CAAC,CAAC,iCAAiC,CAAC,CAAC;MAC3K,IAAI,CAACzB,UAAU,CAACoB,GAAG,CAACO,yBAAyB,CAAC;MAC9C;MACA,MAAMC,gBAAgB,GAAG9E,cAAc,CAAC+E,aAAa,CAACb,MAAM,CAAC,IAAI,CAACrB,kBAAkB,CAAC;MACrF,MAAMmC,sBAAsB,GAAGhF,cAAc,CAACiF,wBAAwB,CAACf,MAAM,CAAC,IAAI,CAACrB,kBAAkB,CAAC;MACtG,MAAMqC,aAAa,GAAGlF,cAAc,CAACmF,UAAU,CAACjB,MAAM,CAAC,IAAI,CAACrB,kBAAkB,CAAC;MAC/E,IAAI,CAACK,UAAU,CAACoB,GAAG,CAACjG,YAAY,CAAC,MAAM;QACnCyG,gBAAgB,CAACM,KAAK,CAAC,CAAC;QACxBJ,sBAAsB,CAACI,KAAK,CAAC,CAAC;QAC9BF,aAAa,CAACE,KAAK,CAAC,CAAC;MACzB,CAAC,CAAC,CAAC;MACH,IAAI,CAAClC,UAAU,CAACoB,GAAG,CAACE,MAAM,CAACa,UAAU,CAAC,CAAC;QAAEV;MAAK,CAAC,KAAK;QAChD;QACA,MAAMxC,QAAQ,GAAG,IAAI,CAACK,MAAM,CAAC8C,WAAW,CAAC,CAAC;QAC1C,MAAMC,WAAW,GAAGZ,IAAI,CAACa,SAAS,CAACnE,MAAM;QACzC,MAAMoE,SAAS,GAAGtD,QAAQ,CAACd,MAAM;QACjC,IAAIqE,KAAK,GAAG,IAAI;QAChB,IAAI,IAAI,CAAClD,MAAM,CAAC4B,SAAS,CAAC,CAAC,CAAC,0CAA0C,CAAC,KAAK,OAAO,IAC5E,IAAI,CAACV,KAAK,CAACiC,KAAK,KAAK,CAAC,CAAC,oBACvB,CAAChB,IAAI,CAACiB,UAAU,CAACC,mBAAmB,IACpC,EAAElB,IAAI,CAACiB,UAAU,CAACE,eAAe,GAAG,CAAC,CAAC,mDAAmD,IACzFL,SAAS,GAAGF,WAAW,KAAKZ,IAAI,CAACiB,UAAU,CAACG,UAAU,CAAClJ,MAAM,EAAE;UAClE,MAAMmJ,OAAO,GAAG,IAAI,CAACxD,MAAM,CAACyD,QAAQ,CAAC,CAAC,CAACC,eAAe,CAAC;YACnDC,eAAe,EAAEhE,QAAQ,CAACf,UAAU;YACpCmE,WAAW;YACXa,aAAa,EAAEjE,QAAQ,CAACf,UAAU;YAClCqE;UACJ,CAAC,CAAC;UACFC,KAAK,GAAGM,OAAO,KAAKrB,IAAI,CAACiB,UAAU,CAACG,UAAU;QAClD;QACAjB,gBAAgB,CAACX,GAAG,CAACuB,KAAK,CAAC;QAC3B;QACAV,sBAAsB,CAACb,GAAG,CAAC,CAAClF,QAAQ,CAACoH,MAAM,CAAC1B,IAAI,CAAC2B,aAAa,EAAE3B,IAAI,CAAC4B,cAAc,CAAC,CAAC;QACrF;QACArB,aAAa,CAACf,GAAG,CAACqC,OAAO,CAAC7B,IAAI,CAAC8B,QAAQ,CAACC,qBAAqB,CAAC,IAAIF,OAAO,CAAC7B,IAAI,CAACiB,UAAU,CAACe,aAAa,CAAC,IAAIhC,IAAI,CAACiB,UAAU,CAACgB,MAAM,KAAKjC,IAAI,CAACiB,UAAU,CAACiB,KAAK,CAAC;MACjK,CAAC,CAAC,CAAC;MACH,IAAI,CAAC3D,UAAU,CAACoB,GAAG,CAACE,MAAM,CAACsC,gBAAgB,CAACC,CAAC,IAAI;QAC7C;QACA,IAAIA,CAAC,CAACC,cAAc,CAAC,CAAC,CAACX,MAAM,CAAC,IAAIpI,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,IAC5FK,QAAQ,CAAC2I,WAAW,IAAIF,CAAC,CAACC,cAAc,CAAC,CAAC,CAACX,MAAM,CAAC,IAAIpI,YAAY,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAE,EAAE;UACzH8I,CAAC,CAACG,eAAe,CAAC,CAAC;UACnB;QACJ;QACA,IAAI,CAACH,CAAC,CAACC,cAAc,CAAC,CAAC,CAACG,aAAa,CAAC,CAAC,EAAE;UACrC,IAAI,CAAC3E,MAAM,CAAC4E,KAAK,CAAC,CAAC;QACvB;MACJ,CAAC,CAAC,CAAC;MACH,OAAO5C,MAAM;IACjB,CAAC,CAAC,CAAC;IACH;IACA,IAAI,CAAC6C,mBAAmB,GAAG,IAAI,CAACnE,UAAU,CAACoB,GAAG,CAAC,IAAI3D,eAAe,CAACC,SAAS,CAAC4B,MAAM,CAACiC,UAAU,CAAC,CAAC,CAAC,EAAE,MAAM;MACrG,OAAO,IAAI,CAACvB,UAAU,CAACoB,GAAG,CAAC,IAAIjE,kBAAkB,CAAC,IAAI,CAACmC,MAAM,EAAE,IAAI,CAACkB,KAAK,CAAC,CAAC;IAC/E,CAAC,CAAC,CAAC;IACH,IAAI,CAAC4D,aAAa,GAAG,IAAI,CAACpE,UAAU,CAACoB,GAAG,CAAC,IAAI3D,eAAe,CAACC,SAAS,CAAC4B,MAAM,CAACiC,UAAU,CAAC,CAAC,CAAC,EAAE,MAAM;MAC/F,OAAO,IAAI,CAACvB,UAAU,CAACoB,GAAG,CAAC,IAAIpE,mBAAmB,CAAC,IAAI,CAACsC,MAAM,EAAE,IAAI,CAACK,kBAAkB,CAAC,CAAC;IAC7F,CAAC,CAAC,CAAC;IACH,IAAI,CAACK,UAAU,CAACoB,GAAG,CAACxB,qBAAqB,CAACa,cAAc,CAACpE,cAAc,EAAEiD,MAAM,CAAC,CAAC;IACjF,IAAI,CAACU,UAAU,CAACoB,GAAG,CAAC,IAAI,CAACZ,KAAK,CAACa,YAAY,CAACwC,CAAC,IAAI;MAC7C,IAAI,CAACvC,MAAM,CAACkB,KAAK,CAAC6B,aAAa,CAACR,CAAC,CAACS,IAAI,EAAET,CAAC,CAACU,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;MACzD,IAAI,CAACxE,WAAW,CAACyC,KAAK,GAAG,IAAI5E,UAAU,CAAC,IAAI,CAAC0B,MAAM,CAACyD,QAAQ,CAAC,CAAC,EAAEc,CAAC,CAAC5E,QAAQ,CAAC;IAC/E,CAAC,CAAC,CAAC;IACH,IAAI,CAACe,UAAU,CAACoB,GAAG,CAAC,IAAI,CAACZ,KAAK,CAACgE,YAAY,CAACX,CAAC,IAAI;MAC7C,IAAIA,CAAC,CAACY,cAAc,CAACF,GAAG,EAAE;QACtB;MACJ;MACA,IAAIG,KAAK,GAAG,CAAC,CAAC;MACd,KAAK,MAAMC,QAAQ,IAAI,IAAI,CAAC1E,UAAU,CAAC2E,0BAA0B,EAAE;QAC/DF,KAAK,GAAGC,QAAQ,CAAChE,MAAM,CAAC,IAAI,CAACrB,MAAM,CAACyD,QAAQ,CAAC,CAAC,EAAE,IAAI,CAACzD,MAAM,CAAC8C,WAAW,CAAC,CAAC,EAAEyB,CAAC,CAACgB,eAAe,CAAChE,KAAK,CAAC;QACnG,IAAI6D,KAAK,KAAK,CAAC,CAAC,EAAE;UACd;QACJ;MACJ;MACA,IAAIA,KAAK,KAAK,CAAC,CAAC,EAAE;QACdA,KAAK,GAAG,CAAC;MACb;MACA,IAAII,OAAO,GAAG,KAAK;MACnB,IAAIjB,CAAC,CAACY,cAAc,CAACH,IAAI,EAAE;QACvB;QACA,MAAM1F,OAAO,GAAG,IAAI,CAACU,MAAM,CAAC4B,SAAS,CAAC,GAAG,CAAC,0BAA0B,CAAC;QACrE,IAAItC,OAAO,CAACmG,aAAa,KAAK,OAAO,IAAInG,OAAO,CAACmG,aAAa,KAAK,QAAQ,EAAE;UACzE;UACAD,OAAO,GAAGlG,OAAO,CAACmG,aAAa,KAAK,OAAO;QAC/C,CAAC,MACI,IAAInG,OAAO,CAACmG,aAAa,KAAK,sBAAsB,EAAE;UACvD;UACAD,OAAO,GAAGjB,CAAC,CAACY,cAAc,CAACO,WAAW,KAAK,CAAC,CAAC;QACjD,CAAC,MACI,IAAIpG,OAAO,CAACmG,aAAa,KAAK,qBAAqB,EAAE;UACtD;UACAD,OAAO,GAAGjB,CAAC,CAACY,cAAc,CAACO,WAAW,KAAK,CAAC,CAAC,gDAAgD,CAACnB,CAAC,CAACY,cAAc,CAACQ,QAAQ;QAC3H;MACJ;MACA,IAAI,CAAC3D,MAAM,CAACkB,KAAK,CAAC0C,eAAe,CAACrB,CAAC,CAACgB,eAAe,EAAEH,KAAK,EAAEb,CAAC,CAACsB,QAAQ,EAAEtB,CAAC,CAACY,cAAc,CAACH,IAAI,EAAEQ,OAAO,CAAC;IAC3G,CAAC,CAAC,CAAC;IACH,IAAI,CAAC9E,UAAU,CAACoB,GAAG,CAAC,IAAI,CAACZ,KAAK,CAAC4E,WAAW,CAACvB,CAAC,IAAI;MAC5C,IAAI,CAACA,CAAC,CAACwB,SAAS,EAAE;QACd,IAAI,CAAC/D,MAAM,CAACkB,KAAK,CAAC8C,UAAU,CAAC,CAAC;MAClC;IACJ,CAAC,CAAC,CAAC;IACH,IAAI,CAACtF,UAAU,CAACoB,GAAG,CAAC,IAAI,CAAC9B,MAAM,CAACiG,qBAAqB,CAAC,MAAM;MACxD,IAAI,CAAC5H,OAAO,EAAE;QACV,IAAI,CAAC6C,KAAK,CAACgF,MAAM,CAAC,CAAC;QACnB,IAAI,CAAChF,KAAK,CAACiF,KAAK,CAAC,CAAC;MACtB;IACJ,CAAC,CAAC,CAAC;IACH;IACA,MAAMC,wBAAwB,GAAG5I,cAAc,CAAC6I,wBAAwB,CAAC3E,MAAM,CAACrB,kBAAkB,CAAC;IACnG,MAAMiG,gBAAgB,GAAGA,CAAA,KAAM;MAC3B,MAAMC,uBAAuB,GAAG,IAAI,CAACvG,MAAM,CAAC4B,SAAS,CAAC,CAAC,CAAC,0CAA0C,CAAC;MACnGwE,wBAAwB,CAACzE,GAAG,CAAC4E,uBAAuB,KAAK,IAAI,IAAIA,uBAAuB,KAAK,OAAO,CAAC;IACzG,CAAC;IACD,IAAI,CAAC7F,UAAU,CAACoB,GAAG,CAAC,IAAI,CAAC9B,MAAM,CAACwG,wBAAwB,CAAC,MAAMF,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACnFA,gBAAgB,CAAC,CAAC;EACtB;EACA3K,OAAOA,CAAA,EAAG;IACN,IAAI,CAACmJ,aAAa,CAACnJ,OAAO,CAAC,CAAC;IAC5B,IAAI,CAAC+E,UAAU,CAAC/E,OAAO,CAAC,CAAC;IACzB,IAAI,CAACqG,MAAM,CAACrG,OAAO,CAAC,CAAC;IACrB,IAAI,CAACuF,KAAK,CAACvF,OAAO,CAAC,CAAC;IACpB,IAAI,CAAC8E,WAAW,CAAC9E,OAAO,CAAC,CAAC;IAC1B,IAAI,CAACoF,wBAAwB,CAACpF,OAAO,CAAC,CAAC;EAC3C;EACAyG,iBAAiBA,CAACnB,KAAK,EAAEwF,KAAK,EAAE;IAC5B,IAAI,CAACxF,KAAK,IAAI,CAACA,KAAK,CAACkB,IAAI,EAAE;MACvB,IAAI,CAAC2C,aAAa,CAAC5B,KAAK,CAACN,KAAK,CAAC,CAAC;MAChC,IAAI,CAAC1B,KAAK,CAACgF,MAAM,CAAC,CAAC;MACnB,IAAI,CAAChF,KAAK,CAACiF,KAAK,CAAC,CAAC;MAClB;IACJ;IACA,IAAI,CAAC,IAAI,CAACnG,MAAM,CAAC0G,QAAQ,CAAC,CAAC,EAAE;MACzB;IACJ;IACA,MAAMC,iBAAiB,GAAG/J,kBAAkB,CAACmD,GAAG,CAAC,IAAI,CAACC,MAAM,CAAC;IAC7D,IAAI,CAAC2G,iBAAiB,EAAE;MACpB;IACJ;IACA,IAAI,CAAC5F,wBAAwB,CAAC6F,IAAI,CAAC;MAAEzE,IAAI,EAAElB,KAAK,CAACkB;IAAK,CAAC,CAAC;IACxD,MAAMjB,KAAK,GAAG,IAAI,CAAClB,MAAM,CAACyD,QAAQ,CAAC,CAAC;IACpC,MAAMoD,eAAe,GAAG3F,KAAK,CAAC4F,uBAAuB,CAAC,CAAC;IACvD,MAAM;MAAE3E;IAAK,CAAC,GAAGlB,KAAK;IACtB;IACA,MAAM8F,KAAK,GAAG,EAAE;IAChB,MAAMC,GAAG,GAAG,IAAI5L,uBAAuB,CAAC,CAAC;IACzC;IACA;IACA,IAAI,EAAEqL,KAAK,GAAG,CAAC,CAAC,mCAAmC,EAAE;MACjD,IAAI,CAACzG,MAAM,CAACiH,YAAY,CAAC,CAAC;IAC9B;IACA;IACA,MAAMC,IAAI,GAAG,IAAI,CAACC,gBAAgB,CAAChF,IAAI,EAAE6B,OAAO,CAACyC,KAAK,GAAG,CAAC,CAAC,4CAA4C,CAAC,CAAC;IACzG;IACA,IAAI,CAACtG,cAAc,CAACiH,QAAQ,CAAClG,KAAK,EAAE,IAAI,CAAClB,MAAM,CAAC8C,WAAW,CAAC,CAAC,EAAEX,IAAI,CAAC;IACpE,MAAMkF,UAAU,GAAGlF,IAAI,CAACkF,UAAU;IAClC;IACA,IAAIC,wBAAwB,GAAG,CAAC,CAAC;IACjC,IAAIC,4BAA4B,GAAG,CAAC,CAAC;IACrC,IAAIC,KAAK,CAACC,OAAO,CAACtF,IAAI,CAACiB,UAAU,CAACC,mBAAmB,CAAC,EAAE;MACpD;MACA,IAAI,CAACnC,KAAK,CAACgF,MAAM,CAAC,CAAC;MACnB;MACA,MAAMwB,WAAW,GAAGxL,uBAAuB,CAACyL,OAAO,CAAC,IAAI,CAAC3H,MAAM,CAAC;MAChE,IAAI,CAACA,MAAM,CAAC4H,YAAY,CAAC,4CAA4C,EAAEzF,IAAI,CAACiB,UAAU,CAACC,mBAAmB,CAACwE,GAAG,CAACC,IAAI,IAAItL,aAAa,CAACuL,WAAW,CAACrL,KAAK,CAACsL,IAAI,CAACF,IAAI,CAAC1I,KAAK,CAAC,EAAE0I,IAAI,CAACG,IAAI,CAAC,CAAC,CAAC;MACrLP,WAAW,CAACQ,uCAAuC,CAAC,IAAI,CAAClI,MAAM,CAAC;IACpE,CAAC,MACI,IAAI,CAACqH,UAAU,EAAE;MAClB;MACA,MAAMc,EAAE,GAAG,IAAIpM,SAAS,CAAC,CAAC;MAC1B,IAAI4D,QAAQ;MACZ,MAAMyI,WAAW,GAAGlH,KAAK,CAACmH,kBAAkB,CAAC9D,CAAC,IAAI;QAC9C,IAAIA,CAAC,CAAC+D,OAAO,EAAE;UACXtB,GAAG,CAACd,MAAM,CAAC,CAAC;UACZkC,WAAW,CAACzM,OAAO,CAAC,CAAC;UACrB;QACJ;QACA,KAAK,MAAM4M,MAAM,IAAIhE,CAAC,CAACiE,OAAO,EAAE;UAC5B,MAAMC,YAAY,GAAG/L,KAAK,CAACgM,cAAc,CAACH,MAAM,CAACnJ,KAAK,CAAC;UACvD,IAAI,CAACO,QAAQ,IAAIlD,QAAQ,CAACkM,QAAQ,CAACF,YAAY,EAAE9I,QAAQ,CAAC,EAAE;YACxDA,QAAQ,GAAG8I,YAAY;UAC3B;QACJ;MACJ,CAAC,CAAC;MACF,MAAMG,QAAQ,GAAGnC,KAAK;MACtBA,KAAK,IAAI,CAAC,CAAC;MACX,IAAIoC,OAAO,GAAG,KAAK;MACnB,MAAMC,YAAY,GAAG,IAAI,CAAC9I,MAAM,CAAC+I,UAAU,CAAC,MAAM;QAC9CD,YAAY,CAACnN,OAAO,CAAC,CAAC;QACtBkN,OAAO,GAAG,IAAI;QACd,IAAI,EAAED,QAAQ,GAAG,CAAC,CAAC,kCAAkC,EAAE;UACnD,IAAI,CAAC5I,MAAM,CAACiH,YAAY,CAAC,CAAC;QAC9B;MACJ,CAAC,CAAC;MACFF,KAAK,CAACiC,IAAI,CAAC7G,IAAI,CAAC8G,OAAO,CAACjC,GAAG,CAACkC,KAAK,CAAC,CAACC,IAAI,CAAC,MAAM;QAC1C,IAAI,CAAChH,IAAI,CAACiB,UAAU,CAACC,mBAAmB,IAAI2D,GAAG,CAACkC,KAAK,CAACE,uBAAuB,EAAE;UAC3E,OAAOC,SAAS;QACpB;QACA,IAAI1J,QAAQ,IAAIwC,IAAI,CAACiB,UAAU,CAACC,mBAAmB,CAACiG,IAAI,CAACxB,IAAI,IAAIrL,QAAQ,CAACkM,QAAQ,CAAChJ,QAAQ,EAAEjD,KAAK,CAACmD,gBAAgB,CAACiI,IAAI,CAAC1I,KAAK,CAAC,CAAC,CAAC,EAAE;UAC/H,OAAO,KAAK;QAChB;QACA,IAAIyJ,OAAO,EAAE;UACT,IAAI,CAAC7I,MAAM,CAACiH,YAAY,CAAC,CAAC;QAC9B;QACA,MAAMS,WAAW,GAAGxL,uBAAuB,CAACyL,OAAO,CAAC,IAAI,CAAC3H,MAAM,CAAC;QAChE,IAAI,CAACA,MAAM,CAAC4H,YAAY,CAAC,6CAA6C,EAAEzF,IAAI,CAACiB,UAAU,CAACC,mBAAmB,CAACwE,GAAG,CAACC,IAAI,IAAItL,aAAa,CAACuL,WAAW,CAACrL,KAAK,CAACsL,IAAI,CAACF,IAAI,CAAC1I,KAAK,CAAC,EAAE0I,IAAI,CAACG,IAAI,CAAC,CAAC,CAAC;QACtLP,WAAW,CAACQ,uCAAuC,CAAC,IAAI,CAAClI,MAAM,CAAC;QAChE,IAAI6I,OAAO,IAAI,EAAED,QAAQ,GAAG,CAAC,CAAC,kCAAkC,EAAE;UAC9D,IAAI,CAAC5I,MAAM,CAACiH,YAAY,CAAC,CAAC;QAC9B;QACA,OAAO,IAAI;MACf,CAAC,CAAC,CAACkC,IAAI,CAACI,OAAO,IAAI;QACf,IAAI,CAAChJ,WAAW,CAACiJ,KAAK,CAAC,wDAAwD,EAAErB,EAAE,CAACsB,OAAO,CAAC,CAAC,EAAEF,OAAO,CAAC;QACvGhC,4BAA4B,GAAGgC,OAAO,KAAK,IAAI,GAAG,CAAC,GAAGA,OAAO,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;MACpF,CAAC,CAAC,CAACG,OAAO,CAAC,MAAM;QACbtB,WAAW,CAACzM,OAAO,CAAC,CAAC;QACrBmN,YAAY,CAACnN,OAAO,CAAC,CAAC;MAC1B,CAAC,CAAC,CAAC;IACP;IACA,IAAI;MAAE4H;IAAW,CAAC,GAAGpB,IAAI,CAACiB,UAAU;IACpC,IAAI,EAAEjB,IAAI,CAACiB,UAAU,CAACE,eAAe,GAAG,CAAC,CAAC,mDAAmD,EAAE;MAC3FC,UAAU,GAAG1G,aAAa,CAAC8M,MAAM,CAACpG,UAAU,CAAC;IACjD;IACA;IACA,IAAI,CAACrC,KAAK,CAACgF,MAAM,CAAC,CAAC;IACnBS,iBAAiB,CAACiD,MAAM,CAACrG,UAAU,EAAE;MACjCsG,eAAe,EAAE3C,IAAI,CAAC2C,eAAe;MACrCC,cAAc,EAAE5C,IAAI,CAAC4C,cAAc;MACnCC,cAAc,EAAE,KAAK;MACrBC,aAAa,EAAE,KAAK;MACpBC,gBAAgB,EAAE,EAAE9H,IAAI,CAACiB,UAAU,CAACE,eAAe,GAAG,CAAC,CAAC,kDAAkD;MAC1G4G,aAAa,EAAEjJ,KAAK,CAACC,KAAK,CAACgJ,aAAa;MACxCC,kBAAkB,EAAE,IAAI,CAACtF,mBAAmB,CAAC3B;IACjD,CAAC,CAAC;IACF,IAAI,EAAEuD,KAAK,GAAG,CAAC,CAAC,kCAAkC,EAAE;MAChD,IAAI,CAACzG,MAAM,CAACiH,YAAY,CAAC,CAAC;IAC9B;IACA,IAAI9E,IAAI,CAACiB,UAAU,CAACgH,OAAO,EAAE;MACzB,IAAIjI,IAAI,CAACiB,UAAU,CAACgH,OAAO,CAACC,EAAE,KAAKC,oBAAoB,CAACD,EAAE,EAAE;QACxD;QACA,IAAI,CAACnJ,KAAK,CAACqJ,OAAO,CAAC;UAAEvF,IAAI,EAAE,IAAI;UAAEe,SAAS,EAAE;QAAK,CAAC,CAAC;MACvD,CAAC,MACI;QACD;QACA,MAAMoC,EAAE,GAAG,IAAIpM,SAAS,CAAC,CAAC;QAC1BgL,KAAK,CAACiC,IAAI,CAAC,IAAI,CAAC5I,eAAe,CAACoK,cAAc,CAACrI,IAAI,CAACiB,UAAU,CAACgH,OAAO,CAACC,EAAE,EAAE,IAAIlI,IAAI,CAACiB,UAAU,CAACgH,OAAO,CAAChQ,SAAS,GAAG,CAAC,GAAG+H,IAAI,CAACiB,UAAU,CAACgH,OAAO,CAAChQ,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,CAACqQ,KAAK,CAAClG,CAAC,IAAI;UACxK,IAAIpC,IAAI,CAACiB,UAAU,CAACsH,WAAW,EAAE;YAC7BpP,yBAAyB,CAACiJ,CAAC,CAAC;UAChC,CAAC,MACI;YACDlJ,iBAAiB,CAACkJ,CAAC,CAAC;UACxB;QACJ,CAAC,CAAC,CAACmF,OAAO,CAAC,MAAM;UACbpC,wBAAwB,GAAGa,EAAE,CAACsB,OAAO,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;MACP;IACJ;IACA,IAAIhD,KAAK,GAAG,CAAC,CAAC,8CAA8C;MACxD,IAAI,CAAC3B,aAAa,CAAC5B,KAAK,CAACvB,GAAG,CAACV,KAAK,EAAE0J,IAAI,IAAI;QACxC;QACA3D,GAAG,CAACd,MAAM,CAAC,CAAC;QACZ;QACA;QACA;QACA,OAAOhF,KAAK,CAAC0J,OAAO,CAAC,CAAC,EAAE;UACpB,IAAI/D,eAAe,KAAK3F,KAAK,CAAC4F,uBAAuB,CAAC,CAAC,EAAE;YACrD5F,KAAK,CAAC2J,IAAI,CAAC,CAAC;UAChB;UACA,IAAI,CAACzI,iBAAiB,CAACuI,IAAI,EAAE,CAAC,CAAC,qCAAqC,CAAC,CAAC,qCAAqClE,KAAK,GAAG,CAAC,CAAC,+CAA+C,CAAC,CAAC,+CAA+C,CAAC,CAAC,CAAC;UACxN;QACJ;MACJ,CAAC,CAAC;IACN;IACA,IAAI,CAACqE,oBAAoB,CAAC3I,IAAI,CAAC;IAC/B;IACA4I,OAAO,CAACC,GAAG,CAACjE,KAAK,CAAC,CAAC2C,OAAO,CAAC,MAAM;MAC7B,IAAI,CAACuB,kCAAkC,CAAC9I,IAAI,EAAEjB,KAAK,EAAEmG,UAAU,EAAEC,wBAAwB,EAAEC,4BAA4B,CAAC;MACxH,IAAI,CAACrG,KAAK,CAACiF,KAAK,CAAC,CAAC;MAClBa,GAAG,CAACrL,OAAO,CAAC,CAAC;IACjB,CAAC,CAAC;EACN;EACAsP,kCAAkCA,CAAC9I,IAAI,EAAEjB,KAAK,EAAEgK,YAAY,EAAEC,uBAAuB,EAAEC,2BAA2B,EAAE;IAChH,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE;IACd,IAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE;MACvC;MACA;IACJ;IACA,IAAI,CAAClL,iBAAiB,CAACmL,UAAU,CAAC,4BAA4B,EAAE;MAC5DjB,WAAW,EAAE,CAACY,EAAE,GAAG,CAACD,EAAE,GAAGlJ,IAAI,CAACuI,WAAW,MAAM,IAAI,IAAIW,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACnI,KAAK,MAAM,IAAI,IAAIoI,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,SAAS;MACpIM,UAAU,EAAE,CAACL,EAAE,GAAGpJ,IAAI,CAAC8B,QAAQ,CAAC4H,iBAAiB,MAAM,IAAI,IAAIN,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,SAAS;MAC7FO,IAAI,EAAE3J,IAAI,CAACiB,UAAU,CAAC0I,IAAI;MAC1BC,YAAY,EAAE7N,IAAI,CAACF,QAAQ,CAACkD,KAAK,CAAC8K,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;MACpDC,UAAU,EAAEhL,KAAK,CAACiL,aAAa,CAAC,CAAC;MACjCC,aAAa,EAAEnO,OAAO,CAACiD,KAAK,CAAC8K,GAAG,CAAC;MACjCK,WAAW,EAAE,CAAClK,IAAI,CAAC8B,QAAQ,CAACC,qBAAqB,GAAG,CAAC,CAAC,GAAGgH,YAAY,GAAG,CAAC,GAAG,CAAC;MAC7EoB,eAAe,EAAEnK,IAAI,CAACmK,eAAe;MACrCC,eAAe,EAAEpB,uBAAuB;MACxCqB,oBAAoB,EAAEpB;IAC1B,CAAC,CAAC;EACN;EACAjE,gBAAgBA,CAAChF,IAAI,EAAEsK,UAAU,EAAE;IAC/BzQ,UAAU,CAAC,IAAI,CAACgE,MAAM,CAAC0G,QAAQ,CAAC,CAAC,CAAC;IAClC,IAAIgG,OAAO,GAAG,IAAI,CAAC1M,MAAM,CAAC4B,SAAS,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAACC,UAAU,KAAK,SAAS;IAC5F,IAAI4K,UAAU,EAAE;MACZC,OAAO,GAAG,CAACA,OAAO;IACtB;IACA,MAAM7C,eAAe,GAAG1H,IAAI,CAACxC,QAAQ,CAACd,MAAM,GAAGsD,IAAI,CAACa,SAAS,CAACnE,MAAM;IACpE,MAAMiL,cAAc,GAAG,CAAC4C,OAAO,GAAGvK,IAAI,CAAC4B,cAAc,CAAClF,MAAM,GAAGsD,IAAI,CAAC2B,aAAa,CAACjF,MAAM,IAAIsD,IAAI,CAACxC,QAAQ,CAACd,MAAM;IAChH,MAAM8N,WAAW,GAAG,IAAI,CAAC3M,MAAM,CAAC8C,WAAW,CAAC,CAAC,CAACjE,MAAM,GAAGsD,IAAI,CAACxC,QAAQ,CAACd,MAAM;IAC3E,MAAM+N,WAAW,GAAG,IAAI,CAACnM,WAAW,CAACyC,KAAK,GAAG,IAAI,CAACzC,WAAW,CAACyC,KAAK,CAACxD,KAAK,CAAC,IAAI,CAACM,MAAM,CAAC8C,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;IACxG,OAAO;MACH+G,eAAe,EAAEA,eAAe,GAAG8C,WAAW;MAC9C7C,cAAc,EAAEA,cAAc,GAAG8C;IACrC,CAAC;EACL;EACA9B,oBAAoBA,CAAC3I,IAAI,EAAE;IACvB,IAAIhH,eAAe,CAACgH,IAAI,CAACiB,UAAU,CAACC,mBAAmB,CAAC,EAAE;MACtD,MAAMwJ,GAAG,GAAG7P,GAAG,CAAC8P,QAAQ,CAAC,oBAAoB,EAAE,2CAA2C,EAAE3K,IAAI,CAAC4K,SAAS,EAAE5K,IAAI,CAACiB,UAAU,CAACC,mBAAmB,CAAChJ,MAAM,CAAC;MACvJa,KAAK,CAAC2R,GAAG,CAAC;IACd;EACJ;EACAG,cAAcA,CAACC,QAAQ,EAAEjI,IAAI,EAAEkI,QAAQ,EAAE;IACrC,IAAI,IAAI,CAAClN,MAAM,CAAC0G,QAAQ,CAAC,CAAC,EAAE;MACxB,IAAI,CAACxF,KAAK,CAACqJ,OAAO,CAAC;QACfvF,IAAI,EAAEA,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAGA,IAAI,GAAG,KAAK;QACrDmI,iBAAiB,EAAE;UAAEC,cAAc,EAAEH,QAAQ;UAAEI,UAAU,EAAEH,QAAQ,GAAG,IAAII,GAAG,CAAC,CAAC,GAAGjE;QAAU;MAChG,CAAC,CAAC;MACF,IAAI,CAACrJ,MAAM,CAACuN,cAAc,CAAC,IAAI,CAACvN,MAAM,CAAC8C,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,uBAAuB,CAAC;MAChF,IAAI,CAAC9C,MAAM,CAAC4E,KAAK,CAAC,CAAC;IACvB;EACJ;EACA4I,2BAA2BA,CAACC,GAAG,EAAE;IAC7B,IAAI,CAAC,IAAI,CAACzN,MAAM,CAAC0G,QAAQ,CAAC,CAAC,EAAE;MACzB;IACJ;IACA,MAAMgH,WAAW,GAAG,IAAI,CAAC1N,MAAM,CAAC8C,WAAW,CAAC,CAAC;IAC7C,MAAM6K,QAAQ,GAAGA,CAAA,KAAM;MACnB,IAAID,WAAW,CAAC7J,MAAM,CAAC,IAAI,CAAC7D,MAAM,CAAC8C,WAAW,CAAC,CAAC,CAAC,EAAE;QAC/C,IAAI,CAAC1C,eAAe,CAACoK,cAAc,CAACiD,GAAG,CAACE,QAAQ,CAAC;MACrD;IACJ,CAAC;IACD,MAAMC,aAAa,GAAIzL,IAAI,IAAK;MAC5B,IAAIA,IAAI,CAACiB,UAAU,CAACE,eAAe,GAAG,CAAC,CAAC,sDAAsDnB,IAAI,CAACiB,UAAU,CAACC,mBAAmB,EAAE;QAC/H;QACA,OAAO,IAAI;MACf;MACA,MAAM1D,QAAQ,GAAG,IAAI,CAACK,MAAM,CAAC8C,WAAW,CAAC,CAAC;MAC1C,MAAMC,WAAW,GAAGZ,IAAI,CAACa,SAAS,CAACnE,MAAM;MACzC,MAAMoE,SAAS,GAAGtD,QAAQ,CAACd,MAAM;MACjC,IAAIoE,SAAS,GAAGF,WAAW,KAAKZ,IAAI,CAACiB,UAAU,CAACG,UAAU,CAAClJ,MAAM,EAAE;QAC/D;QACA,OAAO,IAAI;MACf;MACA,MAAMwT,OAAO,GAAG,IAAI,CAAC7N,MAAM,CAACyD,QAAQ,CAAC,CAAC,CAACC,eAAe,CAAC;QACnDC,eAAe,EAAEhE,QAAQ,CAACf,UAAU;QACpCmE,WAAW;QACXa,aAAa,EAAEjE,QAAQ,CAACf,UAAU;QAClCqE;MACJ,CAAC,CAAC;MACF;MACA,OAAO4K,OAAO,KAAK1L,IAAI,CAACiB,UAAU,CAACG,UAAU;IACjD,CAAC;IACD/H,KAAK,CAACsS,IAAI,CAAC,IAAI,CAAC5M,KAAK,CAACa,YAAY,CAAC,CAACgM,CAAC,IAAI;MACrC;MACA,MAAMC,QAAQ,GAAG,EAAE;MACnBxS,KAAK,CAACyS,GAAG,CAAC,IAAI,CAAC/M,KAAK,CAACa,YAAY,EAAE,IAAI,CAACb,KAAK,CAAC4E,WAAW,CAAC,CAAC,MAAM;QAC7D;QACAnK,OAAO,CAACqS,QAAQ,CAAC;QACjBL,QAAQ,CAAC,CAAC;MACd,CAAC,EAAEtE,SAAS,EAAE2E,QAAQ,CAAC;MACvB,IAAI,CAAC9M,KAAK,CAACgE,YAAY,CAAC,CAAC;QAAEK;MAAgB,CAAC,KAAK;QAC7C5J,OAAO,CAACqS,QAAQ,CAAC;QACjB,IAAIzI,eAAe,CAAChE,KAAK,CAAClH,MAAM,KAAK,CAAC,EAAE;UACpCsT,QAAQ,CAAC,CAAC;UACV;QACJ;QACA,MAAMvI,KAAK,GAAG,IAAI,CAACjF,cAAc,CAACkB,MAAM,CAAC,IAAI,CAACrB,MAAM,CAACyD,QAAQ,CAAC,CAAC,EAAE,IAAI,CAACzD,MAAM,CAAC8C,WAAW,CAAC,CAAC,EAAEyC,eAAe,CAAChE,KAAK,CAAC;QAClH,MAAMY,IAAI,GAAGoD,eAAe,CAAChE,KAAK,CAAC6D,KAAK,CAAC;QACzC,IAAI,CAACwI,aAAa,CAACzL,IAAI,CAAC,EAAE;UACtBwL,QAAQ,CAAC,CAAC;UACV;QACJ;QACA,IAAI,CAAC3N,MAAM,CAACiH,YAAY,CAAC,CAAC;QAC1B,IAAI,CAAC7E,iBAAiB,CAAC;UAAEgD,KAAK;UAAEjD,IAAI;UAAEjB,KAAK,EAAEqE;QAAgB,CAAC,EAAE,CAAC,CAAC,+CAA+C,CAAC,CAAC,qCAAqC,CAAC,CAAC,iCAAiC,CAAC;MAChM,CAAC,EAAE8D,SAAS,EAAE2E,QAAQ,CAAC;IAC3B,CAAC,CAAC;IACF,IAAI,CAAC9M,KAAK,CAACqJ,OAAO,CAAC;MAAEvF,IAAI,EAAE,KAAK;MAAEC,GAAG,EAAE;IAAK,CAAC,CAAC;IAC9C,IAAI,CAACjF,MAAM,CAACuN,cAAc,CAACG,WAAW,EAAE,CAAC,CAAC,uBAAuB,CAAC;IAClE,IAAI,CAAC1N,MAAM,CAAC4E,KAAK,CAAC,CAAC;EACvB;EACAsJ,wBAAwBA,CAACC,0BAA0B,EAAEC,0BAA0B,EAAE;IAC7E,MAAMjM,IAAI,GAAG,IAAI,CAACH,MAAM,CAACkB,KAAK,CAACmL,cAAc,CAAC,CAAC;IAC/C,IAAI5H,KAAK,GAAG,CAAC;IACb,IAAI0H,0BAA0B,EAAE;MAC5B1H,KAAK,IAAI,CAAC,CAAC;IACf;IACA,IAAI2H,0BAA0B,EAAE;MAC5B3H,KAAK,IAAI,CAAC,CAAC;IACf;IACA,IAAI,CAACrE,iBAAiB,CAACD,IAAI,EAAEsE,KAAK,CAAC;EACvC;EACA6H,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAACxJ,aAAa,CAAC5B,KAAK,CAACyH,IAAI,CAAC,CAAC;EACnC;EACA4D,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAACzJ,aAAa,CAAC5B,KAAK,CAACsL,IAAI,CAAC,CAAC;EACnC;EACAC,mBAAmBA,CAAA,EAAG;IAClB,IAAI,CAACvN,KAAK,CAACgF,MAAM,CAAC,CAAC;IACnB,IAAI,CAAChF,KAAK,CAACiF,KAAK,CAAC,CAAC;IAClB,IAAI,CAACnE,MAAM,CAACkB,KAAK,CAAC8C,UAAU,CAAC,CAAC;EAClC;EACA0I,eAAeA,CAAA,EAAG;IACd,IAAI,CAAC1M,MAAM,CAACkB,KAAK,CAACyL,aAAa,CAAC,CAAC;EACrC;EACAC,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAAC5M,MAAM,CAACkB,KAAK,CAAC2L,UAAU,CAAC,CAAC;EAClC;EACAC,wBAAwBA,CAAA,EAAG;IACvB,IAAI,CAAC9M,MAAM,CAACkB,KAAK,CAAC6L,cAAc,CAAC,CAAC;EACtC;EACAC,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAAChN,MAAM,CAACkB,KAAK,CAAC+L,UAAU,CAAC,CAAC;EAClC;EACAC,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAAClN,MAAM,CAACkB,KAAK,CAACiM,cAAc,CAAC,CAAC;EACtC;EACAC,wBAAwBA,CAAA,EAAG;IACvB,IAAI,CAACpN,MAAM,CAACkB,KAAK,CAACmM,kBAAkB,CAAC,CAAC;EAC1C;EACAC,qBAAqBA,CAAA,EAAG;IACpB,IAAI,CAACtN,MAAM,CAACkB,KAAK,CAACqM,WAAW,CAAC,CAAC;EACnC;EACAC,uBAAuBA,CAAA,EAAG;IACtB,IAAI,CAACxN,MAAM,CAACkB,KAAK,CAACuM,aAAa,CAAC,CAAC;EACrC;EACAC,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAAC1N,MAAM,CAACkB,KAAK,CAACwM,iBAAiB,CAAC,CAAC;EACzC;EACAC,qBAAqBA,CAAA,EAAG;IACpB,IAAI,CAAC3N,MAAM,CAACkB,KAAK,CAAC0M,kBAAkB,CAAC,CAAC;EAC1C;EACAC,eAAeA,CAAA,EAAG;IACd,IAAI,CAAC7N,MAAM,CAACkB,KAAK,CAAC4M,kBAAkB,CAAC,CAAC;EAC1C;EACAC,mBAAmBA,CAAA,EAAG;IAClB,IAAI,CAAC/N,MAAM,CAACkB,KAAK,CAAC6M,mBAAmB,CAAC,CAAC;EAC3C;EACAC,uBAAuBA,CAAA,EAAG;IACtB,IAAI,CAAC,IAAI,CAAChO,MAAM,CAACiO,aAAa,EAAE;MAC5B;MACA;IACJ;IACA,IAAI,CAACjO,MAAM,CAACkB,KAAK,CAAC8M,uBAAuB,CAAC,CAAC;EAC/C;EACAE,gBAAgBA,CAAC7K,QAAQ,EAAE;IACvB,OAAO,IAAI,CAAC1E,UAAU,CAACS,QAAQ,CAACiE,QAAQ,CAAC;EAC7C;AACJ,CAAC;AACDvF,iBAAiB,CAACI,EAAE,GAAG,kCAAkC;AACzDJ,iBAAiB,GAAG7E,mBAAmB,GAAGnB,UAAU,CAAC,CACjDgB,OAAO,CAAC,CAAC,EAAEgC,qBAAqB,CAAC,EACjChC,OAAO,CAAC,CAAC,EAAEoC,eAAe,CAAC,EAC3BpC,OAAO,CAAC,CAAC,EAAEsC,kBAAkB,CAAC,EAC9BtC,OAAO,CAAC,CAAC,EAAEuC,qBAAqB,CAAC,EACjCvC,OAAO,CAAC,CAAC,EAAEwC,WAAW,CAAC,EACvBxC,OAAO,CAAC,CAAC,EAAEiD,iBAAiB,CAAC,CAChC,EAAE+B,iBAAiB,CAAC;AACrB,SAASA,iBAAiB;AAC1B,MAAMc,gBAAgB,CAAC;EACnBrC,WAAWA,CAAC4R,gBAAgB,EAAE;IAC1B,IAAI,CAACA,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAACC,MAAM,GAAG,IAAI5I,KAAK,CAAC,CAAC;EAC7B;EACApG,QAAQA,CAAC8B,KAAK,EAAE;IACZ,IAAI,IAAI,CAACkN,MAAM,CAACC,OAAO,CAACnN,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;MACnC,MAAM,IAAIoN,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,IAAI,CAACF,MAAM,CAACpH,IAAI,CAAC9F,KAAK,CAAC;IACvB,IAAI,CAACkN,MAAM,CAACG,IAAI,CAAC,CAACC,EAAE,EAAEC,EAAE,KAAK,IAAI,CAACN,gBAAgB,CAACM,EAAE,CAAC,GAAG,IAAI,CAACN,gBAAgB,CAACK,EAAE,CAAC,CAAC;IACnF,OAAO;MACH7U,OAAO,EAAEA,CAAA,KAAM;QACX,MAAM+U,GAAG,GAAG,IAAI,CAACN,MAAM,CAACC,OAAO,CAACnN,KAAK,CAAC;QACtC,IAAIwN,GAAG,IAAI,CAAC,EAAE;UACV,IAAI,CAACN,MAAM,CAACO,MAAM,CAACD,GAAG,EAAE,CAAC,CAAC;QAC9B;MACJ;IACJ,CAAC;EACL;EACA,IAAIpL,0BAA0BA,CAAA,EAAG;IAC7B,OAAO,IAAI,CAAC8K,MAAM;EACtB;AACJ;AACA,OAAO,MAAM9F,oBAAoB,SAASnO,YAAY,CAAC;EACnDoC,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF8L,EAAE,EAAEC,oBAAoB,CAACD,EAAE;MAC3BhG,KAAK,EAAErH,GAAG,CAAC8P,QAAQ,CAAC,uBAAuB,EAAE,iBAAiB,CAAC;MAC/D8D,KAAK,EAAE,iBAAiB;MACxBC,YAAY,EAAE1T,cAAc,CAAC2T,GAAG,CAACnU,iBAAiB,CAACoU,QAAQ,EAAEpU,iBAAiB,CAACqU,yBAAyB,EAAExT,cAAc,CAACyT,OAAO,CAACC,SAAS,CAAC,CAAC,CAAC;MAC7IC,MAAM,EAAE;QACJC,MAAM,EAAEzU,iBAAiB,CAAC0U,cAAc;QACxCC,OAAO,EAAE,IAAI,CAAC,uBAAuB,EAAE,CAAC;QACxCC,SAAS,EAAE,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,mBAAmB;QAC9DC,GAAG,EAAE;UAAEF,OAAO,EAAE,GAAG,CAAC,uBAAuB,EAAE,CAAC;UAAqBC,SAAS,EAAE,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,sBAAsB,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAAoB,CAAC;QAClLE,MAAM,EAAE,GAAG,CAAC;MAChB;IACJ,CAAC,CAAC;EACN;EACAC,GAAGA,CAACC,SAAS,EAAE3R,MAAM,EAAE4R,IAAI,EAAE;IACzB,MAAMC,UAAU,GAAG/R,iBAAiB,CAACC,GAAG,CAACC,MAAM,CAAC;IAChD,IAAI,CAAC6R,UAAU,EAAE;MACb;IACJ;IACA,IAAI7M,IAAI;IACR,IAAI4M,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;MAClC,IAAIA,IAAI,CAAC5M,IAAI,KAAK,IAAI,EAAE;QACpBA,IAAI,GAAG,IAAI;MACf;IACJ;IACA6M,UAAU,CAAC7E,cAAc,CAAC3D,SAAS,EAAErE,IAAI,EAAEqE,SAAS,CAAC;EACzD;AACJ;AACAiB,oBAAoB,CAACD,EAAE,GAAG,8BAA8B;AACxD9N,0BAA0B,CAACuD,iBAAiB,CAACI,EAAE,EAAEJ,iBAAiB,EAAE,CAAC,CAAC,4DAA4D,CAAC;AACnIzD,oBAAoB,CAACiO,oBAAoB,CAAC;AAC1C,MAAMmH,MAAM,GAAG,GAAG,CAAC,uCAAuC,EAAE;AAC5D,MAAMK,cAAc,GAAG1V,aAAa,CAAC2V,kBAAkB,CAACjS,iBAAiB,CAACC,GAAG,CAAC;AAC9EzD,qBAAqB,CAAC,IAAIwV,cAAc,CAAC;EACrCzH,EAAE,EAAE,0BAA0B;EAC9BwG,YAAY,EAAE1T,cAAc,CAAC2T,GAAG,CAACtT,cAAc,CAACyT,OAAO,EAAEzT,cAAc,CAACwU,oBAAoB,CAAC;EAC7FC,OAAOA,CAACC,CAAC,EAAE;IACPA,CAAC,CAAChE,wBAAwB,CAAC,IAAI,EAAE,KAAK,CAAC;EAC3C,CAAC;EACDiD,MAAM,EAAE,CAAC;IACD;IACAG,OAAO,EAAE,CAAC,CAAC;IACXF,MAAM,EAAEjU,cAAc,CAAC2T,GAAG,CAACtT,cAAc,CAACyT,OAAO,EAAEtU,iBAAiB,CAAC0U,cAAc,CAAC;IACpFI;EACJ,CAAC,EAAE;IACC;IACAH,OAAO,EAAE,CAAC,CAAC;IACXF,MAAM,EAAEjU,cAAc,CAAC2T,GAAG,CAACtT,cAAc,CAACyT,OAAO,EAAEtU,iBAAiB,CAAC0U,cAAc,EAAE7T,cAAc,CAAC6I,wBAAwB,EAAE7I,cAAc,CAAC+E,aAAa,CAAC;IAC3JkP;EACJ,CAAC,CAAC;EACNU,QAAQ,EAAE,CAAC;IACHC,MAAM,EAAE3U,0BAA0B;IAClC4U,KAAK,EAAErV,GAAG,CAAC8P,QAAQ,CAAC,eAAe,EAAE,QAAQ,CAAC;IAC9CwF,KAAK,EAAE,MAAM;IACbC,KAAK,EAAE,CAAC;IACRC,IAAI,EAAEhV,cAAc,CAACiF,wBAAwB,CAACyO,SAAS,CAAC;EAC5D,CAAC,EAAE;IACCkB,MAAM,EAAE3U,0BAA0B;IAClC4U,KAAK,EAAErV,GAAG,CAAC8P,QAAQ,CAAC,eAAe,EAAE,QAAQ,CAAC;IAC9CwF,KAAK,EAAE,MAAM;IACbC,KAAK,EAAE,CAAC;IACRC,IAAI,EAAErV,cAAc,CAAC2T,GAAG,CAACtT,cAAc,CAACiF,wBAAwB,EAAEjF,cAAc,CAACiE,UAAU,CAACgR,SAAS,CAAC,QAAQ,CAAC;EACnH,CAAC,EAAE;IACCL,MAAM,EAAE3U,0BAA0B;IAClC4U,KAAK,EAAErV,GAAG,CAAC8P,QAAQ,CAAC,gBAAgB,EAAE,SAAS,CAAC;IAChDwF,KAAK,EAAE,MAAM;IACbC,KAAK,EAAE,CAAC;IACRC,IAAI,EAAErV,cAAc,CAAC2T,GAAG,CAACtT,cAAc,CAACiF,wBAAwB,EAAEjF,cAAc,CAACiE,UAAU,CAACgR,SAAS,CAAC,SAAS,CAAC;EACpH,CAAC;AACT,CAAC,CAAC,CAAC;AACHnW,qBAAqB,CAAC,IAAIwV,cAAc,CAAC;EACrCzH,EAAE,EAAE,qCAAqC;EACzCwG,YAAY,EAAE1T,cAAc,CAAC2T,GAAG,CAACtT,cAAc,CAACyT,OAAO,EAAEtU,iBAAiB,CAAC0U,cAAc,EAAE7T,cAAc,CAACwU,oBAAoB,CAAC;EAC/Hb,MAAM,EAAE;IACJM,MAAM,EAAEA,MAAM;IACdL,MAAM,EAAEzU,iBAAiB,CAAC0U,cAAc;IACxCC,OAAO,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;IACrCC,SAAS,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;EAC5C,CAAC;EACDU,OAAOA,CAACC,CAAC,EAAE;IACPA,CAAC,CAAChE,wBAAwB,CAAC,KAAK,EAAE,IAAI,CAAC;EAC3C,CAAC;EACDiE,QAAQ,EAAE,CAAC;IACHC,MAAM,EAAE3U,0BAA0B;IAClC6U,KAAK,EAAE,MAAM;IACbC,KAAK,EAAE,CAAC;IACRC,IAAI,EAAErV,cAAc,CAAC2T,GAAG,CAACtT,cAAc,CAACiF,wBAAwB,EAAEjF,cAAc,CAACiE,UAAU,CAACgR,SAAS,CAAC,QAAQ,CAAC,CAAC;IAChHJ,KAAK,EAAErV,GAAG,CAAC8P,QAAQ,CAAC,gBAAgB,EAAE,SAAS;EACnD,CAAC,EAAE;IACCsF,MAAM,EAAE3U,0BAA0B;IAClC6U,KAAK,EAAE,MAAM;IACbC,KAAK,EAAE,CAAC;IACRC,IAAI,EAAErV,cAAc,CAAC2T,GAAG,CAACtT,cAAc,CAACiF,wBAAwB,EAAEjF,cAAc,CAACiE,UAAU,CAACgR,SAAS,CAAC,SAAS,CAAC,CAAC;IACjHJ,KAAK,EAAErV,GAAG,CAAC8P,QAAQ,CAAC,eAAe,EAAE,QAAQ;EACjD,CAAC;AACT,CAAC,CAAC,CAAC;AACH;AACA7P,gBAAgB,CAACyV,oBAAoB,CAAC,iCAAiC,EAAE,0BAA0B,CAAC;AACpGpW,qBAAqB,CAAC,IAAIwV,cAAc,CAAC;EACrCzH,EAAE,EAAE,mBAAmB;EACvBwG,YAAY,EAAErT,cAAc,CAACyT,OAAO;EACpCgB,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAACzD,mBAAmB,CAAC,CAAC;EACrC0C,MAAM,EAAE;IACJM,MAAM,EAAEA,MAAM;IACdL,MAAM,EAAEzU,iBAAiB,CAAC0U,cAAc;IACxCC,OAAO,EAAE,CAAC,CAAC;IACXC,SAAS,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;EAC5C;AACJ,CAAC,CAAC,CAAC;AACHjV,qBAAqB,CAAC,IAAIwV,cAAc,CAAC;EACrCzH,EAAE,EAAE,sBAAsB;EAC1BwG,YAAY,EAAE1T,cAAc,CAAC2T,GAAG,CAACtT,cAAc,CAACyT,OAAO,EAAE9T,cAAc,CAACwV,EAAE,CAACnV,cAAc,CAACoV,mBAAmB,EAAEpV,cAAc,CAACwU,oBAAoB,CAACa,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7JZ,OAAO,EAAE9X,CAAC,IAAIA,CAAC,CAACyU,oBAAoB,CAAC,CAAC;EACtCuC,MAAM,EAAE;IACJM,MAAM,EAAEA,MAAM;IACdL,MAAM,EAAEzU,iBAAiB,CAAC0U,cAAc;IACxCC,OAAO,EAAE,EAAE,CAAC;IACZC,SAAS,EAAE,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,wBAAwB;IACnEC,GAAG,EAAE;MAAEF,OAAO,EAAE,EAAE,CAAC;MAAyBC,SAAS,EAAE,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,yBAAyB,GAAG,CAAC,uBAAuB,EAAE,CAAC;IAAoB;EACtK;AACJ,CAAC,CAAC,CAAC;AACHjV,qBAAqB,CAAC,IAAIwV,cAAc,CAAC;EACrCzH,EAAE,EAAE,0BAA0B;EAC9BwG,YAAY,EAAE1T,cAAc,CAAC2T,GAAG,CAACtT,cAAc,CAACyT,OAAO,EAAE9T,cAAc,CAACwV,EAAE,CAACnV,cAAc,CAACoV,mBAAmB,EAAEpV,cAAc,CAACwU,oBAAoB,CAACa,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7JZ,OAAO,EAAE9X,CAAC,IAAIA,CAAC,CAAC2U,wBAAwB,CAAC,CAAC;EAC1CqC,MAAM,EAAE;IACJM,MAAM,EAAEA,MAAM;IACdL,MAAM,EAAEzU,iBAAiB,CAAC0U,cAAc;IACxCC,OAAO,EAAE,EAAE,CAAC;IACZC,SAAS,EAAE,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC;EAC/C;AACJ,CAAC,CAAC,CAAC;AACHjV,qBAAqB,CAAC,IAAIwV,cAAc,CAAC;EACrCzH,EAAE,EAAE,sBAAsB;EAC1BwG,YAAY,EAAE1T,cAAc,CAAC2T,GAAG,CAACtT,cAAc,CAACyT,OAAO,EAAE9T,cAAc,CAACwV,EAAE,CAACnV,cAAc,CAACoV,mBAAmB,EAAEpV,cAAc,CAACwU,oBAAoB,CAACa,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7JZ,OAAO,EAAE9X,CAAC,IAAIA,CAAC,CAAC6U,oBAAoB,CAAC;AACzC,CAAC,CAAC,CAAC;AACH1S,qBAAqB,CAAC,IAAIwV,cAAc,CAAC;EACrCzH,EAAE,EAAE,sBAAsB;EAC1BwG,YAAY,EAAE1T,cAAc,CAAC2T,GAAG,CAACtT,cAAc,CAACyT,OAAO,EAAE9T,cAAc,CAACwV,EAAE,CAACnV,cAAc,CAACoV,mBAAmB,EAAEpV,cAAc,CAACwU,oBAAoB,CAACa,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7JZ,OAAO,EAAE9X,CAAC,IAAIA,CAAC,CAAC+U,oBAAoB,CAAC,CAAC;EACtCiC,MAAM,EAAE;IACJM,MAAM,EAAEA,MAAM;IACdL,MAAM,EAAEzU,iBAAiB,CAAC0U,cAAc;IACxCC,OAAO,EAAE,EAAE,CAAC;IACZC,SAAS,EAAE,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,sBAAsB;IACjEC,GAAG,EAAE;MAAEF,OAAO,EAAE,EAAE,CAAC;MAAuBC,SAAS,EAAE,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,uBAAuB,GAAG,CAAC,uBAAuB,EAAE,CAAC;IAAoB;EAClK;AACJ,CAAC,CAAC,CAAC;AACHjV,qBAAqB,CAAC,IAAIwV,cAAc,CAAC;EACrCzH,EAAE,EAAE,0BAA0B;EAC9BwG,YAAY,EAAE1T,cAAc,CAAC2T,GAAG,CAACtT,cAAc,CAACyT,OAAO,EAAE9T,cAAc,CAACwV,EAAE,CAACnV,cAAc,CAACoV,mBAAmB,EAAEpV,cAAc,CAACwU,oBAAoB,CAACa,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7JZ,OAAO,EAAE9X,CAAC,IAAIA,CAAC,CAACiV,wBAAwB,CAAC,CAAC;EAC1C+B,MAAM,EAAE;IACJM,MAAM,EAAEA,MAAM;IACdL,MAAM,EAAEzU,iBAAiB,CAAC0U,cAAc;IACxCC,OAAO,EAAE,EAAE,CAAC;IACZC,SAAS,EAAE,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC;EAC/C;AACJ,CAAC,CAAC,CAAC;AACHjV,qBAAqB,CAAC,IAAIwV,cAAc,CAAC;EACrCzH,EAAE,EAAE,uBAAuB;EAC3BwG,YAAY,EAAE1T,cAAc,CAAC2T,GAAG,CAACtT,cAAc,CAACyT,OAAO,EAAE9T,cAAc,CAACwV,EAAE,CAACnV,cAAc,CAACoV,mBAAmB,EAAEpV,cAAc,CAACwU,oBAAoB,CAACa,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7JZ,OAAO,EAAE9X,CAAC,IAAIA,CAAC,CAACmV,qBAAqB,CAAC;AAC1C,CAAC,CAAC,CAAC;AACHhT,qBAAqB,CAAC,IAAIwV,cAAc,CAAC;EACrCzH,EAAE,EAAE,iBAAiB;EACrBwG,YAAY,EAAE1T,cAAc,CAAC2T,GAAG,CAACtT,cAAc,CAACyT,OAAO,EAAEzT,cAAc,CAACwU,oBAAoB,CAACa,MAAM,CAAC,CAAC,CAAC;EACtGZ,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAACxD,eAAe,CAAC,CAAC;EACjCyC,MAAM,EAAE;IACJM,MAAM,EAAEA,MAAM;IACdL,MAAM,EAAEzU,iBAAiB,CAAC0U,cAAc;IACxCC,OAAO,EAAE,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACxCC,SAAS,EAAE,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,mBAAmB;IAC9DC,GAAG,EAAE;MAAEF,OAAO,EAAE,GAAG,CAAC,uBAAuB,EAAE,CAAC;MAAqBC,SAAS,EAAE,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC;IAAoB;EACtI;AACJ,CAAC,CAAC,CAAC;AACHjV,qBAAqB,CAAC,IAAIwV,cAAc,CAAC;EACrCzH,EAAE,EAAE,0BAA0B;EAC9BwG,YAAY,EAAE1T,cAAc,CAAC2T,GAAG,CAACtT,cAAc,CAACyT,OAAO,EAAEzT,cAAc,CAACwU,oBAAoB,CAACa,MAAM,CAAC,CAAC,CAAC;EACtGZ,OAAO,EAAE9X,CAAC,IAAI;IACVA,CAAC,CAACuU,eAAe,CAAC,CAAC;IACnBvU,CAAC,CAAC+T,wBAAwB,CAAC,IAAI,EAAE,KAAK,CAAC;EAC3C;AACJ,CAAC,CAAC,CAAC;AACH5R,qBAAqB,CAAC,IAAIwV,cAAc,CAAC;EACrCzH,EAAE,EAAE,yBAAyB;EAC7BwG,YAAY,EAAE1T,cAAc,CAAC2T,GAAG,CAACtT,cAAc,CAACyT,OAAO,EAAEzT,cAAc,CAACwU,oBAAoB,CAAC;EAC7FC,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAAC1C,uBAAuB,CAAC,CAAC;EACzC2B,MAAM,EAAE;IACJM,MAAM,EAAEA,MAAM;IACdL,MAAM,EAAEzU,iBAAiB,CAAC0U,cAAc;IACxCC,OAAO,EAAE,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACxCC,SAAS,EAAE,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,mBAAmB;IAC9DC,GAAG,EAAE;MAAEF,OAAO,EAAE,GAAG,CAAC,uBAAuB,EAAE,CAAC;MAAqBC,SAAS,EAAE,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC;IAAoB;EACtI,CAAC;EACDY,QAAQ,EAAE,CAAC;IACHC,MAAM,EAAE3U,0BAA0B;IAClC6U,KAAK,EAAE,OAAO;IACdC,KAAK,EAAE,CAAC;IACRC,IAAI,EAAErV,cAAc,CAAC2T,GAAG,CAACtT,cAAc,CAACsV,cAAc,EAAEtV,cAAc,CAACmF,UAAU,CAAC;IAClF0P,KAAK,EAAErV,GAAG,CAAC8P,QAAQ,CAAC,aAAa,EAAE,WAAW;EAClD,CAAC,EAAE;IACCsF,MAAM,EAAE3U,0BAA0B;IAClC6U,KAAK,EAAE,OAAO;IACdC,KAAK,EAAE,CAAC;IACRC,IAAI,EAAErV,cAAc,CAAC2T,GAAG,CAACtT,cAAc,CAACsV,cAAc,CAAC5B,SAAS,CAAC,CAAC,EAAE1T,cAAc,CAACmF,UAAU,CAAC;IAC9F0P,KAAK,EAAErV,GAAG,CAAC8P,QAAQ,CAAC,aAAa,EAAE,WAAW;EAClD,CAAC;AACT,CAAC,CAAC,CAAC;AACHxQ,qBAAqB,CAAC,IAAIwV,cAAc,CAAC;EACrCzH,EAAE,EAAE,mBAAmB;EACvBwG,YAAY,EAAErT,cAAc,CAACyT,OAAO;EACpCgB,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAACxC,iBAAiB,CAAC,CAAC;EACnCyB,MAAM,EAAE;IACJM,MAAM,EAAE,GAAG,CAAC;IACZH,OAAO,EAAE,IAAI,CAAC,uBAAuB,EAAE,CAAC;EAC5C;AACJ,CAAC,CAAC,CAAC;AACHhV,qBAAqB,CAAC,IAAIwV,cAAc,CAAC;EACrCzH,EAAE,EAAE,uBAAuB;EAC3BwG,YAAY,EAAErT,cAAc,CAACyT,OAAO;EACpCgB,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAACvC,qBAAqB,CAAC,CAAC;EACvCwB,MAAM,EAAE;IACJM,MAAM,EAAEA,MAAM;IACdL,MAAM,EAAEzU,iBAAiB,CAAC0U,cAAc;IACxCC,OAAO,EAAE,IAAI,CAAC,uBAAuB,GAAG,CAAC,mBAAmB,EAAE,CAAC;IAC/DE,GAAG,EAAE;MAAEF,OAAO,EAAE,GAAG,CAAC,uBAAuB,GAAG,CAAC,mBAAmB,EAAE,CAAC;IAAoB;EAC7F;AACJ,CAAC,CAAC,CAAC;AACH;AACAhV,qBAAqB,CAAC,IAAIwV,cAAc,CAAC;EACrCzH,EAAE,EAAE,sBAAsB;EAC1BwG,YAAY,EAAE1T,cAAc,CAAC2T,GAAG,CAACnU,iBAAiB,CAAC0U,cAAc,EAAElU,cAAc,CAAC0G,MAAM,CAAC,6BAA6B,EAAE,IAAI,CAAC,EAAE9G,cAAc,CAACgW,KAAK,EAAEvV,cAAc,CAACyT,OAAO,CAACC,SAAS,CAAC,CAAC,EAAExT,mBAAmB,CAACsV,gBAAgB,CAAC9B,SAAS,CAAC,CAAC,EAAEtU,kBAAkB,CAACqW,aAAa,CAAC/B,SAAS,CAAC,CAAC,CAAC;EACxRe,OAAO,EAAEA,CAACC,CAAC,EAAEzE,GAAG,KAAK;IACjByE,CAAC,CAAC1E,2BAA2B,CAACvR,QAAQ,CAACwR,GAAG,CAAC,GAAG;MAAEE,QAAQ,EAAE,KAAK;MAAE,GAAGF;IAAI,CAAC,GAAG;MAAEE,QAAQ,EAAE;IAAM,CAAC,CAAC;EACpG,CAAC;EACDwD,MAAM,EAAE;IACJM,MAAM;IACNH,OAAO,EAAE,CAAC,CAAC;EACf;AACJ,CAAC,CAAC,CAAC;AACHhV,qBAAqB,CAAC,IAAIwV,cAAc,CAAC;EACrCzH,EAAE,EAAE,sBAAsB;EAC1BwG,YAAY,EAAE1T,cAAc,CAAC2T,GAAG,CAACnU,iBAAiB,CAAC0U,cAAc,EAAElU,cAAc,CAAC0G,MAAM,CAAC,6BAA6B,EAAE,IAAI,CAAC,EAAEnG,mBAAmB,CAACsV,gBAAgB,EAAExV,cAAc,CAACyT,OAAO,CAACC,SAAS,CAAC,CAAC,EAAEtU,kBAAkB,CAACqW,aAAa,CAAC/B,SAAS,CAAC,CAAC,CAAC;EACtPe,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAAC5D,oBAAoB,CAAC,CAAC;EACtC6C,MAAM,EAAE;IACJM,MAAM,EAAEA,MAAM;IACdL,MAAM,EAAEzU,iBAAiB,CAAC0U,cAAc;IACxCC,OAAO,EAAE,CAAC,CAAC;EACf;AACJ,CAAC,CAAC,CAAC;AACHhV,qBAAqB,CAAC,IAAIwV,cAAc,CAAC;EACrCzH,EAAE,EAAE,sBAAsB;EAC1BwG,YAAY,EAAE1T,cAAc,CAAC2T,GAAG,CAACnU,iBAAiB,CAAC0U,cAAc,EAAElU,cAAc,CAAC0G,MAAM,CAAC,6BAA6B,EAAE,IAAI,CAAC,EAAEnG,mBAAmB,CAACsV,gBAAgB,EAAExV,cAAc,CAACyT,OAAO,CAACC,SAAS,CAAC,CAAC,EAAEtU,kBAAkB,CAACqW,aAAa,CAAC/B,SAAS,CAAC,CAAC,CAAC;EACtPe,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAAC3D,oBAAoB,CAAC,CAAC;EACtC4C,MAAM,EAAE;IACJM,MAAM,EAAEA,MAAM;IACdL,MAAM,EAAEzU,iBAAiB,CAAC0U,cAAc;IACxCC,OAAO,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;EACzC;AACJ,CAAC,CAAC,CAAC;AACHjV,oBAAoB,CAAC,cAAcF,YAAY,CAAC;EAC5CoC,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACF8L,EAAE,EAAE,gCAAgC;MACpChG,KAAK,EAAErH,GAAG,CAAC8P,QAAQ,CAAC,qBAAqB,EAAE,2BAA2B,CAAC;MACvE8D,KAAK,EAAE,2BAA2B;MAClCC,YAAY,EAAExH;IAClB,CAAC,CAAC;EACN;EACAqI,GAAGA,CAACC,SAAS,EAAE3R,MAAM,EAAE;IACnB,IAAIqL,EAAE;IACN,CAACA,EAAE,GAAGvL,iBAAiB,CAACC,GAAG,CAACC,MAAM,CAAC,MAAM,IAAI,IAAIqL,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACwE,eAAe,CAAC,CAAC;EAClG;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}