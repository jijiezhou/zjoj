{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isFirefox } from '../../browser.js';\nimport { DataTransfers } from '../../dnd.js';\nimport { addDisposableListener, EventHelper, EventType } from '../../dom.js';\nimport { EventType as TouchEventType, Gesture } from '../../touch.js';\nimport { setupCustomHover } from '../iconLabel/iconLabelHover.js';\nimport { SelectBox } from '../selectBox/selectBox.js';\nimport { Action, ActionRunner, Separator } from '../../../common/actions.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport * as platform from '../../../common/platform.js';\nimport * as types from '../../../common/types.js';\nimport './actionbar.css';\nimport * as nls from '../../../../nls.js';\nexport class BaseActionViewItem extends Disposable {\n  get action() {\n    return this._action;\n  }\n  constructor(context, action, options = {}) {\n    super();\n    this.options = options;\n    this._context = context || this;\n    this._action = action;\n    if (action instanceof Action) {\n      this._register(action.onDidChange(event => {\n        if (!this.element) {\n          // we have not been rendered yet, so there\n          // is no point in updating the UI\n          return;\n        }\n        this.handleActionChangeEvent(event);\n      }));\n    }\n  }\n  handleActionChangeEvent(event) {\n    if (event.enabled !== undefined) {\n      this.updateEnabled();\n    }\n    if (event.checked !== undefined) {\n      this.updateChecked();\n    }\n    if (event.class !== undefined) {\n      this.updateClass();\n    }\n    if (event.label !== undefined) {\n      this.updateLabel();\n      this.updateTooltip();\n    }\n    if (event.tooltip !== undefined) {\n      this.updateTooltip();\n    }\n  }\n  get actionRunner() {\n    if (!this._actionRunner) {\n      this._actionRunner = this._register(new ActionRunner());\n    }\n    return this._actionRunner;\n  }\n  set actionRunner(actionRunner) {\n    this._actionRunner = actionRunner;\n  }\n  isEnabled() {\n    return this._action.enabled;\n  }\n  setActionContext(newContext) {\n    this._context = newContext;\n  }\n  render(container) {\n    const element = this.element = container;\n    this._register(Gesture.addTarget(container));\n    const enableDragging = this.options && this.options.draggable;\n    if (enableDragging) {\n      container.draggable = true;\n      if (isFirefox) {\n        // Firefox: requires to set a text data transfer to get going\n        this._register(addDisposableListener(container, EventType.DRAG_START, e => {\n          var _a;\n          return (_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.setData(DataTransfers.TEXT, this._action.label);\n        }));\n      }\n    }\n    this._register(addDisposableListener(element, TouchEventType.Tap, e => this.onClick(e, true))); // Preserve focus on tap #125470\n    this._register(addDisposableListener(element, EventType.MOUSE_DOWN, e => {\n      if (!enableDragging) {\n        EventHelper.stop(e, true); // do not run when dragging is on because that would disable it\n      }\n      if (this._action.enabled && e.button === 0) {\n        element.classList.add('active');\n      }\n    }));\n    if (platform.isMacintosh) {\n      // macOS: allow to trigger the button when holding Ctrl+key and pressing the\n      // main mouse button. This is for scenarios where e.g. some interaction forces\n      // the Ctrl+key to be pressed and hold but the user still wants to interact\n      // with the actions (for example quick access in quick navigation mode).\n      this._register(addDisposableListener(element, EventType.CONTEXT_MENU, e => {\n        if (e.button === 0 && e.ctrlKey === true) {\n          this.onClick(e);\n        }\n      }));\n    }\n    this._register(addDisposableListener(element, EventType.CLICK, e => {\n      EventHelper.stop(e, true);\n      // menus do not use the click event\n      if (!(this.options && this.options.isMenu)) {\n        this.onClick(e);\n      }\n    }));\n    this._register(addDisposableListener(element, EventType.DBLCLICK, e => {\n      EventHelper.stop(e, true);\n    }));\n    [EventType.MOUSE_UP, EventType.MOUSE_OUT].forEach(event => {\n      this._register(addDisposableListener(element, event, e => {\n        EventHelper.stop(e);\n        element.classList.remove('active');\n      }));\n    });\n  }\n  onClick(event, preserveFocus = false) {\n    var _a;\n    EventHelper.stop(event, true);\n    const context = types.isUndefinedOrNull(this._context) ? ((_a = this.options) === null || _a === void 0 ? void 0 : _a.useEventAsContext) ? event : {\n      preserveFocus\n    } : this._context;\n    this.actionRunner.run(this._action, context);\n  }\n  // Only set the tabIndex on the element once it is about to get focused\n  // That way this element wont be a tab stop when it is not needed #106441\n  focus() {\n    if (this.element) {\n      this.element.tabIndex = 0;\n      this.element.focus();\n      this.element.classList.add('focused');\n    }\n  }\n  blur() {\n    if (this.element) {\n      this.element.blur();\n      this.element.tabIndex = -1;\n      this.element.classList.remove('focused');\n    }\n  }\n  setFocusable(focusable) {\n    if (this.element) {\n      this.element.tabIndex = focusable ? 0 : -1;\n    }\n  }\n  get trapsArrowNavigation() {\n    return false;\n  }\n  updateEnabled() {\n    // implement in subclass\n  }\n  updateLabel() {\n    // implement in subclass\n  }\n  getClass() {\n    return this.action.class;\n  }\n  getTooltip() {\n    return this.action.tooltip;\n  }\n  updateTooltip() {\n    var _a;\n    if (!this.element) {\n      return;\n    }\n    const title = (_a = this.getTooltip()) !== null && _a !== void 0 ? _a : '';\n    this.updateAriaLabel();\n    if (!this.options.hoverDelegate) {\n      this.element.title = title;\n    } else {\n      this.element.title = '';\n      if (!this.customHover) {\n        this.customHover = setupCustomHover(this.options.hoverDelegate, this.element, title);\n        this._store.add(this.customHover);\n      } else {\n        this.customHover.update(title);\n      }\n    }\n  }\n  updateAriaLabel() {\n    var _a;\n    if (this.element) {\n      const title = (_a = this.getTooltip()) !== null && _a !== void 0 ? _a : '';\n      this.element.setAttribute('aria-label', title);\n    }\n  }\n  updateClass() {\n    // implement in subclass\n  }\n  updateChecked() {\n    // implement in subclass\n  }\n  dispose() {\n    if (this.element) {\n      this.element.remove();\n      this.element = undefined;\n    }\n    this._context = undefined;\n    super.dispose();\n  }\n}\nexport class ActionViewItem extends BaseActionViewItem {\n  constructor(context, action, options) {\n    super(context, action, options);\n    this.options = options;\n    this.options.icon = options.icon !== undefined ? options.icon : false;\n    this.options.label = options.label !== undefined ? options.label : true;\n    this.cssClass = '';\n  }\n  render(container) {\n    super.render(container);\n    types.assertType(this.element);\n    const label = document.createElement('a');\n    label.classList.add('action-label');\n    label.setAttribute('role', this.getDefaultAriaRole());\n    this.label = label;\n    this.element.appendChild(label);\n    if (this.options.label && this.options.keybinding) {\n      const kbLabel = document.createElement('span');\n      kbLabel.classList.add('keybinding');\n      kbLabel.textContent = this.options.keybinding;\n      this.element.appendChild(kbLabel);\n    }\n    this.updateClass();\n    this.updateLabel();\n    this.updateTooltip();\n    this.updateEnabled();\n    this.updateChecked();\n  }\n  getDefaultAriaRole() {\n    if (this._action.id === Separator.ID) {\n      return 'presentation'; // A separator is a presentation item\n    } else {\n      if (this.options.isMenu) {\n        return 'menuitem';\n      } else {\n        return 'button';\n      }\n    }\n  }\n  // Only set the tabIndex on the element once it is about to get focused\n  // That way this element wont be a tab stop when it is not needed #106441\n  focus() {\n    if (this.label) {\n      this.label.tabIndex = 0;\n      this.label.focus();\n    }\n  }\n  blur() {\n    if (this.label) {\n      this.label.tabIndex = -1;\n    }\n  }\n  setFocusable(focusable) {\n    if (this.label) {\n      this.label.tabIndex = focusable ? 0 : -1;\n    }\n  }\n  updateLabel() {\n    if (this.options.label && this.label) {\n      this.label.textContent = this.action.label;\n    }\n  }\n  getTooltip() {\n    let title = null;\n    if (this.action.tooltip) {\n      title = this.action.tooltip;\n    } else if (!this.options.label && this.action.label && this.options.icon) {\n      title = this.action.label;\n      if (this.options.keybinding) {\n        title = nls.localize({\n          key: 'titleLabel',\n          comment: ['action title', 'action keybinding']\n        }, \"{0} ({1})\", title, this.options.keybinding);\n      }\n    }\n    return title !== null && title !== void 0 ? title : undefined;\n  }\n  updateClass() {\n    var _a;\n    if (this.cssClass && this.label) {\n      this.label.classList.remove(...this.cssClass.split(' '));\n    }\n    if (this.options.icon) {\n      this.cssClass = this.getClass();\n      if (this.label) {\n        this.label.classList.add('codicon');\n        if (this.cssClass) {\n          this.label.classList.add(...this.cssClass.split(' '));\n        }\n      }\n      this.updateEnabled();\n    } else {\n      (_a = this.label) === null || _a === void 0 ? void 0 : _a.classList.remove('codicon');\n    }\n  }\n  updateEnabled() {\n    var _a, _b;\n    if (this.action.enabled) {\n      if (this.label) {\n        this.label.removeAttribute('aria-disabled');\n        this.label.classList.remove('disabled');\n      }\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.classList.remove('disabled');\n    } else {\n      if (this.label) {\n        this.label.setAttribute('aria-disabled', 'true');\n        this.label.classList.add('disabled');\n      }\n      (_b = this.element) === null || _b === void 0 ? void 0 : _b.classList.add('disabled');\n    }\n  }\n  updateAriaLabel() {\n    var _a;\n    if (this.label) {\n      const title = (_a = this.getTooltip()) !== null && _a !== void 0 ? _a : '';\n      this.label.setAttribute('aria-label', title);\n    }\n  }\n  updateChecked() {\n    if (this.label) {\n      if (this.action.checked !== undefined) {\n        this.label.classList.toggle('checked', this.action.checked);\n        this.label.setAttribute('aria-checked', this.action.checked ? 'true' : 'false');\n        this.label.setAttribute('role', 'checkbox');\n      } else {\n        this.label.classList.remove('checked');\n        this.label.removeAttribute('aria-checked');\n        this.label.setAttribute('role', this.getDefaultAriaRole());\n      }\n    }\n  }\n}\nexport class SelectActionViewItem extends BaseActionViewItem {\n  constructor(ctx, action, options, selected, contextViewProvider, styles, selectBoxOptions) {\n    super(ctx, action);\n    this.selectBox = new SelectBox(options, selected, contextViewProvider, styles, selectBoxOptions);\n    this.selectBox.setFocusable(false);\n    this._register(this.selectBox);\n    this.registerListeners();\n  }\n  select(index) {\n    this.selectBox.select(index);\n  }\n  registerListeners() {\n    this._register(this.selectBox.onDidSelect(e => this.runAction(e.selected, e.index)));\n  }\n  runAction(option, index) {\n    this.actionRunner.run(this._action, this.getActionContext(option, index));\n  }\n  getActionContext(option, index) {\n    return option;\n  }\n  setFocusable(focusable) {\n    this.selectBox.setFocusable(focusable);\n  }\n  focus() {\n    var _a;\n    (_a = this.selectBox) === null || _a === void 0 ? void 0 : _a.focus();\n  }\n  blur() {\n    var _a;\n    (_a = this.selectBox) === null || _a === void 0 ? void 0 : _a.blur();\n  }\n  render(container) {\n    this.selectBox.render(container);\n  }\n}","map":{"version":3,"names":["isFirefox","DataTransfers","addDisposableListener","EventHelper","EventType","TouchEventType","Gesture","setupCustomHover","SelectBox","Action","ActionRunner","Separator","Disposable","platform","types","nls","BaseActionViewItem","action","_action","constructor","context","options","_context","_register","onDidChange","event","element","handleActionChangeEvent","enabled","undefined","updateEnabled","checked","updateChecked","class","updateClass","label","updateLabel","updateTooltip","tooltip","actionRunner","_actionRunner","isEnabled","setActionContext","newContext","render","container","addTarget","enableDragging","draggable","DRAG_START","e","_a","dataTransfer","setData","TEXT","Tap","onClick","MOUSE_DOWN","stop","button","classList","add","isMacintosh","CONTEXT_MENU","ctrlKey","CLICK","isMenu","DBLCLICK","MOUSE_UP","MOUSE_OUT","forEach","remove","preserveFocus","isUndefinedOrNull","useEventAsContext","run","focus","tabIndex","blur","setFocusable","focusable","trapsArrowNavigation","getClass","getTooltip","title","updateAriaLabel","hoverDelegate","customHover","_store","update","setAttribute","dispose","ActionViewItem","icon","cssClass","assertType","document","createElement","getDefaultAriaRole","appendChild","keybinding","kbLabel","textContent","id","ID","localize","key","comment","split","_b","removeAttribute","toggle","SelectActionViewItem","ctx","selected","contextViewProvider","styles","selectBoxOptions","selectBox","registerListeners","select","index","onDidSelect","runAction","option","getActionContext"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/base/browser/ui/actionbar/actionViewItems.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isFirefox } from '../../browser.js';\nimport { DataTransfers } from '../../dnd.js';\nimport { addDisposableListener, EventHelper, EventType } from '../../dom.js';\nimport { EventType as TouchEventType, Gesture } from '../../touch.js';\nimport { setupCustomHover } from '../iconLabel/iconLabelHover.js';\nimport { SelectBox } from '../selectBox/selectBox.js';\nimport { Action, ActionRunner, Separator } from '../../../common/actions.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport * as platform from '../../../common/platform.js';\nimport * as types from '../../../common/types.js';\nimport './actionbar.css';\nimport * as nls from '../../../../nls.js';\nexport class BaseActionViewItem extends Disposable {\n    get action() {\n        return this._action;\n    }\n    constructor(context, action, options = {}) {\n        super();\n        this.options = options;\n        this._context = context || this;\n        this._action = action;\n        if (action instanceof Action) {\n            this._register(action.onDidChange(event => {\n                if (!this.element) {\n                    // we have not been rendered yet, so there\n                    // is no point in updating the UI\n                    return;\n                }\n                this.handleActionChangeEvent(event);\n            }));\n        }\n    }\n    handleActionChangeEvent(event) {\n        if (event.enabled !== undefined) {\n            this.updateEnabled();\n        }\n        if (event.checked !== undefined) {\n            this.updateChecked();\n        }\n        if (event.class !== undefined) {\n            this.updateClass();\n        }\n        if (event.label !== undefined) {\n            this.updateLabel();\n            this.updateTooltip();\n        }\n        if (event.tooltip !== undefined) {\n            this.updateTooltip();\n        }\n    }\n    get actionRunner() {\n        if (!this._actionRunner) {\n            this._actionRunner = this._register(new ActionRunner());\n        }\n        return this._actionRunner;\n    }\n    set actionRunner(actionRunner) {\n        this._actionRunner = actionRunner;\n    }\n    isEnabled() {\n        return this._action.enabled;\n    }\n    setActionContext(newContext) {\n        this._context = newContext;\n    }\n    render(container) {\n        const element = this.element = container;\n        this._register(Gesture.addTarget(container));\n        const enableDragging = this.options && this.options.draggable;\n        if (enableDragging) {\n            container.draggable = true;\n            if (isFirefox) {\n                // Firefox: requires to set a text data transfer to get going\n                this._register(addDisposableListener(container, EventType.DRAG_START, e => { var _a; return (_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.setData(DataTransfers.TEXT, this._action.label); }));\n            }\n        }\n        this._register(addDisposableListener(element, TouchEventType.Tap, e => this.onClick(e, true))); // Preserve focus on tap #125470\n        this._register(addDisposableListener(element, EventType.MOUSE_DOWN, e => {\n            if (!enableDragging) {\n                EventHelper.stop(e, true); // do not run when dragging is on because that would disable it\n            }\n            if (this._action.enabled && e.button === 0) {\n                element.classList.add('active');\n            }\n        }));\n        if (platform.isMacintosh) {\n            // macOS: allow to trigger the button when holding Ctrl+key and pressing the\n            // main mouse button. This is for scenarios where e.g. some interaction forces\n            // the Ctrl+key to be pressed and hold but the user still wants to interact\n            // with the actions (for example quick access in quick navigation mode).\n            this._register(addDisposableListener(element, EventType.CONTEXT_MENU, e => {\n                if (e.button === 0 && e.ctrlKey === true) {\n                    this.onClick(e);\n                }\n            }));\n        }\n        this._register(addDisposableListener(element, EventType.CLICK, e => {\n            EventHelper.stop(e, true);\n            // menus do not use the click event\n            if (!(this.options && this.options.isMenu)) {\n                this.onClick(e);\n            }\n        }));\n        this._register(addDisposableListener(element, EventType.DBLCLICK, e => {\n            EventHelper.stop(e, true);\n        }));\n        [EventType.MOUSE_UP, EventType.MOUSE_OUT].forEach(event => {\n            this._register(addDisposableListener(element, event, e => {\n                EventHelper.stop(e);\n                element.classList.remove('active');\n            }));\n        });\n    }\n    onClick(event, preserveFocus = false) {\n        var _a;\n        EventHelper.stop(event, true);\n        const context = types.isUndefinedOrNull(this._context) ? ((_a = this.options) === null || _a === void 0 ? void 0 : _a.useEventAsContext) ? event : { preserveFocus } : this._context;\n        this.actionRunner.run(this._action, context);\n    }\n    // Only set the tabIndex on the element once it is about to get focused\n    // That way this element wont be a tab stop when it is not needed #106441\n    focus() {\n        if (this.element) {\n            this.element.tabIndex = 0;\n            this.element.focus();\n            this.element.classList.add('focused');\n        }\n    }\n    blur() {\n        if (this.element) {\n            this.element.blur();\n            this.element.tabIndex = -1;\n            this.element.classList.remove('focused');\n        }\n    }\n    setFocusable(focusable) {\n        if (this.element) {\n            this.element.tabIndex = focusable ? 0 : -1;\n        }\n    }\n    get trapsArrowNavigation() {\n        return false;\n    }\n    updateEnabled() {\n        // implement in subclass\n    }\n    updateLabel() {\n        // implement in subclass\n    }\n    getClass() {\n        return this.action.class;\n    }\n    getTooltip() {\n        return this.action.tooltip;\n    }\n    updateTooltip() {\n        var _a;\n        if (!this.element) {\n            return;\n        }\n        const title = (_a = this.getTooltip()) !== null && _a !== void 0 ? _a : '';\n        this.updateAriaLabel();\n        if (!this.options.hoverDelegate) {\n            this.element.title = title;\n        }\n        else {\n            this.element.title = '';\n            if (!this.customHover) {\n                this.customHover = setupCustomHover(this.options.hoverDelegate, this.element, title);\n                this._store.add(this.customHover);\n            }\n            else {\n                this.customHover.update(title);\n            }\n        }\n    }\n    updateAriaLabel() {\n        var _a;\n        if (this.element) {\n            const title = (_a = this.getTooltip()) !== null && _a !== void 0 ? _a : '';\n            this.element.setAttribute('aria-label', title);\n        }\n    }\n    updateClass() {\n        // implement in subclass\n    }\n    updateChecked() {\n        // implement in subclass\n    }\n    dispose() {\n        if (this.element) {\n            this.element.remove();\n            this.element = undefined;\n        }\n        this._context = undefined;\n        super.dispose();\n    }\n}\nexport class ActionViewItem extends BaseActionViewItem {\n    constructor(context, action, options) {\n        super(context, action, options);\n        this.options = options;\n        this.options.icon = options.icon !== undefined ? options.icon : false;\n        this.options.label = options.label !== undefined ? options.label : true;\n        this.cssClass = '';\n    }\n    render(container) {\n        super.render(container);\n        types.assertType(this.element);\n        const label = document.createElement('a');\n        label.classList.add('action-label');\n        label.setAttribute('role', this.getDefaultAriaRole());\n        this.label = label;\n        this.element.appendChild(label);\n        if (this.options.label && this.options.keybinding) {\n            const kbLabel = document.createElement('span');\n            kbLabel.classList.add('keybinding');\n            kbLabel.textContent = this.options.keybinding;\n            this.element.appendChild(kbLabel);\n        }\n        this.updateClass();\n        this.updateLabel();\n        this.updateTooltip();\n        this.updateEnabled();\n        this.updateChecked();\n    }\n    getDefaultAriaRole() {\n        if (this._action.id === Separator.ID) {\n            return 'presentation'; // A separator is a presentation item\n        }\n        else {\n            if (this.options.isMenu) {\n                return 'menuitem';\n            }\n            else {\n                return 'button';\n            }\n        }\n    }\n    // Only set the tabIndex on the element once it is about to get focused\n    // That way this element wont be a tab stop when it is not needed #106441\n    focus() {\n        if (this.label) {\n            this.label.tabIndex = 0;\n            this.label.focus();\n        }\n    }\n    blur() {\n        if (this.label) {\n            this.label.tabIndex = -1;\n        }\n    }\n    setFocusable(focusable) {\n        if (this.label) {\n            this.label.tabIndex = focusable ? 0 : -1;\n        }\n    }\n    updateLabel() {\n        if (this.options.label && this.label) {\n            this.label.textContent = this.action.label;\n        }\n    }\n    getTooltip() {\n        let title = null;\n        if (this.action.tooltip) {\n            title = this.action.tooltip;\n        }\n        else if (!this.options.label && this.action.label && this.options.icon) {\n            title = this.action.label;\n            if (this.options.keybinding) {\n                title = nls.localize({ key: 'titleLabel', comment: ['action title', 'action keybinding'] }, \"{0} ({1})\", title, this.options.keybinding);\n            }\n        }\n        return title !== null && title !== void 0 ? title : undefined;\n    }\n    updateClass() {\n        var _a;\n        if (this.cssClass && this.label) {\n            this.label.classList.remove(...this.cssClass.split(' '));\n        }\n        if (this.options.icon) {\n            this.cssClass = this.getClass();\n            if (this.label) {\n                this.label.classList.add('codicon');\n                if (this.cssClass) {\n                    this.label.classList.add(...this.cssClass.split(' '));\n                }\n            }\n            this.updateEnabled();\n        }\n        else {\n            (_a = this.label) === null || _a === void 0 ? void 0 : _a.classList.remove('codicon');\n        }\n    }\n    updateEnabled() {\n        var _a, _b;\n        if (this.action.enabled) {\n            if (this.label) {\n                this.label.removeAttribute('aria-disabled');\n                this.label.classList.remove('disabled');\n            }\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.classList.remove('disabled');\n        }\n        else {\n            if (this.label) {\n                this.label.setAttribute('aria-disabled', 'true');\n                this.label.classList.add('disabled');\n            }\n            (_b = this.element) === null || _b === void 0 ? void 0 : _b.classList.add('disabled');\n        }\n    }\n    updateAriaLabel() {\n        var _a;\n        if (this.label) {\n            const title = (_a = this.getTooltip()) !== null && _a !== void 0 ? _a : '';\n            this.label.setAttribute('aria-label', title);\n        }\n    }\n    updateChecked() {\n        if (this.label) {\n            if (this.action.checked !== undefined) {\n                this.label.classList.toggle('checked', this.action.checked);\n                this.label.setAttribute('aria-checked', this.action.checked ? 'true' : 'false');\n                this.label.setAttribute('role', 'checkbox');\n            }\n            else {\n                this.label.classList.remove('checked');\n                this.label.removeAttribute('aria-checked');\n                this.label.setAttribute('role', this.getDefaultAriaRole());\n            }\n        }\n    }\n}\nexport class SelectActionViewItem extends BaseActionViewItem {\n    constructor(ctx, action, options, selected, contextViewProvider, styles, selectBoxOptions) {\n        super(ctx, action);\n        this.selectBox = new SelectBox(options, selected, contextViewProvider, styles, selectBoxOptions);\n        this.selectBox.setFocusable(false);\n        this._register(this.selectBox);\n        this.registerListeners();\n    }\n    select(index) {\n        this.selectBox.select(index);\n    }\n    registerListeners() {\n        this._register(this.selectBox.onDidSelect(e => this.runAction(e.selected, e.index)));\n    }\n    runAction(option, index) {\n        this.actionRunner.run(this._action, this.getActionContext(option, index));\n    }\n    getActionContext(option, index) {\n        return option;\n    }\n    setFocusable(focusable) {\n        this.selectBox.setFocusable(focusable);\n    }\n    focus() {\n        var _a;\n        (_a = this.selectBox) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    blur() {\n        var _a;\n        (_a = this.selectBox) === null || _a === void 0 ? void 0 : _a.blur();\n    }\n    render(container) {\n        this.selectBox.render(container);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}