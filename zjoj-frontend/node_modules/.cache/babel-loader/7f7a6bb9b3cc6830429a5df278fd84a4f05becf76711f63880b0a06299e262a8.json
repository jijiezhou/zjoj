{"ast":null,"code":"import { defineComponent, openBlock, createElementBlock, Fragment, renderList, normalizeClass, normalizeStyle } from \"vue\";\nimport _export_sfc from \"../_virtual/plugin-vue_export-helper.js\";\nconst _sfc_main = defineComponent({\n  name: \"ColGroup\",\n  props: {\n    dataColumns: {\n      type: Array,\n      required: true\n    },\n    operations: {\n      type: Array,\n      required: true\n    },\n    columnWidth: {\n      type: Object\n    }\n  },\n  setup() {\n    const fixedWidth = width => {\n      if (width) {\n        return {\n          width: `${width}px`,\n          minWidth: `${width}px`,\n          maxWidth: `${width}px`\n        };\n      }\n      return void 0;\n    };\n    return {\n      fixedWidth\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"colgroup\", null, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.operations, item => {\n    return openBlock(), createElementBlock(\"col\", {\n      key: `arco-col-${item.name}`,\n      class: normalizeClass(`arco-table-${item.name}-col`),\n      style: normalizeStyle(_ctx.fixedWidth(item.width))\n    }, null, 6);\n  }), 128)), (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.dataColumns, item => {\n    return openBlock(), createElementBlock(\"col\", {\n      key: `arco-col-${item.dataIndex}`,\n      style: normalizeStyle(_ctx.fixedWidth(_ctx.columnWidth && item.dataIndex && _ctx.columnWidth[item.dataIndex] || item.width))\n    }, null, 4);\n  }), 128))]);\n}\nvar ColGroup = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { ColGroup as default };","map":{"version":3,"names":["defineComponent","openBlock","createElementBlock","Fragment","renderList","normalizeClass","normalizeStyle","_export_sfc","_sfc_main","name","props","dataColumns","type","Array","required","operations","columnWidth","Object","setup","fixedWidth","width","minWidth","maxWidth","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","item","key","class","style","dataIndex","ColGroup","default"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/@arco-design/web-vue/es/table/table-col-group.js"],"sourcesContent":["import { defineComponent, openBlock, createElementBlock, Fragment, renderList, normalizeClass, normalizeStyle } from \"vue\";\nimport _export_sfc from \"../_virtual/plugin-vue_export-helper.js\";\nconst _sfc_main = defineComponent({\n  name: \"ColGroup\",\n  props: {\n    dataColumns: {\n      type: Array,\n      required: true\n    },\n    operations: {\n      type: Array,\n      required: true\n    },\n    columnWidth: {\n      type: Object\n    }\n  },\n  setup() {\n    const fixedWidth = (width) => {\n      if (width) {\n        return {\n          width: `${width}px`,\n          minWidth: `${width}px`,\n          maxWidth: `${width}px`\n        };\n      }\n      return void 0;\n    };\n    return {\n      fixedWidth\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"colgroup\", null, [\n    (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.operations, (item) => {\n      return openBlock(), createElementBlock(\"col\", {\n        key: `arco-col-${item.name}`,\n        class: normalizeClass(`arco-table-${item.name}-col`),\n        style: normalizeStyle(_ctx.fixedWidth(item.width))\n      }, null, 6);\n    }), 128)),\n    (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.dataColumns, (item) => {\n      return openBlock(), createElementBlock(\"col\", {\n        key: `arco-col-${item.dataIndex}`,\n        style: normalizeStyle(_ctx.fixedWidth(_ctx.columnWidth && item.dataIndex && _ctx.columnWidth[item.dataIndex] || item.width))\n      }, null, 4);\n    }), 128))\n  ]);\n}\nvar ColGroup = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { ColGroup as default };\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,SAAS,EAAEC,kBAAkB,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,cAAc,EAAEC,cAAc,QAAQ,KAAK;AAC1H,OAAOC,WAAW,MAAM,yCAAyC;AACjE,MAAMC,SAAS,GAAGR,eAAe,CAAC;EAChCS,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE;IACLC,WAAW,EAAE;MACXC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ,CAAC;IACDC,UAAU,EAAE;MACVH,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ,CAAC;IACDE,WAAW,EAAE;MACXJ,IAAI,EAAEK;IACR;EACF,CAAC;EACDC,KAAKA,CAAA,EAAG;IACN,MAAMC,UAAU,GAAIC,KAAK,IAAK;MAC5B,IAAIA,KAAK,EAAE;QACT,OAAO;UACLA,KAAK,EAAG,GAAEA,KAAM,IAAG;UACnBC,QAAQ,EAAG,GAAED,KAAM,IAAG;UACtBE,QAAQ,EAAG,GAAEF,KAAM;QACrB,CAAC;MACH;MACA,OAAO,KAAK,CAAC;IACf,CAAC;IACD,OAAO;MACLD;IACF,CAAC;EACH;AACF,CAAC,CAAC;AACF,SAASI,WAAWA,CAACC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAE;EAClE,OAAO5B,SAAS,CAAC,CAAC,EAAEC,kBAAkB,CAAC,UAAU,EAAE,IAAI,EAAE,EACtDD,SAAS,CAAC,IAAI,CAAC,EAAEC,kBAAkB,CAACC,QAAQ,EAAE,IAAI,EAAEC,UAAU,CAACoB,IAAI,CAACT,UAAU,EAAGe,IAAI,IAAK;IACzF,OAAO7B,SAAS,CAAC,CAAC,EAAEC,kBAAkB,CAAC,KAAK,EAAE;MAC5C6B,GAAG,EAAG,YAAWD,IAAI,CAACrB,IAAK,EAAC;MAC5BuB,KAAK,EAAE3B,cAAc,CAAE,cAAayB,IAAI,CAACrB,IAAK,MAAK,CAAC;MACpDwB,KAAK,EAAE3B,cAAc,CAACkB,IAAI,CAACL,UAAU,CAACW,IAAI,CAACV,KAAK,CAAC;IACnD,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;EACb,CAAC,CAAC,EAAE,GAAG,CAAC,IACPnB,SAAS,CAAC,IAAI,CAAC,EAAEC,kBAAkB,CAACC,QAAQ,EAAE,IAAI,EAAEC,UAAU,CAACoB,IAAI,CAACb,WAAW,EAAGmB,IAAI,IAAK;IAC1F,OAAO7B,SAAS,CAAC,CAAC,EAAEC,kBAAkB,CAAC,KAAK,EAAE;MAC5C6B,GAAG,EAAG,YAAWD,IAAI,CAACI,SAAU,EAAC;MACjCD,KAAK,EAAE3B,cAAc,CAACkB,IAAI,CAACL,UAAU,CAACK,IAAI,CAACR,WAAW,IAAIc,IAAI,CAACI,SAAS,IAAIV,IAAI,CAACR,WAAW,CAACc,IAAI,CAACI,SAAS,CAAC,IAAIJ,IAAI,CAACV,KAAK,CAAC;IAC7H,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;EACb,CAAC,CAAC,EAAE,GAAG,CAAC,EACT,CAAC;AACJ;AACA,IAAIe,QAAQ,GAAG,eAAgB5B,WAAW,CAACC,SAAS,EAAE,CAAC,CAAC,QAAQ,EAAEe,WAAW,CAAC,CAAC,CAAC;AAChF,SAASY,QAAQ,IAAIC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}