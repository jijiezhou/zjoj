{"ast":null,"code":"import { toRefs, computed, ref, watchEffect } from \"vue\";\nimport { debounce } from \"../../_utils/debounce.js\";\nimport { isUndefined } from \"../../_utils/is.js\";\nfunction useFilterTreeNode(props) {\n  const {\n    searchValue,\n    flattenTreeData,\n    filterMethod: propFilterMethod,\n    disableFilter,\n    fieldNames\n  } = toRefs(props);\n  const keyField = computed(() => {\n    var _a;\n    return ((_a = fieldNames.value) == null ? void 0 : _a.key) || \"key\";\n  });\n  const defaultFilterMethod = (keyword, node) => {\n    const key = node[keyField.value];\n    return !isUndefined(key) && String(key).indexOf(keyword) > -1;\n  };\n  const filterMethod = computed(() => (propFilterMethod == null ? void 0 : propFilterMethod.value) || defaultFilterMethod);\n  const filteredKeysSet = ref();\n  const isFiltering = computed(() => !!searchValue.value);\n  const isEmptyFilterResult = computed(() => !(disableFilter == null ? void 0 : disableFilter.value) && isFiltering.value && filteredKeysSet.value && filteredKeysSet.value.size === 0);\n  const filterTreeNode = computed(() => (disableFilter == null ? void 0 : disableFilter.value) ? void 0 : node => {\n    var _a, _b;\n    if (!isFiltering.value) return true;\n    const key = node[keyField.value];\n    return (_b = (_a = filteredKeysSet.value) == null ? void 0 : _a.has(key || \"\")) != null ? _b : false;\n  });\n  const updateFilteredKeysSet = debounce((treeData, keyword) => {\n    const hitNodes = treeData.filter(node => filterMethod.value(keyword, node.treeNodeData));\n    const _keysSet = new Set();\n    hitNodes.forEach(node => {\n      _keysSet.add(node.key);\n      node.pathParentKeys.forEach(_key => {\n        _keysSet.add(_key);\n      });\n    });\n    filteredKeysSet.value = _keysSet;\n  }, 100);\n  watchEffect(() => {\n    if (disableFilter == null ? void 0 : disableFilter.value) {\n      filteredKeysSet.value = void 0;\n    } else {\n      updateFilteredKeysSet(flattenTreeData.value, searchValue.value);\n    }\n  });\n  return {\n    isEmptyFilterResult,\n    filterTreeNode\n  };\n}\nexport { useFilterTreeNode as default };","map":{"version":3,"names":["toRefs","computed","ref","watchEffect","debounce","isUndefined","useFilterTreeNode","props","searchValue","flattenTreeData","filterMethod","propFilterMethod","disableFilter","fieldNames","keyField","_a","value","key","defaultFilterMethod","keyword","node","String","indexOf","filteredKeysSet","isFiltering","isEmptyFilterResult","size","filterTreeNode","_b","has","updateFilteredKeysSet","treeData","hitNodes","filter","treeNodeData","_keysSet","Set","forEach","add","pathParentKeys","_key","default"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/@arco-design/web-vue/es/tree-select/hooks/use-filter-tree-node.js"],"sourcesContent":["import { toRefs, computed, ref, watchEffect } from \"vue\";\nimport { debounce } from \"../../_utils/debounce.js\";\nimport { isUndefined } from \"../../_utils/is.js\";\nfunction useFilterTreeNode(props) {\n  const {\n    searchValue,\n    flattenTreeData,\n    filterMethod: propFilterMethod,\n    disableFilter,\n    fieldNames\n  } = toRefs(props);\n  const keyField = computed(() => {\n    var _a;\n    return ((_a = fieldNames.value) == null ? void 0 : _a.key) || \"key\";\n  });\n  const defaultFilterMethod = (keyword, node) => {\n    const key = node[keyField.value];\n    return !isUndefined(key) && String(key).indexOf(keyword) > -1;\n  };\n  const filterMethod = computed(() => (propFilterMethod == null ? void 0 : propFilterMethod.value) || defaultFilterMethod);\n  const filteredKeysSet = ref();\n  const isFiltering = computed(() => !!searchValue.value);\n  const isEmptyFilterResult = computed(() => !(disableFilter == null ? void 0 : disableFilter.value) && isFiltering.value && filteredKeysSet.value && filteredKeysSet.value.size === 0);\n  const filterTreeNode = computed(() => (disableFilter == null ? void 0 : disableFilter.value) ? void 0 : (node) => {\n    var _a, _b;\n    if (!isFiltering.value)\n      return true;\n    const key = node[keyField.value];\n    return (_b = (_a = filteredKeysSet.value) == null ? void 0 : _a.has(key || \"\")) != null ? _b : false;\n  });\n  const updateFilteredKeysSet = debounce((treeData, keyword) => {\n    const hitNodes = treeData.filter((node) => filterMethod.value(keyword, node.treeNodeData));\n    const _keysSet = new Set();\n    hitNodes.forEach((node) => {\n      _keysSet.add(node.key);\n      node.pathParentKeys.forEach((_key) => {\n        _keysSet.add(_key);\n      });\n    });\n    filteredKeysSet.value = _keysSet;\n  }, 100);\n  watchEffect(() => {\n    if (disableFilter == null ? void 0 : disableFilter.value) {\n      filteredKeysSet.value = void 0;\n    } else {\n      updateFilteredKeysSet(flattenTreeData.value, searchValue.value);\n    }\n  });\n  return {\n    isEmptyFilterResult,\n    filterTreeNode\n  };\n}\nexport { useFilterTreeNode as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}