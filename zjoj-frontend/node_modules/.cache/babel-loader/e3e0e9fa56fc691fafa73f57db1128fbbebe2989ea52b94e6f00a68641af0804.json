{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isFalsyOrEmpty, isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { DebounceEmitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { MarkerSeverity } from './markers.js';\nexport const unsupportedSchemas = new Set([Schemas.inMemory, Schemas.vscodeSourceControl, Schemas.walkThrough, Schemas.walkThroughSnippet]);\nclass DoubleResourceMap {\n  constructor() {\n    this._byResource = new ResourceMap();\n    this._byOwner = new Map();\n  }\n  set(resource, owner, value) {\n    let ownerMap = this._byResource.get(resource);\n    if (!ownerMap) {\n      ownerMap = new Map();\n      this._byResource.set(resource, ownerMap);\n    }\n    ownerMap.set(owner, value);\n    let resourceMap = this._byOwner.get(owner);\n    if (!resourceMap) {\n      resourceMap = new ResourceMap();\n      this._byOwner.set(owner, resourceMap);\n    }\n    resourceMap.set(resource, value);\n  }\n  get(resource, owner) {\n    const ownerMap = this._byResource.get(resource);\n    return ownerMap === null || ownerMap === void 0 ? void 0 : ownerMap.get(owner);\n  }\n  delete(resource, owner) {\n    let removedA = false;\n    let removedB = false;\n    const ownerMap = this._byResource.get(resource);\n    if (ownerMap) {\n      removedA = ownerMap.delete(owner);\n    }\n    const resourceMap = this._byOwner.get(owner);\n    if (resourceMap) {\n      removedB = resourceMap.delete(resource);\n    }\n    if (removedA !== removedB) {\n      throw new Error('illegal state');\n    }\n    return removedA && removedB;\n  }\n  values(key) {\n    var _a, _b, _c, _d;\n    if (typeof key === 'string') {\n      return (_b = (_a = this._byOwner.get(key)) === null || _a === void 0 ? void 0 : _a.values()) !== null && _b !== void 0 ? _b : Iterable.empty();\n    }\n    if (URI.isUri(key)) {\n      return (_d = (_c = this._byResource.get(key)) === null || _c === void 0 ? void 0 : _c.values()) !== null && _d !== void 0 ? _d : Iterable.empty();\n    }\n    return Iterable.map(Iterable.concat(...this._byOwner.values()), map => map[1]);\n  }\n}\nclass MarkerStats {\n  constructor(service) {\n    this.errors = 0;\n    this.infos = 0;\n    this.warnings = 0;\n    this.unknowns = 0;\n    this._data = new ResourceMap();\n    this._service = service;\n    this._subscription = service.onMarkerChanged(this._update, this);\n  }\n  dispose() {\n    this._subscription.dispose();\n  }\n  _update(resources) {\n    for (const resource of resources) {\n      const oldStats = this._data.get(resource);\n      if (oldStats) {\n        this._substract(oldStats);\n      }\n      const newStats = this._resourceStats(resource);\n      this._add(newStats);\n      this._data.set(resource, newStats);\n    }\n  }\n  _resourceStats(resource) {\n    const result = {\n      errors: 0,\n      warnings: 0,\n      infos: 0,\n      unknowns: 0\n    };\n    // TODO this is a hack\n    if (unsupportedSchemas.has(resource.scheme)) {\n      return result;\n    }\n    for (const {\n      severity\n    } of this._service.read({\n      resource\n    })) {\n      if (severity === MarkerSeverity.Error) {\n        result.errors += 1;\n      } else if (severity === MarkerSeverity.Warning) {\n        result.warnings += 1;\n      } else if (severity === MarkerSeverity.Info) {\n        result.infos += 1;\n      } else {\n        result.unknowns += 1;\n      }\n    }\n    return result;\n  }\n  _substract(op) {\n    this.errors -= op.errors;\n    this.warnings -= op.warnings;\n    this.infos -= op.infos;\n    this.unknowns -= op.unknowns;\n  }\n  _add(op) {\n    this.errors += op.errors;\n    this.warnings += op.warnings;\n    this.infos += op.infos;\n    this.unknowns += op.unknowns;\n  }\n}\nexport class MarkerService {\n  constructor() {\n    this._onMarkerChanged = new DebounceEmitter({\n      delay: 0,\n      merge: MarkerService._merge\n    });\n    this.onMarkerChanged = this._onMarkerChanged.event;\n    this._data = new DoubleResourceMap();\n    this._stats = new MarkerStats(this);\n  }\n  dispose() {\n    this._stats.dispose();\n    this._onMarkerChanged.dispose();\n  }\n  remove(owner, resources) {\n    for (const resource of resources || []) {\n      this.changeOne(owner, resource, []);\n    }\n  }\n  changeOne(owner, resource, markerData) {\n    if (isFalsyOrEmpty(markerData)) {\n      // remove marker for this (owner,resource)-tuple\n      const removed = this._data.delete(resource, owner);\n      if (removed) {\n        this._onMarkerChanged.fire([resource]);\n      }\n    } else {\n      // insert marker for this (owner,resource)-tuple\n      const markers = [];\n      for (const data of markerData) {\n        const marker = MarkerService._toMarker(owner, resource, data);\n        if (marker) {\n          markers.push(marker);\n        }\n      }\n      this._data.set(resource, owner, markers);\n      this._onMarkerChanged.fire([resource]);\n    }\n  }\n  static _toMarker(owner, resource, data) {\n    let {\n      code,\n      severity,\n      message,\n      source,\n      startLineNumber,\n      startColumn,\n      endLineNumber,\n      endColumn,\n      relatedInformation,\n      tags\n    } = data;\n    if (!message) {\n      return undefined;\n    }\n    // santize data\n    startLineNumber = startLineNumber > 0 ? startLineNumber : 1;\n    startColumn = startColumn > 0 ? startColumn : 1;\n    endLineNumber = endLineNumber >= startLineNumber ? endLineNumber : startLineNumber;\n    endColumn = endColumn > 0 ? endColumn : startColumn;\n    return {\n      resource,\n      owner,\n      code,\n      severity,\n      message,\n      source,\n      startLineNumber,\n      startColumn,\n      endLineNumber,\n      endColumn,\n      relatedInformation,\n      tags\n    };\n  }\n  changeAll(owner, data) {\n    const changes = [];\n    // remove old marker\n    const existing = this._data.values(owner);\n    if (existing) {\n      for (const data of existing) {\n        const first = Iterable.first(data);\n        if (first) {\n          changes.push(first.resource);\n          this._data.delete(first.resource, owner);\n        }\n      }\n    }\n    // add new markers\n    if (isNonEmptyArray(data)) {\n      // group by resource\n      const groups = new ResourceMap();\n      for (const {\n        resource,\n        marker: markerData\n      } of data) {\n        const marker = MarkerService._toMarker(owner, resource, markerData);\n        if (!marker) {\n          // filter bad markers\n          continue;\n        }\n        const array = groups.get(resource);\n        if (!array) {\n          groups.set(resource, [marker]);\n          changes.push(resource);\n        } else {\n          array.push(marker);\n        }\n      }\n      // insert all\n      for (const [resource, value] of groups) {\n        this._data.set(resource, owner, value);\n      }\n    }\n    if (changes.length > 0) {\n      this._onMarkerChanged.fire(changes);\n    }\n  }\n  read(filter = Object.create(null)) {\n    let {\n      owner,\n      resource,\n      severities,\n      take\n    } = filter;\n    if (!take || take < 0) {\n      take = -1;\n    }\n    if (owner && resource) {\n      // exactly one owner AND resource\n      const data = this._data.get(resource, owner);\n      if (!data) {\n        return [];\n      } else {\n        const result = [];\n        for (const marker of data) {\n          if (MarkerService._accept(marker, severities)) {\n            const newLen = result.push(marker);\n            if (take > 0 && newLen === take) {\n              break;\n            }\n          }\n        }\n        return result;\n      }\n    } else if (!owner && !resource) {\n      // all\n      const result = [];\n      for (const markers of this._data.values()) {\n        for (const data of markers) {\n          if (MarkerService._accept(data, severities)) {\n            const newLen = result.push(data);\n            if (take > 0 && newLen === take) {\n              return result;\n            }\n          }\n        }\n      }\n      return result;\n    } else {\n      // of one resource OR owner\n      const iterable = this._data.values(resource !== null && resource !== void 0 ? resource : owner);\n      const result = [];\n      for (const markers of iterable) {\n        for (const data of markers) {\n          if (MarkerService._accept(data, severities)) {\n            const newLen = result.push(data);\n            if (take > 0 && newLen === take) {\n              return result;\n            }\n          }\n        }\n      }\n      return result;\n    }\n  }\n  static _accept(marker, severities) {\n    return severities === undefined || (severities & marker.severity) === marker.severity;\n  }\n  // --- event debounce logic\n  static _merge(all) {\n    const set = new ResourceMap();\n    for (const array of all) {\n      for (const item of array) {\n        set.set(item, true);\n      }\n    }\n    return Array.from(set.keys());\n  }\n}","map":{"version":3,"names":["isFalsyOrEmpty","isNonEmptyArray","DebounceEmitter","Iterable","ResourceMap","Schemas","URI","MarkerSeverity","unsupportedSchemas","Set","inMemory","vscodeSourceControl","walkThrough","walkThroughSnippet","DoubleResourceMap","constructor","_byResource","_byOwner","Map","set","resource","owner","value","ownerMap","get","resourceMap","delete","removedA","removedB","Error","values","key","_a","_b","_c","_d","empty","isUri","map","concat","MarkerStats","service","errors","infos","warnings","unknowns","_data","_service","_subscription","onMarkerChanged","_update","dispose","resources","oldStats","_substract","newStats","_resourceStats","_add","result","has","scheme","severity","read","Warning","Info","op","MarkerService","_onMarkerChanged","delay","merge","_merge","event","_stats","remove","changeOne","markerData","removed","fire","markers","data","marker","_toMarker","push","code","message","source","startLineNumber","startColumn","endLineNumber","endColumn","relatedInformation","tags","undefined","changeAll","changes","existing","first","groups","array","length","filter","Object","create","severities","take","_accept","newLen","iterable","all","item","Array","from","keys"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/platform/markers/common/markerService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isFalsyOrEmpty, isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { DebounceEmitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { MarkerSeverity } from './markers.js';\nexport const unsupportedSchemas = new Set([Schemas.inMemory, Schemas.vscodeSourceControl, Schemas.walkThrough, Schemas.walkThroughSnippet]);\nclass DoubleResourceMap {\n    constructor() {\n        this._byResource = new ResourceMap();\n        this._byOwner = new Map();\n    }\n    set(resource, owner, value) {\n        let ownerMap = this._byResource.get(resource);\n        if (!ownerMap) {\n            ownerMap = new Map();\n            this._byResource.set(resource, ownerMap);\n        }\n        ownerMap.set(owner, value);\n        let resourceMap = this._byOwner.get(owner);\n        if (!resourceMap) {\n            resourceMap = new ResourceMap();\n            this._byOwner.set(owner, resourceMap);\n        }\n        resourceMap.set(resource, value);\n    }\n    get(resource, owner) {\n        const ownerMap = this._byResource.get(resource);\n        return ownerMap === null || ownerMap === void 0 ? void 0 : ownerMap.get(owner);\n    }\n    delete(resource, owner) {\n        let removedA = false;\n        let removedB = false;\n        const ownerMap = this._byResource.get(resource);\n        if (ownerMap) {\n            removedA = ownerMap.delete(owner);\n        }\n        const resourceMap = this._byOwner.get(owner);\n        if (resourceMap) {\n            removedB = resourceMap.delete(resource);\n        }\n        if (removedA !== removedB) {\n            throw new Error('illegal state');\n        }\n        return removedA && removedB;\n    }\n    values(key) {\n        var _a, _b, _c, _d;\n        if (typeof key === 'string') {\n            return (_b = (_a = this._byOwner.get(key)) === null || _a === void 0 ? void 0 : _a.values()) !== null && _b !== void 0 ? _b : Iterable.empty();\n        }\n        if (URI.isUri(key)) {\n            return (_d = (_c = this._byResource.get(key)) === null || _c === void 0 ? void 0 : _c.values()) !== null && _d !== void 0 ? _d : Iterable.empty();\n        }\n        return Iterable.map(Iterable.concat(...this._byOwner.values()), map => map[1]);\n    }\n}\nclass MarkerStats {\n    constructor(service) {\n        this.errors = 0;\n        this.infos = 0;\n        this.warnings = 0;\n        this.unknowns = 0;\n        this._data = new ResourceMap();\n        this._service = service;\n        this._subscription = service.onMarkerChanged(this._update, this);\n    }\n    dispose() {\n        this._subscription.dispose();\n    }\n    _update(resources) {\n        for (const resource of resources) {\n            const oldStats = this._data.get(resource);\n            if (oldStats) {\n                this._substract(oldStats);\n            }\n            const newStats = this._resourceStats(resource);\n            this._add(newStats);\n            this._data.set(resource, newStats);\n        }\n    }\n    _resourceStats(resource) {\n        const result = { errors: 0, warnings: 0, infos: 0, unknowns: 0 };\n        // TODO this is a hack\n        if (unsupportedSchemas.has(resource.scheme)) {\n            return result;\n        }\n        for (const { severity } of this._service.read({ resource })) {\n            if (severity === MarkerSeverity.Error) {\n                result.errors += 1;\n            }\n            else if (severity === MarkerSeverity.Warning) {\n                result.warnings += 1;\n            }\n            else if (severity === MarkerSeverity.Info) {\n                result.infos += 1;\n            }\n            else {\n                result.unknowns += 1;\n            }\n        }\n        return result;\n    }\n    _substract(op) {\n        this.errors -= op.errors;\n        this.warnings -= op.warnings;\n        this.infos -= op.infos;\n        this.unknowns -= op.unknowns;\n    }\n    _add(op) {\n        this.errors += op.errors;\n        this.warnings += op.warnings;\n        this.infos += op.infos;\n        this.unknowns += op.unknowns;\n    }\n}\nexport class MarkerService {\n    constructor() {\n        this._onMarkerChanged = new DebounceEmitter({\n            delay: 0,\n            merge: MarkerService._merge\n        });\n        this.onMarkerChanged = this._onMarkerChanged.event;\n        this._data = new DoubleResourceMap();\n        this._stats = new MarkerStats(this);\n    }\n    dispose() {\n        this._stats.dispose();\n        this._onMarkerChanged.dispose();\n    }\n    remove(owner, resources) {\n        for (const resource of resources || []) {\n            this.changeOne(owner, resource, []);\n        }\n    }\n    changeOne(owner, resource, markerData) {\n        if (isFalsyOrEmpty(markerData)) {\n            // remove marker for this (owner,resource)-tuple\n            const removed = this._data.delete(resource, owner);\n            if (removed) {\n                this._onMarkerChanged.fire([resource]);\n            }\n        }\n        else {\n            // insert marker for this (owner,resource)-tuple\n            const markers = [];\n            for (const data of markerData) {\n                const marker = MarkerService._toMarker(owner, resource, data);\n                if (marker) {\n                    markers.push(marker);\n                }\n            }\n            this._data.set(resource, owner, markers);\n            this._onMarkerChanged.fire([resource]);\n        }\n    }\n    static _toMarker(owner, resource, data) {\n        let { code, severity, message, source, startLineNumber, startColumn, endLineNumber, endColumn, relatedInformation, tags, } = data;\n        if (!message) {\n            return undefined;\n        }\n        // santize data\n        startLineNumber = startLineNumber > 0 ? startLineNumber : 1;\n        startColumn = startColumn > 0 ? startColumn : 1;\n        endLineNumber = endLineNumber >= startLineNumber ? endLineNumber : startLineNumber;\n        endColumn = endColumn > 0 ? endColumn : startColumn;\n        return {\n            resource,\n            owner,\n            code,\n            severity,\n            message,\n            source,\n            startLineNumber,\n            startColumn,\n            endLineNumber,\n            endColumn,\n            relatedInformation,\n            tags,\n        };\n    }\n    changeAll(owner, data) {\n        const changes = [];\n        // remove old marker\n        const existing = this._data.values(owner);\n        if (existing) {\n            for (const data of existing) {\n                const first = Iterable.first(data);\n                if (first) {\n                    changes.push(first.resource);\n                    this._data.delete(first.resource, owner);\n                }\n            }\n        }\n        // add new markers\n        if (isNonEmptyArray(data)) {\n            // group by resource\n            const groups = new ResourceMap();\n            for (const { resource, marker: markerData } of data) {\n                const marker = MarkerService._toMarker(owner, resource, markerData);\n                if (!marker) {\n                    // filter bad markers\n                    continue;\n                }\n                const array = groups.get(resource);\n                if (!array) {\n                    groups.set(resource, [marker]);\n                    changes.push(resource);\n                }\n                else {\n                    array.push(marker);\n                }\n            }\n            // insert all\n            for (const [resource, value] of groups) {\n                this._data.set(resource, owner, value);\n            }\n        }\n        if (changes.length > 0) {\n            this._onMarkerChanged.fire(changes);\n        }\n    }\n    read(filter = Object.create(null)) {\n        let { owner, resource, severities, take } = filter;\n        if (!take || take < 0) {\n            take = -1;\n        }\n        if (owner && resource) {\n            // exactly one owner AND resource\n            const data = this._data.get(resource, owner);\n            if (!data) {\n                return [];\n            }\n            else {\n                const result = [];\n                for (const marker of data) {\n                    if (MarkerService._accept(marker, severities)) {\n                        const newLen = result.push(marker);\n                        if (take > 0 && newLen === take) {\n                            break;\n                        }\n                    }\n                }\n                return result;\n            }\n        }\n        else if (!owner && !resource) {\n            // all\n            const result = [];\n            for (const markers of this._data.values()) {\n                for (const data of markers) {\n                    if (MarkerService._accept(data, severities)) {\n                        const newLen = result.push(data);\n                        if (take > 0 && newLen === take) {\n                            return result;\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n        else {\n            // of one resource OR owner\n            const iterable = this._data.values(resource !== null && resource !== void 0 ? resource : owner);\n            const result = [];\n            for (const markers of iterable) {\n                for (const data of markers) {\n                    if (MarkerService._accept(data, severities)) {\n                        const newLen = result.push(data);\n                        if (take > 0 && newLen === take) {\n                            return result;\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n    }\n    static _accept(marker, severities) {\n        return severities === undefined || (severities & marker.severity) === marker.severity;\n    }\n    // --- event debounce logic\n    static _merge(all) {\n        const set = new ResourceMap();\n        for (const array of all) {\n            for (const item of array) {\n                set.set(item, true);\n            }\n        }\n        return Array.from(set.keys());\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}