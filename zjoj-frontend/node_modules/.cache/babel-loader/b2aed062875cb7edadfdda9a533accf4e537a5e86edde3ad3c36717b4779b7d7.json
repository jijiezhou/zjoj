{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { decodeKeybinding } from '../../../base/common/keybindings.js';\nimport { OS } from '../../../base/common/platform.js';\nimport { CommandsRegistry } from '../../commands/common/commands.js';\nimport { Registry } from '../../registry/common/platform.js';\nimport { combinedDisposable, DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\n/**\n * Stores all built-in and extension-provided keybindings (but not ones that user defines themselves)\n */\nclass KeybindingsRegistryImpl {\n  constructor() {\n    this._coreKeybindings = new LinkedList();\n    this._extensionKeybindings = [];\n    this._cachedMergedKeybindings = null;\n  }\n  /**\n   * Take current platform into account and reduce to primary & secondary.\n   */\n  static bindToCurrentPlatform(kb) {\n    if (OS === 1 /* OperatingSystem.Windows */) {\n      if (kb && kb.win) {\n        return kb.win;\n      }\n    } else if (OS === 2 /* OperatingSystem.Macintosh */) {\n      if (kb && kb.mac) {\n        return kb.mac;\n      }\n    } else {\n      if (kb && kb.linux) {\n        return kb.linux;\n      }\n    }\n    return kb;\n  }\n  registerKeybindingRule(rule) {\n    const actualKb = KeybindingsRegistryImpl.bindToCurrentPlatform(rule);\n    const result = new DisposableStore();\n    if (actualKb && actualKb.primary) {\n      const kk = decodeKeybinding(actualKb.primary, OS);\n      if (kk) {\n        result.add(this._registerDefaultKeybinding(kk, rule.id, rule.args, rule.weight, 0, rule.when));\n      }\n    }\n    if (actualKb && Array.isArray(actualKb.secondary)) {\n      for (let i = 0, len = actualKb.secondary.length; i < len; i++) {\n        const k = actualKb.secondary[i];\n        const kk = decodeKeybinding(k, OS);\n        if (kk) {\n          result.add(this._registerDefaultKeybinding(kk, rule.id, rule.args, rule.weight, -i - 1, rule.when));\n        }\n      }\n    }\n    return result;\n  }\n  registerCommandAndKeybindingRule(desc) {\n    return combinedDisposable(this.registerKeybindingRule(desc), CommandsRegistry.registerCommand(desc));\n  }\n  _registerDefaultKeybinding(keybinding, commandId, commandArgs, weight1, weight2, when) {\n    const remove = this._coreKeybindings.push({\n      keybinding: keybinding,\n      command: commandId,\n      commandArgs: commandArgs,\n      when: when,\n      weight1: weight1,\n      weight2: weight2,\n      extensionId: null,\n      isBuiltinExtension: false\n    });\n    this._cachedMergedKeybindings = null;\n    return toDisposable(() => {\n      remove();\n      this._cachedMergedKeybindings = null;\n    });\n  }\n  getDefaultKeybindings() {\n    if (!this._cachedMergedKeybindings) {\n      this._cachedMergedKeybindings = Array.from(this._coreKeybindings).concat(this._extensionKeybindings);\n      this._cachedMergedKeybindings.sort(sorter);\n    }\n    return this._cachedMergedKeybindings.slice(0);\n  }\n}\nexport const KeybindingsRegistry = new KeybindingsRegistryImpl();\n// Define extension point ids\nexport const Extensions = {\n  EditorModes: 'platform.keybindingsRegistry'\n};\nRegistry.add(Extensions.EditorModes, KeybindingsRegistry);\nfunction sorter(a, b) {\n  if (a.weight1 !== b.weight1) {\n    return a.weight1 - b.weight1;\n  }\n  if (a.command && b.command) {\n    if (a.command < b.command) {\n      return -1;\n    }\n    if (a.command > b.command) {\n      return 1;\n    }\n  }\n  return a.weight2 - b.weight2;\n}","map":{"version":3,"names":["decodeKeybinding","OS","CommandsRegistry","Registry","combinedDisposable","DisposableStore","toDisposable","LinkedList","KeybindingsRegistryImpl","constructor","_coreKeybindings","_extensionKeybindings","_cachedMergedKeybindings","bindToCurrentPlatform","kb","win","mac","linux","registerKeybindingRule","rule","actualKb","result","primary","kk","add","_registerDefaultKeybinding","id","args","weight","when","Array","isArray","secondary","i","len","length","k","registerCommandAndKeybindingRule","desc","registerCommand","keybinding","commandId","commandArgs","weight1","weight2","remove","push","command","extensionId","isBuiltinExtension","getDefaultKeybindings","from","concat","sort","sorter","slice","KeybindingsRegistry","Extensions","EditorModes","a","b"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/platform/keybinding/common/keybindingsRegistry.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { decodeKeybinding } from '../../../base/common/keybindings.js';\nimport { OS } from '../../../base/common/platform.js';\nimport { CommandsRegistry } from '../../commands/common/commands.js';\nimport { Registry } from '../../registry/common/platform.js';\nimport { combinedDisposable, DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\n/**\n * Stores all built-in and extension-provided keybindings (but not ones that user defines themselves)\n */\nclass KeybindingsRegistryImpl {\n    constructor() {\n        this._coreKeybindings = new LinkedList();\n        this._extensionKeybindings = [];\n        this._cachedMergedKeybindings = null;\n    }\n    /**\n     * Take current platform into account and reduce to primary & secondary.\n     */\n    static bindToCurrentPlatform(kb) {\n        if (OS === 1 /* OperatingSystem.Windows */) {\n            if (kb && kb.win) {\n                return kb.win;\n            }\n        }\n        else if (OS === 2 /* OperatingSystem.Macintosh */) {\n            if (kb && kb.mac) {\n                return kb.mac;\n            }\n        }\n        else {\n            if (kb && kb.linux) {\n                return kb.linux;\n            }\n        }\n        return kb;\n    }\n    registerKeybindingRule(rule) {\n        const actualKb = KeybindingsRegistryImpl.bindToCurrentPlatform(rule);\n        const result = new DisposableStore();\n        if (actualKb && actualKb.primary) {\n            const kk = decodeKeybinding(actualKb.primary, OS);\n            if (kk) {\n                result.add(this._registerDefaultKeybinding(kk, rule.id, rule.args, rule.weight, 0, rule.when));\n            }\n        }\n        if (actualKb && Array.isArray(actualKb.secondary)) {\n            for (let i = 0, len = actualKb.secondary.length; i < len; i++) {\n                const k = actualKb.secondary[i];\n                const kk = decodeKeybinding(k, OS);\n                if (kk) {\n                    result.add(this._registerDefaultKeybinding(kk, rule.id, rule.args, rule.weight, -i - 1, rule.when));\n                }\n            }\n        }\n        return result;\n    }\n    registerCommandAndKeybindingRule(desc) {\n        return combinedDisposable(this.registerKeybindingRule(desc), CommandsRegistry.registerCommand(desc));\n    }\n    _registerDefaultKeybinding(keybinding, commandId, commandArgs, weight1, weight2, when) {\n        const remove = this._coreKeybindings.push({\n            keybinding: keybinding,\n            command: commandId,\n            commandArgs: commandArgs,\n            when: when,\n            weight1: weight1,\n            weight2: weight2,\n            extensionId: null,\n            isBuiltinExtension: false\n        });\n        this._cachedMergedKeybindings = null;\n        return toDisposable(() => {\n            remove();\n            this._cachedMergedKeybindings = null;\n        });\n    }\n    getDefaultKeybindings() {\n        if (!this._cachedMergedKeybindings) {\n            this._cachedMergedKeybindings = Array.from(this._coreKeybindings).concat(this._extensionKeybindings);\n            this._cachedMergedKeybindings.sort(sorter);\n        }\n        return this._cachedMergedKeybindings.slice(0);\n    }\n}\nexport const KeybindingsRegistry = new KeybindingsRegistryImpl();\n// Define extension point ids\nexport const Extensions = {\n    EditorModes: 'platform.keybindingsRegistry'\n};\nRegistry.add(Extensions.EditorModes, KeybindingsRegistry);\nfunction sorter(a, b) {\n    if (a.weight1 !== b.weight1) {\n        return a.weight1 - b.weight1;\n    }\n    if (a.command && b.command) {\n        if (a.command < b.command) {\n            return -1;\n        }\n        if (a.command > b.command) {\n            return 1;\n        }\n    }\n    return a.weight2 - b.weight2;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}