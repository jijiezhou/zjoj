{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar DropIntoEditorController_1;\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { VSDataTransfer, matchesMimeType } from '../../../../base/common/dataTransfer.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { toExternalVSDataTransfer } from '../../../browser/dnd.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { DraggedTreeItemsIdentifier } from '../../../common/services/treeViewsDnd.js';\nimport { ITreeViewsDnDService } from '../../../common/services/treeViewsDndService.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress.js';\nimport { localize } from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { LocalSelectionTransfer } from '../../../../platform/dnd/browser/dnd.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { sortEditsByYieldTo } from './edit.js';\nimport { PostEditWidgetManager } from './postEditWidget.js';\nexport const defaultProviderConfig = 'editor.experimental.dropIntoEditor.defaultProvider';\nexport const changeDropTypeCommandId = 'editor.changeDropType';\nexport const dropWidgetVisibleCtx = new RawContextKey('dropWidgetVisible', false, localize('dropWidgetVisible', \"Whether the drop widget is showing\"));\nlet DropIntoEditorController = DropIntoEditorController_1 = class DropIntoEditorController extends Disposable {\n  static get(editor) {\n    return editor.getContribution(DropIntoEditorController_1.ID);\n  }\n  constructor(editor, instantiationService, _configService, _languageFeaturesService, _treeViewsDragAndDropService) {\n    super();\n    this._configService = _configService;\n    this._languageFeaturesService = _languageFeaturesService;\n    this._treeViewsDragAndDropService = _treeViewsDragAndDropService;\n    this.treeItemsTransfer = LocalSelectionTransfer.getInstance();\n    this._dropProgressManager = this._register(instantiationService.createInstance(InlineProgressManager, 'dropIntoEditor', editor));\n    this._postDropWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'dropIntoEditor', editor, dropWidgetVisibleCtx, {\n      id: changeDropTypeCommandId,\n      label: localize('postDropWidgetTitle', \"Show drop options...\")\n    }));\n    this._register(editor.onDropIntoEditor(e => this.onDropIntoEditor(editor, e.position, e.event)));\n  }\n  changeDropType() {\n    this._postDropWidgetManager.tryShowSelector();\n  }\n  async onDropIntoEditor(editor, position, dragEvent) {\n    var _a;\n    if (!dragEvent.dataTransfer || !editor.hasModel()) {\n      return;\n    }\n    (_a = this._currentOperation) === null || _a === void 0 ? void 0 : _a.cancel();\n    editor.focus();\n    editor.setPosition(position);\n    const p = createCancelablePromise(async token => {\n      const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */, undefined, token);\n      try {\n        const ourDataTransfer = await this.extractDataTransferData(dragEvent);\n        if (ourDataTransfer.size === 0 || tokenSource.token.isCancellationRequested) {\n          return;\n        }\n        const model = editor.getModel();\n        if (!model) {\n          return;\n        }\n        const providers = this._languageFeaturesService.documentOnDropEditProvider.ordered(model).filter(provider => {\n          if (!provider.dropMimeTypes) {\n            // Keep all providers that don't specify mime types\n            return true;\n          }\n          return provider.dropMimeTypes.some(mime => ourDataTransfer.matches(mime));\n        });\n        const edits = await this.getDropEdits(providers, model, position, ourDataTransfer, tokenSource);\n        if (tokenSource.token.isCancellationRequested) {\n          return;\n        }\n        if (edits.length) {\n          const activeEditIndex = this.getInitialActiveEditIndex(model, edits);\n          const canShowWidget = editor.getOption(36 /* EditorOption.dropIntoEditor */).showDropSelector === 'afterDrop';\n          // Pass in the parent token here as it tracks cancelling the entire drop operation\n          await this._postDropWidgetManager.applyEditAndShowIfNeeded([Range.fromPositions(position)], {\n            activeEditIndex,\n            allEdits: edits\n          }, canShowWidget, token);\n        }\n      } finally {\n        tokenSource.dispose();\n        if (this._currentOperation === p) {\n          this._currentOperation = undefined;\n        }\n      }\n    });\n    this._dropProgressManager.showWhile(position, localize('dropIntoEditorProgress', \"Running drop handlers. Click to cancel\"), p);\n    this._currentOperation = p;\n  }\n  async getDropEdits(providers, model, position, dataTransfer, tokenSource) {\n    const results = await raceCancellation(Promise.all(providers.map(async provider => {\n      try {\n        const edit = await provider.provideDocumentOnDropEdits(model, position, dataTransfer, tokenSource.token);\n        if (edit) {\n          return {\n            ...edit,\n            providerId: provider.id\n          };\n        }\n      } catch (err) {\n        console.error(err);\n      }\n      return undefined;\n    })), tokenSource.token);\n    const edits = coalesce(results !== null && results !== void 0 ? results : []);\n    return sortEditsByYieldTo(edits);\n  }\n  getInitialActiveEditIndex(model, edits) {\n    const preferredProviders = this._configService.getValue(defaultProviderConfig, {\n      resource: model.uri\n    });\n    for (const [configMime, desiredId] of Object.entries(preferredProviders)) {\n      const editIndex = edits.findIndex(edit => desiredId === edit.providerId && edit.handledMimeType && matchesMimeType(configMime, [edit.handledMimeType]));\n      if (editIndex >= 0) {\n        return editIndex;\n      }\n    }\n    return 0;\n  }\n  async extractDataTransferData(dragEvent) {\n    if (!dragEvent.dataTransfer) {\n      return new VSDataTransfer();\n    }\n    const dataTransfer = toExternalVSDataTransfer(dragEvent.dataTransfer);\n    if (this.treeItemsTransfer.hasData(DraggedTreeItemsIdentifier.prototype)) {\n      const data = this.treeItemsTransfer.getData(DraggedTreeItemsIdentifier.prototype);\n      if (Array.isArray(data)) {\n        for (const id of data) {\n          const treeDataTransfer = await this._treeViewsDragAndDropService.removeDragOperationTransfer(id.identifier);\n          if (treeDataTransfer) {\n            for (const [type, value] of treeDataTransfer) {\n              dataTransfer.replace(type, value);\n            }\n          }\n        }\n      }\n    }\n    return dataTransfer;\n  }\n};\nDropIntoEditorController.ID = 'editor.contrib.dropIntoEditorController';\nDropIntoEditorController = DropIntoEditorController_1 = __decorate([__param(1, IInstantiationService), __param(2, IConfigurationService), __param(3, ILanguageFeaturesService), __param(4, ITreeViewsDnDService)], DropIntoEditorController);\nexport { DropIntoEditorController };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","DropIntoEditorController_1","coalesce","createCancelablePromise","raceCancellation","VSDataTransfer","matchesMimeType","Disposable","toExternalVSDataTransfer","Range","ILanguageFeaturesService","DraggedTreeItemsIdentifier","ITreeViewsDnDService","EditorStateCancellationTokenSource","InlineProgressManager","localize","IConfigurationService","RawContextKey","LocalSelectionTransfer","IInstantiationService","sortEditsByYieldTo","PostEditWidgetManager","defaultProviderConfig","changeDropTypeCommandId","dropWidgetVisibleCtx","DropIntoEditorController","get","editor","getContribution","ID","constructor","instantiationService","_configService","_languageFeaturesService","_treeViewsDragAndDropService","treeItemsTransfer","getInstance","_dropProgressManager","_register","createInstance","_postDropWidgetManager","id","label","onDropIntoEditor","e","position","event","changeDropType","tryShowSelector","dragEvent","_a","dataTransfer","hasModel","_currentOperation","cancel","focus","setPosition","p","token","tokenSource","undefined","ourDataTransfer","extractDataTransferData","size","isCancellationRequested","model","getModel","providers","documentOnDropEditProvider","ordered","filter","provider","dropMimeTypes","some","mime","matches","edits","getDropEdits","activeEditIndex","getInitialActiveEditIndex","canShowWidget","getOption","showDropSelector","applyEditAndShowIfNeeded","fromPositions","allEdits","dispose","showWhile","results","Promise","all","map","edit","provideDocumentOnDropEdits","providerId","err","console","error","preferredProviders","getValue","resource","uri","configMime","desiredId","entries","editIndex","findIndex","handledMimeType","hasData","prototype","data","getData","Array","isArray","treeDataTransfer","removeDragOperationTransfer","identifier","type","value","replace"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar DropIntoEditorController_1;\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { VSDataTransfer, matchesMimeType } from '../../../../base/common/dataTransfer.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { toExternalVSDataTransfer } from '../../../browser/dnd.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { DraggedTreeItemsIdentifier } from '../../../common/services/treeViewsDnd.js';\nimport { ITreeViewsDnDService } from '../../../common/services/treeViewsDndService.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress.js';\nimport { localize } from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { LocalSelectionTransfer } from '../../../../platform/dnd/browser/dnd.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { sortEditsByYieldTo } from './edit.js';\nimport { PostEditWidgetManager } from './postEditWidget.js';\nexport const defaultProviderConfig = 'editor.experimental.dropIntoEditor.defaultProvider';\nexport const changeDropTypeCommandId = 'editor.changeDropType';\nexport const dropWidgetVisibleCtx = new RawContextKey('dropWidgetVisible', false, localize('dropWidgetVisible', \"Whether the drop widget is showing\"));\nlet DropIntoEditorController = DropIntoEditorController_1 = class DropIntoEditorController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(DropIntoEditorController_1.ID);\n    }\n    constructor(editor, instantiationService, _configService, _languageFeaturesService, _treeViewsDragAndDropService) {\n        super();\n        this._configService = _configService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._treeViewsDragAndDropService = _treeViewsDragAndDropService;\n        this.treeItemsTransfer = LocalSelectionTransfer.getInstance();\n        this._dropProgressManager = this._register(instantiationService.createInstance(InlineProgressManager, 'dropIntoEditor', editor));\n        this._postDropWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'dropIntoEditor', editor, dropWidgetVisibleCtx, { id: changeDropTypeCommandId, label: localize('postDropWidgetTitle', \"Show drop options...\") }));\n        this._register(editor.onDropIntoEditor(e => this.onDropIntoEditor(editor, e.position, e.event)));\n    }\n    changeDropType() {\n        this._postDropWidgetManager.tryShowSelector();\n    }\n    async onDropIntoEditor(editor, position, dragEvent) {\n        var _a;\n        if (!dragEvent.dataTransfer || !editor.hasModel()) {\n            return;\n        }\n        (_a = this._currentOperation) === null || _a === void 0 ? void 0 : _a.cancel();\n        editor.focus();\n        editor.setPosition(position);\n        const p = createCancelablePromise(async (token) => {\n            const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */, undefined, token);\n            try {\n                const ourDataTransfer = await this.extractDataTransferData(dragEvent);\n                if (ourDataTransfer.size === 0 || tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                const model = editor.getModel();\n                if (!model) {\n                    return;\n                }\n                const providers = this._languageFeaturesService.documentOnDropEditProvider\n                    .ordered(model)\n                    .filter(provider => {\n                    if (!provider.dropMimeTypes) {\n                        // Keep all providers that don't specify mime types\n                        return true;\n                    }\n                    return provider.dropMimeTypes.some(mime => ourDataTransfer.matches(mime));\n                });\n                const edits = await this.getDropEdits(providers, model, position, ourDataTransfer, tokenSource);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                if (edits.length) {\n                    const activeEditIndex = this.getInitialActiveEditIndex(model, edits);\n                    const canShowWidget = editor.getOption(36 /* EditorOption.dropIntoEditor */).showDropSelector === 'afterDrop';\n                    // Pass in the parent token here as it tracks cancelling the entire drop operation\n                    await this._postDropWidgetManager.applyEditAndShowIfNeeded([Range.fromPositions(position)], { activeEditIndex, allEdits: edits }, canShowWidget, token);\n                }\n            }\n            finally {\n                tokenSource.dispose();\n                if (this._currentOperation === p) {\n                    this._currentOperation = undefined;\n                }\n            }\n        });\n        this._dropProgressManager.showWhile(position, localize('dropIntoEditorProgress', \"Running drop handlers. Click to cancel\"), p);\n        this._currentOperation = p;\n    }\n    async getDropEdits(providers, model, position, dataTransfer, tokenSource) {\n        const results = await raceCancellation(Promise.all(providers.map(async (provider) => {\n            try {\n                const edit = await provider.provideDocumentOnDropEdits(model, position, dataTransfer, tokenSource.token);\n                if (edit) {\n                    return { ...edit, providerId: provider.id };\n                }\n            }\n            catch (err) {\n                console.error(err);\n            }\n            return undefined;\n        })), tokenSource.token);\n        const edits = coalesce(results !== null && results !== void 0 ? results : []);\n        return sortEditsByYieldTo(edits);\n    }\n    getInitialActiveEditIndex(model, edits) {\n        const preferredProviders = this._configService.getValue(defaultProviderConfig, { resource: model.uri });\n        for (const [configMime, desiredId] of Object.entries(preferredProviders)) {\n            const editIndex = edits.findIndex(edit => desiredId === edit.providerId\n                && edit.handledMimeType && matchesMimeType(configMime, [edit.handledMimeType]));\n            if (editIndex >= 0) {\n                return editIndex;\n            }\n        }\n        return 0;\n    }\n    async extractDataTransferData(dragEvent) {\n        if (!dragEvent.dataTransfer) {\n            return new VSDataTransfer();\n        }\n        const dataTransfer = toExternalVSDataTransfer(dragEvent.dataTransfer);\n        if (this.treeItemsTransfer.hasData(DraggedTreeItemsIdentifier.prototype)) {\n            const data = this.treeItemsTransfer.getData(DraggedTreeItemsIdentifier.prototype);\n            if (Array.isArray(data)) {\n                for (const id of data) {\n                    const treeDataTransfer = await this._treeViewsDragAndDropService.removeDragOperationTransfer(id.identifier);\n                    if (treeDataTransfer) {\n                        for (const [type, value] of treeDataTransfer) {\n                            dataTransfer.replace(type, value);\n                        }\n                    }\n                }\n            }\n        }\n        return dataTransfer;\n    }\n};\nDropIntoEditorController.ID = 'editor.contrib.dropIntoEditorController';\nDropIntoEditorController = DropIntoEditorController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IConfigurationService),\n    __param(3, ILanguageFeaturesService),\n    __param(4, ITreeViewsDnDService)\n], DropIntoEditorController);\nexport { DropIntoEditorController };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}