{"ast":null,"code":"import { toRefs, computed } from \"vue\";\nimport { getColumnsFromFormat } from \"../utils/index.js\";\nfunction useTimeFormat(props) {\n  const {\n    format: propFormat,\n    use12Hours: propUse12Hours,\n    defaultFormat\n  } = toRefs(props);\n  const format = computed(() => {\n    let res = (propFormat == null ? void 0 : propFormat.value) || (defaultFormat == null ? void 0 : defaultFormat.value);\n    if (!res || !getColumnsFromFormat(res).list.length) {\n      res = (propUse12Hours == null ? void 0 : propUse12Hours.value) ? \"hh:mm:ss a\" : \"HH:mm:ss\";\n    }\n    return res;\n  });\n  const configFromFormat = computed(() => getColumnsFromFormat(format.value));\n  const list = computed(() => configFromFormat.value.list);\n  const formatUse12Hours = computed(() => configFromFormat.value.use12Hours);\n  const computedUse12Hours = computed(() => !!((propUse12Hours == null ? void 0 : propUse12Hours.value) || formatUse12Hours.value));\n  return {\n    columns: list,\n    use12Hours: computedUse12Hours,\n    format\n  };\n}\nexport { useTimeFormat as default };","map":{"version":3,"names":["toRefs","computed","getColumnsFromFormat","useTimeFormat","props","format","propFormat","use12Hours","propUse12Hours","defaultFormat","res","value","list","length","configFromFormat","formatUse12Hours","computedUse12Hours","columns","default"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/@arco-design/web-vue/es/time-picker/hooks/use-time-format.js"],"sourcesContent":["import { toRefs, computed } from \"vue\";\nimport { getColumnsFromFormat } from \"../utils/index.js\";\nfunction useTimeFormat(props) {\n  const {\n    format: propFormat,\n    use12Hours: propUse12Hours,\n    defaultFormat\n  } = toRefs(props);\n  const format = computed(() => {\n    let res = (propFormat == null ? void 0 : propFormat.value) || (defaultFormat == null ? void 0 : defaultFormat.value);\n    if (!res || !getColumnsFromFormat(res).list.length) {\n      res = (propUse12Hours == null ? void 0 : propUse12Hours.value) ? \"hh:mm:ss a\" : \"HH:mm:ss\";\n    }\n    return res;\n  });\n  const configFromFormat = computed(() => getColumnsFromFormat(format.value));\n  const list = computed(() => configFromFormat.value.list);\n  const formatUse12Hours = computed(() => configFromFormat.value.use12Hours);\n  const computedUse12Hours = computed(() => !!((propUse12Hours == null ? void 0 : propUse12Hours.value) || formatUse12Hours.value));\n  return {\n    columns: list,\n    use12Hours: computedUse12Hours,\n    format\n  };\n}\nexport { useTimeFormat as default };\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,KAAK;AACtC,SAASC,oBAAoB,QAAQ,mBAAmB;AACxD,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC5B,MAAM;IACJC,MAAM,EAAEC,UAAU;IAClBC,UAAU,EAAEC,cAAc;IAC1BC;EACF,CAAC,GAAGT,MAAM,CAACI,KAAK,CAAC;EACjB,MAAMC,MAAM,GAAGJ,QAAQ,CAAC,MAAM;IAC5B,IAAIS,GAAG,GAAG,CAACJ,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACK,KAAK,MAAMF,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACE,KAAK,CAAC;IACpH,IAAI,CAACD,GAAG,IAAI,CAACR,oBAAoB,CAACQ,GAAG,CAAC,CAACE,IAAI,CAACC,MAAM,EAAE;MAClDH,GAAG,GAAG,CAACF,cAAc,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACG,KAAK,IAAI,YAAY,GAAG,UAAU;IAC5F;IACA,OAAOD,GAAG;EACZ,CAAC,CAAC;EACF,MAAMI,gBAAgB,GAAGb,QAAQ,CAAC,MAAMC,oBAAoB,CAACG,MAAM,CAACM,KAAK,CAAC,CAAC;EAC3E,MAAMC,IAAI,GAAGX,QAAQ,CAAC,MAAMa,gBAAgB,CAACH,KAAK,CAACC,IAAI,CAAC;EACxD,MAAMG,gBAAgB,GAAGd,QAAQ,CAAC,MAAMa,gBAAgB,CAACH,KAAK,CAACJ,UAAU,CAAC;EAC1E,MAAMS,kBAAkB,GAAGf,QAAQ,CAAC,MAAM,CAAC,EAAE,CAACO,cAAc,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACG,KAAK,KAAKI,gBAAgB,CAACJ,KAAK,CAAC,CAAC;EACjI,OAAO;IACLM,OAAO,EAAEL,IAAI;IACbL,UAAU,EAAES,kBAAkB;IAC9BX;EACF,CAAC;AACH;AACA,SAASF,aAAa,IAAIe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}