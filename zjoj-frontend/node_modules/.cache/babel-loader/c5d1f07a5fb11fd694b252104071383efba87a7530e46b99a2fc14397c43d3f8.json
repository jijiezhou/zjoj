{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.45.0(5e5af013f8d295555a7210df0d5f2cea0bf5dd56)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/powerquery/powerquery.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [[\"[\", \"]\"], [\"(\", \")\"], [\"{\", \"}\"]],\n  autoClosingPairs: [{\n    open: '\"',\n    close: '\"',\n    notIn: [\"string\", \"comment\", \"identifier\"]\n  }, {\n    open: \"[\",\n    close: \"]\",\n    notIn: [\"string\", \"comment\", \"identifier\"]\n  }, {\n    open: \"(\",\n    close: \")\",\n    notIn: [\"string\", \"comment\", \"identifier\"]\n  }, {\n    open: \"{\",\n    close: \"}\",\n    notIn: [\"string\", \"comment\", \"identifier\"]\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".pq\",\n  ignoreCase: false,\n  brackets: [{\n    open: \"[\",\n    close: \"]\",\n    token: \"delimiter.square\"\n  }, {\n    open: \"{\",\n    close: \"}\",\n    token: \"delimiter.brackets\"\n  }, {\n    open: \"(\",\n    close: \")\",\n    token: \"delimiter.parenthesis\"\n  }],\n  operatorKeywords: [\"and\", \"not\", \"or\"],\n  keywords: [\"as\", \"each\", \"else\", \"error\", \"false\", \"if\", \"in\", \"is\", \"let\", \"meta\", \"otherwise\", \"section\", \"shared\", \"then\", \"true\", \"try\", \"type\"],\n  constructors: [\"#binary\", \"#date\", \"#datetime\", \"#datetimezone\", \"#duration\", \"#table\", \"#time\"],\n  constants: [\"#infinity\", \"#nan\", \"#sections\", \"#shared\"],\n  typeKeywords: [\"action\", \"any\", \"anynonnull\", \"none\", \"null\", \"logical\", \"number\", \"time\", \"date\", \"datetime\", \"datetimezone\", \"duration\", \"text\", \"binary\", \"list\", \"record\", \"table\", \"function\"],\n  builtinFunctions: [\"Access.Database\", \"Action.Return\", \"Action.Sequence\", \"Action.Try\", \"ActiveDirectory.Domains\", \"AdoDotNet.DataSource\", \"AdoDotNet.Query\", \"AdobeAnalytics.Cubes\", \"AnalysisServices.Database\", \"AnalysisServices.Databases\", \"AzureStorage.BlobContents\", \"AzureStorage.Blobs\", \"AzureStorage.Tables\", \"Binary.Buffer\", \"Binary.Combine\", \"Binary.Compress\", \"Binary.Decompress\", \"Binary.End\", \"Binary.From\", \"Binary.FromList\", \"Binary.FromText\", \"Binary.InferContentType\", \"Binary.Length\", \"Binary.ToList\", \"Binary.ToText\", \"BinaryFormat.7BitEncodedSignedInteger\", \"BinaryFormat.7BitEncodedUnsignedInteger\", \"BinaryFormat.Binary\", \"BinaryFormat.Byte\", \"BinaryFormat.ByteOrder\", \"BinaryFormat.Choice\", \"BinaryFormat.Decimal\", \"BinaryFormat.Double\", \"BinaryFormat.Group\", \"BinaryFormat.Length\", \"BinaryFormat.List\", \"BinaryFormat.Null\", \"BinaryFormat.Record\", \"BinaryFormat.SignedInteger16\", \"BinaryFormat.SignedInteger32\", \"BinaryFormat.SignedInteger64\", \"BinaryFormat.Single\", \"BinaryFormat.Text\", \"BinaryFormat.Transform\", \"BinaryFormat.UnsignedInteger16\", \"BinaryFormat.UnsignedInteger32\", \"BinaryFormat.UnsignedInteger64\", \"Byte.From\", \"Character.FromNumber\", \"Character.ToNumber\", \"Combiner.CombineTextByDelimiter\", \"Combiner.CombineTextByEachDelimiter\", \"Combiner.CombineTextByLengths\", \"Combiner.CombineTextByPositions\", \"Combiner.CombineTextByRanges\", \"Comparer.Equals\", \"Comparer.FromCulture\", \"Comparer.Ordinal\", \"Comparer.OrdinalIgnoreCase\", \"Csv.Document\", \"Cube.AddAndExpandDimensionColumn\", \"Cube.AddMeasureColumn\", \"Cube.ApplyParameter\", \"Cube.AttributeMemberId\", \"Cube.AttributeMemberProperty\", \"Cube.CollapseAndRemoveColumns\", \"Cube.Dimensions\", \"Cube.DisplayFolders\", \"Cube.Measures\", \"Cube.Parameters\", \"Cube.Properties\", \"Cube.PropertyKey\", \"Cube.ReplaceDimensions\", \"Cube.Transform\", \"Currency.From\", \"DB2.Database\", \"Date.AddDays\", \"Date.AddMonths\", \"Date.AddQuarters\", \"Date.AddWeeks\", \"Date.AddYears\", \"Date.Day\", \"Date.DayOfWeek\", \"Date.DayOfWeekName\", \"Date.DayOfYear\", \"Date.DaysInMonth\", \"Date.EndOfDay\", \"Date.EndOfMonth\", \"Date.EndOfQuarter\", \"Date.EndOfWeek\", \"Date.EndOfYear\", \"Date.From\", \"Date.FromText\", \"Date.IsInCurrentDay\", \"Date.IsInCurrentMonth\", \"Date.IsInCurrentQuarter\", \"Date.IsInCurrentWeek\", \"Date.IsInCurrentYear\", \"Date.IsInNextDay\", \"Date.IsInNextMonth\", \"Date.IsInNextNDays\", \"Date.IsInNextNMonths\", \"Date.IsInNextNQuarters\", \"Date.IsInNextNWeeks\", \"Date.IsInNextNYears\", \"Date.IsInNextQuarter\", \"Date.IsInNextWeek\", \"Date.IsInNextYear\", \"Date.IsInPreviousDay\", \"Date.IsInPreviousMonth\", \"Date.IsInPreviousNDays\", \"Date.IsInPreviousNMonths\", \"Date.IsInPreviousNQuarters\", \"Date.IsInPreviousNWeeks\", \"Date.IsInPreviousNYears\", \"Date.IsInPreviousQuarter\", \"Date.IsInPreviousWeek\", \"Date.IsInPreviousYear\", \"Date.IsInYearToDate\", \"Date.IsLeapYear\", \"Date.Month\", \"Date.MonthName\", \"Date.QuarterOfYear\", \"Date.StartOfDay\", \"Date.StartOfMonth\", \"Date.StartOfQuarter\", \"Date.StartOfWeek\", \"Date.StartOfYear\", \"Date.ToRecord\", \"Date.ToText\", \"Date.WeekOfMonth\", \"Date.WeekOfYear\", \"Date.Year\", \"DateTime.AddZone\", \"DateTime.Date\", \"DateTime.FixedLocalNow\", \"DateTime.From\", \"DateTime.FromFileTime\", \"DateTime.FromText\", \"DateTime.IsInCurrentHour\", \"DateTime.IsInCurrentMinute\", \"DateTime.IsInCurrentSecond\", \"DateTime.IsInNextHour\", \"DateTime.IsInNextMinute\", \"DateTime.IsInNextNHours\", \"DateTime.IsInNextNMinutes\", \"DateTime.IsInNextNSeconds\", \"DateTime.IsInNextSecond\", \"DateTime.IsInPreviousHour\", \"DateTime.IsInPreviousMinute\", \"DateTime.IsInPreviousNHours\", \"DateTime.IsInPreviousNMinutes\", \"DateTime.IsInPreviousNSeconds\", \"DateTime.IsInPreviousSecond\", \"DateTime.LocalNow\", \"DateTime.Time\", \"DateTime.ToRecord\", \"DateTime.ToText\", \"DateTimeZone.FixedLocalNow\", \"DateTimeZone.FixedUtcNow\", \"DateTimeZone.From\", \"DateTimeZone.FromFileTime\", \"DateTimeZone.FromText\", \"DateTimeZone.LocalNow\", \"DateTimeZone.RemoveZone\", \"DateTimeZone.SwitchZone\", \"DateTimeZone.ToLocal\", \"DateTimeZone.ToRecord\", \"DateTimeZone.ToText\", \"DateTimeZone.ToUtc\", \"DateTimeZone.UtcNow\", \"DateTimeZone.ZoneHours\", \"DateTimeZone.ZoneMinutes\", \"Decimal.From\", \"Diagnostics.ActivityId\", \"Diagnostics.Trace\", \"DirectQueryCapabilities.From\", \"Double.From\", \"Duration.Days\", \"Duration.From\", \"Duration.FromText\", \"Duration.Hours\", \"Duration.Minutes\", \"Duration.Seconds\", \"Duration.ToRecord\", \"Duration.ToText\", \"Duration.TotalDays\", \"Duration.TotalHours\", \"Duration.TotalMinutes\", \"Duration.TotalSeconds\", \"Embedded.Value\", \"Error.Record\", \"Excel.CurrentWorkbook\", \"Excel.Workbook\", \"Exchange.Contents\", \"Expression.Constant\", \"Expression.Evaluate\", \"Expression.Identifier\", \"Facebook.Graph\", \"File.Contents\", \"Folder.Contents\", \"Folder.Files\", \"Function.From\", \"Function.Invoke\", \"Function.InvokeAfter\", \"Function.IsDataSource\", \"GoogleAnalytics.Accounts\", \"Guid.From\", \"HdInsight.Containers\", \"HdInsight.Contents\", \"HdInsight.Files\", \"Hdfs.Contents\", \"Hdfs.Files\", \"Informix.Database\", \"Int16.From\", \"Int32.From\", \"Int64.From\", \"Int8.From\", \"ItemExpression.From\", \"Json.Document\", \"Json.FromValue\", \"Lines.FromBinary\", \"Lines.FromText\", \"Lines.ToBinary\", \"Lines.ToText\", \"List.Accumulate\", \"List.AllTrue\", \"List.Alternate\", \"List.AnyTrue\", \"List.Average\", \"List.Buffer\", \"List.Combine\", \"List.Contains\", \"List.ContainsAll\", \"List.ContainsAny\", \"List.Count\", \"List.Covariance\", \"List.DateTimeZones\", \"List.DateTimes\", \"List.Dates\", \"List.Difference\", \"List.Distinct\", \"List.Durations\", \"List.FindText\", \"List.First\", \"List.FirstN\", \"List.Generate\", \"List.InsertRange\", \"List.Intersect\", \"List.IsDistinct\", \"List.IsEmpty\", \"List.Last\", \"List.LastN\", \"List.MatchesAll\", \"List.MatchesAny\", \"List.Max\", \"List.MaxN\", \"List.Median\", \"List.Min\", \"List.MinN\", \"List.Mode\", \"List.Modes\", \"List.NonNullCount\", \"List.Numbers\", \"List.PositionOf\", \"List.PositionOfAny\", \"List.Positions\", \"List.Product\", \"List.Random\", \"List.Range\", \"List.RemoveFirstN\", \"List.RemoveItems\", \"List.RemoveLastN\", \"List.RemoveMatchingItems\", \"List.RemoveNulls\", \"List.RemoveRange\", \"List.Repeat\", \"List.ReplaceMatchingItems\", \"List.ReplaceRange\", \"List.ReplaceValue\", \"List.Reverse\", \"List.Select\", \"List.Single\", \"List.SingleOrDefault\", \"List.Skip\", \"List.Sort\", \"List.StandardDeviation\", \"List.Sum\", \"List.Times\", \"List.Transform\", \"List.TransformMany\", \"List.Union\", \"List.Zip\", \"Logical.From\", \"Logical.FromText\", \"Logical.ToText\", \"MQ.Queue\", \"MySQL.Database\", \"Number.Abs\", \"Number.Acos\", \"Number.Asin\", \"Number.Atan\", \"Number.Atan2\", \"Number.BitwiseAnd\", \"Number.BitwiseNot\", \"Number.BitwiseOr\", \"Number.BitwiseShiftLeft\", \"Number.BitwiseShiftRight\", \"Number.BitwiseXor\", \"Number.Combinations\", \"Number.Cos\", \"Number.Cosh\", \"Number.Exp\", \"Number.Factorial\", \"Number.From\", \"Number.FromText\", \"Number.IntegerDivide\", \"Number.IsEven\", \"Number.IsNaN\", \"Number.IsOdd\", \"Number.Ln\", \"Number.Log\", \"Number.Log10\", \"Number.Mod\", \"Number.Permutations\", \"Number.Power\", \"Number.Random\", \"Number.RandomBetween\", \"Number.Round\", \"Number.RoundAwayFromZero\", \"Number.RoundDown\", \"Number.RoundTowardZero\", \"Number.RoundUp\", \"Number.Sign\", \"Number.Sin\", \"Number.Sinh\", \"Number.Sqrt\", \"Number.Tan\", \"Number.Tanh\", \"Number.ToText\", \"OData.Feed\", \"Odbc.DataSource\", \"Odbc.Query\", \"OleDb.DataSource\", \"OleDb.Query\", \"Oracle.Database\", \"Percentage.From\", \"PostgreSQL.Database\", \"RData.FromBinary\", \"Record.AddField\", \"Record.Combine\", \"Record.Field\", \"Record.FieldCount\", \"Record.FieldNames\", \"Record.FieldOrDefault\", \"Record.FieldValues\", \"Record.FromList\", \"Record.FromTable\", \"Record.HasFields\", \"Record.RemoveFields\", \"Record.RenameFields\", \"Record.ReorderFields\", \"Record.SelectFields\", \"Record.ToList\", \"Record.ToTable\", \"Record.TransformFields\", \"Replacer.ReplaceText\", \"Replacer.ReplaceValue\", \"RowExpression.Column\", \"RowExpression.From\", \"Salesforce.Data\", \"Salesforce.Reports\", \"SapBusinessWarehouse.Cubes\", \"SapHana.Database\", \"SharePoint.Contents\", \"SharePoint.Files\", \"SharePoint.Tables\", \"Single.From\", \"Soda.Feed\", \"Splitter.SplitByNothing\", \"Splitter.SplitTextByAnyDelimiter\", \"Splitter.SplitTextByDelimiter\", \"Splitter.SplitTextByEachDelimiter\", \"Splitter.SplitTextByLengths\", \"Splitter.SplitTextByPositions\", \"Splitter.SplitTextByRanges\", \"Splitter.SplitTextByRepeatedLengths\", \"Splitter.SplitTextByWhitespace\", \"Sql.Database\", \"Sql.Databases\", \"SqlExpression.SchemaFrom\", \"SqlExpression.ToExpression\", \"Sybase.Database\", \"Table.AddColumn\", \"Table.AddIndexColumn\", \"Table.AddJoinColumn\", \"Table.AddKey\", \"Table.AggregateTableColumn\", \"Table.AlternateRows\", \"Table.Buffer\", \"Table.Column\", \"Table.ColumnCount\", \"Table.ColumnNames\", \"Table.ColumnsOfType\", \"Table.Combine\", \"Table.CombineColumns\", \"Table.Contains\", \"Table.ContainsAll\", \"Table.ContainsAny\", \"Table.DemoteHeaders\", \"Table.Distinct\", \"Table.DuplicateColumn\", \"Table.ExpandListColumn\", \"Table.ExpandRecordColumn\", \"Table.ExpandTableColumn\", \"Table.FillDown\", \"Table.FillUp\", \"Table.FilterWithDataTable\", \"Table.FindText\", \"Table.First\", \"Table.FirstN\", \"Table.FirstValue\", \"Table.FromColumns\", \"Table.FromList\", \"Table.FromPartitions\", \"Table.FromRecords\", \"Table.FromRows\", \"Table.FromValue\", \"Table.Group\", \"Table.HasColumns\", \"Table.InsertRows\", \"Table.IsDistinct\", \"Table.IsEmpty\", \"Table.Join\", \"Table.Keys\", \"Table.Last\", \"Table.LastN\", \"Table.MatchesAllRows\", \"Table.MatchesAnyRows\", \"Table.Max\", \"Table.MaxN\", \"Table.Min\", \"Table.MinN\", \"Table.NestedJoin\", \"Table.Partition\", \"Table.PartitionValues\", \"Table.Pivot\", \"Table.PositionOf\", \"Table.PositionOfAny\", \"Table.PrefixColumns\", \"Table.Profile\", \"Table.PromoteHeaders\", \"Table.Range\", \"Table.RemoveColumns\", \"Table.RemoveFirstN\", \"Table.RemoveLastN\", \"Table.RemoveMatchingRows\", \"Table.RemoveRows\", \"Table.RemoveRowsWithErrors\", \"Table.RenameColumns\", \"Table.ReorderColumns\", \"Table.Repeat\", \"Table.ReplaceErrorValues\", \"Table.ReplaceKeys\", \"Table.ReplaceMatchingRows\", \"Table.ReplaceRelationshipIdentity\", \"Table.ReplaceRows\", \"Table.ReplaceValue\", \"Table.ReverseRows\", \"Table.RowCount\", \"Table.Schema\", \"Table.SelectColumns\", \"Table.SelectRows\", \"Table.SelectRowsWithErrors\", \"Table.SingleRow\", \"Table.Skip\", \"Table.Sort\", \"Table.SplitColumn\", \"Table.ToColumns\", \"Table.ToList\", \"Table.ToRecords\", \"Table.ToRows\", \"Table.TransformColumnNames\", \"Table.TransformColumnTypes\", \"Table.TransformColumns\", \"Table.TransformRows\", \"Table.Transpose\", \"Table.Unpivot\", \"Table.UnpivotOtherColumns\", \"Table.View\", \"Table.ViewFunction\", \"TableAction.DeleteRows\", \"TableAction.InsertRows\", \"TableAction.UpdateRows\", \"Tables.GetRelationships\", \"Teradata.Database\", \"Text.AfterDelimiter\", \"Text.At\", \"Text.BeforeDelimiter\", \"Text.BetweenDelimiters\", \"Text.Clean\", \"Text.Combine\", \"Text.Contains\", \"Text.End\", \"Text.EndsWith\", \"Text.Format\", \"Text.From\", \"Text.FromBinary\", \"Text.Insert\", \"Text.Length\", \"Text.Lower\", \"Text.Middle\", \"Text.NewGuid\", \"Text.PadEnd\", \"Text.PadStart\", \"Text.PositionOf\", \"Text.PositionOfAny\", \"Text.Proper\", \"Text.Range\", \"Text.Remove\", \"Text.RemoveRange\", \"Text.Repeat\", \"Text.Replace\", \"Text.ReplaceRange\", \"Text.Select\", \"Text.Split\", \"Text.SplitAny\", \"Text.Start\", \"Text.StartsWith\", \"Text.ToBinary\", \"Text.ToList\", \"Text.Trim\", \"Text.TrimEnd\", \"Text.TrimStart\", \"Text.Upper\", \"Time.EndOfHour\", \"Time.From\", \"Time.FromText\", \"Time.Hour\", \"Time.Minute\", \"Time.Second\", \"Time.StartOfHour\", \"Time.ToRecord\", \"Time.ToText\", \"Type.AddTableKey\", \"Type.ClosedRecord\", \"Type.Facets\", \"Type.ForFunction\", \"Type.ForRecord\", \"Type.FunctionParameters\", \"Type.FunctionRequiredParameters\", \"Type.FunctionReturn\", \"Type.Is\", \"Type.IsNullable\", \"Type.IsOpenRecord\", \"Type.ListItem\", \"Type.NonNullable\", \"Type.OpenRecord\", \"Type.RecordFields\", \"Type.ReplaceFacets\", \"Type.ReplaceTableKeys\", \"Type.TableColumn\", \"Type.TableKeys\", \"Type.TableRow\", \"Type.TableSchema\", \"Type.Union\", \"Uri.BuildQueryString\", \"Uri.Combine\", \"Uri.EscapeDataString\", \"Uri.Parts\", \"Value.Add\", \"Value.As\", \"Value.Compare\", \"Value.Divide\", \"Value.Equals\", \"Value.Firewall\", \"Value.FromText\", \"Value.Is\", \"Value.Metadata\", \"Value.Multiply\", \"Value.NativeQuery\", \"Value.NullableEquals\", \"Value.RemoveMetadata\", \"Value.ReplaceMetadata\", \"Value.ReplaceType\", \"Value.Subtract\", \"Value.Type\", \"ValueAction.NativeStatement\", \"ValueAction.Replace\", \"Variable.Value\", \"Web.Contents\", \"Web.Page\", \"WebAction.Request\", \"Xml.Document\", \"Xml.Tables\"],\n  builtinConstants: [\"BinaryEncoding.Base64\", \"BinaryEncoding.Hex\", \"BinaryOccurrence.Optional\", \"BinaryOccurrence.Repeating\", \"BinaryOccurrence.Required\", \"ByteOrder.BigEndian\", \"ByteOrder.LittleEndian\", \"Compression.Deflate\", \"Compression.GZip\", \"CsvStyle.QuoteAfterDelimiter\", \"CsvStyle.QuoteAlways\", \"Culture.Current\", \"Day.Friday\", \"Day.Monday\", \"Day.Saturday\", \"Day.Sunday\", \"Day.Thursday\", \"Day.Tuesday\", \"Day.Wednesday\", \"ExtraValues.Error\", \"ExtraValues.Ignore\", \"ExtraValues.List\", \"GroupKind.Global\", \"GroupKind.Local\", \"JoinAlgorithm.Dynamic\", \"JoinAlgorithm.LeftHash\", \"JoinAlgorithm.LeftIndex\", \"JoinAlgorithm.PairwiseHash\", \"JoinAlgorithm.RightHash\", \"JoinAlgorithm.RightIndex\", \"JoinAlgorithm.SortMerge\", \"JoinKind.FullOuter\", \"JoinKind.Inner\", \"JoinKind.LeftAnti\", \"JoinKind.LeftOuter\", \"JoinKind.RightAnti\", \"JoinKind.RightOuter\", \"JoinSide.Left\", \"JoinSide.Right\", \"MissingField.Error\", \"MissingField.Ignore\", \"MissingField.UseNull\", \"Number.E\", \"Number.Epsilon\", \"Number.NaN\", \"Number.NegativeInfinity\", \"Number.PI\", \"Number.PositiveInfinity\", \"Occurrence.All\", \"Occurrence.First\", \"Occurrence.Last\", \"Occurrence.Optional\", \"Occurrence.Repeating\", \"Occurrence.Required\", \"Order.Ascending\", \"Order.Descending\", \"Precision.Decimal\", \"Precision.Double\", \"QuoteStyle.Csv\", \"QuoteStyle.None\", \"RelativePosition.FromEnd\", \"RelativePosition.FromStart\", \"RoundingMode.AwayFromZero\", \"RoundingMode.Down\", \"RoundingMode.ToEven\", \"RoundingMode.TowardZero\", \"RoundingMode.Up\", \"SapHanaDistribution.All\", \"SapHanaDistribution.Connection\", \"SapHanaDistribution.Off\", \"SapHanaDistribution.Statement\", \"SapHanaRangeOperator.Equals\", \"SapHanaRangeOperator.GreaterThan\", \"SapHanaRangeOperator.GreaterThanOrEquals\", \"SapHanaRangeOperator.LessThan\", \"SapHanaRangeOperator.LessThanOrEquals\", \"SapHanaRangeOperator.NotEquals\", \"TextEncoding.Ascii\", \"TextEncoding.BigEndianUnicode\", \"TextEncoding.Unicode\", \"TextEncoding.Utf16\", \"TextEncoding.Utf8\", \"TextEncoding.Windows\", \"TraceLevel.Critical\", \"TraceLevel.Error\", \"TraceLevel.Information\", \"TraceLevel.Verbose\", \"TraceLevel.Warning\", \"WebMethod.Delete\", \"WebMethod.Get\", \"WebMethod.Head\", \"WebMethod.Patch\", \"WebMethod.Post\", \"WebMethod.Put\"],\n  builtinTypes: [\"Action.Type\", \"Any.Type\", \"Binary.Type\", \"BinaryEncoding.Type\", \"BinaryOccurrence.Type\", \"Byte.Type\", \"ByteOrder.Type\", \"Character.Type\", \"Compression.Type\", \"CsvStyle.Type\", \"Currency.Type\", \"Date.Type\", \"DateTime.Type\", \"DateTimeZone.Type\", \"Day.Type\", \"Decimal.Type\", \"Double.Type\", \"Duration.Type\", \"ExtraValues.Type\", \"Function.Type\", \"GroupKind.Type\", \"Guid.Type\", \"Int16.Type\", \"Int32.Type\", \"Int64.Type\", \"Int8.Type\", \"JoinAlgorithm.Type\", \"JoinKind.Type\", \"JoinSide.Type\", \"List.Type\", \"Logical.Type\", \"MissingField.Type\", \"None.Type\", \"Null.Type\", \"Number.Type\", \"Occurrence.Type\", \"Order.Type\", \"Password.Type\", \"Percentage.Type\", \"Precision.Type\", \"QuoteStyle.Type\", \"Record.Type\", \"RelativePosition.Type\", \"RoundingMode.Type\", \"SapHanaDistribution.Type\", \"SapHanaRangeOperator.Type\", \"Single.Type\", \"Table.Type\", \"Text.Type\", \"TextEncoding.Type\", \"Time.Type\", \"TraceLevel.Type\", \"Type.Type\", \"Uri.Type\", \"WebMethod.Type\"],\n  tokenizer: {\n    root: [[/#\"[\\w \\.]+\"/, \"identifier.quote\"], [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F]+/, \"number.hex\"], [/\\d+([eE][\\-+]?\\d+)?/, \"number\"], [/(#?[a-z]+)\\b/, {\n      cases: {\n        \"@typeKeywords\": \"type\",\n        \"@keywords\": \"keyword\",\n        \"@constants\": \"constant\",\n        \"@constructors\": \"constructor\",\n        \"@operatorKeywords\": \"operators\",\n        \"@default\": \"identifier\"\n      }\n    }], [/\\b([A-Z][a-zA-Z0-9]+\\.Type)\\b/, {\n      cases: {\n        \"@builtinTypes\": \"type\",\n        \"@default\": \"identifier\"\n      }\n    }], [/\\b([A-Z][a-zA-Z0-9]+\\.[A-Z][a-zA-Z0-9]+)\\b/, {\n      cases: {\n        \"@builtinFunctions\": \"keyword.function\",\n        \"@builtinConstants\": \"constant\",\n        \"@default\": \"identifier\"\n      }\n    }], [/\\b([a-zA-Z_][\\w\\.]*)\\b/, \"identifier\"], {\n      include: \"@whitespace\"\n    }, {\n      include: \"@comments\"\n    }, {\n      include: \"@strings\"\n    }, [/[{}()\\[\\]]/, \"@brackets\"], [/([=\\+<>\\-\\*&@\\?\\/!])|([<>]=)|(<>)|(=>)|(\\.\\.\\.)|(\\.\\.)/, \"operators\"], [/[,;]/, \"delimiter\"]],\n    whitespace: [[/\\s+/, \"white\"]],\n    comments: [[\"\\\\/\\\\*\", \"comment\", \"@comment\"], [\"\\\\/\\\\/+.*\", \"comment\"]],\n    comment: [[\"\\\\*\\\\/\", \"comment\", \"@pop\"], [\".\", \"comment\"]],\n    strings: [['\"', \"string\", \"@string\"]],\n    string: [['\"\"', \"string.escape\"], ['\"', \"string\", \"@pop\"], [\".\", \"string\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","language","defaultToken","tokenPostfix","ignoreCase","token","operatorKeywords","keywords","constructors","constants","typeKeywords","builtinFunctions","builtinConstants","builtinTypes","tokenizer","root","cases","include","whitespace","comment","strings","string"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/basic-languages/powerquery/powerquery.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.45.0(5e5af013f8d295555a7210df0d5f2cea0bf5dd56)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/powerquery/powerquery.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"[\", \"]\"],\n    [\"(\", \")\"],\n    [\"{\", \"}\"]\n  ],\n  autoClosingPairs: [\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\", \"identifier\"] },\n    { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\", \"identifier\"] },\n    { open: \"(\", close: \")\", notIn: [\"string\", \"comment\", \"identifier\"] },\n    { open: \"{\", close: \"}\", notIn: [\"string\", \"comment\", \"identifier\"] }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".pq\",\n  ignoreCase: false,\n  brackets: [\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"{\", close: \"}\", token: \"delimiter.brackets\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\n  ],\n  operatorKeywords: [\"and\", \"not\", \"or\"],\n  keywords: [\n    \"as\",\n    \"each\",\n    \"else\",\n    \"error\",\n    \"false\",\n    \"if\",\n    \"in\",\n    \"is\",\n    \"let\",\n    \"meta\",\n    \"otherwise\",\n    \"section\",\n    \"shared\",\n    \"then\",\n    \"true\",\n    \"try\",\n    \"type\"\n  ],\n  constructors: [\"#binary\", \"#date\", \"#datetime\", \"#datetimezone\", \"#duration\", \"#table\", \"#time\"],\n  constants: [\"#infinity\", \"#nan\", \"#sections\", \"#shared\"],\n  typeKeywords: [\n    \"action\",\n    \"any\",\n    \"anynonnull\",\n    \"none\",\n    \"null\",\n    \"logical\",\n    \"number\",\n    \"time\",\n    \"date\",\n    \"datetime\",\n    \"datetimezone\",\n    \"duration\",\n    \"text\",\n    \"binary\",\n    \"list\",\n    \"record\",\n    \"table\",\n    \"function\"\n  ],\n  builtinFunctions: [\n    \"Access.Database\",\n    \"Action.Return\",\n    \"Action.Sequence\",\n    \"Action.Try\",\n    \"ActiveDirectory.Domains\",\n    \"AdoDotNet.DataSource\",\n    \"AdoDotNet.Query\",\n    \"AdobeAnalytics.Cubes\",\n    \"AnalysisServices.Database\",\n    \"AnalysisServices.Databases\",\n    \"AzureStorage.BlobContents\",\n    \"AzureStorage.Blobs\",\n    \"AzureStorage.Tables\",\n    \"Binary.Buffer\",\n    \"Binary.Combine\",\n    \"Binary.Compress\",\n    \"Binary.Decompress\",\n    \"Binary.End\",\n    \"Binary.From\",\n    \"Binary.FromList\",\n    \"Binary.FromText\",\n    \"Binary.InferContentType\",\n    \"Binary.Length\",\n    \"Binary.ToList\",\n    \"Binary.ToText\",\n    \"BinaryFormat.7BitEncodedSignedInteger\",\n    \"BinaryFormat.7BitEncodedUnsignedInteger\",\n    \"BinaryFormat.Binary\",\n    \"BinaryFormat.Byte\",\n    \"BinaryFormat.ByteOrder\",\n    \"BinaryFormat.Choice\",\n    \"BinaryFormat.Decimal\",\n    \"BinaryFormat.Double\",\n    \"BinaryFormat.Group\",\n    \"BinaryFormat.Length\",\n    \"BinaryFormat.List\",\n    \"BinaryFormat.Null\",\n    \"BinaryFormat.Record\",\n    \"BinaryFormat.SignedInteger16\",\n    \"BinaryFormat.SignedInteger32\",\n    \"BinaryFormat.SignedInteger64\",\n    \"BinaryFormat.Single\",\n    \"BinaryFormat.Text\",\n    \"BinaryFormat.Transform\",\n    \"BinaryFormat.UnsignedInteger16\",\n    \"BinaryFormat.UnsignedInteger32\",\n    \"BinaryFormat.UnsignedInteger64\",\n    \"Byte.From\",\n    \"Character.FromNumber\",\n    \"Character.ToNumber\",\n    \"Combiner.CombineTextByDelimiter\",\n    \"Combiner.CombineTextByEachDelimiter\",\n    \"Combiner.CombineTextByLengths\",\n    \"Combiner.CombineTextByPositions\",\n    \"Combiner.CombineTextByRanges\",\n    \"Comparer.Equals\",\n    \"Comparer.FromCulture\",\n    \"Comparer.Ordinal\",\n    \"Comparer.OrdinalIgnoreCase\",\n    \"Csv.Document\",\n    \"Cube.AddAndExpandDimensionColumn\",\n    \"Cube.AddMeasureColumn\",\n    \"Cube.ApplyParameter\",\n    \"Cube.AttributeMemberId\",\n    \"Cube.AttributeMemberProperty\",\n    \"Cube.CollapseAndRemoveColumns\",\n    \"Cube.Dimensions\",\n    \"Cube.DisplayFolders\",\n    \"Cube.Measures\",\n    \"Cube.Parameters\",\n    \"Cube.Properties\",\n    \"Cube.PropertyKey\",\n    \"Cube.ReplaceDimensions\",\n    \"Cube.Transform\",\n    \"Currency.From\",\n    \"DB2.Database\",\n    \"Date.AddDays\",\n    \"Date.AddMonths\",\n    \"Date.AddQuarters\",\n    \"Date.AddWeeks\",\n    \"Date.AddYears\",\n    \"Date.Day\",\n    \"Date.DayOfWeek\",\n    \"Date.DayOfWeekName\",\n    \"Date.DayOfYear\",\n    \"Date.DaysInMonth\",\n    \"Date.EndOfDay\",\n    \"Date.EndOfMonth\",\n    \"Date.EndOfQuarter\",\n    \"Date.EndOfWeek\",\n    \"Date.EndOfYear\",\n    \"Date.From\",\n    \"Date.FromText\",\n    \"Date.IsInCurrentDay\",\n    \"Date.IsInCurrentMonth\",\n    \"Date.IsInCurrentQuarter\",\n    \"Date.IsInCurrentWeek\",\n    \"Date.IsInCurrentYear\",\n    \"Date.IsInNextDay\",\n    \"Date.IsInNextMonth\",\n    \"Date.IsInNextNDays\",\n    \"Date.IsInNextNMonths\",\n    \"Date.IsInNextNQuarters\",\n    \"Date.IsInNextNWeeks\",\n    \"Date.IsInNextNYears\",\n    \"Date.IsInNextQuarter\",\n    \"Date.IsInNextWeek\",\n    \"Date.IsInNextYear\",\n    \"Date.IsInPreviousDay\",\n    \"Date.IsInPreviousMonth\",\n    \"Date.IsInPreviousNDays\",\n    \"Date.IsInPreviousNMonths\",\n    \"Date.IsInPreviousNQuarters\",\n    \"Date.IsInPreviousNWeeks\",\n    \"Date.IsInPreviousNYears\",\n    \"Date.IsInPreviousQuarter\",\n    \"Date.IsInPreviousWeek\",\n    \"Date.IsInPreviousYear\",\n    \"Date.IsInYearToDate\",\n    \"Date.IsLeapYear\",\n    \"Date.Month\",\n    \"Date.MonthName\",\n    \"Date.QuarterOfYear\",\n    \"Date.StartOfDay\",\n    \"Date.StartOfMonth\",\n    \"Date.StartOfQuarter\",\n    \"Date.StartOfWeek\",\n    \"Date.StartOfYear\",\n    \"Date.ToRecord\",\n    \"Date.ToText\",\n    \"Date.WeekOfMonth\",\n    \"Date.WeekOfYear\",\n    \"Date.Year\",\n    \"DateTime.AddZone\",\n    \"DateTime.Date\",\n    \"DateTime.FixedLocalNow\",\n    \"DateTime.From\",\n    \"DateTime.FromFileTime\",\n    \"DateTime.FromText\",\n    \"DateTime.IsInCurrentHour\",\n    \"DateTime.IsInCurrentMinute\",\n    \"DateTime.IsInCurrentSecond\",\n    \"DateTime.IsInNextHour\",\n    \"DateTime.IsInNextMinute\",\n    \"DateTime.IsInNextNHours\",\n    \"DateTime.IsInNextNMinutes\",\n    \"DateTime.IsInNextNSeconds\",\n    \"DateTime.IsInNextSecond\",\n    \"DateTime.IsInPreviousHour\",\n    \"DateTime.IsInPreviousMinute\",\n    \"DateTime.IsInPreviousNHours\",\n    \"DateTime.IsInPreviousNMinutes\",\n    \"DateTime.IsInPreviousNSeconds\",\n    \"DateTime.IsInPreviousSecond\",\n    \"DateTime.LocalNow\",\n    \"DateTime.Time\",\n    \"DateTime.ToRecord\",\n    \"DateTime.ToText\",\n    \"DateTimeZone.FixedLocalNow\",\n    \"DateTimeZone.FixedUtcNow\",\n    \"DateTimeZone.From\",\n    \"DateTimeZone.FromFileTime\",\n    \"DateTimeZone.FromText\",\n    \"DateTimeZone.LocalNow\",\n    \"DateTimeZone.RemoveZone\",\n    \"DateTimeZone.SwitchZone\",\n    \"DateTimeZone.ToLocal\",\n    \"DateTimeZone.ToRecord\",\n    \"DateTimeZone.ToText\",\n    \"DateTimeZone.ToUtc\",\n    \"DateTimeZone.UtcNow\",\n    \"DateTimeZone.ZoneHours\",\n    \"DateTimeZone.ZoneMinutes\",\n    \"Decimal.From\",\n    \"Diagnostics.ActivityId\",\n    \"Diagnostics.Trace\",\n    \"DirectQueryCapabilities.From\",\n    \"Double.From\",\n    \"Duration.Days\",\n    \"Duration.From\",\n    \"Duration.FromText\",\n    \"Duration.Hours\",\n    \"Duration.Minutes\",\n    \"Duration.Seconds\",\n    \"Duration.ToRecord\",\n    \"Duration.ToText\",\n    \"Duration.TotalDays\",\n    \"Duration.TotalHours\",\n    \"Duration.TotalMinutes\",\n    \"Duration.TotalSeconds\",\n    \"Embedded.Value\",\n    \"Error.Record\",\n    \"Excel.CurrentWorkbook\",\n    \"Excel.Workbook\",\n    \"Exchange.Contents\",\n    \"Expression.Constant\",\n    \"Expression.Evaluate\",\n    \"Expression.Identifier\",\n    \"Facebook.Graph\",\n    \"File.Contents\",\n    \"Folder.Contents\",\n    \"Folder.Files\",\n    \"Function.From\",\n    \"Function.Invoke\",\n    \"Function.InvokeAfter\",\n    \"Function.IsDataSource\",\n    \"GoogleAnalytics.Accounts\",\n    \"Guid.From\",\n    \"HdInsight.Containers\",\n    \"HdInsight.Contents\",\n    \"HdInsight.Files\",\n    \"Hdfs.Contents\",\n    \"Hdfs.Files\",\n    \"Informix.Database\",\n    \"Int16.From\",\n    \"Int32.From\",\n    \"Int64.From\",\n    \"Int8.From\",\n    \"ItemExpression.From\",\n    \"Json.Document\",\n    \"Json.FromValue\",\n    \"Lines.FromBinary\",\n    \"Lines.FromText\",\n    \"Lines.ToBinary\",\n    \"Lines.ToText\",\n    \"List.Accumulate\",\n    \"List.AllTrue\",\n    \"List.Alternate\",\n    \"List.AnyTrue\",\n    \"List.Average\",\n    \"List.Buffer\",\n    \"List.Combine\",\n    \"List.Contains\",\n    \"List.ContainsAll\",\n    \"List.ContainsAny\",\n    \"List.Count\",\n    \"List.Covariance\",\n    \"List.DateTimeZones\",\n    \"List.DateTimes\",\n    \"List.Dates\",\n    \"List.Difference\",\n    \"List.Distinct\",\n    \"List.Durations\",\n    \"List.FindText\",\n    \"List.First\",\n    \"List.FirstN\",\n    \"List.Generate\",\n    \"List.InsertRange\",\n    \"List.Intersect\",\n    \"List.IsDistinct\",\n    \"List.IsEmpty\",\n    \"List.Last\",\n    \"List.LastN\",\n    \"List.MatchesAll\",\n    \"List.MatchesAny\",\n    \"List.Max\",\n    \"List.MaxN\",\n    \"List.Median\",\n    \"List.Min\",\n    \"List.MinN\",\n    \"List.Mode\",\n    \"List.Modes\",\n    \"List.NonNullCount\",\n    \"List.Numbers\",\n    \"List.PositionOf\",\n    \"List.PositionOfAny\",\n    \"List.Positions\",\n    \"List.Product\",\n    \"List.Random\",\n    \"List.Range\",\n    \"List.RemoveFirstN\",\n    \"List.RemoveItems\",\n    \"List.RemoveLastN\",\n    \"List.RemoveMatchingItems\",\n    \"List.RemoveNulls\",\n    \"List.RemoveRange\",\n    \"List.Repeat\",\n    \"List.ReplaceMatchingItems\",\n    \"List.ReplaceRange\",\n    \"List.ReplaceValue\",\n    \"List.Reverse\",\n    \"List.Select\",\n    \"List.Single\",\n    \"List.SingleOrDefault\",\n    \"List.Skip\",\n    \"List.Sort\",\n    \"List.StandardDeviation\",\n    \"List.Sum\",\n    \"List.Times\",\n    \"List.Transform\",\n    \"List.TransformMany\",\n    \"List.Union\",\n    \"List.Zip\",\n    \"Logical.From\",\n    \"Logical.FromText\",\n    \"Logical.ToText\",\n    \"MQ.Queue\",\n    \"MySQL.Database\",\n    \"Number.Abs\",\n    \"Number.Acos\",\n    \"Number.Asin\",\n    \"Number.Atan\",\n    \"Number.Atan2\",\n    \"Number.BitwiseAnd\",\n    \"Number.BitwiseNot\",\n    \"Number.BitwiseOr\",\n    \"Number.BitwiseShiftLeft\",\n    \"Number.BitwiseShiftRight\",\n    \"Number.BitwiseXor\",\n    \"Number.Combinations\",\n    \"Number.Cos\",\n    \"Number.Cosh\",\n    \"Number.Exp\",\n    \"Number.Factorial\",\n    \"Number.From\",\n    \"Number.FromText\",\n    \"Number.IntegerDivide\",\n    \"Number.IsEven\",\n    \"Number.IsNaN\",\n    \"Number.IsOdd\",\n    \"Number.Ln\",\n    \"Number.Log\",\n    \"Number.Log10\",\n    \"Number.Mod\",\n    \"Number.Permutations\",\n    \"Number.Power\",\n    \"Number.Random\",\n    \"Number.RandomBetween\",\n    \"Number.Round\",\n    \"Number.RoundAwayFromZero\",\n    \"Number.RoundDown\",\n    \"Number.RoundTowardZero\",\n    \"Number.RoundUp\",\n    \"Number.Sign\",\n    \"Number.Sin\",\n    \"Number.Sinh\",\n    \"Number.Sqrt\",\n    \"Number.Tan\",\n    \"Number.Tanh\",\n    \"Number.ToText\",\n    \"OData.Feed\",\n    \"Odbc.DataSource\",\n    \"Odbc.Query\",\n    \"OleDb.DataSource\",\n    \"OleDb.Query\",\n    \"Oracle.Database\",\n    \"Percentage.From\",\n    \"PostgreSQL.Database\",\n    \"RData.FromBinary\",\n    \"Record.AddField\",\n    \"Record.Combine\",\n    \"Record.Field\",\n    \"Record.FieldCount\",\n    \"Record.FieldNames\",\n    \"Record.FieldOrDefault\",\n    \"Record.FieldValues\",\n    \"Record.FromList\",\n    \"Record.FromTable\",\n    \"Record.HasFields\",\n    \"Record.RemoveFields\",\n    \"Record.RenameFields\",\n    \"Record.ReorderFields\",\n    \"Record.SelectFields\",\n    \"Record.ToList\",\n    \"Record.ToTable\",\n    \"Record.TransformFields\",\n    \"Replacer.ReplaceText\",\n    \"Replacer.ReplaceValue\",\n    \"RowExpression.Column\",\n    \"RowExpression.From\",\n    \"Salesforce.Data\",\n    \"Salesforce.Reports\",\n    \"SapBusinessWarehouse.Cubes\",\n    \"SapHana.Database\",\n    \"SharePoint.Contents\",\n    \"SharePoint.Files\",\n    \"SharePoint.Tables\",\n    \"Single.From\",\n    \"Soda.Feed\",\n    \"Splitter.SplitByNothing\",\n    \"Splitter.SplitTextByAnyDelimiter\",\n    \"Splitter.SplitTextByDelimiter\",\n    \"Splitter.SplitTextByEachDelimiter\",\n    \"Splitter.SplitTextByLengths\",\n    \"Splitter.SplitTextByPositions\",\n    \"Splitter.SplitTextByRanges\",\n    \"Splitter.SplitTextByRepeatedLengths\",\n    \"Splitter.SplitTextByWhitespace\",\n    \"Sql.Database\",\n    \"Sql.Databases\",\n    \"SqlExpression.SchemaFrom\",\n    \"SqlExpression.ToExpression\",\n    \"Sybase.Database\",\n    \"Table.AddColumn\",\n    \"Table.AddIndexColumn\",\n    \"Table.AddJoinColumn\",\n    \"Table.AddKey\",\n    \"Table.AggregateTableColumn\",\n    \"Table.AlternateRows\",\n    \"Table.Buffer\",\n    \"Table.Column\",\n    \"Table.ColumnCount\",\n    \"Table.ColumnNames\",\n    \"Table.ColumnsOfType\",\n    \"Table.Combine\",\n    \"Table.CombineColumns\",\n    \"Table.Contains\",\n    \"Table.ContainsAll\",\n    \"Table.ContainsAny\",\n    \"Table.DemoteHeaders\",\n    \"Table.Distinct\",\n    \"Table.DuplicateColumn\",\n    \"Table.ExpandListColumn\",\n    \"Table.ExpandRecordColumn\",\n    \"Table.ExpandTableColumn\",\n    \"Table.FillDown\",\n    \"Table.FillUp\",\n    \"Table.FilterWithDataTable\",\n    \"Table.FindText\",\n    \"Table.First\",\n    \"Table.FirstN\",\n    \"Table.FirstValue\",\n    \"Table.FromColumns\",\n    \"Table.FromList\",\n    \"Table.FromPartitions\",\n    \"Table.FromRecords\",\n    \"Table.FromRows\",\n    \"Table.FromValue\",\n    \"Table.Group\",\n    \"Table.HasColumns\",\n    \"Table.InsertRows\",\n    \"Table.IsDistinct\",\n    \"Table.IsEmpty\",\n    \"Table.Join\",\n    \"Table.Keys\",\n    \"Table.Last\",\n    \"Table.LastN\",\n    \"Table.MatchesAllRows\",\n    \"Table.MatchesAnyRows\",\n    \"Table.Max\",\n    \"Table.MaxN\",\n    \"Table.Min\",\n    \"Table.MinN\",\n    \"Table.NestedJoin\",\n    \"Table.Partition\",\n    \"Table.PartitionValues\",\n    \"Table.Pivot\",\n    \"Table.PositionOf\",\n    \"Table.PositionOfAny\",\n    \"Table.PrefixColumns\",\n    \"Table.Profile\",\n    \"Table.PromoteHeaders\",\n    \"Table.Range\",\n    \"Table.RemoveColumns\",\n    \"Table.RemoveFirstN\",\n    \"Table.RemoveLastN\",\n    \"Table.RemoveMatchingRows\",\n    \"Table.RemoveRows\",\n    \"Table.RemoveRowsWithErrors\",\n    \"Table.RenameColumns\",\n    \"Table.ReorderColumns\",\n    \"Table.Repeat\",\n    \"Table.ReplaceErrorValues\",\n    \"Table.ReplaceKeys\",\n    \"Table.ReplaceMatchingRows\",\n    \"Table.ReplaceRelationshipIdentity\",\n    \"Table.ReplaceRows\",\n    \"Table.ReplaceValue\",\n    \"Table.ReverseRows\",\n    \"Table.RowCount\",\n    \"Table.Schema\",\n    \"Table.SelectColumns\",\n    \"Table.SelectRows\",\n    \"Table.SelectRowsWithErrors\",\n    \"Table.SingleRow\",\n    \"Table.Skip\",\n    \"Table.Sort\",\n    \"Table.SplitColumn\",\n    \"Table.ToColumns\",\n    \"Table.ToList\",\n    \"Table.ToRecords\",\n    \"Table.ToRows\",\n    \"Table.TransformColumnNames\",\n    \"Table.TransformColumnTypes\",\n    \"Table.TransformColumns\",\n    \"Table.TransformRows\",\n    \"Table.Transpose\",\n    \"Table.Unpivot\",\n    \"Table.UnpivotOtherColumns\",\n    \"Table.View\",\n    \"Table.ViewFunction\",\n    \"TableAction.DeleteRows\",\n    \"TableAction.InsertRows\",\n    \"TableAction.UpdateRows\",\n    \"Tables.GetRelationships\",\n    \"Teradata.Database\",\n    \"Text.AfterDelimiter\",\n    \"Text.At\",\n    \"Text.BeforeDelimiter\",\n    \"Text.BetweenDelimiters\",\n    \"Text.Clean\",\n    \"Text.Combine\",\n    \"Text.Contains\",\n    \"Text.End\",\n    \"Text.EndsWith\",\n    \"Text.Format\",\n    \"Text.From\",\n    \"Text.FromBinary\",\n    \"Text.Insert\",\n    \"Text.Length\",\n    \"Text.Lower\",\n    \"Text.Middle\",\n    \"Text.NewGuid\",\n    \"Text.PadEnd\",\n    \"Text.PadStart\",\n    \"Text.PositionOf\",\n    \"Text.PositionOfAny\",\n    \"Text.Proper\",\n    \"Text.Range\",\n    \"Text.Remove\",\n    \"Text.RemoveRange\",\n    \"Text.Repeat\",\n    \"Text.Replace\",\n    \"Text.ReplaceRange\",\n    \"Text.Select\",\n    \"Text.Split\",\n    \"Text.SplitAny\",\n    \"Text.Start\",\n    \"Text.StartsWith\",\n    \"Text.ToBinary\",\n    \"Text.ToList\",\n    \"Text.Trim\",\n    \"Text.TrimEnd\",\n    \"Text.TrimStart\",\n    \"Text.Upper\",\n    \"Time.EndOfHour\",\n    \"Time.From\",\n    \"Time.FromText\",\n    \"Time.Hour\",\n    \"Time.Minute\",\n    \"Time.Second\",\n    \"Time.StartOfHour\",\n    \"Time.ToRecord\",\n    \"Time.ToText\",\n    \"Type.AddTableKey\",\n    \"Type.ClosedRecord\",\n    \"Type.Facets\",\n    \"Type.ForFunction\",\n    \"Type.ForRecord\",\n    \"Type.FunctionParameters\",\n    \"Type.FunctionRequiredParameters\",\n    \"Type.FunctionReturn\",\n    \"Type.Is\",\n    \"Type.IsNullable\",\n    \"Type.IsOpenRecord\",\n    \"Type.ListItem\",\n    \"Type.NonNullable\",\n    \"Type.OpenRecord\",\n    \"Type.RecordFields\",\n    \"Type.ReplaceFacets\",\n    \"Type.ReplaceTableKeys\",\n    \"Type.TableColumn\",\n    \"Type.TableKeys\",\n    \"Type.TableRow\",\n    \"Type.TableSchema\",\n    \"Type.Union\",\n    \"Uri.BuildQueryString\",\n    \"Uri.Combine\",\n    \"Uri.EscapeDataString\",\n    \"Uri.Parts\",\n    \"Value.Add\",\n    \"Value.As\",\n    \"Value.Compare\",\n    \"Value.Divide\",\n    \"Value.Equals\",\n    \"Value.Firewall\",\n    \"Value.FromText\",\n    \"Value.Is\",\n    \"Value.Metadata\",\n    \"Value.Multiply\",\n    \"Value.NativeQuery\",\n    \"Value.NullableEquals\",\n    \"Value.RemoveMetadata\",\n    \"Value.ReplaceMetadata\",\n    \"Value.ReplaceType\",\n    \"Value.Subtract\",\n    \"Value.Type\",\n    \"ValueAction.NativeStatement\",\n    \"ValueAction.Replace\",\n    \"Variable.Value\",\n    \"Web.Contents\",\n    \"Web.Page\",\n    \"WebAction.Request\",\n    \"Xml.Document\",\n    \"Xml.Tables\"\n  ],\n  builtinConstants: [\n    \"BinaryEncoding.Base64\",\n    \"BinaryEncoding.Hex\",\n    \"BinaryOccurrence.Optional\",\n    \"BinaryOccurrence.Repeating\",\n    \"BinaryOccurrence.Required\",\n    \"ByteOrder.BigEndian\",\n    \"ByteOrder.LittleEndian\",\n    \"Compression.Deflate\",\n    \"Compression.GZip\",\n    \"CsvStyle.QuoteAfterDelimiter\",\n    \"CsvStyle.QuoteAlways\",\n    \"Culture.Current\",\n    \"Day.Friday\",\n    \"Day.Monday\",\n    \"Day.Saturday\",\n    \"Day.Sunday\",\n    \"Day.Thursday\",\n    \"Day.Tuesday\",\n    \"Day.Wednesday\",\n    \"ExtraValues.Error\",\n    \"ExtraValues.Ignore\",\n    \"ExtraValues.List\",\n    \"GroupKind.Global\",\n    \"GroupKind.Local\",\n    \"JoinAlgorithm.Dynamic\",\n    \"JoinAlgorithm.LeftHash\",\n    \"JoinAlgorithm.LeftIndex\",\n    \"JoinAlgorithm.PairwiseHash\",\n    \"JoinAlgorithm.RightHash\",\n    \"JoinAlgorithm.RightIndex\",\n    \"JoinAlgorithm.SortMerge\",\n    \"JoinKind.FullOuter\",\n    \"JoinKind.Inner\",\n    \"JoinKind.LeftAnti\",\n    \"JoinKind.LeftOuter\",\n    \"JoinKind.RightAnti\",\n    \"JoinKind.RightOuter\",\n    \"JoinSide.Left\",\n    \"JoinSide.Right\",\n    \"MissingField.Error\",\n    \"MissingField.Ignore\",\n    \"MissingField.UseNull\",\n    \"Number.E\",\n    \"Number.Epsilon\",\n    \"Number.NaN\",\n    \"Number.NegativeInfinity\",\n    \"Number.PI\",\n    \"Number.PositiveInfinity\",\n    \"Occurrence.All\",\n    \"Occurrence.First\",\n    \"Occurrence.Last\",\n    \"Occurrence.Optional\",\n    \"Occurrence.Repeating\",\n    \"Occurrence.Required\",\n    \"Order.Ascending\",\n    \"Order.Descending\",\n    \"Precision.Decimal\",\n    \"Precision.Double\",\n    \"QuoteStyle.Csv\",\n    \"QuoteStyle.None\",\n    \"RelativePosition.FromEnd\",\n    \"RelativePosition.FromStart\",\n    \"RoundingMode.AwayFromZero\",\n    \"RoundingMode.Down\",\n    \"RoundingMode.ToEven\",\n    \"RoundingMode.TowardZero\",\n    \"RoundingMode.Up\",\n    \"SapHanaDistribution.All\",\n    \"SapHanaDistribution.Connection\",\n    \"SapHanaDistribution.Off\",\n    \"SapHanaDistribution.Statement\",\n    \"SapHanaRangeOperator.Equals\",\n    \"SapHanaRangeOperator.GreaterThan\",\n    \"SapHanaRangeOperator.GreaterThanOrEquals\",\n    \"SapHanaRangeOperator.LessThan\",\n    \"SapHanaRangeOperator.LessThanOrEquals\",\n    \"SapHanaRangeOperator.NotEquals\",\n    \"TextEncoding.Ascii\",\n    \"TextEncoding.BigEndianUnicode\",\n    \"TextEncoding.Unicode\",\n    \"TextEncoding.Utf16\",\n    \"TextEncoding.Utf8\",\n    \"TextEncoding.Windows\",\n    \"TraceLevel.Critical\",\n    \"TraceLevel.Error\",\n    \"TraceLevel.Information\",\n    \"TraceLevel.Verbose\",\n    \"TraceLevel.Warning\",\n    \"WebMethod.Delete\",\n    \"WebMethod.Get\",\n    \"WebMethod.Head\",\n    \"WebMethod.Patch\",\n    \"WebMethod.Post\",\n    \"WebMethod.Put\"\n  ],\n  builtinTypes: [\n    \"Action.Type\",\n    \"Any.Type\",\n    \"Binary.Type\",\n    \"BinaryEncoding.Type\",\n    \"BinaryOccurrence.Type\",\n    \"Byte.Type\",\n    \"ByteOrder.Type\",\n    \"Character.Type\",\n    \"Compression.Type\",\n    \"CsvStyle.Type\",\n    \"Currency.Type\",\n    \"Date.Type\",\n    \"DateTime.Type\",\n    \"DateTimeZone.Type\",\n    \"Day.Type\",\n    \"Decimal.Type\",\n    \"Double.Type\",\n    \"Duration.Type\",\n    \"ExtraValues.Type\",\n    \"Function.Type\",\n    \"GroupKind.Type\",\n    \"Guid.Type\",\n    \"Int16.Type\",\n    \"Int32.Type\",\n    \"Int64.Type\",\n    \"Int8.Type\",\n    \"JoinAlgorithm.Type\",\n    \"JoinKind.Type\",\n    \"JoinSide.Type\",\n    \"List.Type\",\n    \"Logical.Type\",\n    \"MissingField.Type\",\n    \"None.Type\",\n    \"Null.Type\",\n    \"Number.Type\",\n    \"Occurrence.Type\",\n    \"Order.Type\",\n    \"Password.Type\",\n    \"Percentage.Type\",\n    \"Precision.Type\",\n    \"QuoteStyle.Type\",\n    \"Record.Type\",\n    \"RelativePosition.Type\",\n    \"RoundingMode.Type\",\n    \"SapHanaDistribution.Type\",\n    \"SapHanaRangeOperator.Type\",\n    \"Single.Type\",\n    \"Table.Type\",\n    \"Text.Type\",\n    \"TextEncoding.Type\",\n    \"Time.Type\",\n    \"TraceLevel.Type\",\n    \"Type.Type\",\n    \"Uri.Type\",\n    \"WebMethod.Type\"\n  ],\n  tokenizer: {\n    root: [\n      [/#\"[\\w \\.]+\"/, \"identifier.quote\"],\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/0[xX][0-9a-fA-F]+/, \"number.hex\"],\n      [/\\d+([eE][\\-+]?\\d+)?/, \"number\"],\n      [\n        /(#?[a-z]+)\\b/,\n        {\n          cases: {\n            \"@typeKeywords\": \"type\",\n            \"@keywords\": \"keyword\",\n            \"@constants\": \"constant\",\n            \"@constructors\": \"constructor\",\n            \"@operatorKeywords\": \"operators\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [\n        /\\b([A-Z][a-zA-Z0-9]+\\.Type)\\b/,\n        {\n          cases: {\n            \"@builtinTypes\": \"type\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [\n        /\\b([A-Z][a-zA-Z0-9]+\\.[A-Z][a-zA-Z0-9]+)\\b/,\n        {\n          cases: {\n            \"@builtinFunctions\": \"keyword.function\",\n            \"@builtinConstants\": \"constant\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [/\\b([a-zA-Z_][\\w\\.]*)\\b/, \"identifier\"],\n      { include: \"@whitespace\" },\n      { include: \"@comments\" },\n      { include: \"@strings\" },\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/([=\\+<>\\-\\*&@\\?\\/!])|([<>]=)|(<>)|(=>)|(\\.\\.\\.)|(\\.\\.)/, \"operators\"],\n      [/[,;]/, \"delimiter\"]\n    ],\n    whitespace: [[/\\s+/, \"white\"]],\n    comments: [\n      [\"\\\\/\\\\*\", \"comment\", \"@comment\"],\n      [\"\\\\/\\\\/+.*\", \"comment\"]\n    ],\n    comment: [\n      [\"\\\\*\\\\/\", \"comment\", \"@pop\"],\n      [\".\", \"comment\"]\n    ],\n    strings: [['\"', \"string\", \"@string\"]],\n    string: [\n      ['\"\"', \"string.escape\"],\n      ['\"', \"string\", \"@pop\"],\n      [\".\", \"string\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}