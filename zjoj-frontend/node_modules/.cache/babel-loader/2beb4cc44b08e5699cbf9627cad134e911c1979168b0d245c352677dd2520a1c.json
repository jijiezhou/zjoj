{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorker } from './common/services/editorSimpleWorker.js';\nlet initialized = false;\nexport function initialize(foreignModule) {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  const simpleWorker = new SimpleWorkerServer(msg => {\n    globalThis.postMessage(msg);\n  }, host => new EditorSimpleWorker(host, foreignModule));\n  globalThis.onmessage = e => {\n    simpleWorker.onmessage(e.data);\n  };\n}\nglobalThis.onmessage = e => {\n  // Ignore first message in this case and initialize if not yet initialized\n  if (!initialized) {\n    initialize(null);\n  }\n};","map":{"version":3,"names":["SimpleWorkerServer","EditorSimpleWorker","initialized","initialize","foreignModule","simpleWorker","msg","globalThis","postMessage","host","onmessage","e","data"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/editor.worker.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorker } from './common/services/editorSimpleWorker.js';\nlet initialized = false;\nexport function initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    const simpleWorker = new SimpleWorkerServer((msg) => {\n        globalThis.postMessage(msg);\n    }, (host) => new EditorSimpleWorker(host, foreignModule));\n    globalThis.onmessage = (e) => {\n        simpleWorker.onmessage(e.data);\n    };\n}\nglobalThis.onmessage = (e) => {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,kBAAkB,QAAQ,uCAAuC;AAC1E,SAASC,kBAAkB,QAAQ,yCAAyC;AAC5E,IAAIC,WAAW,GAAG,KAAK;AACvB,OAAO,SAASC,UAAUA,CAACC,aAAa,EAAE;EACtC,IAAIF,WAAW,EAAE;IACb;EACJ;EACAA,WAAW,GAAG,IAAI;EAClB,MAAMG,YAAY,GAAG,IAAIL,kBAAkB,CAAEM,GAAG,IAAK;IACjDC,UAAU,CAACC,WAAW,CAACF,GAAG,CAAC;EAC/B,CAAC,EAAGG,IAAI,IAAK,IAAIR,kBAAkB,CAACQ,IAAI,EAAEL,aAAa,CAAC,CAAC;EACzDG,UAAU,CAACG,SAAS,GAAIC,CAAC,IAAK;IAC1BN,YAAY,CAACK,SAAS,CAACC,CAAC,CAACC,IAAI,CAAC;EAClC,CAAC;AACL;AACAL,UAAU,CAACG,SAAS,GAAIC,CAAC,IAAK;EAC1B;EACA,IAAI,CAACT,WAAW,EAAE;IACdC,UAAU,CAAC,IAAI,CAAC;EACpB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}