{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { renderMarkdown } from '../../markdownRenderer.js';\nimport { List } from '../list/listWidget.js';\nimport * as arrays from '../../../common/arrays.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { KeyCodeUtils } from '../../../common/keyCodes.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { isMacintosh } from '../../../common/platform.js';\nimport './selectBoxCustom.css';\nimport { localize } from '../../../../nls.js';\nconst $ = dom.$;\nconst SELECT_OPTION_ENTRY_TEMPLATE_ID = 'selectOption.entry.template';\nclass SelectListRenderer {\n  get templateId() {\n    return SELECT_OPTION_ENTRY_TEMPLATE_ID;\n  }\n  renderTemplate(container) {\n    const data = Object.create(null);\n    data.root = container;\n    data.text = dom.append(container, $('.option-text'));\n    data.detail = dom.append(container, $('.option-detail'));\n    data.decoratorRight = dom.append(container, $('.option-decorator-right'));\n    return data;\n  }\n  renderElement(element, index, templateData) {\n    const data = templateData;\n    const text = element.text;\n    const detail = element.detail;\n    const decoratorRight = element.decoratorRight;\n    const isDisabled = element.isDisabled;\n    data.text.textContent = text;\n    data.detail.textContent = !!detail ? detail : '';\n    data.decoratorRight.innerText = !!decoratorRight ? decoratorRight : '';\n    // pseudo-select disabled option\n    if (isDisabled) {\n      data.root.classList.add('option-disabled');\n    } else {\n      // Make sure we do class removal from prior template rendering\n      data.root.classList.remove('option-disabled');\n    }\n  }\n  disposeTemplate(_templateData) {\n    // noop\n  }\n}\nexport class SelectBoxList extends Disposable {\n  constructor(options, selected, contextViewProvider, styles, selectBoxOptions) {\n    super();\n    this.options = [];\n    this._currentSelection = 0;\n    this._hasDetails = false;\n    this._skipLayout = false;\n    this._sticky = false; // for dev purposes only\n    this._isVisible = false;\n    this.styles = styles;\n    this.selectBoxOptions = selectBoxOptions || Object.create(null);\n    if (typeof this.selectBoxOptions.minBottomMargin !== 'number') {\n      this.selectBoxOptions.minBottomMargin = SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_BOTTOM_MARGIN;\n    } else if (this.selectBoxOptions.minBottomMargin < 0) {\n      this.selectBoxOptions.minBottomMargin = 0;\n    }\n    this.selectElement = document.createElement('select');\n    // Use custom CSS vars for padding calculation\n    this.selectElement.className = 'monaco-select-box monaco-select-box-dropdown-padding';\n    if (typeof this.selectBoxOptions.ariaLabel === 'string') {\n      this.selectElement.setAttribute('aria-label', this.selectBoxOptions.ariaLabel);\n    }\n    if (typeof this.selectBoxOptions.ariaDescription === 'string') {\n      this.selectElement.setAttribute('aria-description', this.selectBoxOptions.ariaDescription);\n    }\n    this._onDidSelect = new Emitter();\n    this._register(this._onDidSelect);\n    this.registerListeners();\n    this.constructSelectDropDown(contextViewProvider);\n    this.selected = selected || 0;\n    if (options) {\n      this.setOptions(options, selected);\n    }\n    this.initStyleSheet();\n  }\n  // IDelegate - List renderer\n  getHeight() {\n    return 22;\n  }\n  getTemplateId() {\n    return SELECT_OPTION_ENTRY_TEMPLATE_ID;\n  }\n  constructSelectDropDown(contextViewProvider) {\n    // SetUp ContextView container to hold select Dropdown\n    this.contextViewProvider = contextViewProvider;\n    this.selectDropDownContainer = dom.$('.monaco-select-box-dropdown-container');\n    // Use custom CSS vars for padding calculation (shared with parent select)\n    this.selectDropDownContainer.classList.add('monaco-select-box-dropdown-padding');\n    // Setup container for select option details\n    this.selectionDetailsPane = dom.append(this.selectDropDownContainer, $('.select-box-details-pane'));\n    // Create span flex box item/div we can measure and control\n    const widthControlOuterDiv = dom.append(this.selectDropDownContainer, $('.select-box-dropdown-container-width-control'));\n    const widthControlInnerDiv = dom.append(widthControlOuterDiv, $('.width-control-div'));\n    this.widthControlElement = document.createElement('span');\n    this.widthControlElement.className = 'option-text-width-control';\n    dom.append(widthControlInnerDiv, this.widthControlElement);\n    // Always default to below position\n    this._dropDownPosition = 0 /* AnchorPosition.BELOW */;\n    // Inline stylesheet for themes\n    this.styleElement = dom.createStyleSheet(this.selectDropDownContainer);\n    // Prevent dragging of dropdown #114329\n    this.selectDropDownContainer.setAttribute('draggable', 'true');\n    this._register(dom.addDisposableListener(this.selectDropDownContainer, dom.EventType.DRAG_START, e => {\n      dom.EventHelper.stop(e, true);\n    }));\n  }\n  registerListeners() {\n    // Parent native select keyboard listeners\n    this._register(dom.addStandardDisposableListener(this.selectElement, 'change', e => {\n      this.selected = e.target.selectedIndex;\n      this._onDidSelect.fire({\n        index: e.target.selectedIndex,\n        selected: e.target.value\n      });\n      if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n        this.selectElement.title = this.options[this.selected].text;\n      }\n    }));\n    // Have to implement both keyboard and mouse controllers to handle disabled options\n    // Intercept mouse events to override normal select actions on parents\n    this._register(dom.addDisposableListener(this.selectElement, dom.EventType.CLICK, e => {\n      dom.EventHelper.stop(e);\n      if (this._isVisible) {\n        this.hideSelectDropDown(true);\n      } else {\n        this.showSelectDropDown();\n      }\n    }));\n    this._register(dom.addDisposableListener(this.selectElement, dom.EventType.MOUSE_DOWN, e => {\n      dom.EventHelper.stop(e);\n    }));\n    // Intercept touch events\n    // The following implementation is slightly different from the mouse event handlers above.\n    // Use the following helper variable, otherwise the list flickers.\n    let listIsVisibleOnTouchStart;\n    this._register(dom.addDisposableListener(this.selectElement, 'touchstart', e => {\n      listIsVisibleOnTouchStart = this._isVisible;\n    }));\n    this._register(dom.addDisposableListener(this.selectElement, 'touchend', e => {\n      dom.EventHelper.stop(e);\n      if (listIsVisibleOnTouchStart) {\n        this.hideSelectDropDown(true);\n      } else {\n        this.showSelectDropDown();\n      }\n    }));\n    // Intercept keyboard handling\n    this._register(dom.addDisposableListener(this.selectElement, dom.EventType.KEY_DOWN, e => {\n      const event = new StandardKeyboardEvent(e);\n      let showDropDown = false;\n      // Create and drop down select list on keyboard select\n      if (isMacintosh) {\n        if (event.keyCode === 18 /* KeyCode.DownArrow */ || event.keyCode === 16 /* KeyCode.UpArrow */ || event.keyCode === 10 /* KeyCode.Space */ || event.keyCode === 3 /* KeyCode.Enter */) {\n          showDropDown = true;\n        }\n      } else {\n        if (event.keyCode === 18 /* KeyCode.DownArrow */ && event.altKey || event.keyCode === 16 /* KeyCode.UpArrow */ && event.altKey || event.keyCode === 10 /* KeyCode.Space */ || event.keyCode === 3 /* KeyCode.Enter */) {\n          showDropDown = true;\n        }\n      }\n      if (showDropDown) {\n        this.showSelectDropDown();\n        dom.EventHelper.stop(e, true);\n      }\n    }));\n  }\n  get onDidSelect() {\n    return this._onDidSelect.event;\n  }\n  setOptions(options, selected) {\n    if (!arrays.equals(this.options, options)) {\n      this.options = options;\n      this.selectElement.options.length = 0;\n      this._hasDetails = false;\n      this._cachedMaxDetailsHeight = undefined;\n      this.options.forEach((option, index) => {\n        this.selectElement.add(this.createOption(option.text, index, option.isDisabled));\n        if (typeof option.description === 'string') {\n          this._hasDetails = true;\n        }\n      });\n    }\n    if (selected !== undefined) {\n      this.select(selected);\n      // Set current = selected since this is not necessarily a user exit\n      this._currentSelection = this.selected;\n    }\n  }\n  setOptionsList() {\n    var _a;\n    // Mirror options in drop-down\n    // Populate select list for non-native select mode\n    (_a = this.selectList) === null || _a === void 0 ? void 0 : _a.splice(0, this.selectList.length, this.options);\n  }\n  select(index) {\n    if (index >= 0 && index < this.options.length) {\n      this.selected = index;\n    } else if (index > this.options.length - 1) {\n      // Adjust index to end of list\n      // This could make client out of sync with the select\n      this.select(this.options.length - 1);\n    } else if (this.selected < 0) {\n      this.selected = 0;\n    }\n    this.selectElement.selectedIndex = this.selected;\n    if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n      this.selectElement.title = this.options[this.selected].text;\n    }\n  }\n  focus() {\n    if (this.selectElement) {\n      this.selectElement.tabIndex = 0;\n      this.selectElement.focus();\n    }\n  }\n  blur() {\n    if (this.selectElement) {\n      this.selectElement.tabIndex = -1;\n      this.selectElement.blur();\n    }\n  }\n  setFocusable(focusable) {\n    this.selectElement.tabIndex = focusable ? 0 : -1;\n  }\n  render(container) {\n    this.container = container;\n    container.classList.add('select-container');\n    container.appendChild(this.selectElement);\n    this.styleSelectElement();\n  }\n  initStyleSheet() {\n    const content = [];\n    // Style non-native select mode\n    if (this.styles.listFocusBackground) {\n      content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused { background-color: ${this.styles.listFocusBackground} !important; }`);\n    }\n    if (this.styles.listFocusForeground) {\n      content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused { color: ${this.styles.listFocusForeground} !important; }`);\n    }\n    if (this.styles.decoratorRightForeground) {\n      content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.focused) .option-decorator-right { color: ${this.styles.decoratorRightForeground}; }`);\n    }\n    if (this.styles.selectBackground && this.styles.selectBorder && this.styles.selectBorder !== this.styles.selectBackground) {\n      content.push(`.monaco-select-box-dropdown-container { border: 1px solid ${this.styles.selectBorder} } `);\n      content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-top { border-top: 1px solid ${this.styles.selectBorder} } `);\n      content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-bottom { border-bottom: 1px solid ${this.styles.selectBorder} } `);\n    } else if (this.styles.selectListBorder) {\n      content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-top { border-top: 1px solid ${this.styles.selectListBorder} } `);\n      content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-bottom { border-bottom: 1px solid ${this.styles.selectListBorder} } `);\n    }\n    // Hover foreground - ignore for disabled options\n    if (this.styles.listHoverForeground) {\n      content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.option-disabled):not(.focused):hover { color: ${this.styles.listHoverForeground} !important; }`);\n    }\n    // Hover background - ignore for disabled options\n    if (this.styles.listHoverBackground) {\n      content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.option-disabled):not(.focused):hover { background-color: ${this.styles.listHoverBackground} !important; }`);\n    }\n    // Match quick input outline styles - ignore for disabled options\n    if (this.styles.listFocusOutline) {\n      content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused { outline: 1.6px dotted ${this.styles.listFocusOutline} !important; outline-offset: -1.6px !important; }`);\n    }\n    if (this.styles.listHoverOutline) {\n      content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.option-disabled):not(.focused):hover { outline: 1.6px dashed ${this.styles.listHoverOutline} !important; outline-offset: -1.6px !important; }`);\n    }\n    // Clear list styles on focus and on hover for disabled options\n    content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.option-disabled.focused { background-color: transparent !important; color: inherit !important; outline: none !important; }`);\n    content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.option-disabled:hover { background-color: transparent !important; color: inherit !important; outline: none !important; }`);\n    this.styleElement.textContent = content.join('\\n');\n  }\n  styleSelectElement() {\n    var _a, _b, _c;\n    const background = (_a = this.styles.selectBackground) !== null && _a !== void 0 ? _a : '';\n    const foreground = (_b = this.styles.selectForeground) !== null && _b !== void 0 ? _b : '';\n    const border = (_c = this.styles.selectBorder) !== null && _c !== void 0 ? _c : '';\n    this.selectElement.style.backgroundColor = background;\n    this.selectElement.style.color = foreground;\n    this.selectElement.style.borderColor = border;\n  }\n  styleList() {\n    var _a, _b;\n    const background = (_a = this.styles.selectBackground) !== null && _a !== void 0 ? _a : '';\n    const listBackground = dom.asCssValueWithDefault(this.styles.selectListBackground, background);\n    this.selectDropDownListContainer.style.backgroundColor = listBackground;\n    this.selectionDetailsPane.style.backgroundColor = listBackground;\n    const optionsBorder = (_b = this.styles.focusBorder) !== null && _b !== void 0 ? _b : '';\n    this.selectDropDownContainer.style.outlineColor = optionsBorder;\n    this.selectDropDownContainer.style.outlineOffset = '-1px';\n    this.selectList.style(this.styles);\n  }\n  createOption(value, index, disabled) {\n    const option = document.createElement('option');\n    option.value = value;\n    option.text = value;\n    option.disabled = !!disabled;\n    return option;\n  }\n  // ContextView dropdown methods\n  showSelectDropDown() {\n    this.selectionDetailsPane.innerText = '';\n    if (!this.contextViewProvider || this._isVisible) {\n      return;\n    }\n    // Lazily create and populate list only at open, moved from constructor\n    this.createSelectList(this.selectDropDownContainer);\n    this.setOptionsList();\n    // This allows us to flip the position based on measurement\n    // Set drop-down position above/below from required height and margins\n    // If pre-layout cannot fit at least one option do not show drop-down\n    this.contextViewProvider.showContextView({\n      getAnchor: () => this.selectElement,\n      render: container => this.renderSelectDropDown(container, true),\n      layout: () => {\n        this.layoutSelectDropDown();\n      },\n      onHide: () => {\n        this.selectDropDownContainer.classList.remove('visible');\n        this.selectElement.classList.remove('synthetic-focus');\n      },\n      anchorPosition: this._dropDownPosition\n    }, this.selectBoxOptions.optionsAsChildren ? this.container : undefined);\n    // Hide so we can relay out\n    this._isVisible = true;\n    this.hideSelectDropDown(false);\n    this.contextViewProvider.showContextView({\n      getAnchor: () => this.selectElement,\n      render: container => this.renderSelectDropDown(container),\n      layout: () => this.layoutSelectDropDown(),\n      onHide: () => {\n        this.selectDropDownContainer.classList.remove('visible');\n        this.selectElement.classList.remove('synthetic-focus');\n      },\n      anchorPosition: this._dropDownPosition\n    }, this.selectBoxOptions.optionsAsChildren ? this.container : undefined);\n    // Track initial selection the case user escape, blur\n    this._currentSelection = this.selected;\n    this._isVisible = true;\n    this.selectElement.setAttribute('aria-expanded', 'true');\n  }\n  hideSelectDropDown(focusSelect) {\n    if (!this.contextViewProvider || !this._isVisible) {\n      return;\n    }\n    this._isVisible = false;\n    this.selectElement.setAttribute('aria-expanded', 'false');\n    if (focusSelect) {\n      this.selectElement.focus();\n    }\n    this.contextViewProvider.hideContextView();\n  }\n  renderSelectDropDown(container, preLayoutPosition) {\n    container.appendChild(this.selectDropDownContainer);\n    // Pre-Layout allows us to change position\n    this.layoutSelectDropDown(preLayoutPosition);\n    return {\n      dispose: () => {\n        // contextView will dispose itself if moving from one View to another\n        try {\n          container.removeChild(this.selectDropDownContainer); // remove to take out the CSS rules we add\n        } catch (error) {\n          // Ignore, removed already by change of focus\n        }\n      }\n    };\n  }\n  // Iterate over detailed descriptions, find max height\n  measureMaxDetailsHeight() {\n    let maxDetailsPaneHeight = 0;\n    this.options.forEach((_option, index) => {\n      this.updateDetail(index);\n      if (this.selectionDetailsPane.offsetHeight > maxDetailsPaneHeight) {\n        maxDetailsPaneHeight = this.selectionDetailsPane.offsetHeight;\n      }\n    });\n    return maxDetailsPaneHeight;\n  }\n  layoutSelectDropDown(preLayoutPosition) {\n    // Avoid recursion from layout called in onListFocus\n    if (this._skipLayout) {\n      return false;\n    }\n    // Layout ContextView drop down select list and container\n    // Have to manage our vertical overflow, sizing, position below or above\n    // Position has to be determined and set prior to contextView instantiation\n    if (this.selectList) {\n      // Make visible to enable measurements\n      this.selectDropDownContainer.classList.add('visible');\n      const window = dom.getWindow(this.selectElement);\n      const selectPosition = dom.getDomNodePagePosition(this.selectElement);\n      const styles = dom.getWindow(this.selectElement).getComputedStyle(this.selectElement);\n      const verticalPadding = parseFloat(styles.getPropertyValue('--dropdown-padding-top')) + parseFloat(styles.getPropertyValue('--dropdown-padding-bottom'));\n      const maxSelectDropDownHeightBelow = window.innerHeight - selectPosition.top - selectPosition.height - (this.selectBoxOptions.minBottomMargin || 0);\n      const maxSelectDropDownHeightAbove = selectPosition.top - SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN;\n      // Determine optimal width - min(longest option), opt(parent select, excluding margins), max(ContextView controlled)\n      const selectWidth = this.selectElement.offsetWidth;\n      const selectMinWidth = this.setWidthControlElement(this.widthControlElement);\n      const selectOptimalWidth = Math.max(selectMinWidth, Math.round(selectWidth)).toString() + 'px';\n      this.selectDropDownContainer.style.width = selectOptimalWidth;\n      // Get initial list height and determine space above and below\n      this.selectList.getHTMLElement().style.height = '';\n      this.selectList.layout();\n      let listHeight = this.selectList.contentHeight;\n      if (this._hasDetails && this._cachedMaxDetailsHeight === undefined) {\n        this._cachedMaxDetailsHeight = this.measureMaxDetailsHeight();\n      }\n      const maxDetailsPaneHeight = this._hasDetails ? this._cachedMaxDetailsHeight : 0;\n      const minRequiredDropDownHeight = listHeight + verticalPadding + maxDetailsPaneHeight;\n      const maxVisibleOptionsBelow = Math.floor((maxSelectDropDownHeightBelow - verticalPadding - maxDetailsPaneHeight) / this.getHeight());\n      const maxVisibleOptionsAbove = Math.floor((maxSelectDropDownHeightAbove - verticalPadding - maxDetailsPaneHeight) / this.getHeight());\n      // If we are only doing pre-layout check/adjust position only\n      // Calculate vertical space available, flip up if insufficient\n      // Use reflected padding on parent select, ContextView style\n      // properties not available before DOM attachment\n      if (preLayoutPosition) {\n        // Check if select moved out of viewport , do not open\n        // If at least one option cannot be shown, don't open the drop-down or hide/remove if open\n        if (selectPosition.top + selectPosition.height > window.innerHeight - 22 || selectPosition.top < SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN || maxVisibleOptionsBelow < 1 && maxVisibleOptionsAbove < 1) {\n          // Indicate we cannot open\n          return false;\n        }\n        // Determine if we have to flip up\n        // Always show complete list items - never more than Max available vertical height\n        if (maxVisibleOptionsBelow < SelectBoxList.DEFAULT_MINIMUM_VISIBLE_OPTIONS && maxVisibleOptionsAbove > maxVisibleOptionsBelow && this.options.length > maxVisibleOptionsBelow) {\n          this._dropDownPosition = 1 /* AnchorPosition.ABOVE */;\n          this.selectDropDownContainer.removeChild(this.selectDropDownListContainer);\n          this.selectDropDownContainer.removeChild(this.selectionDetailsPane);\n          this.selectDropDownContainer.appendChild(this.selectionDetailsPane);\n          this.selectDropDownContainer.appendChild(this.selectDropDownListContainer);\n          this.selectionDetailsPane.classList.remove('border-top');\n          this.selectionDetailsPane.classList.add('border-bottom');\n        } else {\n          this._dropDownPosition = 0 /* AnchorPosition.BELOW */;\n          this.selectDropDownContainer.removeChild(this.selectDropDownListContainer);\n          this.selectDropDownContainer.removeChild(this.selectionDetailsPane);\n          this.selectDropDownContainer.appendChild(this.selectDropDownListContainer);\n          this.selectDropDownContainer.appendChild(this.selectionDetailsPane);\n          this.selectionDetailsPane.classList.remove('border-bottom');\n          this.selectionDetailsPane.classList.add('border-top');\n        }\n        // Do full layout on showSelectDropDown only\n        return true;\n      }\n      // Check if select out of viewport or cutting into status bar\n      if (selectPosition.top + selectPosition.height > window.innerHeight - 22 || selectPosition.top < SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN || this._dropDownPosition === 0 /* AnchorPosition.BELOW */ && maxVisibleOptionsBelow < 1 || this._dropDownPosition === 1 /* AnchorPosition.ABOVE */ && maxVisibleOptionsAbove < 1) {\n        // Cannot properly layout, close and hide\n        this.hideSelectDropDown(true);\n        return false;\n      }\n      // SetUp list dimensions and layout - account for container padding\n      // Use position to check above or below available space\n      if (this._dropDownPosition === 0 /* AnchorPosition.BELOW */) {\n        if (this._isVisible && maxVisibleOptionsBelow + maxVisibleOptionsAbove < 1) {\n          // If drop-down is visible, must be doing a DOM re-layout, hide since we don't fit\n          // Hide drop-down, hide contextview, focus on parent select\n          this.hideSelectDropDown(true);\n          return false;\n        }\n        // Adjust list height to max from select bottom to margin (default/minBottomMargin)\n        if (minRequiredDropDownHeight > maxSelectDropDownHeightBelow) {\n          listHeight = maxVisibleOptionsBelow * this.getHeight();\n        }\n      } else {\n        if (minRequiredDropDownHeight > maxSelectDropDownHeightAbove) {\n          listHeight = maxVisibleOptionsAbove * this.getHeight();\n        }\n      }\n      // Set adjusted list height and relayout\n      this.selectList.layout(listHeight);\n      this.selectList.domFocus();\n      // Finally set focus on selected item\n      if (this.selectList.length > 0) {\n        this.selectList.setFocus([this.selected || 0]);\n        this.selectList.reveal(this.selectList.getFocus()[0] || 0);\n      }\n      if (this._hasDetails) {\n        // Leave the selectDropDownContainer to size itself according to children (list + details) - #57447\n        this.selectList.getHTMLElement().style.height = listHeight + verticalPadding + 'px';\n        this.selectDropDownContainer.style.height = '';\n      } else {\n        this.selectDropDownContainer.style.height = listHeight + verticalPadding + 'px';\n      }\n      this.updateDetail(this.selected);\n      this.selectDropDownContainer.style.width = selectOptimalWidth;\n      // Maintain focus outline on parent select as well as list container - tabindex for focus\n      this.selectDropDownListContainer.setAttribute('tabindex', '0');\n      this.selectElement.classList.add('synthetic-focus');\n      this.selectDropDownContainer.classList.add('synthetic-focus');\n      return true;\n    } else {\n      return false;\n    }\n  }\n  setWidthControlElement(container) {\n    let elementWidth = 0;\n    if (container) {\n      let longest = 0;\n      let longestLength = 0;\n      this.options.forEach((option, index) => {\n        const detailLength = !!option.detail ? option.detail.length : 0;\n        const rightDecoratorLength = !!option.decoratorRight ? option.decoratorRight.length : 0;\n        const len = option.text.length + detailLength + rightDecoratorLength;\n        if (len > longestLength) {\n          longest = index;\n          longestLength = len;\n        }\n      });\n      container.textContent = this.options[longest].text + (!!this.options[longest].decoratorRight ? this.options[longest].decoratorRight + ' ' : '');\n      elementWidth = dom.getTotalWidth(container);\n    }\n    return elementWidth;\n  }\n  createSelectList(parent) {\n    // If we have already constructive list on open, skip\n    if (this.selectList) {\n      return;\n    }\n    // SetUp container for list\n    this.selectDropDownListContainer = dom.append(parent, $('.select-box-dropdown-list-container'));\n    this.listRenderer = new SelectListRenderer();\n    this.selectList = new List('SelectBoxCustom', this.selectDropDownListContainer, this, [this.listRenderer], {\n      useShadows: false,\n      verticalScrollMode: 3 /* ScrollbarVisibility.Visible */,\n      keyboardSupport: false,\n      mouseSupport: false,\n      accessibilityProvider: {\n        getAriaLabel: element => {\n          let label = element.text;\n          if (element.detail) {\n            label += `. ${element.detail}`;\n          }\n          if (element.decoratorRight) {\n            label += `. ${element.decoratorRight}`;\n          }\n          if (element.description) {\n            label += `. ${element.description}`;\n          }\n          return label;\n        },\n        getWidgetAriaLabel: () => localize({\n          key: 'selectBox',\n          comment: ['Behave like native select dropdown element.']\n        }, \"Select Box\"),\n        getRole: () => isMacintosh ? '' : 'option',\n        getWidgetRole: () => 'listbox'\n      }\n    });\n    if (this.selectBoxOptions.ariaLabel) {\n      this.selectList.ariaLabel = this.selectBoxOptions.ariaLabel;\n    }\n    // SetUp list keyboard controller - control navigation, disabled items, focus\n    const onKeyDown = this._register(new DomEmitter(this.selectDropDownListContainer, 'keydown'));\n    const onSelectDropDownKeyDown = Event.chain(onKeyDown.event, $ => $.filter(() => this.selectList.length > 0).map(e => new StandardKeyboardEvent(e)));\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 3 /* KeyCode.Enter */))(this.onEnter, this));\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 2 /* KeyCode.Tab */))(this.onEnter, this)); // Tab should behave the same as enter, #79339\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 9 /* KeyCode.Escape */))(this.onEscape, this));\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 16 /* KeyCode.UpArrow */))(this.onUpArrow, this));\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 18 /* KeyCode.DownArrow */))(this.onDownArrow, this));\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 12 /* KeyCode.PageDown */))(this.onPageDown, this));\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 11 /* KeyCode.PageUp */))(this.onPageUp, this));\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 14 /* KeyCode.Home */))(this.onHome, this));\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 13 /* KeyCode.End */))(this.onEnd, this));\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode >= 21 /* KeyCode.Digit0 */ && e.keyCode <= 56 /* KeyCode.KeyZ */ || e.keyCode >= 85 /* KeyCode.Semicolon */ && e.keyCode <= 113 /* KeyCode.NumpadDivide */))(this.onCharacter, this));\n    // SetUp list mouse controller - control navigation, disabled items, focus\n    this._register(dom.addDisposableListener(this.selectList.getHTMLElement(), dom.EventType.POINTER_UP, e => this.onPointerUp(e)));\n    this._register(this.selectList.onMouseOver(e => typeof e.index !== 'undefined' && this.selectList.setFocus([e.index])));\n    this._register(this.selectList.onDidChangeFocus(e => this.onListFocus(e)));\n    this._register(dom.addDisposableListener(this.selectDropDownContainer, dom.EventType.FOCUS_OUT, e => {\n      if (!this._isVisible || dom.isAncestor(e.relatedTarget, this.selectDropDownContainer)) {\n        return;\n      }\n      this.onListBlur();\n    }));\n    this.selectList.getHTMLElement().setAttribute('aria-label', this.selectBoxOptions.ariaLabel || '');\n    this.selectList.getHTMLElement().setAttribute('aria-expanded', 'true');\n    this.styleList();\n  }\n  // List methods\n  // List mouse controller - active exit, select option, fire onDidSelect if change, return focus to parent select\n  // Also takes in touchend events\n  onPointerUp(e) {\n    if (!this.selectList.length) {\n      return;\n    }\n    dom.EventHelper.stop(e);\n    const target = e.target;\n    if (!target) {\n      return;\n    }\n    // Check our mouse event is on an option (not scrollbar)\n    if (target.classList.contains('slider')) {\n      return;\n    }\n    const listRowElement = target.closest('.monaco-list-row');\n    if (!listRowElement) {\n      return;\n    }\n    const index = Number(listRowElement.getAttribute('data-index'));\n    const disabled = listRowElement.classList.contains('option-disabled');\n    // Ignore mouse selection of disabled options\n    if (index >= 0 && index < this.options.length && !disabled) {\n      this.selected = index;\n      this.select(this.selected);\n      this.selectList.setFocus([this.selected]);\n      this.selectList.reveal(this.selectList.getFocus()[0]);\n      // Only fire if selection change\n      if (this.selected !== this._currentSelection) {\n        // Set current = selected\n        this._currentSelection = this.selected;\n        this._onDidSelect.fire({\n          index: this.selectElement.selectedIndex,\n          selected: this.options[this.selected].text\n        });\n        if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n          this.selectElement.title = this.options[this.selected].text;\n        }\n      }\n      this.hideSelectDropDown(true);\n    }\n  }\n  // List Exit - passive - implicit no selection change, hide drop-down\n  onListBlur() {\n    if (this._sticky) {\n      return;\n    }\n    if (this.selected !== this._currentSelection) {\n      // Reset selected to current if no change\n      this.select(this._currentSelection);\n    }\n    this.hideSelectDropDown(false);\n  }\n  renderDescriptionMarkdown(text, actionHandler) {\n    const cleanRenderedMarkdown = element => {\n      for (let i = 0; i < element.childNodes.length; i++) {\n        const child = element.childNodes.item(i);\n        const tagName = child.tagName && child.tagName.toLowerCase();\n        if (tagName === 'img') {\n          element.removeChild(child);\n        } else {\n          cleanRenderedMarkdown(child);\n        }\n      }\n    };\n    const rendered = renderMarkdown({\n      value: text,\n      supportThemeIcons: true\n    }, {\n      actionHandler\n    });\n    rendered.element.classList.add('select-box-description-markdown');\n    cleanRenderedMarkdown(rendered.element);\n    return rendered.element;\n  }\n  // List Focus Change - passive - update details pane with newly focused element's data\n  onListFocus(e) {\n    // Skip during initial layout\n    if (!this._isVisible || !this._hasDetails) {\n      return;\n    }\n    this.updateDetail(e.indexes[0]);\n  }\n  updateDetail(selectedIndex) {\n    var _a, _b;\n    this.selectionDetailsPane.innerText = '';\n    const option = this.options[selectedIndex];\n    const description = (_a = option === null || option === void 0 ? void 0 : option.description) !== null && _a !== void 0 ? _a : '';\n    const descriptionIsMarkdown = (_b = option === null || option === void 0 ? void 0 : option.descriptionIsMarkdown) !== null && _b !== void 0 ? _b : false;\n    if (description) {\n      if (descriptionIsMarkdown) {\n        const actionHandler = option.descriptionMarkdownActionHandler;\n        this.selectionDetailsPane.appendChild(this.renderDescriptionMarkdown(description, actionHandler));\n      } else {\n        this.selectionDetailsPane.innerText = description;\n      }\n      this.selectionDetailsPane.style.display = 'block';\n    } else {\n      this.selectionDetailsPane.style.display = 'none';\n    }\n    // Avoid recursion\n    this._skipLayout = true;\n    this.contextViewProvider.layout();\n    this._skipLayout = false;\n  }\n  // List keyboard controller\n  // List exit - active - hide ContextView dropdown, reset selection, return focus to parent select\n  onEscape(e) {\n    dom.EventHelper.stop(e);\n    // Reset selection to value when opened\n    this.select(this._currentSelection);\n    this.hideSelectDropDown(true);\n  }\n  // List exit - active - hide ContextView dropdown, return focus to parent select, fire onDidSelect if change\n  onEnter(e) {\n    dom.EventHelper.stop(e);\n    // Only fire if selection change\n    if (this.selected !== this._currentSelection) {\n      this._currentSelection = this.selected;\n      this._onDidSelect.fire({\n        index: this.selectElement.selectedIndex,\n        selected: this.options[this.selected].text\n      });\n      if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n        this.selectElement.title = this.options[this.selected].text;\n      }\n    }\n    this.hideSelectDropDown(true);\n  }\n  // List navigation - have to handle a disabled option (jump over)\n  onDownArrow(e) {\n    if (this.selected < this.options.length - 1) {\n      dom.EventHelper.stop(e, true);\n      // Skip disabled options\n      const nextOptionDisabled = this.options[this.selected + 1].isDisabled;\n      if (nextOptionDisabled && this.options.length > this.selected + 2) {\n        this.selected += 2;\n      } else if (nextOptionDisabled) {\n        return;\n      } else {\n        this.selected++;\n      }\n      // Set focus/selection - only fire event when closing drop-down or on blur\n      this.select(this.selected);\n      this.selectList.setFocus([this.selected]);\n      this.selectList.reveal(this.selectList.getFocus()[0]);\n    }\n  }\n  onUpArrow(e) {\n    if (this.selected > 0) {\n      dom.EventHelper.stop(e, true);\n      // Skip disabled options\n      const previousOptionDisabled = this.options[this.selected - 1].isDisabled;\n      if (previousOptionDisabled && this.selected > 1) {\n        this.selected -= 2;\n      } else {\n        this.selected--;\n      }\n      // Set focus/selection - only fire event when closing drop-down or on blur\n      this.select(this.selected);\n      this.selectList.setFocus([this.selected]);\n      this.selectList.reveal(this.selectList.getFocus()[0]);\n    }\n  }\n  onPageUp(e) {\n    dom.EventHelper.stop(e);\n    this.selectList.focusPreviousPage();\n    // Allow scrolling to settle\n    setTimeout(() => {\n      this.selected = this.selectList.getFocus()[0];\n      // Shift selection down if we land on a disabled option\n      if (this.options[this.selected].isDisabled && this.selected < this.options.length - 1) {\n        this.selected++;\n        this.selectList.setFocus([this.selected]);\n      }\n      this.selectList.reveal(this.selected);\n      this.select(this.selected);\n    }, 1);\n  }\n  onPageDown(e) {\n    dom.EventHelper.stop(e);\n    this.selectList.focusNextPage();\n    // Allow scrolling to settle\n    setTimeout(() => {\n      this.selected = this.selectList.getFocus()[0];\n      // Shift selection up if we land on a disabled option\n      if (this.options[this.selected].isDisabled && this.selected > 0) {\n        this.selected--;\n        this.selectList.setFocus([this.selected]);\n      }\n      this.selectList.reveal(this.selected);\n      this.select(this.selected);\n    }, 1);\n  }\n  onHome(e) {\n    dom.EventHelper.stop(e);\n    if (this.options.length < 2) {\n      return;\n    }\n    this.selected = 0;\n    if (this.options[this.selected].isDisabled && this.selected > 1) {\n      this.selected++;\n    }\n    this.selectList.setFocus([this.selected]);\n    this.selectList.reveal(this.selected);\n    this.select(this.selected);\n  }\n  onEnd(e) {\n    dom.EventHelper.stop(e);\n    if (this.options.length < 2) {\n      return;\n    }\n    this.selected = this.options.length - 1;\n    if (this.options[this.selected].isDisabled && this.selected > 1) {\n      this.selected--;\n    }\n    this.selectList.setFocus([this.selected]);\n    this.selectList.reveal(this.selected);\n    this.select(this.selected);\n  }\n  // Mimic option first character navigation of native select\n  onCharacter(e) {\n    const ch = KeyCodeUtils.toString(e.keyCode);\n    let optionIndex = -1;\n    for (let i = 0; i < this.options.length - 1; i++) {\n      optionIndex = (i + this.selected + 1) % this.options.length;\n      if (this.options[optionIndex].text.charAt(0).toUpperCase() === ch && !this.options[optionIndex].isDisabled) {\n        this.select(optionIndex);\n        this.selectList.setFocus([optionIndex]);\n        this.selectList.reveal(this.selectList.getFocus()[0]);\n        dom.EventHelper.stop(e);\n        break;\n      }\n    }\n  }\n  dispose() {\n    this.hideSelectDropDown(false);\n    super.dispose();\n  }\n}\nSelectBoxList.DEFAULT_DROPDOWN_MINIMUM_BOTTOM_MARGIN = 32;\nSelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN = 2;\nSelectBoxList.DEFAULT_MINIMUM_VISIBLE_OPTIONS = 3;","map":{"version":3,"names":["dom","DomEmitter","StandardKeyboardEvent","renderMarkdown","List","arrays","Emitter","Event","KeyCodeUtils","Disposable","isMacintosh","localize","$","SELECT_OPTION_ENTRY_TEMPLATE_ID","SelectListRenderer","templateId","renderTemplate","container","data","Object","create","root","text","append","detail","decoratorRight","renderElement","element","index","templateData","isDisabled","textContent","innerText","classList","add","remove","disposeTemplate","_templateData","SelectBoxList","constructor","options","selected","contextViewProvider","styles","selectBoxOptions","_currentSelection","_hasDetails","_skipLayout","_sticky","_isVisible","minBottomMargin","DEFAULT_DROPDOWN_MINIMUM_BOTTOM_MARGIN","selectElement","document","createElement","className","ariaLabel","setAttribute","ariaDescription","_onDidSelect","_register","registerListeners","constructSelectDropDown","setOptions","initStyleSheet","getHeight","getTemplateId","selectDropDownContainer","selectionDetailsPane","widthControlOuterDiv","widthControlInnerDiv","widthControlElement","_dropDownPosition","styleElement","createStyleSheet","addDisposableListener","EventType","DRAG_START","e","EventHelper","stop","addStandardDisposableListener","target","selectedIndex","fire","value","title","CLICK","hideSelectDropDown","showSelectDropDown","MOUSE_DOWN","listIsVisibleOnTouchStart","KEY_DOWN","event","showDropDown","keyCode","altKey","onDidSelect","equals","length","_cachedMaxDetailsHeight","undefined","forEach","option","createOption","description","select","setOptionsList","_a","selectList","splice","focus","tabIndex","blur","setFocusable","focusable","render","appendChild","styleSelectElement","content","listFocusBackground","push","listFocusForeground","decoratorRightForeground","selectBackground","selectBorder","selectListBorder","listHoverForeground","listHoverBackground","listFocusOutline","listHoverOutline","join","_b","_c","background","foreground","selectForeground","border","style","backgroundColor","color","borderColor","styleList","listBackground","asCssValueWithDefault","selectListBackground","selectDropDownListContainer","optionsBorder","focusBorder","outlineColor","outlineOffset","disabled","createSelectList","showContextView","getAnchor","renderSelectDropDown","layout","layoutSelectDropDown","onHide","anchorPosition","optionsAsChildren","focusSelect","hideContextView","preLayoutPosition","dispose","removeChild","error","measureMaxDetailsHeight","maxDetailsPaneHeight","_option","updateDetail","offsetHeight","window","getWindow","selectPosition","getDomNodePagePosition","getComputedStyle","verticalPadding","parseFloat","getPropertyValue","maxSelectDropDownHeightBelow","innerHeight","top","height","maxSelectDropDownHeightAbove","DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN","selectWidth","offsetWidth","selectMinWidth","setWidthControlElement","selectOptimalWidth","Math","max","round","toString","width","getHTMLElement","listHeight","contentHeight","minRequiredDropDownHeight","maxVisibleOptionsBelow","floor","maxVisibleOptionsAbove","DEFAULT_MINIMUM_VISIBLE_OPTIONS","domFocus","setFocus","reveal","getFocus","elementWidth","longest","longestLength","detailLength","rightDecoratorLength","len","getTotalWidth","parent","listRenderer","useShadows","verticalScrollMode","keyboardSupport","mouseSupport","accessibilityProvider","getAriaLabel","label","getWidgetAriaLabel","key","comment","getRole","getWidgetRole","onKeyDown","onSelectDropDownKeyDown","chain","filter","map","onEnter","onEscape","onUpArrow","onDownArrow","onPageDown","onPageUp","onHome","onEnd","onCharacter","POINTER_UP","onPointerUp","onMouseOver","onDidChangeFocus","onListFocus","FOCUS_OUT","isAncestor","relatedTarget","onListBlur","contains","listRowElement","closest","Number","getAttribute","renderDescriptionMarkdown","actionHandler","cleanRenderedMarkdown","i","childNodes","child","item","tagName","toLowerCase","rendered","supportThemeIcons","indexes","descriptionIsMarkdown","descriptionMarkdownActionHandler","display","nextOptionDisabled","previousOptionDisabled","focusPreviousPage","setTimeout","focusNextPage","ch","optionIndex","charAt","toUpperCase"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/base/browser/ui/selectBox/selectBoxCustom.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { renderMarkdown } from '../../markdownRenderer.js';\nimport { List } from '../list/listWidget.js';\nimport * as arrays from '../../../common/arrays.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { KeyCodeUtils } from '../../../common/keyCodes.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { isMacintosh } from '../../../common/platform.js';\nimport './selectBoxCustom.css';\nimport { localize } from '../../../../nls.js';\nconst $ = dom.$;\nconst SELECT_OPTION_ENTRY_TEMPLATE_ID = 'selectOption.entry.template';\nclass SelectListRenderer {\n    get templateId() { return SELECT_OPTION_ENTRY_TEMPLATE_ID; }\n    renderTemplate(container) {\n        const data = Object.create(null);\n        data.root = container;\n        data.text = dom.append(container, $('.option-text'));\n        data.detail = dom.append(container, $('.option-detail'));\n        data.decoratorRight = dom.append(container, $('.option-decorator-right'));\n        return data;\n    }\n    renderElement(element, index, templateData) {\n        const data = templateData;\n        const text = element.text;\n        const detail = element.detail;\n        const decoratorRight = element.decoratorRight;\n        const isDisabled = element.isDisabled;\n        data.text.textContent = text;\n        data.detail.textContent = !!detail ? detail : '';\n        data.decoratorRight.innerText = !!decoratorRight ? decoratorRight : '';\n        // pseudo-select disabled option\n        if (isDisabled) {\n            data.root.classList.add('option-disabled');\n        }\n        else {\n            // Make sure we do class removal from prior template rendering\n            data.root.classList.remove('option-disabled');\n        }\n    }\n    disposeTemplate(_templateData) {\n        // noop\n    }\n}\nexport class SelectBoxList extends Disposable {\n    constructor(options, selected, contextViewProvider, styles, selectBoxOptions) {\n        super();\n        this.options = [];\n        this._currentSelection = 0;\n        this._hasDetails = false;\n        this._skipLayout = false;\n        this._sticky = false; // for dev purposes only\n        this._isVisible = false;\n        this.styles = styles;\n        this.selectBoxOptions = selectBoxOptions || Object.create(null);\n        if (typeof this.selectBoxOptions.minBottomMargin !== 'number') {\n            this.selectBoxOptions.minBottomMargin = SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_BOTTOM_MARGIN;\n        }\n        else if (this.selectBoxOptions.minBottomMargin < 0) {\n            this.selectBoxOptions.minBottomMargin = 0;\n        }\n        this.selectElement = document.createElement('select');\n        // Use custom CSS vars for padding calculation\n        this.selectElement.className = 'monaco-select-box monaco-select-box-dropdown-padding';\n        if (typeof this.selectBoxOptions.ariaLabel === 'string') {\n            this.selectElement.setAttribute('aria-label', this.selectBoxOptions.ariaLabel);\n        }\n        if (typeof this.selectBoxOptions.ariaDescription === 'string') {\n            this.selectElement.setAttribute('aria-description', this.selectBoxOptions.ariaDescription);\n        }\n        this._onDidSelect = new Emitter();\n        this._register(this._onDidSelect);\n        this.registerListeners();\n        this.constructSelectDropDown(contextViewProvider);\n        this.selected = selected || 0;\n        if (options) {\n            this.setOptions(options, selected);\n        }\n        this.initStyleSheet();\n    }\n    // IDelegate - List renderer\n    getHeight() {\n        return 22;\n    }\n    getTemplateId() {\n        return SELECT_OPTION_ENTRY_TEMPLATE_ID;\n    }\n    constructSelectDropDown(contextViewProvider) {\n        // SetUp ContextView container to hold select Dropdown\n        this.contextViewProvider = contextViewProvider;\n        this.selectDropDownContainer = dom.$('.monaco-select-box-dropdown-container');\n        // Use custom CSS vars for padding calculation (shared with parent select)\n        this.selectDropDownContainer.classList.add('monaco-select-box-dropdown-padding');\n        // Setup container for select option details\n        this.selectionDetailsPane = dom.append(this.selectDropDownContainer, $('.select-box-details-pane'));\n        // Create span flex box item/div we can measure and control\n        const widthControlOuterDiv = dom.append(this.selectDropDownContainer, $('.select-box-dropdown-container-width-control'));\n        const widthControlInnerDiv = dom.append(widthControlOuterDiv, $('.width-control-div'));\n        this.widthControlElement = document.createElement('span');\n        this.widthControlElement.className = 'option-text-width-control';\n        dom.append(widthControlInnerDiv, this.widthControlElement);\n        // Always default to below position\n        this._dropDownPosition = 0 /* AnchorPosition.BELOW */;\n        // Inline stylesheet for themes\n        this.styleElement = dom.createStyleSheet(this.selectDropDownContainer);\n        // Prevent dragging of dropdown #114329\n        this.selectDropDownContainer.setAttribute('draggable', 'true');\n        this._register(dom.addDisposableListener(this.selectDropDownContainer, dom.EventType.DRAG_START, (e) => {\n            dom.EventHelper.stop(e, true);\n        }));\n    }\n    registerListeners() {\n        // Parent native select keyboard listeners\n        this._register(dom.addStandardDisposableListener(this.selectElement, 'change', (e) => {\n            this.selected = e.target.selectedIndex;\n            this._onDidSelect.fire({\n                index: e.target.selectedIndex,\n                selected: e.target.value\n            });\n            if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n                this.selectElement.title = this.options[this.selected].text;\n            }\n        }));\n        // Have to implement both keyboard and mouse controllers to handle disabled options\n        // Intercept mouse events to override normal select actions on parents\n        this._register(dom.addDisposableListener(this.selectElement, dom.EventType.CLICK, (e) => {\n            dom.EventHelper.stop(e);\n            if (this._isVisible) {\n                this.hideSelectDropDown(true);\n            }\n            else {\n                this.showSelectDropDown();\n            }\n        }));\n        this._register(dom.addDisposableListener(this.selectElement, dom.EventType.MOUSE_DOWN, (e) => {\n            dom.EventHelper.stop(e);\n        }));\n        // Intercept touch events\n        // The following implementation is slightly different from the mouse event handlers above.\n        // Use the following helper variable, otherwise the list flickers.\n        let listIsVisibleOnTouchStart;\n        this._register(dom.addDisposableListener(this.selectElement, 'touchstart', (e) => {\n            listIsVisibleOnTouchStart = this._isVisible;\n        }));\n        this._register(dom.addDisposableListener(this.selectElement, 'touchend', (e) => {\n            dom.EventHelper.stop(e);\n            if (listIsVisibleOnTouchStart) {\n                this.hideSelectDropDown(true);\n            }\n            else {\n                this.showSelectDropDown();\n            }\n        }));\n        // Intercept keyboard handling\n        this._register(dom.addDisposableListener(this.selectElement, dom.EventType.KEY_DOWN, (e) => {\n            const event = new StandardKeyboardEvent(e);\n            let showDropDown = false;\n            // Create and drop down select list on keyboard select\n            if (isMacintosh) {\n                if (event.keyCode === 18 /* KeyCode.DownArrow */ || event.keyCode === 16 /* KeyCode.UpArrow */ || event.keyCode === 10 /* KeyCode.Space */ || event.keyCode === 3 /* KeyCode.Enter */) {\n                    showDropDown = true;\n                }\n            }\n            else {\n                if (event.keyCode === 18 /* KeyCode.DownArrow */ && event.altKey || event.keyCode === 16 /* KeyCode.UpArrow */ && event.altKey || event.keyCode === 10 /* KeyCode.Space */ || event.keyCode === 3 /* KeyCode.Enter */) {\n                    showDropDown = true;\n                }\n            }\n            if (showDropDown) {\n                this.showSelectDropDown();\n                dom.EventHelper.stop(e, true);\n            }\n        }));\n    }\n    get onDidSelect() {\n        return this._onDidSelect.event;\n    }\n    setOptions(options, selected) {\n        if (!arrays.equals(this.options, options)) {\n            this.options = options;\n            this.selectElement.options.length = 0;\n            this._hasDetails = false;\n            this._cachedMaxDetailsHeight = undefined;\n            this.options.forEach((option, index) => {\n                this.selectElement.add(this.createOption(option.text, index, option.isDisabled));\n                if (typeof option.description === 'string') {\n                    this._hasDetails = true;\n                }\n            });\n        }\n        if (selected !== undefined) {\n            this.select(selected);\n            // Set current = selected since this is not necessarily a user exit\n            this._currentSelection = this.selected;\n        }\n    }\n    setOptionsList() {\n        var _a;\n        // Mirror options in drop-down\n        // Populate select list for non-native select mode\n        (_a = this.selectList) === null || _a === void 0 ? void 0 : _a.splice(0, this.selectList.length, this.options);\n    }\n    select(index) {\n        if (index >= 0 && index < this.options.length) {\n            this.selected = index;\n        }\n        else if (index > this.options.length - 1) {\n            // Adjust index to end of list\n            // This could make client out of sync with the select\n            this.select(this.options.length - 1);\n        }\n        else if (this.selected < 0) {\n            this.selected = 0;\n        }\n        this.selectElement.selectedIndex = this.selected;\n        if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n            this.selectElement.title = this.options[this.selected].text;\n        }\n    }\n    focus() {\n        if (this.selectElement) {\n            this.selectElement.tabIndex = 0;\n            this.selectElement.focus();\n        }\n    }\n    blur() {\n        if (this.selectElement) {\n            this.selectElement.tabIndex = -1;\n            this.selectElement.blur();\n        }\n    }\n    setFocusable(focusable) {\n        this.selectElement.tabIndex = focusable ? 0 : -1;\n    }\n    render(container) {\n        this.container = container;\n        container.classList.add('select-container');\n        container.appendChild(this.selectElement);\n        this.styleSelectElement();\n    }\n    initStyleSheet() {\n        const content = [];\n        // Style non-native select mode\n        if (this.styles.listFocusBackground) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused { background-color: ${this.styles.listFocusBackground} !important; }`);\n        }\n        if (this.styles.listFocusForeground) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused { color: ${this.styles.listFocusForeground} !important; }`);\n        }\n        if (this.styles.decoratorRightForeground) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.focused) .option-decorator-right { color: ${this.styles.decoratorRightForeground}; }`);\n        }\n        if (this.styles.selectBackground && this.styles.selectBorder && this.styles.selectBorder !== this.styles.selectBackground) {\n            content.push(`.monaco-select-box-dropdown-container { border: 1px solid ${this.styles.selectBorder} } `);\n            content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-top { border-top: 1px solid ${this.styles.selectBorder} } `);\n            content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-bottom { border-bottom: 1px solid ${this.styles.selectBorder} } `);\n        }\n        else if (this.styles.selectListBorder) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-top { border-top: 1px solid ${this.styles.selectListBorder} } `);\n            content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-bottom { border-bottom: 1px solid ${this.styles.selectListBorder} } `);\n        }\n        // Hover foreground - ignore for disabled options\n        if (this.styles.listHoverForeground) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.option-disabled):not(.focused):hover { color: ${this.styles.listHoverForeground} !important; }`);\n        }\n        // Hover background - ignore for disabled options\n        if (this.styles.listHoverBackground) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.option-disabled):not(.focused):hover { background-color: ${this.styles.listHoverBackground} !important; }`);\n        }\n        // Match quick input outline styles - ignore for disabled options\n        if (this.styles.listFocusOutline) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused { outline: 1.6px dotted ${this.styles.listFocusOutline} !important; outline-offset: -1.6px !important; }`);\n        }\n        if (this.styles.listHoverOutline) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.option-disabled):not(.focused):hover { outline: 1.6px dashed ${this.styles.listHoverOutline} !important; outline-offset: -1.6px !important; }`);\n        }\n        // Clear list styles on focus and on hover for disabled options\n        content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.option-disabled.focused { background-color: transparent !important; color: inherit !important; outline: none !important; }`);\n        content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.option-disabled:hover { background-color: transparent !important; color: inherit !important; outline: none !important; }`);\n        this.styleElement.textContent = content.join('\\n');\n    }\n    styleSelectElement() {\n        var _a, _b, _c;\n        const background = (_a = this.styles.selectBackground) !== null && _a !== void 0 ? _a : '';\n        const foreground = (_b = this.styles.selectForeground) !== null && _b !== void 0 ? _b : '';\n        const border = (_c = this.styles.selectBorder) !== null && _c !== void 0 ? _c : '';\n        this.selectElement.style.backgroundColor = background;\n        this.selectElement.style.color = foreground;\n        this.selectElement.style.borderColor = border;\n    }\n    styleList() {\n        var _a, _b;\n        const background = (_a = this.styles.selectBackground) !== null && _a !== void 0 ? _a : '';\n        const listBackground = dom.asCssValueWithDefault(this.styles.selectListBackground, background);\n        this.selectDropDownListContainer.style.backgroundColor = listBackground;\n        this.selectionDetailsPane.style.backgroundColor = listBackground;\n        const optionsBorder = (_b = this.styles.focusBorder) !== null && _b !== void 0 ? _b : '';\n        this.selectDropDownContainer.style.outlineColor = optionsBorder;\n        this.selectDropDownContainer.style.outlineOffset = '-1px';\n        this.selectList.style(this.styles);\n    }\n    createOption(value, index, disabled) {\n        const option = document.createElement('option');\n        option.value = value;\n        option.text = value;\n        option.disabled = !!disabled;\n        return option;\n    }\n    // ContextView dropdown methods\n    showSelectDropDown() {\n        this.selectionDetailsPane.innerText = '';\n        if (!this.contextViewProvider || this._isVisible) {\n            return;\n        }\n        // Lazily create and populate list only at open, moved from constructor\n        this.createSelectList(this.selectDropDownContainer);\n        this.setOptionsList();\n        // This allows us to flip the position based on measurement\n        // Set drop-down position above/below from required height and margins\n        // If pre-layout cannot fit at least one option do not show drop-down\n        this.contextViewProvider.showContextView({\n            getAnchor: () => this.selectElement,\n            render: (container) => this.renderSelectDropDown(container, true),\n            layout: () => {\n                this.layoutSelectDropDown();\n            },\n            onHide: () => {\n                this.selectDropDownContainer.classList.remove('visible');\n                this.selectElement.classList.remove('synthetic-focus');\n            },\n            anchorPosition: this._dropDownPosition\n        }, this.selectBoxOptions.optionsAsChildren ? this.container : undefined);\n        // Hide so we can relay out\n        this._isVisible = true;\n        this.hideSelectDropDown(false);\n        this.contextViewProvider.showContextView({\n            getAnchor: () => this.selectElement,\n            render: (container) => this.renderSelectDropDown(container),\n            layout: () => this.layoutSelectDropDown(),\n            onHide: () => {\n                this.selectDropDownContainer.classList.remove('visible');\n                this.selectElement.classList.remove('synthetic-focus');\n            },\n            anchorPosition: this._dropDownPosition\n        }, this.selectBoxOptions.optionsAsChildren ? this.container : undefined);\n        // Track initial selection the case user escape, blur\n        this._currentSelection = this.selected;\n        this._isVisible = true;\n        this.selectElement.setAttribute('aria-expanded', 'true');\n    }\n    hideSelectDropDown(focusSelect) {\n        if (!this.contextViewProvider || !this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this.selectElement.setAttribute('aria-expanded', 'false');\n        if (focusSelect) {\n            this.selectElement.focus();\n        }\n        this.contextViewProvider.hideContextView();\n    }\n    renderSelectDropDown(container, preLayoutPosition) {\n        container.appendChild(this.selectDropDownContainer);\n        // Pre-Layout allows us to change position\n        this.layoutSelectDropDown(preLayoutPosition);\n        return {\n            dispose: () => {\n                // contextView will dispose itself if moving from one View to another\n                try {\n                    container.removeChild(this.selectDropDownContainer); // remove to take out the CSS rules we add\n                }\n                catch (error) {\n                    // Ignore, removed already by change of focus\n                }\n            }\n        };\n    }\n    // Iterate over detailed descriptions, find max height\n    measureMaxDetailsHeight() {\n        let maxDetailsPaneHeight = 0;\n        this.options.forEach((_option, index) => {\n            this.updateDetail(index);\n            if (this.selectionDetailsPane.offsetHeight > maxDetailsPaneHeight) {\n                maxDetailsPaneHeight = this.selectionDetailsPane.offsetHeight;\n            }\n        });\n        return maxDetailsPaneHeight;\n    }\n    layoutSelectDropDown(preLayoutPosition) {\n        // Avoid recursion from layout called in onListFocus\n        if (this._skipLayout) {\n            return false;\n        }\n        // Layout ContextView drop down select list and container\n        // Have to manage our vertical overflow, sizing, position below or above\n        // Position has to be determined and set prior to contextView instantiation\n        if (this.selectList) {\n            // Make visible to enable measurements\n            this.selectDropDownContainer.classList.add('visible');\n            const window = dom.getWindow(this.selectElement);\n            const selectPosition = dom.getDomNodePagePosition(this.selectElement);\n            const styles = dom.getWindow(this.selectElement).getComputedStyle(this.selectElement);\n            const verticalPadding = parseFloat(styles.getPropertyValue('--dropdown-padding-top')) + parseFloat(styles.getPropertyValue('--dropdown-padding-bottom'));\n            const maxSelectDropDownHeightBelow = (window.innerHeight - selectPosition.top - selectPosition.height - (this.selectBoxOptions.minBottomMargin || 0));\n            const maxSelectDropDownHeightAbove = (selectPosition.top - SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN);\n            // Determine optimal width - min(longest option), opt(parent select, excluding margins), max(ContextView controlled)\n            const selectWidth = this.selectElement.offsetWidth;\n            const selectMinWidth = this.setWidthControlElement(this.widthControlElement);\n            const selectOptimalWidth = Math.max(selectMinWidth, Math.round(selectWidth)).toString() + 'px';\n            this.selectDropDownContainer.style.width = selectOptimalWidth;\n            // Get initial list height and determine space above and below\n            this.selectList.getHTMLElement().style.height = '';\n            this.selectList.layout();\n            let listHeight = this.selectList.contentHeight;\n            if (this._hasDetails && this._cachedMaxDetailsHeight === undefined) {\n                this._cachedMaxDetailsHeight = this.measureMaxDetailsHeight();\n            }\n            const maxDetailsPaneHeight = this._hasDetails ? this._cachedMaxDetailsHeight : 0;\n            const minRequiredDropDownHeight = listHeight + verticalPadding + maxDetailsPaneHeight;\n            const maxVisibleOptionsBelow = ((Math.floor((maxSelectDropDownHeightBelow - verticalPadding - maxDetailsPaneHeight) / this.getHeight())));\n            const maxVisibleOptionsAbove = ((Math.floor((maxSelectDropDownHeightAbove - verticalPadding - maxDetailsPaneHeight) / this.getHeight())));\n            // If we are only doing pre-layout check/adjust position only\n            // Calculate vertical space available, flip up if insufficient\n            // Use reflected padding on parent select, ContextView style\n            // properties not available before DOM attachment\n            if (preLayoutPosition) {\n                // Check if select moved out of viewport , do not open\n                // If at least one option cannot be shown, don't open the drop-down or hide/remove if open\n                if ((selectPosition.top + selectPosition.height) > (window.innerHeight - 22)\n                    || selectPosition.top < SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN\n                    || ((maxVisibleOptionsBelow < 1) && (maxVisibleOptionsAbove < 1))) {\n                    // Indicate we cannot open\n                    return false;\n                }\n                // Determine if we have to flip up\n                // Always show complete list items - never more than Max available vertical height\n                if (maxVisibleOptionsBelow < SelectBoxList.DEFAULT_MINIMUM_VISIBLE_OPTIONS\n                    && maxVisibleOptionsAbove > maxVisibleOptionsBelow\n                    && this.options.length > maxVisibleOptionsBelow) {\n                    this._dropDownPosition = 1 /* AnchorPosition.ABOVE */;\n                    this.selectDropDownContainer.removeChild(this.selectDropDownListContainer);\n                    this.selectDropDownContainer.removeChild(this.selectionDetailsPane);\n                    this.selectDropDownContainer.appendChild(this.selectionDetailsPane);\n                    this.selectDropDownContainer.appendChild(this.selectDropDownListContainer);\n                    this.selectionDetailsPane.classList.remove('border-top');\n                    this.selectionDetailsPane.classList.add('border-bottom');\n                }\n                else {\n                    this._dropDownPosition = 0 /* AnchorPosition.BELOW */;\n                    this.selectDropDownContainer.removeChild(this.selectDropDownListContainer);\n                    this.selectDropDownContainer.removeChild(this.selectionDetailsPane);\n                    this.selectDropDownContainer.appendChild(this.selectDropDownListContainer);\n                    this.selectDropDownContainer.appendChild(this.selectionDetailsPane);\n                    this.selectionDetailsPane.classList.remove('border-bottom');\n                    this.selectionDetailsPane.classList.add('border-top');\n                }\n                // Do full layout on showSelectDropDown only\n                return true;\n            }\n            // Check if select out of viewport or cutting into status bar\n            if ((selectPosition.top + selectPosition.height) > (window.innerHeight - 22)\n                || selectPosition.top < SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN\n                || (this._dropDownPosition === 0 /* AnchorPosition.BELOW */ && maxVisibleOptionsBelow < 1)\n                || (this._dropDownPosition === 1 /* AnchorPosition.ABOVE */ && maxVisibleOptionsAbove < 1)) {\n                // Cannot properly layout, close and hide\n                this.hideSelectDropDown(true);\n                return false;\n            }\n            // SetUp list dimensions and layout - account for container padding\n            // Use position to check above or below available space\n            if (this._dropDownPosition === 0 /* AnchorPosition.BELOW */) {\n                if (this._isVisible && maxVisibleOptionsBelow + maxVisibleOptionsAbove < 1) {\n                    // If drop-down is visible, must be doing a DOM re-layout, hide since we don't fit\n                    // Hide drop-down, hide contextview, focus on parent select\n                    this.hideSelectDropDown(true);\n                    return false;\n                }\n                // Adjust list height to max from select bottom to margin (default/minBottomMargin)\n                if (minRequiredDropDownHeight > maxSelectDropDownHeightBelow) {\n                    listHeight = (maxVisibleOptionsBelow * this.getHeight());\n                }\n            }\n            else {\n                if (minRequiredDropDownHeight > maxSelectDropDownHeightAbove) {\n                    listHeight = (maxVisibleOptionsAbove * this.getHeight());\n                }\n            }\n            // Set adjusted list height and relayout\n            this.selectList.layout(listHeight);\n            this.selectList.domFocus();\n            // Finally set focus on selected item\n            if (this.selectList.length > 0) {\n                this.selectList.setFocus([this.selected || 0]);\n                this.selectList.reveal(this.selectList.getFocus()[0] || 0);\n            }\n            if (this._hasDetails) {\n                // Leave the selectDropDownContainer to size itself according to children (list + details) - #57447\n                this.selectList.getHTMLElement().style.height = (listHeight + verticalPadding) + 'px';\n                this.selectDropDownContainer.style.height = '';\n            }\n            else {\n                this.selectDropDownContainer.style.height = (listHeight + verticalPadding) + 'px';\n            }\n            this.updateDetail(this.selected);\n            this.selectDropDownContainer.style.width = selectOptimalWidth;\n            // Maintain focus outline on parent select as well as list container - tabindex for focus\n            this.selectDropDownListContainer.setAttribute('tabindex', '0');\n            this.selectElement.classList.add('synthetic-focus');\n            this.selectDropDownContainer.classList.add('synthetic-focus');\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    setWidthControlElement(container) {\n        let elementWidth = 0;\n        if (container) {\n            let longest = 0;\n            let longestLength = 0;\n            this.options.forEach((option, index) => {\n                const detailLength = !!option.detail ? option.detail.length : 0;\n                const rightDecoratorLength = !!option.decoratorRight ? option.decoratorRight.length : 0;\n                const len = option.text.length + detailLength + rightDecoratorLength;\n                if (len > longestLength) {\n                    longest = index;\n                    longestLength = len;\n                }\n            });\n            container.textContent = this.options[longest].text + (!!this.options[longest].decoratorRight ? (this.options[longest].decoratorRight + ' ') : '');\n            elementWidth = dom.getTotalWidth(container);\n        }\n        return elementWidth;\n    }\n    createSelectList(parent) {\n        // If we have already constructive list on open, skip\n        if (this.selectList) {\n            return;\n        }\n        // SetUp container for list\n        this.selectDropDownListContainer = dom.append(parent, $('.select-box-dropdown-list-container'));\n        this.listRenderer = new SelectListRenderer();\n        this.selectList = new List('SelectBoxCustom', this.selectDropDownListContainer, this, [this.listRenderer], {\n            useShadows: false,\n            verticalScrollMode: 3 /* ScrollbarVisibility.Visible */,\n            keyboardSupport: false,\n            mouseSupport: false,\n            accessibilityProvider: {\n                getAriaLabel: element => {\n                    let label = element.text;\n                    if (element.detail) {\n                        label += `. ${element.detail}`;\n                    }\n                    if (element.decoratorRight) {\n                        label += `. ${element.decoratorRight}`;\n                    }\n                    if (element.description) {\n                        label += `. ${element.description}`;\n                    }\n                    return label;\n                },\n                getWidgetAriaLabel: () => localize({ key: 'selectBox', comment: ['Behave like native select dropdown element.'] }, \"Select Box\"),\n                getRole: () => isMacintosh ? '' : 'option',\n                getWidgetRole: () => 'listbox'\n            }\n        });\n        if (this.selectBoxOptions.ariaLabel) {\n            this.selectList.ariaLabel = this.selectBoxOptions.ariaLabel;\n        }\n        // SetUp list keyboard controller - control navigation, disabled items, focus\n        const onKeyDown = this._register(new DomEmitter(this.selectDropDownListContainer, 'keydown'));\n        const onSelectDropDownKeyDown = Event.chain(onKeyDown.event, $ => $.filter(() => this.selectList.length > 0)\n            .map(e => new StandardKeyboardEvent(e)));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 3 /* KeyCode.Enter */))(this.onEnter, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 2 /* KeyCode.Tab */))(this.onEnter, this)); // Tab should behave the same as enter, #79339\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 9 /* KeyCode.Escape */))(this.onEscape, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 16 /* KeyCode.UpArrow */))(this.onUpArrow, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 18 /* KeyCode.DownArrow */))(this.onDownArrow, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 12 /* KeyCode.PageDown */))(this.onPageDown, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 11 /* KeyCode.PageUp */))(this.onPageUp, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 14 /* KeyCode.Home */))(this.onHome, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 13 /* KeyCode.End */))(this.onEnd, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => (e.keyCode >= 21 /* KeyCode.Digit0 */ && e.keyCode <= 56 /* KeyCode.KeyZ */) || (e.keyCode >= 85 /* KeyCode.Semicolon */ && e.keyCode <= 113 /* KeyCode.NumpadDivide */)))(this.onCharacter, this));\n        // SetUp list mouse controller - control navigation, disabled items, focus\n        this._register(dom.addDisposableListener(this.selectList.getHTMLElement(), dom.EventType.POINTER_UP, e => this.onPointerUp(e)));\n        this._register(this.selectList.onMouseOver(e => typeof e.index !== 'undefined' && this.selectList.setFocus([e.index])));\n        this._register(this.selectList.onDidChangeFocus(e => this.onListFocus(e)));\n        this._register(dom.addDisposableListener(this.selectDropDownContainer, dom.EventType.FOCUS_OUT, e => {\n            if (!this._isVisible || dom.isAncestor(e.relatedTarget, this.selectDropDownContainer)) {\n                return;\n            }\n            this.onListBlur();\n        }));\n        this.selectList.getHTMLElement().setAttribute('aria-label', this.selectBoxOptions.ariaLabel || '');\n        this.selectList.getHTMLElement().setAttribute('aria-expanded', 'true');\n        this.styleList();\n    }\n    // List methods\n    // List mouse controller - active exit, select option, fire onDidSelect if change, return focus to parent select\n    // Also takes in touchend events\n    onPointerUp(e) {\n        if (!this.selectList.length) {\n            return;\n        }\n        dom.EventHelper.stop(e);\n        const target = e.target;\n        if (!target) {\n            return;\n        }\n        // Check our mouse event is on an option (not scrollbar)\n        if (target.classList.contains('slider')) {\n            return;\n        }\n        const listRowElement = target.closest('.monaco-list-row');\n        if (!listRowElement) {\n            return;\n        }\n        const index = Number(listRowElement.getAttribute('data-index'));\n        const disabled = listRowElement.classList.contains('option-disabled');\n        // Ignore mouse selection of disabled options\n        if (index >= 0 && index < this.options.length && !disabled) {\n            this.selected = index;\n            this.select(this.selected);\n            this.selectList.setFocus([this.selected]);\n            this.selectList.reveal(this.selectList.getFocus()[0]);\n            // Only fire if selection change\n            if (this.selected !== this._currentSelection) {\n                // Set current = selected\n                this._currentSelection = this.selected;\n                this._onDidSelect.fire({\n                    index: this.selectElement.selectedIndex,\n                    selected: this.options[this.selected].text\n                });\n                if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n                    this.selectElement.title = this.options[this.selected].text;\n                }\n            }\n            this.hideSelectDropDown(true);\n        }\n    }\n    // List Exit - passive - implicit no selection change, hide drop-down\n    onListBlur() {\n        if (this._sticky) {\n            return;\n        }\n        if (this.selected !== this._currentSelection) {\n            // Reset selected to current if no change\n            this.select(this._currentSelection);\n        }\n        this.hideSelectDropDown(false);\n    }\n    renderDescriptionMarkdown(text, actionHandler) {\n        const cleanRenderedMarkdown = (element) => {\n            for (let i = 0; i < element.childNodes.length; i++) {\n                const child = element.childNodes.item(i);\n                const tagName = child.tagName && child.tagName.toLowerCase();\n                if (tagName === 'img') {\n                    element.removeChild(child);\n                }\n                else {\n                    cleanRenderedMarkdown(child);\n                }\n            }\n        };\n        const rendered = renderMarkdown({ value: text, supportThemeIcons: true }, { actionHandler });\n        rendered.element.classList.add('select-box-description-markdown');\n        cleanRenderedMarkdown(rendered.element);\n        return rendered.element;\n    }\n    // List Focus Change - passive - update details pane with newly focused element's data\n    onListFocus(e) {\n        // Skip during initial layout\n        if (!this._isVisible || !this._hasDetails) {\n            return;\n        }\n        this.updateDetail(e.indexes[0]);\n    }\n    updateDetail(selectedIndex) {\n        var _a, _b;\n        this.selectionDetailsPane.innerText = '';\n        const option = this.options[selectedIndex];\n        const description = (_a = option === null || option === void 0 ? void 0 : option.description) !== null && _a !== void 0 ? _a : '';\n        const descriptionIsMarkdown = (_b = option === null || option === void 0 ? void 0 : option.descriptionIsMarkdown) !== null && _b !== void 0 ? _b : false;\n        if (description) {\n            if (descriptionIsMarkdown) {\n                const actionHandler = option.descriptionMarkdownActionHandler;\n                this.selectionDetailsPane.appendChild(this.renderDescriptionMarkdown(description, actionHandler));\n            }\n            else {\n                this.selectionDetailsPane.innerText = description;\n            }\n            this.selectionDetailsPane.style.display = 'block';\n        }\n        else {\n            this.selectionDetailsPane.style.display = 'none';\n        }\n        // Avoid recursion\n        this._skipLayout = true;\n        this.contextViewProvider.layout();\n        this._skipLayout = false;\n    }\n    // List keyboard controller\n    // List exit - active - hide ContextView dropdown, reset selection, return focus to parent select\n    onEscape(e) {\n        dom.EventHelper.stop(e);\n        // Reset selection to value when opened\n        this.select(this._currentSelection);\n        this.hideSelectDropDown(true);\n    }\n    // List exit - active - hide ContextView dropdown, return focus to parent select, fire onDidSelect if change\n    onEnter(e) {\n        dom.EventHelper.stop(e);\n        // Only fire if selection change\n        if (this.selected !== this._currentSelection) {\n            this._currentSelection = this.selected;\n            this._onDidSelect.fire({\n                index: this.selectElement.selectedIndex,\n                selected: this.options[this.selected].text\n            });\n            if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n                this.selectElement.title = this.options[this.selected].text;\n            }\n        }\n        this.hideSelectDropDown(true);\n    }\n    // List navigation - have to handle a disabled option (jump over)\n    onDownArrow(e) {\n        if (this.selected < this.options.length - 1) {\n            dom.EventHelper.stop(e, true);\n            // Skip disabled options\n            const nextOptionDisabled = this.options[this.selected + 1].isDisabled;\n            if (nextOptionDisabled && this.options.length > this.selected + 2) {\n                this.selected += 2;\n            }\n            else if (nextOptionDisabled) {\n                return;\n            }\n            else {\n                this.selected++;\n            }\n            // Set focus/selection - only fire event when closing drop-down or on blur\n            this.select(this.selected);\n            this.selectList.setFocus([this.selected]);\n            this.selectList.reveal(this.selectList.getFocus()[0]);\n        }\n    }\n    onUpArrow(e) {\n        if (this.selected > 0) {\n            dom.EventHelper.stop(e, true);\n            // Skip disabled options\n            const previousOptionDisabled = this.options[this.selected - 1].isDisabled;\n            if (previousOptionDisabled && this.selected > 1) {\n                this.selected -= 2;\n            }\n            else {\n                this.selected--;\n            }\n            // Set focus/selection - only fire event when closing drop-down or on blur\n            this.select(this.selected);\n            this.selectList.setFocus([this.selected]);\n            this.selectList.reveal(this.selectList.getFocus()[0]);\n        }\n    }\n    onPageUp(e) {\n        dom.EventHelper.stop(e);\n        this.selectList.focusPreviousPage();\n        // Allow scrolling to settle\n        setTimeout(() => {\n            this.selected = this.selectList.getFocus()[0];\n            // Shift selection down if we land on a disabled option\n            if (this.options[this.selected].isDisabled && this.selected < this.options.length - 1) {\n                this.selected++;\n                this.selectList.setFocus([this.selected]);\n            }\n            this.selectList.reveal(this.selected);\n            this.select(this.selected);\n        }, 1);\n    }\n    onPageDown(e) {\n        dom.EventHelper.stop(e);\n        this.selectList.focusNextPage();\n        // Allow scrolling to settle\n        setTimeout(() => {\n            this.selected = this.selectList.getFocus()[0];\n            // Shift selection up if we land on a disabled option\n            if (this.options[this.selected].isDisabled && this.selected > 0) {\n                this.selected--;\n                this.selectList.setFocus([this.selected]);\n            }\n            this.selectList.reveal(this.selected);\n            this.select(this.selected);\n        }, 1);\n    }\n    onHome(e) {\n        dom.EventHelper.stop(e);\n        if (this.options.length < 2) {\n            return;\n        }\n        this.selected = 0;\n        if (this.options[this.selected].isDisabled && this.selected > 1) {\n            this.selected++;\n        }\n        this.selectList.setFocus([this.selected]);\n        this.selectList.reveal(this.selected);\n        this.select(this.selected);\n    }\n    onEnd(e) {\n        dom.EventHelper.stop(e);\n        if (this.options.length < 2) {\n            return;\n        }\n        this.selected = this.options.length - 1;\n        if (this.options[this.selected].isDisabled && this.selected > 1) {\n            this.selected--;\n        }\n        this.selectList.setFocus([this.selected]);\n        this.selectList.reveal(this.selected);\n        this.select(this.selected);\n    }\n    // Mimic option first character navigation of native select\n    onCharacter(e) {\n        const ch = KeyCodeUtils.toString(e.keyCode);\n        let optionIndex = -1;\n        for (let i = 0; i < this.options.length - 1; i++) {\n            optionIndex = (i + this.selected + 1) % this.options.length;\n            if (this.options[optionIndex].text.charAt(0).toUpperCase() === ch && !this.options[optionIndex].isDisabled) {\n                this.select(optionIndex);\n                this.selectList.setFocus([optionIndex]);\n                this.selectList.reveal(this.selectList.getFocus()[0]);\n                dom.EventHelper.stop(e);\n                break;\n            }\n        }\n    }\n    dispose() {\n        this.hideSelectDropDown(false);\n        super.dispose();\n    }\n}\nSelectBoxList.DEFAULT_DROPDOWN_MINIMUM_BOTTOM_MARGIN = 32;\nSelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN = 2;\nSelectBoxList.DEFAULT_MINIMUM_VISIBLE_OPTIONS = 3;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}