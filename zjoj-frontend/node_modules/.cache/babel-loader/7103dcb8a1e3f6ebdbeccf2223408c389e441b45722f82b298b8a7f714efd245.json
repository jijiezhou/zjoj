{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Assert from '../../../base/common/assert.js';\nimport * as Types from '../../../base/common/types.js';\nclass RegistryImpl {\n  constructor() {\n    this.data = new Map();\n  }\n  add(id, data) {\n    Assert.ok(Types.isString(id));\n    Assert.ok(Types.isObject(data));\n    Assert.ok(!this.data.has(id), 'There is already an extension with this id');\n    this.data.set(id, data);\n  }\n  as(id) {\n    return this.data.get(id) || null;\n  }\n}\nexport const Registry = new RegistryImpl();","map":{"version":3,"names":["Assert","Types","RegistryImpl","constructor","data","Map","add","id","ok","isString","isObject","has","set","as","get","Registry"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/platform/registry/common/platform.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Assert from '../../../base/common/assert.js';\nimport * as Types from '../../../base/common/types.js';\nclass RegistryImpl {\n    constructor() {\n        this.data = new Map();\n    }\n    add(id, data) {\n        Assert.ok(Types.isString(id));\n        Assert.ok(Types.isObject(data));\n        Assert.ok(!this.data.has(id), 'There is already an extension with this id');\n        this.data.set(id, data);\n    }\n    as(id) {\n        return this.data.get(id) || null;\n    }\n}\nexport const Registry = new RegistryImpl();\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,MAAM,MAAM,gCAAgC;AACxD,OAAO,KAAKC,KAAK,MAAM,+BAA+B;AACtD,MAAMC,YAAY,CAAC;EACfC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,IAAI,GAAG,IAAIC,GAAG,CAAC,CAAC;EACzB;EACAC,GAAGA,CAACC,EAAE,EAAEH,IAAI,EAAE;IACVJ,MAAM,CAACQ,EAAE,CAACP,KAAK,CAACQ,QAAQ,CAACF,EAAE,CAAC,CAAC;IAC7BP,MAAM,CAACQ,EAAE,CAACP,KAAK,CAACS,QAAQ,CAACN,IAAI,CAAC,CAAC;IAC/BJ,MAAM,CAACQ,EAAE,CAAC,CAAC,IAAI,CAACJ,IAAI,CAACO,GAAG,CAACJ,EAAE,CAAC,EAAE,4CAA4C,CAAC;IAC3E,IAAI,CAACH,IAAI,CAACQ,GAAG,CAACL,EAAE,EAAEH,IAAI,CAAC;EAC3B;EACAS,EAAEA,CAACN,EAAE,EAAE;IACH,OAAO,IAAI,CAACH,IAAI,CAACU,GAAG,CAACP,EAAE,CAAC,IAAI,IAAI;EACpC;AACJ;AACA,OAAO,MAAMQ,QAAQ,GAAG,IAAIb,YAAY,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}