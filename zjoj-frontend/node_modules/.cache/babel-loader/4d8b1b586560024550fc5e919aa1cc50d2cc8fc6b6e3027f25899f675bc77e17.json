{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { OutlineElement, OutlineGroup, OutlineModel } from '../../documentSymbols/browser/outlineModel.js';\nimport { createCancelablePromise, Delayer } from '../../../../base/common/async.js';\nimport { FoldingController, RangesLimitReporter } from '../../folding/browser/folding.js';\nimport { SyntaxRangeProvider } from '../../folding/browser/syntaxRangeProvider.js';\nimport { IndentRangeProvider } from '../../folding/browser/indentRangeProvider.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { StickyElement, StickyModel, StickyRange } from './stickyScrollElement.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nvar ModelProvider;\n(function (ModelProvider) {\n  ModelProvider[\"OUTLINE_MODEL\"] = \"outlineModel\";\n  ModelProvider[\"FOLDING_PROVIDER_MODEL\"] = \"foldingProviderModel\";\n  ModelProvider[\"INDENTATION_MODEL\"] = \"indentationModel\";\n})(ModelProvider || (ModelProvider = {}));\nvar Status;\n(function (Status) {\n  Status[Status[\"VALID\"] = 0] = \"VALID\";\n  Status[Status[\"INVALID\"] = 1] = \"INVALID\";\n  Status[Status[\"CANCELED\"] = 2] = \"CANCELED\";\n})(Status || (Status = {}));\nlet StickyModelProvider = class StickyModelProvider extends Disposable {\n  constructor(_editor, _languageConfigurationService, _languageFeaturesService, defaultModel) {\n    super();\n    this._editor = _editor;\n    this._languageConfigurationService = _languageConfigurationService;\n    this._languageFeaturesService = _languageFeaturesService;\n    this._modelProviders = [];\n    this._modelPromise = null;\n    this._updateScheduler = this._register(new Delayer(300));\n    this._updateOperation = this._register(new DisposableStore());\n    const stickyModelFromCandidateOutlineProvider = new StickyModelFromCandidateOutlineProvider(_languageFeaturesService);\n    const stickyModelFromSyntaxFoldingProvider = new StickyModelFromCandidateSyntaxFoldingProvider(this._editor, _languageFeaturesService);\n    const stickyModelFromIndentationFoldingProvider = new StickyModelFromCandidateIndentationFoldingProvider(this._editor, _languageConfigurationService);\n    switch (defaultModel) {\n      case ModelProvider.OUTLINE_MODEL:\n        this._modelProviders.push(stickyModelFromCandidateOutlineProvider);\n        this._modelProviders.push(stickyModelFromSyntaxFoldingProvider);\n        this._modelProviders.push(stickyModelFromIndentationFoldingProvider);\n        break;\n      case ModelProvider.FOLDING_PROVIDER_MODEL:\n        this._modelProviders.push(stickyModelFromSyntaxFoldingProvider);\n        this._modelProviders.push(stickyModelFromIndentationFoldingProvider);\n        break;\n      case ModelProvider.INDENTATION_MODEL:\n        this._modelProviders.push(stickyModelFromIndentationFoldingProvider);\n        break;\n    }\n  }\n  _cancelModelPromise() {\n    if (this._modelPromise) {\n      this._modelPromise.cancel();\n      this._modelPromise = null;\n    }\n  }\n  async update(textModel, textModelVersionId, token) {\n    this._updateOperation.clear();\n    this._updateOperation.add({\n      dispose: () => {\n        this._cancelModelPromise();\n        this._updateScheduler.cancel();\n      }\n    });\n    this._cancelModelPromise();\n    return await this._updateScheduler.trigger(async () => {\n      for (const modelProvider of this._modelProviders) {\n        const {\n          statusPromise,\n          modelPromise\n        } = modelProvider.computeStickyModel(textModel, textModelVersionId, token);\n        this._modelPromise = modelPromise;\n        const status = await statusPromise;\n        if (this._modelPromise !== modelPromise) {\n          return null;\n        }\n        switch (status) {\n          case Status.CANCELED:\n            this._updateOperation.clear();\n            return null;\n          case Status.VALID:\n            return modelProvider.stickyModel;\n        }\n      }\n      return null;\n    }).catch(error => {\n      onUnexpectedError(error);\n      return null;\n    });\n  }\n};\nStickyModelProvider = __decorate([__param(1, ILanguageConfigurationService), __param(2, ILanguageFeaturesService)], StickyModelProvider);\nexport { StickyModelProvider };\nclass StickyModelCandidateProvider {\n  constructor() {\n    this._stickyModel = null;\n  }\n  get stickyModel() {\n    return this._stickyModel;\n  }\n  _invalid() {\n    this._stickyModel = null;\n    return Status.INVALID;\n  }\n  computeStickyModel(textModel, modelVersionId, token) {\n    if (token.isCancellationRequested || !this.isProviderValid(textModel)) {\n      return {\n        statusPromise: this._invalid(),\n        modelPromise: null\n      };\n    }\n    const providerModelPromise = createCancelablePromise(token => this.createModelFromProvider(textModel, modelVersionId, token));\n    return {\n      statusPromise: providerModelPromise.then(providerModel => {\n        if (!this.isModelValid(providerModel)) {\n          return this._invalid();\n        }\n        if (token.isCancellationRequested) {\n          return Status.CANCELED;\n        }\n        this._stickyModel = this.createStickyModel(textModel, modelVersionId, token, providerModel);\n        return Status.VALID;\n      }).then(undefined, err => {\n        onUnexpectedError(err);\n        return Status.CANCELED;\n      }),\n      modelPromise: providerModelPromise\n    };\n  }\n  /**\n   * Method which checks whether the model returned by the provider is valid and can be used to compute a sticky model.\n   * This method by default returns true.\n   * @param model model returned by the provider\n   * @returns boolean indicating whether the model is valid\n   */\n  isModelValid(model) {\n    return true;\n  }\n  /**\n   * Method which checks whether the provider is valid before applying it to find the provider model.\n   * This method by default returns true.\n   * @param textModel text-model of the editor\n   * @returns boolean indicating whether the provider is valid\n   */\n  isProviderValid(textModel) {\n    return true;\n  }\n}\nlet StickyModelFromCandidateOutlineProvider = class StickyModelFromCandidateOutlineProvider extends StickyModelCandidateProvider {\n  constructor(_languageFeaturesService) {\n    super();\n    this._languageFeaturesService = _languageFeaturesService;\n  }\n  createModelFromProvider(textModel, modelVersionId, token) {\n    return OutlineModel.create(this._languageFeaturesService.documentSymbolProvider, textModel, token);\n  }\n  createStickyModel(textModel, modelVersionId, token, model) {\n    var _a;\n    const {\n      stickyOutlineElement,\n      providerID\n    } = this._stickyModelFromOutlineModel(model, (_a = this._stickyModel) === null || _a === void 0 ? void 0 : _a.outlineProviderId);\n    return new StickyModel(textModel.uri, modelVersionId, stickyOutlineElement, providerID);\n  }\n  isModelValid(model) {\n    return model && model.children.size > 0;\n  }\n  _stickyModelFromOutlineModel(outlineModel, preferredProvider) {\n    let outlineElements;\n    // When several possible outline providers\n    if (Iterable.first(outlineModel.children.values()) instanceof OutlineGroup) {\n      const provider = Iterable.find(outlineModel.children.values(), outlineGroupOfModel => outlineGroupOfModel.id === preferredProvider);\n      if (provider) {\n        outlineElements = provider.children;\n      } else {\n        let tempID = '';\n        let maxTotalSumOfRanges = -1;\n        let optimalOutlineGroup = undefined;\n        for (const [_key, outlineGroup] of outlineModel.children.entries()) {\n          const totalSumRanges = this._findSumOfRangesOfGroup(outlineGroup);\n          if (totalSumRanges > maxTotalSumOfRanges) {\n            optimalOutlineGroup = outlineGroup;\n            maxTotalSumOfRanges = totalSumRanges;\n            tempID = outlineGroup.id;\n          }\n        }\n        preferredProvider = tempID;\n        outlineElements = optimalOutlineGroup.children;\n      }\n    } else {\n      outlineElements = outlineModel.children;\n    }\n    const stickyChildren = [];\n    const outlineElementsArray = Array.from(outlineElements.values()).sort((element1, element2) => {\n      const range1 = new StickyRange(element1.symbol.range.startLineNumber, element1.symbol.range.endLineNumber);\n      const range2 = new StickyRange(element2.symbol.range.startLineNumber, element2.symbol.range.endLineNumber);\n      return this._comparator(range1, range2);\n    });\n    for (const outlineElement of outlineElementsArray) {\n      stickyChildren.push(this._stickyModelFromOutlineElement(outlineElement, outlineElement.symbol.selectionRange.startLineNumber));\n    }\n    const stickyOutlineElement = new StickyElement(undefined, stickyChildren, undefined);\n    return {\n      stickyOutlineElement: stickyOutlineElement,\n      providerID: preferredProvider\n    };\n  }\n  _stickyModelFromOutlineElement(outlineElement, previousStartLine) {\n    const children = [];\n    for (const child of outlineElement.children.values()) {\n      if (child.symbol.selectionRange.startLineNumber !== child.symbol.range.endLineNumber) {\n        if (child.symbol.selectionRange.startLineNumber !== previousStartLine) {\n          children.push(this._stickyModelFromOutlineElement(child, child.symbol.selectionRange.startLineNumber));\n        } else {\n          for (const subchild of child.children.values()) {\n            children.push(this._stickyModelFromOutlineElement(subchild, child.symbol.selectionRange.startLineNumber));\n          }\n        }\n      }\n    }\n    children.sort((child1, child2) => this._comparator(child1.range, child2.range));\n    const range = new StickyRange(outlineElement.symbol.selectionRange.startLineNumber, outlineElement.symbol.range.endLineNumber);\n    return new StickyElement(range, children, undefined);\n  }\n  _comparator(range1, range2) {\n    if (range1.startLineNumber !== range2.startLineNumber) {\n      return range1.startLineNumber - range2.startLineNumber;\n    } else {\n      return range2.endLineNumber - range1.endLineNumber;\n    }\n  }\n  _findSumOfRangesOfGroup(outline) {\n    let res = 0;\n    for (const child of outline.children.values()) {\n      res += this._findSumOfRangesOfGroup(child);\n    }\n    if (outline instanceof OutlineElement) {\n      return res + outline.symbol.range.endLineNumber - outline.symbol.selectionRange.startLineNumber;\n    } else {\n      return res;\n    }\n  }\n};\nStickyModelFromCandidateOutlineProvider = __decorate([__param(0, ILanguageFeaturesService)], StickyModelFromCandidateOutlineProvider);\nclass StickyModelFromCandidateFoldingProvider extends StickyModelCandidateProvider {\n  constructor(editor) {\n    super();\n    this._foldingLimitReporter = new RangesLimitReporter(editor);\n  }\n  createStickyModel(textModel, modelVersionId, token, model) {\n    const foldingElement = this._fromFoldingRegions(model);\n    return new StickyModel(textModel.uri, modelVersionId, foldingElement, undefined);\n  }\n  isModelValid(model) {\n    return model !== null;\n  }\n  _fromFoldingRegions(foldingRegions) {\n    const length = foldingRegions.length;\n    const orderedStickyElements = [];\n    // The root sticky outline element\n    const stickyOutlineElement = new StickyElement(undefined, [], undefined);\n    for (let i = 0; i < length; i++) {\n      // Finding the parent index of the current range\n      const parentIndex = foldingRegions.getParentIndex(i);\n      let parentNode;\n      if (parentIndex !== -1) {\n        // Access the reference of the parent node\n        parentNode = orderedStickyElements[parentIndex];\n      } else {\n        // In that case the parent node is the root node\n        parentNode = stickyOutlineElement;\n      }\n      const child = new StickyElement(new StickyRange(foldingRegions.getStartLineNumber(i), foldingRegions.getEndLineNumber(i) + 1), [], parentNode);\n      parentNode.children.push(child);\n      orderedStickyElements.push(child);\n    }\n    return stickyOutlineElement;\n  }\n}\nlet StickyModelFromCandidateIndentationFoldingProvider = class StickyModelFromCandidateIndentationFoldingProvider extends StickyModelFromCandidateFoldingProvider {\n  constructor(editor, _languageConfigurationService) {\n    super(editor);\n    this._languageConfigurationService = _languageConfigurationService;\n  }\n  createModelFromProvider(textModel, modelVersionId, token) {\n    const provider = new IndentRangeProvider(textModel, this._languageConfigurationService, this._foldingLimitReporter);\n    return provider.compute(token);\n  }\n};\nStickyModelFromCandidateIndentationFoldingProvider = __decorate([__param(1, ILanguageConfigurationService)], StickyModelFromCandidateIndentationFoldingProvider);\nlet StickyModelFromCandidateSyntaxFoldingProvider = class StickyModelFromCandidateSyntaxFoldingProvider extends StickyModelFromCandidateFoldingProvider {\n  constructor(editor, _languageFeaturesService) {\n    super(editor);\n    this._languageFeaturesService = _languageFeaturesService;\n  }\n  isProviderValid(textModel) {\n    const selectedProviders = FoldingController.getFoldingRangeProviders(this._languageFeaturesService, textModel);\n    return selectedProviders.length > 0;\n  }\n  createModelFromProvider(textModel, modelVersionId, token) {\n    const selectedProviders = FoldingController.getFoldingRangeProviders(this._languageFeaturesService, textModel);\n    const provider = new SyntaxRangeProvider(textModel, selectedProviders, () => this.createModelFromProvider(textModel, modelVersionId, token), this._foldingLimitReporter, undefined);\n    return provider.compute(token);\n  }\n};\nStickyModelFromCandidateSyntaxFoldingProvider = __decorate([__param(1, ILanguageFeaturesService)], StickyModelFromCandidateSyntaxFoldingProvider);","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","Disposable","DisposableStore","ILanguageFeaturesService","OutlineElement","OutlineGroup","OutlineModel","createCancelablePromise","Delayer","FoldingController","RangesLimitReporter","SyntaxRangeProvider","IndentRangeProvider","ILanguageConfigurationService","onUnexpectedError","StickyElement","StickyModel","StickyRange","Iterable","ModelProvider","Status","StickyModelProvider","constructor","_editor","_languageConfigurationService","_languageFeaturesService","defaultModel","_modelProviders","_modelPromise","_updateScheduler","_register","_updateOperation","stickyModelFromCandidateOutlineProvider","StickyModelFromCandidateOutlineProvider","stickyModelFromSyntaxFoldingProvider","StickyModelFromCandidateSyntaxFoldingProvider","stickyModelFromIndentationFoldingProvider","StickyModelFromCandidateIndentationFoldingProvider","OUTLINE_MODEL","push","FOLDING_PROVIDER_MODEL","INDENTATION_MODEL","_cancelModelPromise","cancel","update","textModel","textModelVersionId","token","clear","add","dispose","trigger","modelProvider","statusPromise","modelPromise","computeStickyModel","status","CANCELED","VALID","stickyModel","catch","error","StickyModelCandidateProvider","_stickyModel","_invalid","INVALID","modelVersionId","isCancellationRequested","isProviderValid","providerModelPromise","createModelFromProvider","then","providerModel","isModelValid","createStickyModel","undefined","err","model","create","documentSymbolProvider","_a","stickyOutlineElement","providerID","_stickyModelFromOutlineModel","outlineProviderId","uri","children","size","outlineModel","preferredProvider","outlineElements","first","values","provider","find","outlineGroupOfModel","id","tempID","maxTotalSumOfRanges","optimalOutlineGroup","_key","outlineGroup","entries","totalSumRanges","_findSumOfRangesOfGroup","stickyChildren","outlineElementsArray","Array","from","sort","element1","element2","range1","symbol","range","startLineNumber","endLineNumber","range2","_comparator","outlineElement","_stickyModelFromOutlineElement","selectionRange","previousStartLine","child","subchild","child1","child2","outline","res","StickyModelFromCandidateFoldingProvider","editor","_foldingLimitReporter","foldingElement","_fromFoldingRegions","foldingRegions","orderedStickyElements","parentIndex","getParentIndex","parentNode","getStartLineNumber","getEndLineNumber","compute","selectedProviders","getFoldingRangeProviders"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/stickyScroll/browser/stickyScrollModelProvider.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { OutlineElement, OutlineGroup, OutlineModel } from '../../documentSymbols/browser/outlineModel.js';\nimport { createCancelablePromise, Delayer } from '../../../../base/common/async.js';\nimport { FoldingController, RangesLimitReporter } from '../../folding/browser/folding.js';\nimport { SyntaxRangeProvider } from '../../folding/browser/syntaxRangeProvider.js';\nimport { IndentRangeProvider } from '../../folding/browser/indentRangeProvider.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { StickyElement, StickyModel, StickyRange } from './stickyScrollElement.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nvar ModelProvider;\n(function (ModelProvider) {\n    ModelProvider[\"OUTLINE_MODEL\"] = \"outlineModel\";\n    ModelProvider[\"FOLDING_PROVIDER_MODEL\"] = \"foldingProviderModel\";\n    ModelProvider[\"INDENTATION_MODEL\"] = \"indentationModel\";\n})(ModelProvider || (ModelProvider = {}));\nvar Status;\n(function (Status) {\n    Status[Status[\"VALID\"] = 0] = \"VALID\";\n    Status[Status[\"INVALID\"] = 1] = \"INVALID\";\n    Status[Status[\"CANCELED\"] = 2] = \"CANCELED\";\n})(Status || (Status = {}));\nlet StickyModelProvider = class StickyModelProvider extends Disposable {\n    constructor(_editor, _languageConfigurationService, _languageFeaturesService, defaultModel) {\n        super();\n        this._editor = _editor;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._modelProviders = [];\n        this._modelPromise = null;\n        this._updateScheduler = this._register(new Delayer(300));\n        this._updateOperation = this._register(new DisposableStore());\n        const stickyModelFromCandidateOutlineProvider = new StickyModelFromCandidateOutlineProvider(_languageFeaturesService);\n        const stickyModelFromSyntaxFoldingProvider = new StickyModelFromCandidateSyntaxFoldingProvider(this._editor, _languageFeaturesService);\n        const stickyModelFromIndentationFoldingProvider = new StickyModelFromCandidateIndentationFoldingProvider(this._editor, _languageConfigurationService);\n        switch (defaultModel) {\n            case ModelProvider.OUTLINE_MODEL:\n                this._modelProviders.push(stickyModelFromCandidateOutlineProvider);\n                this._modelProviders.push(stickyModelFromSyntaxFoldingProvider);\n                this._modelProviders.push(stickyModelFromIndentationFoldingProvider);\n                break;\n            case ModelProvider.FOLDING_PROVIDER_MODEL:\n                this._modelProviders.push(stickyModelFromSyntaxFoldingProvider);\n                this._modelProviders.push(stickyModelFromIndentationFoldingProvider);\n                break;\n            case ModelProvider.INDENTATION_MODEL:\n                this._modelProviders.push(stickyModelFromIndentationFoldingProvider);\n                break;\n        }\n    }\n    _cancelModelPromise() {\n        if (this._modelPromise) {\n            this._modelPromise.cancel();\n            this._modelPromise = null;\n        }\n    }\n    async update(textModel, textModelVersionId, token) {\n        this._updateOperation.clear();\n        this._updateOperation.add({\n            dispose: () => {\n                this._cancelModelPromise();\n                this._updateScheduler.cancel();\n            }\n        });\n        this._cancelModelPromise();\n        return await this._updateScheduler.trigger(async () => {\n            for (const modelProvider of this._modelProviders) {\n                const { statusPromise, modelPromise } = modelProvider.computeStickyModel(textModel, textModelVersionId, token);\n                this._modelPromise = modelPromise;\n                const status = await statusPromise;\n                if (this._modelPromise !== modelPromise) {\n                    return null;\n                }\n                switch (status) {\n                    case Status.CANCELED:\n                        this._updateOperation.clear();\n                        return null;\n                    case Status.VALID:\n                        return modelProvider.stickyModel;\n                }\n            }\n            return null;\n        }).catch((error) => {\n            onUnexpectedError(error);\n            return null;\n        });\n    }\n};\nStickyModelProvider = __decorate([\n    __param(1, ILanguageConfigurationService),\n    __param(2, ILanguageFeaturesService)\n], StickyModelProvider);\nexport { StickyModelProvider };\nclass StickyModelCandidateProvider {\n    constructor() {\n        this._stickyModel = null;\n    }\n    get stickyModel() {\n        return this._stickyModel;\n    }\n    _invalid() {\n        this._stickyModel = null;\n        return Status.INVALID;\n    }\n    computeStickyModel(textModel, modelVersionId, token) {\n        if (token.isCancellationRequested || !this.isProviderValid(textModel)) {\n            return { statusPromise: this._invalid(), modelPromise: null };\n        }\n        const providerModelPromise = createCancelablePromise(token => this.createModelFromProvider(textModel, modelVersionId, token));\n        return {\n            statusPromise: providerModelPromise.then(providerModel => {\n                if (!this.isModelValid(providerModel)) {\n                    return this._invalid();\n                }\n                if (token.isCancellationRequested) {\n                    return Status.CANCELED;\n                }\n                this._stickyModel = this.createStickyModel(textModel, modelVersionId, token, providerModel);\n                return Status.VALID;\n            }).then(undefined, (err) => {\n                onUnexpectedError(err);\n                return Status.CANCELED;\n            }),\n            modelPromise: providerModelPromise\n        };\n    }\n    /**\n     * Method which checks whether the model returned by the provider is valid and can be used to compute a sticky model.\n     * This method by default returns true.\n     * @param model model returned by the provider\n     * @returns boolean indicating whether the model is valid\n     */\n    isModelValid(model) {\n        return true;\n    }\n    /**\n     * Method which checks whether the provider is valid before applying it to find the provider model.\n     * This method by default returns true.\n     * @param textModel text-model of the editor\n     * @returns boolean indicating whether the provider is valid\n     */\n    isProviderValid(textModel) {\n        return true;\n    }\n}\nlet StickyModelFromCandidateOutlineProvider = class StickyModelFromCandidateOutlineProvider extends StickyModelCandidateProvider {\n    constructor(_languageFeaturesService) {\n        super();\n        this._languageFeaturesService = _languageFeaturesService;\n    }\n    createModelFromProvider(textModel, modelVersionId, token) {\n        return OutlineModel.create(this._languageFeaturesService.documentSymbolProvider, textModel, token);\n    }\n    createStickyModel(textModel, modelVersionId, token, model) {\n        var _a;\n        const { stickyOutlineElement, providerID } = this._stickyModelFromOutlineModel(model, (_a = this._stickyModel) === null || _a === void 0 ? void 0 : _a.outlineProviderId);\n        return new StickyModel(textModel.uri, modelVersionId, stickyOutlineElement, providerID);\n    }\n    isModelValid(model) {\n        return model && model.children.size > 0;\n    }\n    _stickyModelFromOutlineModel(outlineModel, preferredProvider) {\n        let outlineElements;\n        // When several possible outline providers\n        if (Iterable.first(outlineModel.children.values()) instanceof OutlineGroup) {\n            const provider = Iterable.find(outlineModel.children.values(), outlineGroupOfModel => outlineGroupOfModel.id === preferredProvider);\n            if (provider) {\n                outlineElements = provider.children;\n            }\n            else {\n                let tempID = '';\n                let maxTotalSumOfRanges = -1;\n                let optimalOutlineGroup = undefined;\n                for (const [_key, outlineGroup] of outlineModel.children.entries()) {\n                    const totalSumRanges = this._findSumOfRangesOfGroup(outlineGroup);\n                    if (totalSumRanges > maxTotalSumOfRanges) {\n                        optimalOutlineGroup = outlineGroup;\n                        maxTotalSumOfRanges = totalSumRanges;\n                        tempID = outlineGroup.id;\n                    }\n                }\n                preferredProvider = tempID;\n                outlineElements = optimalOutlineGroup.children;\n            }\n        }\n        else {\n            outlineElements = outlineModel.children;\n        }\n        const stickyChildren = [];\n        const outlineElementsArray = Array.from(outlineElements.values()).sort((element1, element2) => {\n            const range1 = new StickyRange(element1.symbol.range.startLineNumber, element1.symbol.range.endLineNumber);\n            const range2 = new StickyRange(element2.symbol.range.startLineNumber, element2.symbol.range.endLineNumber);\n            return this._comparator(range1, range2);\n        });\n        for (const outlineElement of outlineElementsArray) {\n            stickyChildren.push(this._stickyModelFromOutlineElement(outlineElement, outlineElement.symbol.selectionRange.startLineNumber));\n        }\n        const stickyOutlineElement = new StickyElement(undefined, stickyChildren, undefined);\n        return {\n            stickyOutlineElement: stickyOutlineElement,\n            providerID: preferredProvider\n        };\n    }\n    _stickyModelFromOutlineElement(outlineElement, previousStartLine) {\n        const children = [];\n        for (const child of outlineElement.children.values()) {\n            if (child.symbol.selectionRange.startLineNumber !== child.symbol.range.endLineNumber) {\n                if (child.symbol.selectionRange.startLineNumber !== previousStartLine) {\n                    children.push(this._stickyModelFromOutlineElement(child, child.symbol.selectionRange.startLineNumber));\n                }\n                else {\n                    for (const subchild of child.children.values()) {\n                        children.push(this._stickyModelFromOutlineElement(subchild, child.symbol.selectionRange.startLineNumber));\n                    }\n                }\n            }\n        }\n        children.sort((child1, child2) => this._comparator(child1.range, child2.range));\n        const range = new StickyRange(outlineElement.symbol.selectionRange.startLineNumber, outlineElement.symbol.range.endLineNumber);\n        return new StickyElement(range, children, undefined);\n    }\n    _comparator(range1, range2) {\n        if (range1.startLineNumber !== range2.startLineNumber) {\n            return range1.startLineNumber - range2.startLineNumber;\n        }\n        else {\n            return range2.endLineNumber - range1.endLineNumber;\n        }\n    }\n    _findSumOfRangesOfGroup(outline) {\n        let res = 0;\n        for (const child of outline.children.values()) {\n            res += this._findSumOfRangesOfGroup(child);\n        }\n        if (outline instanceof OutlineElement) {\n            return res + outline.symbol.range.endLineNumber - outline.symbol.selectionRange.startLineNumber;\n        }\n        else {\n            return res;\n        }\n    }\n};\nStickyModelFromCandidateOutlineProvider = __decorate([\n    __param(0, ILanguageFeaturesService)\n], StickyModelFromCandidateOutlineProvider);\nclass StickyModelFromCandidateFoldingProvider extends StickyModelCandidateProvider {\n    constructor(editor) {\n        super();\n        this._foldingLimitReporter = new RangesLimitReporter(editor);\n    }\n    createStickyModel(textModel, modelVersionId, token, model) {\n        const foldingElement = this._fromFoldingRegions(model);\n        return new StickyModel(textModel.uri, modelVersionId, foldingElement, undefined);\n    }\n    isModelValid(model) {\n        return model !== null;\n    }\n    _fromFoldingRegions(foldingRegions) {\n        const length = foldingRegions.length;\n        const orderedStickyElements = [];\n        // The root sticky outline element\n        const stickyOutlineElement = new StickyElement(undefined, [], undefined);\n        for (let i = 0; i < length; i++) {\n            // Finding the parent index of the current range\n            const parentIndex = foldingRegions.getParentIndex(i);\n            let parentNode;\n            if (parentIndex !== -1) {\n                // Access the reference of the parent node\n                parentNode = orderedStickyElements[parentIndex];\n            }\n            else {\n                // In that case the parent node is the root node\n                parentNode = stickyOutlineElement;\n            }\n            const child = new StickyElement(new StickyRange(foldingRegions.getStartLineNumber(i), foldingRegions.getEndLineNumber(i) + 1), [], parentNode);\n            parentNode.children.push(child);\n            orderedStickyElements.push(child);\n        }\n        return stickyOutlineElement;\n    }\n}\nlet StickyModelFromCandidateIndentationFoldingProvider = class StickyModelFromCandidateIndentationFoldingProvider extends StickyModelFromCandidateFoldingProvider {\n    constructor(editor, _languageConfigurationService) {\n        super(editor);\n        this._languageConfigurationService = _languageConfigurationService;\n    }\n    createModelFromProvider(textModel, modelVersionId, token) {\n        const provider = new IndentRangeProvider(textModel, this._languageConfigurationService, this._foldingLimitReporter);\n        return provider.compute(token);\n    }\n};\nStickyModelFromCandidateIndentationFoldingProvider = __decorate([\n    __param(1, ILanguageConfigurationService)\n], StickyModelFromCandidateIndentationFoldingProvider);\nlet StickyModelFromCandidateSyntaxFoldingProvider = class StickyModelFromCandidateSyntaxFoldingProvider extends StickyModelFromCandidateFoldingProvider {\n    constructor(editor, _languageFeaturesService) {\n        super(editor);\n        this._languageFeaturesService = _languageFeaturesService;\n    }\n    isProviderValid(textModel) {\n        const selectedProviders = FoldingController.getFoldingRangeProviders(this._languageFeaturesService, textModel);\n        return selectedProviders.length > 0;\n    }\n    createModelFromProvider(textModel, modelVersionId, token) {\n        const selectedProviders = FoldingController.getFoldingRangeProviders(this._languageFeaturesService, textModel);\n        const provider = new SyntaxRangeProvider(textModel, selectedProviders, () => this.createModelFromProvider(textModel, modelVersionId, token), this._foldingLimitReporter, undefined);\n        return provider.compute(token);\n    }\n};\nStickyModelFromCandidateSyntaxFoldingProvider = __decorate([\n    __param(1, ILanguageFeaturesService)\n], StickyModelFromCandidateSyntaxFoldingProvider);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}