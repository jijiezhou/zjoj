{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.45.0(5e5af013f8d295555a7210df0d5f2cea0bf5dd56)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/sb/sb.ts\nvar conf = {\n  comments: {\n    lineComment: \"'\"\n  },\n  brackets: [[\"(\", \")\"], [\"[\", \"]\"], [\"If\", \"EndIf\"], [\"While\", \"EndWhile\"], [\"For\", \"EndFor\"], [\"Sub\", \"EndSub\"]],\n  autoClosingPairs: [{\n    open: '\"',\n    close: '\"',\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: \"(\",\n    close: \")\",\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: \"[\",\n    close: \"]\",\n    notIn: [\"string\", \"comment\"]\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".sb\",\n  ignoreCase: true,\n  brackets: [{\n    token: \"delimiter.array\",\n    open: \"[\",\n    close: \"]\"\n  }, {\n    token: \"delimiter.parenthesis\",\n    open: \"(\",\n    close: \")\"\n  }, {\n    token: \"keyword.tag-if\",\n    open: \"If\",\n    close: \"EndIf\"\n  }, {\n    token: \"keyword.tag-while\",\n    open: \"While\",\n    close: \"EndWhile\"\n  }, {\n    token: \"keyword.tag-for\",\n    open: \"For\",\n    close: \"EndFor\"\n  }, {\n    token: \"keyword.tag-sub\",\n    open: \"Sub\",\n    close: \"EndSub\"\n  }],\n  keywords: [\"Else\", \"ElseIf\", \"EndFor\", \"EndIf\", \"EndSub\", \"EndWhile\", \"For\", \"Goto\", \"If\", \"Step\", \"Sub\", \"Then\", \"To\", \"While\"],\n  tagwords: [\"If\", \"Sub\", \"While\", \"For\"],\n  operators: [\">\", \"<\", \"<>\", \"<=\", \">=\", \"And\", \"Or\", \"+\", \"-\", \"*\", \"/\", \"=\"],\n  identifier: /[a-zA-Z_][\\w]*/,\n  symbols: /[=><:+\\-*\\/%\\.,]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [{\n      include: \"@whitespace\"\n    }, [/(@identifier)(?=[.])/, \"type\"], [/@identifier/, {\n      cases: {\n        \"@keywords\": {\n          token: \"keyword.$0\"\n        },\n        \"@operators\": \"operator\",\n        \"@default\": \"variable.name\"\n      }\n    }], [/([.])(@identifier)/, {\n      cases: {\n        $2: [\"delimiter\", \"type.member\"],\n        \"@default\": \"\"\n      }\n    }], [/\\d*\\.\\d+/, \"number.float\"], [/\\d+/, \"number\"], [/[()\\[\\]]/, \"@brackets\"], [/@symbols/, {\n      cases: {\n        \"@operators\": \"operator\",\n        \"@default\": \"delimiter\"\n      }\n    }], [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"/, \"string\", \"@string\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/(\\').*$/, \"comment\"]],\n    string: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"C?/, \"string\", \"@pop\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","tagwords","operators","identifier","symbols","escapes","tokenizer","root","include","cases","$2","whitespace","string"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/basic-languages/sb/sb.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.45.0(5e5af013f8d295555a7210df0d5f2cea0bf5dd56)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/sb/sb.ts\nvar conf = {\n  comments: {\n    lineComment: \"'\"\n  },\n  brackets: [\n    [\"(\", \")\"],\n    [\"[\", \"]\"],\n    [\"If\", \"EndIf\"],\n    [\"While\", \"EndWhile\"],\n    [\"For\", \"EndFor\"],\n    [\"Sub\", \"EndSub\"]\n  ],\n  autoClosingPairs: [\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] },\n    { open: \"(\", close: \")\", notIn: [\"string\", \"comment\"] },\n    { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\"] }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".sb\",\n  ignoreCase: true,\n  brackets: [\n    { token: \"delimiter.array\", open: \"[\", close: \"]\" },\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" },\n    { token: \"keyword.tag-if\", open: \"If\", close: \"EndIf\" },\n    { token: \"keyword.tag-while\", open: \"While\", close: \"EndWhile\" },\n    { token: \"keyword.tag-for\", open: \"For\", close: \"EndFor\" },\n    { token: \"keyword.tag-sub\", open: \"Sub\", close: \"EndSub\" }\n  ],\n  keywords: [\n    \"Else\",\n    \"ElseIf\",\n    \"EndFor\",\n    \"EndIf\",\n    \"EndSub\",\n    \"EndWhile\",\n    \"For\",\n    \"Goto\",\n    \"If\",\n    \"Step\",\n    \"Sub\",\n    \"Then\",\n    \"To\",\n    \"While\"\n  ],\n  tagwords: [\"If\", \"Sub\", \"While\", \"For\"],\n  operators: [\">\", \"<\", \"<>\", \"<=\", \">=\", \"And\", \"Or\", \"+\", \"-\", \"*\", \"/\", \"=\"],\n  identifier: /[a-zA-Z_][\\w]*/,\n  symbols: /[=><:+\\-*\\/%\\.,]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      [/(@identifier)(?=[.])/, \"type\"],\n      [\n        /@identifier/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@operators\": \"operator\",\n            \"@default\": \"variable.name\"\n          }\n        }\n      ],\n      [\n        /([.])(@identifier)/,\n        {\n          cases: {\n            $2: [\"delimiter\", \"type.member\"],\n            \"@default\": \"\"\n          }\n        }\n      ],\n      [/\\d*\\.\\d+/, \"number.float\"],\n      [/\\d+/, \"number\"],\n      [/[()\\[\\]]/, \"@brackets\"],\n      [\n        /@symbols/,\n        {\n          cases: {\n            \"@operators\": \"operator\",\n            \"@default\": \"delimiter\"\n          }\n        }\n      ],\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n      [/\"/, \"string\", \"@string\"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/(\\').*$/, \"comment\"]\n    ],\n    string: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"C?/, \"string\", \"@pop\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}