{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.45.0(5e5af013f8d295555a7210df0d5f2cea0bf5dd56)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/cpp/cpp.contribution.ts\nimport { registerLanguage } from \"../_.contribution.js\";\nregisterLanguage({\n  id: \"c\",\n  extensions: [\".c\", \".h\"],\n  aliases: [\"C\", \"c\"],\n  loader: () => {\n    if (false) {\n      return new Promise((resolve, reject) => {\n        __require([\"vs/basic-languages/cpp/cpp\"], resolve, reject);\n      });\n    } else {\n      return import(\"./cpp.js\");\n    }\n  }\n});\nregisterLanguage({\n  id: \"cpp\",\n  extensions: [\".cpp\", \".cc\", \".cxx\", \".hpp\", \".hh\", \".hxx\"],\n  aliases: [\"C++\", \"Cpp\", \"cpp\"],\n  loader: () => {\n    if (false) {\n      return new Promise((resolve, reject) => {\n        __require([\"vs/basic-languages/cpp/cpp\"], resolve, reject);\n      });\n    } else {\n      return import(\"./cpp.js\");\n    }\n  }\n});","map":{"version":3,"names":["registerLanguage","id","extensions","aliases","loader","Promise","resolve","reject","__require"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/basic-languages/cpp/cpp.contribution.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.45.0(5e5af013f8d295555a7210df0d5f2cea0bf5dd56)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/cpp/cpp.contribution.ts\nimport { registerLanguage } from \"../_.contribution.js\";\nregisterLanguage({\n  id: \"c\",\n  extensions: [\".c\", \".h\"],\n  aliases: [\"C\", \"c\"],\n  loader: () => {\n    if (false) {\n      return new Promise((resolve, reject) => {\n        __require([\"vs/basic-languages/cpp/cpp\"], resolve, reject);\n      });\n    } else {\n      return import(\"./cpp.js\");\n    }\n  }\n});\nregisterLanguage({\n  id: \"cpp\",\n  extensions: [\".cpp\", \".cc\", \".cxx\", \".hpp\", \".hh\", \".hxx\"],\n  aliases: [\"C++\", \"Cpp\", \"cpp\"],\n  loader: () => {\n    if (false) {\n      return new Promise((resolve, reject) => {\n        __require([\"vs/basic-languages/cpp/cpp\"], resolve, reject);\n      });\n    } else {\n      return import(\"./cpp.js\");\n    }\n  }\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,gBAAgB,QAAQ,sBAAsB;AACvDA,gBAAgB,CAAC;EACfC,EAAE,EAAE,GAAG;EACPC,UAAU,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;EACxBC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACnBC,MAAM,EAAEA,CAAA,KAAM;IACZ,IAAI,KAAK,EAAE;MACT,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtCC,SAAS,CAAC,CAAC,4BAA4B,CAAC,EAAEF,OAAO,EAAEC,MAAM,CAAC;MAC5D,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,OAAO,MAAM,CAAC,UAAU,CAAC;IAC3B;EACF;AACF,CAAC,CAAC;AACFP,gBAAgB,CAAC;EACfC,EAAE,EAAE,KAAK;EACTC,UAAU,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC;EAC1DC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EAC9BC,MAAM,EAAEA,CAAA,KAAM;IACZ,IAAI,KAAK,EAAE;MACT,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtCC,SAAS,CAAC,CAAC,4BAA4B,CAAC,EAAEF,OAAO,EAAEC,MAAM,CAAC;MAC5D,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,OAAO,MAAM,CAAC,UAAU,CAAC;IAC3B;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}