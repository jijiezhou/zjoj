{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport './blockDecorations.css';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class BlockDecorations extends ViewPart {\n  constructor(context) {\n    super(context);\n    this.blocks = [];\n    this.contentWidth = -1;\n    this.contentLeft = 0;\n    this.domNode = createFastDomNode(document.createElement('div'));\n    this.domNode.setAttribute('role', 'presentation');\n    this.domNode.setAttribute('aria-hidden', 'true');\n    this.domNode.setClassName('blockDecorations-container');\n    this.update();\n  }\n  update() {\n    let didChange = false;\n    const options = this._context.configuration.options;\n    const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n    const newContentWidth = layoutInfo.contentWidth - layoutInfo.verticalScrollbarWidth;\n    if (this.contentWidth !== newContentWidth) {\n      this.contentWidth = newContentWidth;\n      didChange = true;\n    }\n    const newContentLeft = layoutInfo.contentLeft;\n    if (this.contentLeft !== newContentLeft) {\n      this.contentLeft = newContentLeft;\n      didChange = true;\n    }\n    return didChange;\n  }\n  dispose() {\n    super.dispose();\n  }\n  // --- begin event handlers\n  onConfigurationChanged(e) {\n    return this.update();\n  }\n  onScrollChanged(e) {\n    return e.scrollTopChanged || e.scrollLeftChanged;\n  }\n  onDecorationsChanged(e) {\n    return true;\n  }\n  onZonesChanged(e) {\n    return true;\n  }\n  // --- end event handlers\n  prepareRender(ctx) {\n    // Nothing to read\n  }\n  render(ctx) {\n    var _a;\n    let count = 0;\n    const decorations = ctx.getDecorationsInViewport();\n    for (const decoration of decorations) {\n      if (!decoration.options.blockClassName) {\n        continue;\n      }\n      let block = this.blocks[count];\n      if (!block) {\n        block = this.blocks[count] = createFastDomNode(document.createElement('div'));\n        this.domNode.appendChild(block);\n      }\n      let top;\n      let bottom;\n      if (decoration.options.blockIsAfterEnd) {\n        // range must be empty\n        top = ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, false);\n        bottom = ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, true);\n      } else {\n        top = ctx.getVerticalOffsetForLineNumber(decoration.range.startLineNumber, true);\n        bottom = decoration.range.isEmpty() && !decoration.options.blockDoesNotCollapse ? ctx.getVerticalOffsetForLineNumber(decoration.range.startLineNumber, false) : ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, true);\n      }\n      const [paddingTop, paddingRight, paddingBottom, paddingLeft] = (_a = decoration.options.blockPadding) !== null && _a !== void 0 ? _a : [0, 0, 0, 0];\n      block.setClassName('blockDecorations-block ' + decoration.options.blockClassName);\n      block.setLeft(this.contentLeft - paddingLeft);\n      block.setWidth(this.contentWidth + paddingLeft + paddingRight);\n      block.setTop(top - ctx.scrollTop - paddingTop);\n      block.setHeight(bottom - top + paddingTop + paddingBottom);\n      count++;\n    }\n    for (let i = count; i < this.blocks.length; i++) {\n      this.blocks[i].domNode.remove();\n    }\n    this.blocks.length = count;\n  }\n}","map":{"version":3,"names":["createFastDomNode","ViewPart","BlockDecorations","constructor","context","blocks","contentWidth","contentLeft","domNode","document","createElement","setAttribute","setClassName","update","didChange","options","_context","configuration","layoutInfo","get","newContentWidth","verticalScrollbarWidth","newContentLeft","dispose","onConfigurationChanged","e","onScrollChanged","scrollTopChanged","scrollLeftChanged","onDecorationsChanged","onZonesChanged","prepareRender","ctx","render","_a","count","decorations","getDecorationsInViewport","decoration","blockClassName","block","appendChild","top","bottom","blockIsAfterEnd","getVerticalOffsetAfterLineNumber","range","endLineNumber","getVerticalOffsetForLineNumber","startLineNumber","isEmpty","blockDoesNotCollapse","paddingTop","paddingRight","paddingBottom","paddingLeft","blockPadding","setLeft","setWidth","setTop","scrollTop","setHeight","i","length","remove"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/blockDecorations/blockDecorations.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport './blockDecorations.css';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class BlockDecorations extends ViewPart {\n    constructor(context) {\n        super(context);\n        this.blocks = [];\n        this.contentWidth = -1;\n        this.contentLeft = 0;\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this.domNode.setClassName('blockDecorations-container');\n        this.update();\n    }\n    update() {\n        let didChange = false;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        const newContentWidth = layoutInfo.contentWidth - layoutInfo.verticalScrollbarWidth;\n        if (this.contentWidth !== newContentWidth) {\n            this.contentWidth = newContentWidth;\n            didChange = true;\n        }\n        const newContentLeft = layoutInfo.contentLeft;\n        if (this.contentLeft !== newContentLeft) {\n            this.contentLeft = newContentLeft;\n            didChange = true;\n        }\n        return didChange;\n    }\n    dispose() {\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        return this.update();\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged || e.scrollLeftChanged;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        var _a;\n        let count = 0;\n        const decorations = ctx.getDecorationsInViewport();\n        for (const decoration of decorations) {\n            if (!decoration.options.blockClassName) {\n                continue;\n            }\n            let block = this.blocks[count];\n            if (!block) {\n                block = this.blocks[count] = createFastDomNode(document.createElement('div'));\n                this.domNode.appendChild(block);\n            }\n            let top;\n            let bottom;\n            if (decoration.options.blockIsAfterEnd) {\n                // range must be empty\n                top = ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, false);\n                bottom = ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, true);\n            }\n            else {\n                top = ctx.getVerticalOffsetForLineNumber(decoration.range.startLineNumber, true);\n                bottom = decoration.range.isEmpty() && !decoration.options.blockDoesNotCollapse\n                    ? ctx.getVerticalOffsetForLineNumber(decoration.range.startLineNumber, false)\n                    : ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, true);\n            }\n            const [paddingTop, paddingRight, paddingBottom, paddingLeft] = (_a = decoration.options.blockPadding) !== null && _a !== void 0 ? _a : [0, 0, 0, 0];\n            block.setClassName('blockDecorations-block ' + decoration.options.blockClassName);\n            block.setLeft(this.contentLeft - paddingLeft);\n            block.setWidth(this.contentWidth + paddingLeft + paddingRight);\n            block.setTop(top - ctx.scrollTop - paddingTop);\n            block.setHeight(bottom - top + paddingTop + paddingBottom);\n            count++;\n        }\n        for (let i = count; i < this.blocks.length; i++) {\n            this.blocks[i].domNode.remove();\n        }\n        this.blocks.length = count;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}