{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar SuggestMemoryService_1;\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { TernarySearchTree } from '../../../../base/common/ternarySearchTree.js';\nimport { CompletionItemKinds } from '../../../common/languages.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IStorageService, WillSaveStateReason } from '../../../../platform/storage/common/storage.js';\nexport class Memory {\n  constructor(name) {\n    this.name = name;\n  }\n  select(model, pos, items) {\n    if (items.length === 0) {\n      return 0;\n    }\n    const topScore = items[0].score[0];\n    for (let i = 0; i < items.length; i++) {\n      const {\n        score,\n        completion: suggestion\n      } = items[i];\n      if (score[0] !== topScore) {\n        // stop when leaving the group of top matches\n        break;\n      }\n      if (suggestion.preselect) {\n        // stop when seeing an auto-select-item\n        return i;\n      }\n    }\n    return 0;\n  }\n}\nexport class NoMemory extends Memory {\n  constructor() {\n    super('first');\n  }\n  memorize(model, pos, item) {\n    // no-op\n  }\n  toJSON() {\n    return undefined;\n  }\n  fromJSON() {\n    //\n  }\n}\nexport class LRUMemory extends Memory {\n  constructor() {\n    super('recentlyUsed');\n    this._cache = new LRUCache(300, 0.66);\n    this._seq = 0;\n  }\n  memorize(model, pos, item) {\n    const key = `${model.getLanguageId()}/${item.textLabel}`;\n    this._cache.set(key, {\n      touch: this._seq++,\n      type: item.completion.kind,\n      insertText: item.completion.insertText\n    });\n  }\n  select(model, pos, items) {\n    if (items.length === 0) {\n      return 0;\n    }\n    const lineSuffix = model.getLineContent(pos.lineNumber).substr(pos.column - 10, pos.column - 1);\n    if (/\\s$/.test(lineSuffix)) {\n      return super.select(model, pos, items);\n    }\n    const topScore = items[0].score[0];\n    let indexPreselect = -1;\n    let indexRecency = -1;\n    let seq = -1;\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].score[0] !== topScore) {\n        // consider only top items\n        break;\n      }\n      const key = `${model.getLanguageId()}/${items[i].textLabel}`;\n      const item = this._cache.peek(key);\n      if (item && item.touch > seq && item.type === items[i].completion.kind && item.insertText === items[i].completion.insertText) {\n        seq = item.touch;\n        indexRecency = i;\n      }\n      if (items[i].completion.preselect && indexPreselect === -1) {\n        // stop when seeing an auto-select-item\n        return indexPreselect = i;\n      }\n    }\n    if (indexRecency !== -1) {\n      return indexRecency;\n    } else if (indexPreselect !== -1) {\n      return indexPreselect;\n    } else {\n      return 0;\n    }\n  }\n  toJSON() {\n    return this._cache.toJSON();\n  }\n  fromJSON(data) {\n    this._cache.clear();\n    const seq = 0;\n    for (const [key, value] of data) {\n      value.touch = seq;\n      value.type = typeof value.type === 'number' ? value.type : CompletionItemKinds.fromString(value.type);\n      this._cache.set(key, value);\n    }\n    this._seq = this._cache.size;\n  }\n}\nexport class PrefixMemory extends Memory {\n  constructor() {\n    super('recentlyUsedByPrefix');\n    this._trie = TernarySearchTree.forStrings();\n    this._seq = 0;\n  }\n  memorize(model, pos, item) {\n    const {\n      word\n    } = model.getWordUntilPosition(pos);\n    const key = `${model.getLanguageId()}/${word}`;\n    this._trie.set(key, {\n      type: item.completion.kind,\n      insertText: item.completion.insertText,\n      touch: this._seq++\n    });\n  }\n  select(model, pos, items) {\n    const {\n      word\n    } = model.getWordUntilPosition(pos);\n    if (!word) {\n      return super.select(model, pos, items);\n    }\n    const key = `${model.getLanguageId()}/${word}`;\n    let item = this._trie.get(key);\n    if (!item) {\n      item = this._trie.findSubstr(key);\n    }\n    if (item) {\n      for (let i = 0; i < items.length; i++) {\n        const {\n          kind,\n          insertText\n        } = items[i].completion;\n        if (kind === item.type && insertText === item.insertText) {\n          return i;\n        }\n      }\n    }\n    return super.select(model, pos, items);\n  }\n  toJSON() {\n    const entries = [];\n    this._trie.forEach((value, key) => entries.push([key, value]));\n    // sort by last recently used (touch), then\n    // take the top 200 item and normalize their\n    // touch\n    entries.sort((a, b) => -(a[1].touch - b[1].touch)).forEach((value, i) => value[1].touch = i);\n    return entries.slice(0, 200);\n  }\n  fromJSON(data) {\n    this._trie.clear();\n    if (data.length > 0) {\n      this._seq = data[0][1].touch + 1;\n      for (const [key, value] of data) {\n        value.type = typeof value.type === 'number' ? value.type : CompletionItemKinds.fromString(value.type);\n        this._trie.set(key, value);\n      }\n    }\n  }\n}\nlet SuggestMemoryService = SuggestMemoryService_1 = class SuggestMemoryService {\n  constructor(_storageService, _configService) {\n    this._storageService = _storageService;\n    this._configService = _configService;\n    this._disposables = new DisposableStore();\n    this._persistSoon = new RunOnceScheduler(() => this._saveState(), 500);\n    this._disposables.add(_storageService.onWillSaveState(e => {\n      if (e.reason === WillSaveStateReason.SHUTDOWN) {\n        this._saveState();\n      }\n    }));\n  }\n  dispose() {\n    this._disposables.dispose();\n    this._persistSoon.dispose();\n  }\n  memorize(model, pos, item) {\n    this._withStrategy(model, pos).memorize(model, pos, item);\n    this._persistSoon.schedule();\n  }\n  select(model, pos, items) {\n    return this._withStrategy(model, pos).select(model, pos, items);\n  }\n  _withStrategy(model, pos) {\n    var _a;\n    const mode = this._configService.getValue('editor.suggestSelection', {\n      overrideIdentifier: model.getLanguageIdAtPosition(pos.lineNumber, pos.column),\n      resource: model.uri\n    });\n    if (((_a = this._strategy) === null || _a === void 0 ? void 0 : _a.name) !== mode) {\n      this._saveState();\n      const ctor = SuggestMemoryService_1._strategyCtors.get(mode) || NoMemory;\n      this._strategy = new ctor();\n      try {\n        const share = this._configService.getValue('editor.suggest.shareSuggestSelections');\n        const scope = share ? 0 /* StorageScope.PROFILE */ : 1 /* StorageScope.WORKSPACE */;\n        const raw = this._storageService.get(`${SuggestMemoryService_1._storagePrefix}/${mode}`, scope);\n        if (raw) {\n          this._strategy.fromJSON(JSON.parse(raw));\n        }\n      } catch (e) {\n        // things can go wrong with JSON...\n      }\n    }\n    return this._strategy;\n  }\n  _saveState() {\n    if (this._strategy) {\n      const share = this._configService.getValue('editor.suggest.shareSuggestSelections');\n      const scope = share ? 0 /* StorageScope.PROFILE */ : 1 /* StorageScope.WORKSPACE */;\n      const raw = JSON.stringify(this._strategy);\n      this._storageService.store(`${SuggestMemoryService_1._storagePrefix}/${this._strategy.name}`, raw, scope, 1 /* StorageTarget.MACHINE */);\n    }\n  }\n};\nSuggestMemoryService._strategyCtors = new Map([['recentlyUsedByPrefix', PrefixMemory], ['recentlyUsed', LRUMemory], ['first', NoMemory]]);\nSuggestMemoryService._storagePrefix = 'suggest/memories';\nSuggestMemoryService = SuggestMemoryService_1 = __decorate([__param(0, IStorageService), __param(1, IConfigurationService)], SuggestMemoryService);\nexport { SuggestMemoryService };\nexport const ISuggestMemoryService = createDecorator('ISuggestMemories');\nregisterSingleton(ISuggestMemoryService, SuggestMemoryService, 1 /* InstantiationType.Delayed */);","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","SuggestMemoryService_1","RunOnceScheduler","DisposableStore","LRUCache","TernarySearchTree","CompletionItemKinds","IConfigurationService","registerSingleton","createDecorator","IStorageService","WillSaveStateReason","Memory","constructor","name","select","model","pos","items","topScore","score","completion","suggestion","preselect","NoMemory","memorize","item","toJSON","undefined","fromJSON","LRUMemory","_cache","_seq","getLanguageId","textLabel","set","touch","type","kind","insertText","lineSuffix","getLineContent","lineNumber","substr","column","test","indexPreselect","indexRecency","seq","peek","data","clear","value","fromString","size","PrefixMemory","_trie","forStrings","word","getWordUntilPosition","get","findSubstr","entries","forEach","push","sort","a","b","slice","SuggestMemoryService","_storageService","_configService","_disposables","_persistSoon","_saveState","add","onWillSaveState","e","reason","SHUTDOWN","dispose","_withStrategy","schedule","_a","mode","getValue","overrideIdentifier","getLanguageIdAtPosition","resource","uri","_strategy","ctor","_strategyCtors","share","scope","raw","_storagePrefix","JSON","parse","stringify","store","Map","ISuggestMemoryService"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestMemory.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SuggestMemoryService_1;\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { TernarySearchTree } from '../../../../base/common/ternarySearchTree.js';\nimport { CompletionItemKinds } from '../../../common/languages.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IStorageService, WillSaveStateReason } from '../../../../platform/storage/common/storage.js';\nexport class Memory {\n    constructor(name) {\n        this.name = name;\n    }\n    select(model, pos, items) {\n        if (items.length === 0) {\n            return 0;\n        }\n        const topScore = items[0].score[0];\n        for (let i = 0; i < items.length; i++) {\n            const { score, completion: suggestion } = items[i];\n            if (score[0] !== topScore) {\n                // stop when leaving the group of top matches\n                break;\n            }\n            if (suggestion.preselect) {\n                // stop when seeing an auto-select-item\n                return i;\n            }\n        }\n        return 0;\n    }\n}\nexport class NoMemory extends Memory {\n    constructor() {\n        super('first');\n    }\n    memorize(model, pos, item) {\n        // no-op\n    }\n    toJSON() {\n        return undefined;\n    }\n    fromJSON() {\n        //\n    }\n}\nexport class LRUMemory extends Memory {\n    constructor() {\n        super('recentlyUsed');\n        this._cache = new LRUCache(300, 0.66);\n        this._seq = 0;\n    }\n    memorize(model, pos, item) {\n        const key = `${model.getLanguageId()}/${item.textLabel}`;\n        this._cache.set(key, {\n            touch: this._seq++,\n            type: item.completion.kind,\n            insertText: item.completion.insertText\n        });\n    }\n    select(model, pos, items) {\n        if (items.length === 0) {\n            return 0;\n        }\n        const lineSuffix = model.getLineContent(pos.lineNumber).substr(pos.column - 10, pos.column - 1);\n        if (/\\s$/.test(lineSuffix)) {\n            return super.select(model, pos, items);\n        }\n        const topScore = items[0].score[0];\n        let indexPreselect = -1;\n        let indexRecency = -1;\n        let seq = -1;\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].score[0] !== topScore) {\n                // consider only top items\n                break;\n            }\n            const key = `${model.getLanguageId()}/${items[i].textLabel}`;\n            const item = this._cache.peek(key);\n            if (item && item.touch > seq && item.type === items[i].completion.kind && item.insertText === items[i].completion.insertText) {\n                seq = item.touch;\n                indexRecency = i;\n            }\n            if (items[i].completion.preselect && indexPreselect === -1) {\n                // stop when seeing an auto-select-item\n                return indexPreselect = i;\n            }\n        }\n        if (indexRecency !== -1) {\n            return indexRecency;\n        }\n        else if (indexPreselect !== -1) {\n            return indexPreselect;\n        }\n        else {\n            return 0;\n        }\n    }\n    toJSON() {\n        return this._cache.toJSON();\n    }\n    fromJSON(data) {\n        this._cache.clear();\n        const seq = 0;\n        for (const [key, value] of data) {\n            value.touch = seq;\n            value.type = typeof value.type === 'number' ? value.type : CompletionItemKinds.fromString(value.type);\n            this._cache.set(key, value);\n        }\n        this._seq = this._cache.size;\n    }\n}\nexport class PrefixMemory extends Memory {\n    constructor() {\n        super('recentlyUsedByPrefix');\n        this._trie = TernarySearchTree.forStrings();\n        this._seq = 0;\n    }\n    memorize(model, pos, item) {\n        const { word } = model.getWordUntilPosition(pos);\n        const key = `${model.getLanguageId()}/${word}`;\n        this._trie.set(key, {\n            type: item.completion.kind,\n            insertText: item.completion.insertText,\n            touch: this._seq++\n        });\n    }\n    select(model, pos, items) {\n        const { word } = model.getWordUntilPosition(pos);\n        if (!word) {\n            return super.select(model, pos, items);\n        }\n        const key = `${model.getLanguageId()}/${word}`;\n        let item = this._trie.get(key);\n        if (!item) {\n            item = this._trie.findSubstr(key);\n        }\n        if (item) {\n            for (let i = 0; i < items.length; i++) {\n                const { kind, insertText } = items[i].completion;\n                if (kind === item.type && insertText === item.insertText) {\n                    return i;\n                }\n            }\n        }\n        return super.select(model, pos, items);\n    }\n    toJSON() {\n        const entries = [];\n        this._trie.forEach((value, key) => entries.push([key, value]));\n        // sort by last recently used (touch), then\n        // take the top 200 item and normalize their\n        // touch\n        entries\n            .sort((a, b) => -(a[1].touch - b[1].touch))\n            .forEach((value, i) => value[1].touch = i);\n        return entries.slice(0, 200);\n    }\n    fromJSON(data) {\n        this._trie.clear();\n        if (data.length > 0) {\n            this._seq = data[0][1].touch + 1;\n            for (const [key, value] of data) {\n                value.type = typeof value.type === 'number' ? value.type : CompletionItemKinds.fromString(value.type);\n                this._trie.set(key, value);\n            }\n        }\n    }\n}\nlet SuggestMemoryService = SuggestMemoryService_1 = class SuggestMemoryService {\n    constructor(_storageService, _configService) {\n        this._storageService = _storageService;\n        this._configService = _configService;\n        this._disposables = new DisposableStore();\n        this._persistSoon = new RunOnceScheduler(() => this._saveState(), 500);\n        this._disposables.add(_storageService.onWillSaveState(e => {\n            if (e.reason === WillSaveStateReason.SHUTDOWN) {\n                this._saveState();\n            }\n        }));\n    }\n    dispose() {\n        this._disposables.dispose();\n        this._persistSoon.dispose();\n    }\n    memorize(model, pos, item) {\n        this._withStrategy(model, pos).memorize(model, pos, item);\n        this._persistSoon.schedule();\n    }\n    select(model, pos, items) {\n        return this._withStrategy(model, pos).select(model, pos, items);\n    }\n    _withStrategy(model, pos) {\n        var _a;\n        const mode = this._configService.getValue('editor.suggestSelection', {\n            overrideIdentifier: model.getLanguageIdAtPosition(pos.lineNumber, pos.column),\n            resource: model.uri\n        });\n        if (((_a = this._strategy) === null || _a === void 0 ? void 0 : _a.name) !== mode) {\n            this._saveState();\n            const ctor = SuggestMemoryService_1._strategyCtors.get(mode) || NoMemory;\n            this._strategy = new ctor();\n            try {\n                const share = this._configService.getValue('editor.suggest.shareSuggestSelections');\n                const scope = share ? 0 /* StorageScope.PROFILE */ : 1 /* StorageScope.WORKSPACE */;\n                const raw = this._storageService.get(`${SuggestMemoryService_1._storagePrefix}/${mode}`, scope);\n                if (raw) {\n                    this._strategy.fromJSON(JSON.parse(raw));\n                }\n            }\n            catch (e) {\n                // things can go wrong with JSON...\n            }\n        }\n        return this._strategy;\n    }\n    _saveState() {\n        if (this._strategy) {\n            const share = this._configService.getValue('editor.suggest.shareSuggestSelections');\n            const scope = share ? 0 /* StorageScope.PROFILE */ : 1 /* StorageScope.WORKSPACE */;\n            const raw = JSON.stringify(this._strategy);\n            this._storageService.store(`${SuggestMemoryService_1._storagePrefix}/${this._strategy.name}`, raw, scope, 1 /* StorageTarget.MACHINE */);\n        }\n    }\n};\nSuggestMemoryService._strategyCtors = new Map([\n    ['recentlyUsedByPrefix', PrefixMemory],\n    ['recentlyUsed', LRUMemory],\n    ['first', NoMemory]\n]);\nSuggestMemoryService._storagePrefix = 'suggest/memories';\nSuggestMemoryService = SuggestMemoryService_1 = __decorate([\n    __param(0, IStorageService),\n    __param(1, IConfigurationService)\n], SuggestMemoryService);\nexport { SuggestMemoryService };\nexport const ISuggestMemoryService = createDecorator('ISuggestMemories');\nregisterSingleton(ISuggestMemoryService, SuggestMemoryService, 1 /* InstantiationType.Delayed */);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}