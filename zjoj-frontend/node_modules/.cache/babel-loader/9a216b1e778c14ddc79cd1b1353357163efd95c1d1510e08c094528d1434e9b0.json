{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LinkedList } from '../../../../base/common/linkedList.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nexport class BracketSelectionRangeProvider {\n  async provideSelectionRanges(model, positions) {\n    const result = [];\n    for (const position of positions) {\n      const bucket = [];\n      result.push(bucket);\n      const ranges = new Map();\n      await new Promise(resolve => BracketSelectionRangeProvider._bracketsRightYield(resolve, 0, model, position, ranges));\n      await new Promise(resolve => BracketSelectionRangeProvider._bracketsLeftYield(resolve, 0, model, position, ranges, bucket));\n    }\n    return result;\n  }\n  static _bracketsRightYield(resolve, round, model, pos, ranges) {\n    const counts = new Map();\n    const t1 = Date.now();\n    while (true) {\n      if (round >= BracketSelectionRangeProvider._maxRounds) {\n        resolve();\n        break;\n      }\n      if (!pos) {\n        resolve();\n        break;\n      }\n      const bracket = model.bracketPairs.findNextBracket(pos);\n      if (!bracket) {\n        resolve();\n        break;\n      }\n      const d = Date.now() - t1;\n      if (d > BracketSelectionRangeProvider._maxDuration) {\n        setTimeout(() => BracketSelectionRangeProvider._bracketsRightYield(resolve, round + 1, model, pos, ranges));\n        break;\n      }\n      if (bracket.bracketInfo.isOpeningBracket) {\n        const key = bracket.bracketInfo.bracketText;\n        // wait for closing\n        const val = counts.has(key) ? counts.get(key) : 0;\n        counts.set(key, val + 1);\n      } else {\n        const key = bracket.bracketInfo.getOpeningBrackets()[0].bracketText;\n        // process closing\n        let val = counts.has(key) ? counts.get(key) : 0;\n        val -= 1;\n        counts.set(key, Math.max(0, val));\n        if (val < 0) {\n          let list = ranges.get(key);\n          if (!list) {\n            list = new LinkedList();\n            ranges.set(key, list);\n          }\n          list.push(bracket.range);\n        }\n      }\n      pos = bracket.range.getEndPosition();\n    }\n  }\n  static _bracketsLeftYield(resolve, round, model, pos, ranges, bucket) {\n    const counts = new Map();\n    const t1 = Date.now();\n    while (true) {\n      if (round >= BracketSelectionRangeProvider._maxRounds && ranges.size === 0) {\n        resolve();\n        break;\n      }\n      if (!pos) {\n        resolve();\n        break;\n      }\n      const bracket = model.bracketPairs.findPrevBracket(pos);\n      if (!bracket) {\n        resolve();\n        break;\n      }\n      const d = Date.now() - t1;\n      if (d > BracketSelectionRangeProvider._maxDuration) {\n        setTimeout(() => BracketSelectionRangeProvider._bracketsLeftYield(resolve, round + 1, model, pos, ranges, bucket));\n        break;\n      }\n      if (!bracket.bracketInfo.isOpeningBracket) {\n        const key = bracket.bracketInfo.getOpeningBrackets()[0].bracketText;\n        // wait for opening\n        const val = counts.has(key) ? counts.get(key) : 0;\n        counts.set(key, val + 1);\n      } else {\n        const key = bracket.bracketInfo.bracketText;\n        // opening\n        let val = counts.has(key) ? counts.get(key) : 0;\n        val -= 1;\n        counts.set(key, Math.max(0, val));\n        if (val < 0) {\n          const list = ranges.get(key);\n          if (list) {\n            const closing = list.shift();\n            if (list.size === 0) {\n              ranges.delete(key);\n            }\n            const innerBracket = Range.fromPositions(bracket.range.getEndPosition(), closing.getStartPosition());\n            const outerBracket = Range.fromPositions(bracket.range.getStartPosition(), closing.getEndPosition());\n            bucket.push({\n              range: innerBracket\n            });\n            bucket.push({\n              range: outerBracket\n            });\n            BracketSelectionRangeProvider._addBracketLeading(model, outerBracket, bucket);\n          }\n        }\n      }\n      pos = bracket.range.getStartPosition();\n    }\n  }\n  static _addBracketLeading(model, bracket, bucket) {\n    if (bracket.startLineNumber === bracket.endLineNumber) {\n      return;\n    }\n    // xxxxxxxx {\n    //\n    // }\n    const startLine = bracket.startLineNumber;\n    const column = model.getLineFirstNonWhitespaceColumn(startLine);\n    if (column !== 0 && column !== bracket.startColumn) {\n      bucket.push({\n        range: Range.fromPositions(new Position(startLine, column), bracket.getEndPosition())\n      });\n      bucket.push({\n        range: Range.fromPositions(new Position(startLine, 1), bracket.getEndPosition())\n      });\n    }\n    // xxxxxxxx\n    // {\n    //\n    // }\n    const aboveLine = startLine - 1;\n    if (aboveLine > 0) {\n      const column = model.getLineFirstNonWhitespaceColumn(aboveLine);\n      if (column === bracket.startColumn && column !== model.getLineLastNonWhitespaceColumn(aboveLine)) {\n        bucket.push({\n          range: Range.fromPositions(new Position(aboveLine, column), bracket.getEndPosition())\n        });\n        bucket.push({\n          range: Range.fromPositions(new Position(aboveLine, 1), bracket.getEndPosition())\n        });\n      }\n    }\n  }\n}\nBracketSelectionRangeProvider._maxDuration = 30;\nBracketSelectionRangeProvider._maxRounds = 2;","map":{"version":3,"names":["LinkedList","Position","Range","BracketSelectionRangeProvider","provideSelectionRanges","model","positions","result","position","bucket","push","ranges","Map","Promise","resolve","_bracketsRightYield","_bracketsLeftYield","round","pos","counts","t1","Date","now","_maxRounds","bracket","bracketPairs","findNextBracket","d","_maxDuration","setTimeout","bracketInfo","isOpeningBracket","key","bracketText","val","has","get","set","getOpeningBrackets","Math","max","list","range","getEndPosition","size","findPrevBracket","closing","shift","delete","innerBracket","fromPositions","getStartPosition","outerBracket","_addBracketLeading","startLineNumber","endLineNumber","startLine","column","getLineFirstNonWhitespaceColumn","startColumn","aboveLine","getLineLastNonWhitespaceColumn"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/browser/bracketSelections.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LinkedList } from '../../../../base/common/linkedList.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nexport class BracketSelectionRangeProvider {\n    async provideSelectionRanges(model, positions) {\n        const result = [];\n        for (const position of positions) {\n            const bucket = [];\n            result.push(bucket);\n            const ranges = new Map();\n            await new Promise(resolve => BracketSelectionRangeProvider._bracketsRightYield(resolve, 0, model, position, ranges));\n            await new Promise(resolve => BracketSelectionRangeProvider._bracketsLeftYield(resolve, 0, model, position, ranges, bucket));\n        }\n        return result;\n    }\n    static _bracketsRightYield(resolve, round, model, pos, ranges) {\n        const counts = new Map();\n        const t1 = Date.now();\n        while (true) {\n            if (round >= BracketSelectionRangeProvider._maxRounds) {\n                resolve();\n                break;\n            }\n            if (!pos) {\n                resolve();\n                break;\n            }\n            const bracket = model.bracketPairs.findNextBracket(pos);\n            if (!bracket) {\n                resolve();\n                break;\n            }\n            const d = Date.now() - t1;\n            if (d > BracketSelectionRangeProvider._maxDuration) {\n                setTimeout(() => BracketSelectionRangeProvider._bracketsRightYield(resolve, round + 1, model, pos, ranges));\n                break;\n            }\n            if (bracket.bracketInfo.isOpeningBracket) {\n                const key = bracket.bracketInfo.bracketText;\n                // wait for closing\n                const val = counts.has(key) ? counts.get(key) : 0;\n                counts.set(key, val + 1);\n            }\n            else {\n                const key = bracket.bracketInfo.getOpeningBrackets()[0].bracketText;\n                // process closing\n                let val = counts.has(key) ? counts.get(key) : 0;\n                val -= 1;\n                counts.set(key, Math.max(0, val));\n                if (val < 0) {\n                    let list = ranges.get(key);\n                    if (!list) {\n                        list = new LinkedList();\n                        ranges.set(key, list);\n                    }\n                    list.push(bracket.range);\n                }\n            }\n            pos = bracket.range.getEndPosition();\n        }\n    }\n    static _bracketsLeftYield(resolve, round, model, pos, ranges, bucket) {\n        const counts = new Map();\n        const t1 = Date.now();\n        while (true) {\n            if (round >= BracketSelectionRangeProvider._maxRounds && ranges.size === 0) {\n                resolve();\n                break;\n            }\n            if (!pos) {\n                resolve();\n                break;\n            }\n            const bracket = model.bracketPairs.findPrevBracket(pos);\n            if (!bracket) {\n                resolve();\n                break;\n            }\n            const d = Date.now() - t1;\n            if (d > BracketSelectionRangeProvider._maxDuration) {\n                setTimeout(() => BracketSelectionRangeProvider._bracketsLeftYield(resolve, round + 1, model, pos, ranges, bucket));\n                break;\n            }\n            if (!bracket.bracketInfo.isOpeningBracket) {\n                const key = bracket.bracketInfo.getOpeningBrackets()[0].bracketText;\n                // wait for opening\n                const val = counts.has(key) ? counts.get(key) : 0;\n                counts.set(key, val + 1);\n            }\n            else {\n                const key = bracket.bracketInfo.bracketText;\n                // opening\n                let val = counts.has(key) ? counts.get(key) : 0;\n                val -= 1;\n                counts.set(key, Math.max(0, val));\n                if (val < 0) {\n                    const list = ranges.get(key);\n                    if (list) {\n                        const closing = list.shift();\n                        if (list.size === 0) {\n                            ranges.delete(key);\n                        }\n                        const innerBracket = Range.fromPositions(bracket.range.getEndPosition(), closing.getStartPosition());\n                        const outerBracket = Range.fromPositions(bracket.range.getStartPosition(), closing.getEndPosition());\n                        bucket.push({ range: innerBracket });\n                        bucket.push({ range: outerBracket });\n                        BracketSelectionRangeProvider._addBracketLeading(model, outerBracket, bucket);\n                    }\n                }\n            }\n            pos = bracket.range.getStartPosition();\n        }\n    }\n    static _addBracketLeading(model, bracket, bucket) {\n        if (bracket.startLineNumber === bracket.endLineNumber) {\n            return;\n        }\n        // xxxxxxxx {\n        //\n        // }\n        const startLine = bracket.startLineNumber;\n        const column = model.getLineFirstNonWhitespaceColumn(startLine);\n        if (column !== 0 && column !== bracket.startColumn) {\n            bucket.push({ range: Range.fromPositions(new Position(startLine, column), bracket.getEndPosition()) });\n            bucket.push({ range: Range.fromPositions(new Position(startLine, 1), bracket.getEndPosition()) });\n        }\n        // xxxxxxxx\n        // {\n        //\n        // }\n        const aboveLine = startLine - 1;\n        if (aboveLine > 0) {\n            const column = model.getLineFirstNonWhitespaceColumn(aboveLine);\n            if (column === bracket.startColumn && column !== model.getLineLastNonWhitespaceColumn(aboveLine)) {\n                bucket.push({ range: Range.fromPositions(new Position(aboveLine, column), bracket.getEndPosition()) });\n                bucket.push({ range: Range.fromPositions(new Position(aboveLine, 1), bracket.getEndPosition()) });\n            }\n        }\n    }\n}\nBracketSelectionRangeProvider._maxDuration = 30;\nBracketSelectionRangeProvider._maxRounds = 2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}