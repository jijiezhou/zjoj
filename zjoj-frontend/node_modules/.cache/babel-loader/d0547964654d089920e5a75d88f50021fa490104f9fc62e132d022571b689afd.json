{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nclass CursorState {\n  constructor(selections) {\n    this.selections = selections;\n  }\n  equals(other) {\n    const thisLen = this.selections.length;\n    const otherLen = other.selections.length;\n    if (thisLen !== otherLen) {\n      return false;\n    }\n    for (let i = 0; i < thisLen; i++) {\n      if (!this.selections[i].equalsSelection(other.selections[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\nclass StackElement {\n  constructor(cursorState, scrollTop, scrollLeft) {\n    this.cursorState = cursorState;\n    this.scrollTop = scrollTop;\n    this.scrollLeft = scrollLeft;\n  }\n}\nexport class CursorUndoRedoController extends Disposable {\n  static get(editor) {\n    return editor.getContribution(CursorUndoRedoController.ID);\n  }\n  constructor(editor) {\n    super();\n    this._editor = editor;\n    this._isCursorUndoRedo = false;\n    this._undoStack = [];\n    this._redoStack = [];\n    this._register(editor.onDidChangeModel(e => {\n      this._undoStack = [];\n      this._redoStack = [];\n    }));\n    this._register(editor.onDidChangeModelContent(e => {\n      this._undoStack = [];\n      this._redoStack = [];\n    }));\n    this._register(editor.onDidChangeCursorSelection(e => {\n      if (this._isCursorUndoRedo) {\n        return;\n      }\n      if (!e.oldSelections) {\n        return;\n      }\n      if (e.oldModelVersionId !== e.modelVersionId) {\n        return;\n      }\n      const prevState = new CursorState(e.oldSelections);\n      const isEqualToLastUndoStack = this._undoStack.length > 0 && this._undoStack[this._undoStack.length - 1].cursorState.equals(prevState);\n      if (!isEqualToLastUndoStack) {\n        this._undoStack.push(new StackElement(prevState, editor.getScrollTop(), editor.getScrollLeft()));\n        this._redoStack = [];\n        if (this._undoStack.length > 50) {\n          // keep the cursor undo stack bounded\n          this._undoStack.shift();\n        }\n      }\n    }));\n  }\n  cursorUndo() {\n    if (!this._editor.hasModel() || this._undoStack.length === 0) {\n      return;\n    }\n    this._redoStack.push(new StackElement(new CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));\n    this._applyState(this._undoStack.pop());\n  }\n  cursorRedo() {\n    if (!this._editor.hasModel() || this._redoStack.length === 0) {\n      return;\n    }\n    this._undoStack.push(new StackElement(new CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));\n    this._applyState(this._redoStack.pop());\n  }\n  _applyState(stackElement) {\n    this._isCursorUndoRedo = true;\n    this._editor.setSelections(stackElement.cursorState.selections);\n    this._editor.setScrollPosition({\n      scrollTop: stackElement.scrollTop,\n      scrollLeft: stackElement.scrollLeft\n    });\n    this._isCursorUndoRedo = false;\n  }\n}\nCursorUndoRedoController.ID = 'editor.contrib.cursorUndoRedoController';\nexport class CursorUndo extends EditorAction {\n  constructor() {\n    super({\n      id: 'cursorUndo',\n      label: nls.localize('cursor.undo', \"Cursor Undo\"),\n      alias: 'Cursor Undo',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 51 /* KeyCode.KeyU */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  run(accessor, editor, args) {\n    var _a;\n    (_a = CursorUndoRedoController.get(editor)) === null || _a === void 0 ? void 0 : _a.cursorUndo();\n  }\n}\nexport class CursorRedo extends EditorAction {\n  constructor() {\n    super({\n      id: 'cursorRedo',\n      label: nls.localize('cursor.redo', \"Cursor Redo\"),\n      alias: 'Cursor Redo',\n      precondition: undefined\n    });\n  }\n  run(accessor, editor, args) {\n    var _a;\n    (_a = CursorUndoRedoController.get(editor)) === null || _a === void 0 ? void 0 : _a.cursorRedo();\n  }\n}\nregisterEditorContribution(CursorUndoRedoController.ID, CursorUndoRedoController, 0 /* EditorContributionInstantiation.Eager */); // eager because it needs to listen to record cursor state ASAP\nregisterEditorAction(CursorUndo);\nregisterEditorAction(CursorRedo);","map":{"version":3,"names":["Disposable","EditorAction","registerEditorAction","registerEditorContribution","EditorContextKeys","nls","CursorState","constructor","selections","equals","other","thisLen","length","otherLen","i","equalsSelection","StackElement","cursorState","scrollTop","scrollLeft","CursorUndoRedoController","get","editor","getContribution","ID","_editor","_isCursorUndoRedo","_undoStack","_redoStack","_register","onDidChangeModel","e","onDidChangeModelContent","onDidChangeCursorSelection","oldSelections","oldModelVersionId","modelVersionId","prevState","isEqualToLastUndoStack","push","getScrollTop","getScrollLeft","shift","cursorUndo","hasModel","getSelections","_applyState","pop","cursorRedo","stackElement","setSelections","setScrollPosition","CursorUndo","id","label","localize","alias","precondition","undefined","kbOpts","kbExpr","textInputFocus","primary","weight","run","accessor","args","_a","CursorRedo"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/cursorUndo/browser/cursorUndo.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nclass CursorState {\n    constructor(selections) {\n        this.selections = selections;\n    }\n    equals(other) {\n        const thisLen = this.selections.length;\n        const otherLen = other.selections.length;\n        if (thisLen !== otherLen) {\n            return false;\n        }\n        for (let i = 0; i < thisLen; i++) {\n            if (!this.selections[i].equalsSelection(other.selections[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nclass StackElement {\n    constructor(cursorState, scrollTop, scrollLeft) {\n        this.cursorState = cursorState;\n        this.scrollTop = scrollTop;\n        this.scrollLeft = scrollLeft;\n    }\n}\nexport class CursorUndoRedoController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(CursorUndoRedoController.ID);\n    }\n    constructor(editor) {\n        super();\n        this._editor = editor;\n        this._isCursorUndoRedo = false;\n        this._undoStack = [];\n        this._redoStack = [];\n        this._register(editor.onDidChangeModel((e) => {\n            this._undoStack = [];\n            this._redoStack = [];\n        }));\n        this._register(editor.onDidChangeModelContent((e) => {\n            this._undoStack = [];\n            this._redoStack = [];\n        }));\n        this._register(editor.onDidChangeCursorSelection((e) => {\n            if (this._isCursorUndoRedo) {\n                return;\n            }\n            if (!e.oldSelections) {\n                return;\n            }\n            if (e.oldModelVersionId !== e.modelVersionId) {\n                return;\n            }\n            const prevState = new CursorState(e.oldSelections);\n            const isEqualToLastUndoStack = (this._undoStack.length > 0 && this._undoStack[this._undoStack.length - 1].cursorState.equals(prevState));\n            if (!isEqualToLastUndoStack) {\n                this._undoStack.push(new StackElement(prevState, editor.getScrollTop(), editor.getScrollLeft()));\n                this._redoStack = [];\n                if (this._undoStack.length > 50) {\n                    // keep the cursor undo stack bounded\n                    this._undoStack.shift();\n                }\n            }\n        }));\n    }\n    cursorUndo() {\n        if (!this._editor.hasModel() || this._undoStack.length === 0) {\n            return;\n        }\n        this._redoStack.push(new StackElement(new CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));\n        this._applyState(this._undoStack.pop());\n    }\n    cursorRedo() {\n        if (!this._editor.hasModel() || this._redoStack.length === 0) {\n            return;\n        }\n        this._undoStack.push(new StackElement(new CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));\n        this._applyState(this._redoStack.pop());\n    }\n    _applyState(stackElement) {\n        this._isCursorUndoRedo = true;\n        this._editor.setSelections(stackElement.cursorState.selections);\n        this._editor.setScrollPosition({\n            scrollTop: stackElement.scrollTop,\n            scrollLeft: stackElement.scrollLeft\n        });\n        this._isCursorUndoRedo = false;\n    }\n}\nCursorUndoRedoController.ID = 'editor.contrib.cursorUndoRedoController';\nexport class CursorUndo extends EditorAction {\n    constructor() {\n        super({\n            id: 'cursorUndo',\n            label: nls.localize('cursor.undo', \"Cursor Undo\"),\n            alias: 'Cursor Undo',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 51 /* KeyCode.KeyU */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        var _a;\n        (_a = CursorUndoRedoController.get(editor)) === null || _a === void 0 ? void 0 : _a.cursorUndo();\n    }\n}\nexport class CursorRedo extends EditorAction {\n    constructor() {\n        super({\n            id: 'cursorRedo',\n            label: nls.localize('cursor.redo', \"Cursor Redo\"),\n            alias: 'Cursor Redo',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor, args) {\n        var _a;\n        (_a = CursorUndoRedoController.get(editor)) === null || _a === void 0 ? void 0 : _a.cursorRedo();\n    }\n}\nregisterEditorContribution(CursorUndoRedoController.ID, CursorUndoRedoController, 0 /* EditorContributionInstantiation.Eager */); // eager because it needs to listen to record cursor state ASAP\nregisterEditorAction(CursorUndo);\nregisterEditorAction(CursorRedo);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}