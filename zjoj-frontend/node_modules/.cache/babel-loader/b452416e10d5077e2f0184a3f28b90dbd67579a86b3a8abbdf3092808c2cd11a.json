{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// ------ internal util\nexport var _util;\n(function (_util) {\n  _util.serviceIds = new Map();\n  _util.DI_TARGET = '$di$target';\n  _util.DI_DEPENDENCIES = '$di$dependencies';\n  function getServiceDependencies(ctor) {\n    return ctor[_util.DI_DEPENDENCIES] || [];\n  }\n  _util.getServiceDependencies = getServiceDependencies;\n})(_util || (_util = {}));\nexport const IInstantiationService = createDecorator('instantiationService');\nfunction storeServiceDependency(id, target, index) {\n  if (target[_util.DI_TARGET] === target) {\n    target[_util.DI_DEPENDENCIES].push({\n      id,\n      index\n    });\n  } else {\n    target[_util.DI_DEPENDENCIES] = [{\n      id,\n      index\n    }];\n    target[_util.DI_TARGET] = target;\n  }\n}\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator(serviceId) {\n  if (_util.serviceIds.has(serviceId)) {\n    return _util.serviceIds.get(serviceId);\n  }\n  const id = function (target, key, index) {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n    storeServiceDependency(id, target, index);\n  };\n  id.toString = () => serviceId;\n  _util.serviceIds.set(serviceId, id);\n  return id;\n}","map":{"version":3,"names":["_util","serviceIds","Map","DI_TARGET","DI_DEPENDENCIES","getServiceDependencies","ctor","IInstantiationService","createDecorator","storeServiceDependency","id","target","index","push","serviceId","has","get","key","arguments","length","Error","toString","set"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiation.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// ------ internal util\nexport var _util;\n(function (_util) {\n    _util.serviceIds = new Map();\n    _util.DI_TARGET = '$di$target';\n    _util.DI_DEPENDENCIES = '$di$dependencies';\n    function getServiceDependencies(ctor) {\n        return ctor[_util.DI_DEPENDENCIES] || [];\n    }\n    _util.getServiceDependencies = getServiceDependencies;\n})(_util || (_util = {}));\nexport const IInstantiationService = createDecorator('instantiationService');\nfunction storeServiceDependency(id, target, index) {\n    if (target[_util.DI_TARGET] === target) {\n        target[_util.DI_DEPENDENCIES].push({ id, index });\n    }\n    else {\n        target[_util.DI_DEPENDENCIES] = [{ id, index }];\n        target[_util.DI_TARGET] = target;\n    }\n}\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator(serviceId) {\n    if (_util.serviceIds.has(serviceId)) {\n        return _util.serviceIds.get(serviceId);\n    }\n    const id = function (target, key, index) {\n        if (arguments.length !== 3) {\n            throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n        }\n        storeServiceDependency(id, target, index);\n    };\n    id.toString = () => serviceId;\n    _util.serviceIds.set(serviceId, id);\n    return id;\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIA,KAAK;AAChB,CAAC,UAAUA,KAAK,EAAE;EACdA,KAAK,CAACC,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC5BF,KAAK,CAACG,SAAS,GAAG,YAAY;EAC9BH,KAAK,CAACI,eAAe,GAAG,kBAAkB;EAC1C,SAASC,sBAAsBA,CAACC,IAAI,EAAE;IAClC,OAAOA,IAAI,CAACN,KAAK,CAACI,eAAe,CAAC,IAAI,EAAE;EAC5C;EACAJ,KAAK,CAACK,sBAAsB,GAAGA,sBAAsB;AACzD,CAAC,EAAEL,KAAK,KAAKA,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;AACzB,OAAO,MAAMO,qBAAqB,GAAGC,eAAe,CAAC,sBAAsB,CAAC;AAC5E,SAASC,sBAAsBA,CAACC,EAAE,EAAEC,MAAM,EAAEC,KAAK,EAAE;EAC/C,IAAID,MAAM,CAACX,KAAK,CAACG,SAAS,CAAC,KAAKQ,MAAM,EAAE;IACpCA,MAAM,CAACX,KAAK,CAACI,eAAe,CAAC,CAACS,IAAI,CAAC;MAAEH,EAAE;MAAEE;IAAM,CAAC,CAAC;EACrD,CAAC,MACI;IACDD,MAAM,CAACX,KAAK,CAACI,eAAe,CAAC,GAAG,CAAC;MAAEM,EAAE;MAAEE;IAAM,CAAC,CAAC;IAC/CD,MAAM,CAACX,KAAK,CAACG,SAAS,CAAC,GAAGQ,MAAM;EACpC;AACJ;AACA;AACA;AACA;AACA,OAAO,SAASH,eAAeA,CAACM,SAAS,EAAE;EACvC,IAAId,KAAK,CAACC,UAAU,CAACc,GAAG,CAACD,SAAS,CAAC,EAAE;IACjC,OAAOd,KAAK,CAACC,UAAU,CAACe,GAAG,CAACF,SAAS,CAAC;EAC1C;EACA,MAAMJ,EAAE,GAAG,SAAAA,CAAUC,MAAM,EAAEM,GAAG,EAAEL,KAAK,EAAE;IACrC,IAAIM,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;MACxB,MAAM,IAAIC,KAAK,CAAC,kEAAkE,CAAC;IACvF;IACAX,sBAAsB,CAACC,EAAE,EAAEC,MAAM,EAAEC,KAAK,CAAC;EAC7C,CAAC;EACDF,EAAE,CAACW,QAAQ,GAAG,MAAMP,SAAS;EAC7Bd,KAAK,CAACC,UAAU,CAACqB,GAAG,CAACR,SAAS,EAAEJ,EAAE,CAAC;EACnC,OAAOA,EAAE;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}