{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { ReplaceCommand } from '../../../common/commands/replaceCommand.js';\nimport { MoveOperations } from '../../../common/cursor/cursorMoveOperations.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nclass TransposeLettersAction extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.transposeLetters',\n      label: nls.localize('transposeLetters.label', \"Transpose Letters\"),\n      alias: 'Transpose Letters',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256 /* KeyMod.WinCtrl */ | 50 /* KeyCode.KeyT */\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  run(accessor, editor) {\n    if (!editor.hasModel()) {\n      return;\n    }\n    const model = editor.getModel();\n    const commands = [];\n    const selections = editor.getSelections();\n    for (const selection of selections) {\n      if (!selection.isEmpty()) {\n        continue;\n      }\n      const lineNumber = selection.startLineNumber;\n      const column = selection.startColumn;\n      const lastColumn = model.getLineMaxColumn(lineNumber);\n      if (lineNumber === 1 && (column === 1 || column === 2 && lastColumn === 2)) {\n        // at beginning of file, nothing to do\n        continue;\n      }\n      // handle special case: when at end of line, transpose left two chars\n      // otherwise, transpose left and right chars\n      const endPosition = column === lastColumn ? selection.getPosition() : MoveOperations.rightPosition(model, selection.getPosition().lineNumber, selection.getPosition().column);\n      const middlePosition = MoveOperations.leftPosition(model, endPosition);\n      const beginPosition = MoveOperations.leftPosition(model, middlePosition);\n      const leftChar = model.getValueInRange(Range.fromPositions(beginPosition, middlePosition));\n      const rightChar = model.getValueInRange(Range.fromPositions(middlePosition, endPosition));\n      const replaceRange = Range.fromPositions(beginPosition, endPosition);\n      commands.push(new ReplaceCommand(replaceRange, rightChar + leftChar));\n    }\n    if (commands.length > 0) {\n      editor.pushUndoStop();\n      editor.executeCommands(this.id, commands);\n      editor.pushUndoStop();\n    }\n  }\n}\nregisterEditorAction(TransposeLettersAction);","map":{"version":3,"names":["EditorAction","registerEditorAction","ReplaceCommand","MoveOperations","Range","EditorContextKeys","nls","TransposeLettersAction","constructor","id","label","localize","alias","precondition","writable","kbOpts","kbExpr","textInputFocus","primary","mac","weight","run","accessor","editor","hasModel","model","getModel","commands","selections","getSelections","selection","isEmpty","lineNumber","startLineNumber","column","startColumn","lastColumn","getLineMaxColumn","endPosition","getPosition","rightPosition","middlePosition","leftPosition","beginPosition","leftChar","getValueInRange","fromPositions","rightChar","replaceRange","push","length","pushUndoStop","executeCommands"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/caretOperations/browser/transpose.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { ReplaceCommand } from '../../../common/commands/replaceCommand.js';\nimport { MoveOperations } from '../../../common/cursor/cursorMoveOperations.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nclass TransposeLettersAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.transposeLetters',\n            label: nls.localize('transposeLetters.label', \"Transpose Letters\"),\n            alias: 'Transpose Letters',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: {\n                    primary: 256 /* KeyMod.WinCtrl */ | 50 /* KeyCode.KeyT */\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const model = editor.getModel();\n        const commands = [];\n        const selections = editor.getSelections();\n        for (const selection of selections) {\n            if (!selection.isEmpty()) {\n                continue;\n            }\n            const lineNumber = selection.startLineNumber;\n            const column = selection.startColumn;\n            const lastColumn = model.getLineMaxColumn(lineNumber);\n            if (lineNumber === 1 && (column === 1 || (column === 2 && lastColumn === 2))) {\n                // at beginning of file, nothing to do\n                continue;\n            }\n            // handle special case: when at end of line, transpose left two chars\n            // otherwise, transpose left and right chars\n            const endPosition = (column === lastColumn) ?\n                selection.getPosition() :\n                MoveOperations.rightPosition(model, selection.getPosition().lineNumber, selection.getPosition().column);\n            const middlePosition = MoveOperations.leftPosition(model, endPosition);\n            const beginPosition = MoveOperations.leftPosition(model, middlePosition);\n            const leftChar = model.getValueInRange(Range.fromPositions(beginPosition, middlePosition));\n            const rightChar = model.getValueInRange(Range.fromPositions(middlePosition, endPosition));\n            const replaceRange = Range.fromPositions(beginPosition, endPosition);\n            commands.push(new ReplaceCommand(replaceRange, rightChar + leftChar));\n        }\n        if (commands.length > 0) {\n            editor.pushUndoStop();\n            editor.executeCommands(this.id, commands);\n            editor.pushUndoStop();\n        }\n    }\n}\nregisterEditorAction(TransposeLettersAction);\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA,SAASA,YAAY,EAAEC,oBAAoB,QAAQ,sCAAsC;AACzF,SAASC,cAAc,QAAQ,4CAA4C;AAC3E,SAASC,cAAc,QAAQ,gDAAgD;AAC/E,SAASC,KAAK,QAAQ,+BAA+B;AACrD,SAASC,iBAAiB,QAAQ,sCAAsC;AACxE,OAAO,KAAKC,GAAG,MAAM,oBAAoB;AACzC,MAAMC,sBAAsB,SAASP,YAAY,CAAC;EAC9CQ,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAE,gCAAgC;MACpCC,KAAK,EAAEJ,GAAG,CAACK,QAAQ,CAAC,wBAAwB,EAAE,mBAAmB,CAAC;MAClEC,KAAK,EAAE,mBAAmB;MAC1BC,YAAY,EAAER,iBAAiB,CAACS,QAAQ;MACxCC,MAAM,EAAE;QACJC,MAAM,EAAEX,iBAAiB,CAACY,cAAc;QACxCC,OAAO,EAAE,CAAC;QACVC,GAAG,EAAE;UACDD,OAAO,EAAE,GAAG,CAAC,uBAAuB,EAAE,CAAC;QAC3C,CAAC;QACDE,MAAM,EAAE,GAAG,CAAC;MAChB;IACJ,CAAC,CAAC;EACN;EACAC,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAE;IAClB,IAAI,CAACA,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE;MACpB;IACJ;IACA,MAAMC,KAAK,GAAGF,MAAM,CAACG,QAAQ,CAAC,CAAC;IAC/B,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,UAAU,GAAGL,MAAM,CAACM,aAAa,CAAC,CAAC;IACzC,KAAK,MAAMC,SAAS,IAAIF,UAAU,EAAE;MAChC,IAAI,CAACE,SAAS,CAACC,OAAO,CAAC,CAAC,EAAE;QACtB;MACJ;MACA,MAAMC,UAAU,GAAGF,SAAS,CAACG,eAAe;MAC5C,MAAMC,MAAM,GAAGJ,SAAS,CAACK,WAAW;MACpC,MAAMC,UAAU,GAAGX,KAAK,CAACY,gBAAgB,CAACL,UAAU,CAAC;MACrD,IAAIA,UAAU,KAAK,CAAC,KAAKE,MAAM,KAAK,CAAC,IAAKA,MAAM,KAAK,CAAC,IAAIE,UAAU,KAAK,CAAE,CAAC,EAAE;QAC1E;QACA;MACJ;MACA;MACA;MACA,MAAME,WAAW,GAAIJ,MAAM,KAAKE,UAAU,GACtCN,SAAS,CAACS,WAAW,CAAC,CAAC,GACvBpC,cAAc,CAACqC,aAAa,CAACf,KAAK,EAAEK,SAAS,CAACS,WAAW,CAAC,CAAC,CAACP,UAAU,EAAEF,SAAS,CAACS,WAAW,CAAC,CAAC,CAACL,MAAM,CAAC;MAC3G,MAAMO,cAAc,GAAGtC,cAAc,CAACuC,YAAY,CAACjB,KAAK,EAAEa,WAAW,CAAC;MACtE,MAAMK,aAAa,GAAGxC,cAAc,CAACuC,YAAY,CAACjB,KAAK,EAAEgB,cAAc,CAAC;MACxE,MAAMG,QAAQ,GAAGnB,KAAK,CAACoB,eAAe,CAACzC,KAAK,CAAC0C,aAAa,CAACH,aAAa,EAAEF,cAAc,CAAC,CAAC;MAC1F,MAAMM,SAAS,GAAGtB,KAAK,CAACoB,eAAe,CAACzC,KAAK,CAAC0C,aAAa,CAACL,cAAc,EAAEH,WAAW,CAAC,CAAC;MACzF,MAAMU,YAAY,GAAG5C,KAAK,CAAC0C,aAAa,CAACH,aAAa,EAAEL,WAAW,CAAC;MACpEX,QAAQ,CAACsB,IAAI,CAAC,IAAI/C,cAAc,CAAC8C,YAAY,EAAED,SAAS,GAAGH,QAAQ,CAAC,CAAC;IACzE;IACA,IAAIjB,QAAQ,CAACuB,MAAM,GAAG,CAAC,EAAE;MACrB3B,MAAM,CAAC4B,YAAY,CAAC,CAAC;MACrB5B,MAAM,CAAC6B,eAAe,CAAC,IAAI,CAAC3C,EAAE,EAAEkB,QAAQ,CAAC;MACzCJ,MAAM,CAAC4B,YAAY,CAAC,CAAC;IACzB;EACJ;AACJ;AACAlD,oBAAoB,CAACM,sBAAsB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}