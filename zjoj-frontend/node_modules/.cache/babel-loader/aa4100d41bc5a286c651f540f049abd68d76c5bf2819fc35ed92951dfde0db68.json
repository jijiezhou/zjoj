{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.45.0(5e5af013f8d295555a7210df0d5f2cea0bf5dd56)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/shell/shell.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  ignoreCase: true,\n  tokenPostfix: \".shell\",\n  brackets: [{\n    token: \"delimiter.bracket\",\n    open: \"{\",\n    close: \"}\"\n  }, {\n    token: \"delimiter.parenthesis\",\n    open: \"(\",\n    close: \")\"\n  }, {\n    token: \"delimiter.square\",\n    open: \"[\",\n    close: \"]\"\n  }],\n  keywords: [\"if\", \"then\", \"do\", \"else\", \"elif\", \"while\", \"until\", \"for\", \"in\", \"esac\", \"fi\", \"fin\", \"fil\", \"done\", \"exit\", \"set\", \"unset\", \"export\", \"function\"],\n  builtins: [\"ab\", \"awk\", \"bash\", \"beep\", \"cat\", \"cc\", \"cd\", \"chown\", \"chmod\", \"chroot\", \"clear\", \"cp\", \"curl\", \"cut\", \"diff\", \"echo\", \"find\", \"gawk\", \"gcc\", \"get\", \"git\", \"grep\", \"hg\", \"kill\", \"killall\", \"ln\", \"ls\", \"make\", \"mkdir\", \"openssl\", \"mv\", \"nc\", \"node\", \"npm\", \"ping\", \"ps\", \"restart\", \"rm\", \"rmdir\", \"sed\", \"service\", \"sh\", \"shopt\", \"shred\", \"source\", \"sort\", \"sleep\", \"ssh\", \"start\", \"stop\", \"su\", \"sudo\", \"svn\", \"tee\", \"telnet\", \"top\", \"touch\", \"vi\", \"vim\", \"wall\", \"wc\", \"wget\", \"who\", \"write\", \"yes\", \"zsh\"],\n  startingWithDash: /\\-+\\w+/,\n  identifiersWithDashes: /[a-zA-Z]\\w+(?:@startingWithDash)+/,\n  symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n  tokenizer: {\n    root: [[/@identifiersWithDashes/, \"\"], [/(\\s)((?:@startingWithDash)+)/, [\"white\", \"attribute.name\"]], [/[a-zA-Z]\\w*/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@builtins\": \"type.identifier\",\n        \"@default\": \"\"\n      }\n    }], {\n      include: \"@whitespace\"\n    }, {\n      include: \"@strings\"\n    }, {\n      include: \"@parameters\"\n    }, {\n      include: \"@heredoc\"\n    }, [/[{}\\[\\]()]/, \"@brackets\"], [/@symbols/, \"delimiter\"], {\n      include: \"@numbers\"\n    }, [/[,;]/, \"delimiter\"]],\n    whitespace: [[/\\s+/, \"white\"], [/(^#!.*$)/, \"metatag\"], [/(^#.*$)/, \"comment\"]],\n    numbers: [[/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"], [/\\d+/, \"number\"]],\n    strings: [[/'/, \"string\", \"@stringBody\"], [/\"/, \"string\", \"@dblStringBody\"]],\n    stringBody: [[/'/, \"string\", \"@popall\"], [/./, \"string\"]],\n    dblStringBody: [[/\"/, \"string\", \"@popall\"], [/./, \"string\"]],\n    heredoc: [[/(<<[-<]?)(\\s*)(['\"`]?)([\\w\\-]+)(['\"`]?)/, [\"constants\", \"white\", \"string.heredoc.delimiter\", \"string.heredoc\", \"string.heredoc.delimiter\"]]],\n    parameters: [[/\\$\\d+/, \"variable.predefined\"], [/\\$\\w+/, \"variable\"], [/\\$[*@#?\\-$!0_]/, \"variable\"], [/\\$'/, \"variable\", \"@parameterBodyQuote\"], [/\\$\"/, \"variable\", \"@parameterBodyDoubleQuote\"], [/\\$\\(/, \"variable\", \"@parameterBodyParen\"], [/\\$\\{/, \"variable\", \"@parameterBodyCurlyBrace\"]],\n    parameterBodyQuote: [[/[^#:%*@\\-!_']+/, \"variable\"], [/[#:%*@\\-!_]/, \"delimiter\"], [/[']/, \"variable\", \"@pop\"]],\n    parameterBodyDoubleQuote: [[/[^#:%*@\\-!_\"]+/, \"variable\"], [/[#:%*@\\-!_]/, \"delimiter\"], [/[\"]/, \"variable\", \"@pop\"]],\n    parameterBodyParen: [[/[^#:%*@\\-!_)]+/, \"variable\"], [/[#:%*@\\-!_]/, \"delimiter\"], [/[)]/, \"variable\", \"@pop\"]],\n    parameterBodyCurlyBrace: [[/[^#:%*@\\-!_}]+/, \"variable\"], [/[#:%*@\\-!_]/, \"delimiter\"], [/[}]/, \"variable\", \"@pop\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","builtins","startingWithDash","identifiersWithDashes","symbols","tokenizer","root","cases","include","whitespace","numbers","strings","stringBody","dblStringBody","heredoc","parameters","parameterBodyQuote","parameterBodyDoubleQuote","parameterBodyParen","parameterBodyCurlyBrace"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/basic-languages/shell/shell.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.45.0(5e5af013f8d295555a7210df0d5f2cea0bf5dd56)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/shell/shell.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"`\", close: \"`\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"`\", close: \"`\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  ignoreCase: true,\n  tokenPostfix: \".shell\",\n  brackets: [\n    { token: \"delimiter.bracket\", open: \"{\", close: \"}\" },\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" },\n    { token: \"delimiter.square\", open: \"[\", close: \"]\" }\n  ],\n  keywords: [\n    \"if\",\n    \"then\",\n    \"do\",\n    \"else\",\n    \"elif\",\n    \"while\",\n    \"until\",\n    \"for\",\n    \"in\",\n    \"esac\",\n    \"fi\",\n    \"fin\",\n    \"fil\",\n    \"done\",\n    \"exit\",\n    \"set\",\n    \"unset\",\n    \"export\",\n    \"function\"\n  ],\n  builtins: [\n    \"ab\",\n    \"awk\",\n    \"bash\",\n    \"beep\",\n    \"cat\",\n    \"cc\",\n    \"cd\",\n    \"chown\",\n    \"chmod\",\n    \"chroot\",\n    \"clear\",\n    \"cp\",\n    \"curl\",\n    \"cut\",\n    \"diff\",\n    \"echo\",\n    \"find\",\n    \"gawk\",\n    \"gcc\",\n    \"get\",\n    \"git\",\n    \"grep\",\n    \"hg\",\n    \"kill\",\n    \"killall\",\n    \"ln\",\n    \"ls\",\n    \"make\",\n    \"mkdir\",\n    \"openssl\",\n    \"mv\",\n    \"nc\",\n    \"node\",\n    \"npm\",\n    \"ping\",\n    \"ps\",\n    \"restart\",\n    \"rm\",\n    \"rmdir\",\n    \"sed\",\n    \"service\",\n    \"sh\",\n    \"shopt\",\n    \"shred\",\n    \"source\",\n    \"sort\",\n    \"sleep\",\n    \"ssh\",\n    \"start\",\n    \"stop\",\n    \"su\",\n    \"sudo\",\n    \"svn\",\n    \"tee\",\n    \"telnet\",\n    \"top\",\n    \"touch\",\n    \"vi\",\n    \"vim\",\n    \"wall\",\n    \"wc\",\n    \"wget\",\n    \"who\",\n    \"write\",\n    \"yes\",\n    \"zsh\"\n  ],\n  startingWithDash: /\\-+\\w+/,\n  identifiersWithDashes: /[a-zA-Z]\\w+(?:@startingWithDash)+/,\n  symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n  tokenizer: {\n    root: [\n      [/@identifiersWithDashes/, \"\"],\n      [/(\\s)((?:@startingWithDash)+)/, [\"white\", \"attribute.name\"]],\n      [\n        /[a-zA-Z]\\w*/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@builtins\": \"type.identifier\",\n            \"@default\": \"\"\n          }\n        }\n      ],\n      { include: \"@whitespace\" },\n      { include: \"@strings\" },\n      { include: \"@parameters\" },\n      { include: \"@heredoc\" },\n      [/[{}\\[\\]()]/, \"@brackets\"],\n      [/@symbols/, \"delimiter\"],\n      { include: \"@numbers\" },\n      [/[,;]/, \"delimiter\"]\n    ],\n    whitespace: [\n      [/\\s+/, \"white\"],\n      [/(^#!.*$)/, \"metatag\"],\n      [/(^#.*$)/, \"comment\"]\n    ],\n    numbers: [\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"],\n      [/\\d+/, \"number\"]\n    ],\n    strings: [\n      [/'/, \"string\", \"@stringBody\"],\n      [/\"/, \"string\", \"@dblStringBody\"]\n    ],\n    stringBody: [\n      [/'/, \"string\", \"@popall\"],\n      [/./, \"string\"]\n    ],\n    dblStringBody: [\n      [/\"/, \"string\", \"@popall\"],\n      [/./, \"string\"]\n    ],\n    heredoc: [\n      [\n        /(<<[-<]?)(\\s*)(['\"`]?)([\\w\\-]+)(['\"`]?)/,\n        [\n          \"constants\",\n          \"white\",\n          \"string.heredoc.delimiter\",\n          \"string.heredoc\",\n          \"string.heredoc.delimiter\"\n        ]\n      ]\n    ],\n    parameters: [\n      [/\\$\\d+/, \"variable.predefined\"],\n      [/\\$\\w+/, \"variable\"],\n      [/\\$[*@#?\\-$!0_]/, \"variable\"],\n      [/\\$'/, \"variable\", \"@parameterBodyQuote\"],\n      [/\\$\"/, \"variable\", \"@parameterBodyDoubleQuote\"],\n      [/\\$\\(/, \"variable\", \"@parameterBodyParen\"],\n      [/\\$\\{/, \"variable\", \"@parameterBodyCurlyBrace\"]\n    ],\n    parameterBodyQuote: [\n      [/[^#:%*@\\-!_']+/, \"variable\"],\n      [/[#:%*@\\-!_]/, \"delimiter\"],\n      [/[']/, \"variable\", \"@pop\"]\n    ],\n    parameterBodyDoubleQuote: [\n      [/[^#:%*@\\-!_\"]+/, \"variable\"],\n      [/[#:%*@\\-!_]/, \"delimiter\"],\n      [/[\"]/, \"variable\", \"@pop\"]\n    ],\n    parameterBodyParen: [\n      [/[^#:%*@\\-!_)]+/, \"variable\"],\n      [/[#:%*@\\-!_]/, \"delimiter\"],\n      [/[)]/, \"variable\", \"@pop\"]\n    ],\n    parameterBodyCurlyBrace: [\n      [/[^#:%*@\\-!_}]+/, \"variable\"],\n      [/[#:%*@\\-!_]/, \"delimiter\"],\n      [/[}]/, \"variable\", \"@pop\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}