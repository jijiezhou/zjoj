{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar InPlaceReplaceController_1;\nimport { createCancelablePromise, timeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { EditorState } from '../../editorState/browser/editorState.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport * as nls from '../../../../nls.js';\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand.js';\nimport './inPlaceReplace.css';\nlet InPlaceReplaceController = InPlaceReplaceController_1 = class InPlaceReplaceController {\n  static get(editor) {\n    return editor.getContribution(InPlaceReplaceController_1.ID);\n  }\n  constructor(editor, editorWorkerService) {\n    this.editor = editor;\n    this.editorWorkerService = editorWorkerService;\n    this.decorations = this.editor.createDecorationsCollection();\n  }\n  dispose() {}\n  run(source, up) {\n    var _a;\n    // cancel any pending request\n    (_a = this.currentRequest) === null || _a === void 0 ? void 0 : _a.cancel();\n    const editorSelection = this.editor.getSelection();\n    const model = this.editor.getModel();\n    if (!model || !editorSelection) {\n      return undefined;\n    }\n    let selection = editorSelection;\n    if (selection.startLineNumber !== selection.endLineNumber) {\n      // Can't accept multiline selection\n      return undefined;\n    }\n    const state = new EditorState(this.editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n    const modelURI = model.uri;\n    if (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\n      return Promise.resolve(undefined);\n    }\n    this.currentRequest = createCancelablePromise(token => this.editorWorkerService.navigateValueSet(modelURI, selection, up));\n    return this.currentRequest.then(result => {\n      var _a;\n      if (!result || !result.range || !result.value) {\n        // No proper result\n        return;\n      }\n      if (!state.validate(this.editor)) {\n        // state has changed\n        return;\n      }\n      // Selection\n      const editRange = Range.lift(result.range);\n      let highlightRange = result.range;\n      const diff = result.value.length - (selection.endColumn - selection.startColumn);\n      // highlight\n      highlightRange = {\n        startLineNumber: highlightRange.startLineNumber,\n        startColumn: highlightRange.startColumn,\n        endLineNumber: highlightRange.endLineNumber,\n        endColumn: highlightRange.startColumn + result.value.length\n      };\n      if (diff > 1) {\n        selection = new Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);\n      }\n      // Insert new text\n      const command = new InPlaceReplaceCommand(editRange, selection, result.value);\n      this.editor.pushUndoStop();\n      this.editor.executeCommand(source, command);\n      this.editor.pushUndoStop();\n      // add decoration\n      this.decorations.set([{\n        range: highlightRange,\n        options: InPlaceReplaceController_1.DECORATION\n      }]);\n      // remove decoration after delay\n      (_a = this.decorationRemover) === null || _a === void 0 ? void 0 : _a.cancel();\n      this.decorationRemover = timeout(350);\n      this.decorationRemover.then(() => this.decorations.clear()).catch(onUnexpectedError);\n    }).catch(onUnexpectedError);\n  }\n};\nInPlaceReplaceController.ID = 'editor.contrib.inPlaceReplaceController';\nInPlaceReplaceController.DECORATION = ModelDecorationOptions.register({\n  description: 'in-place-replace',\n  className: 'valueSetReplacement'\n});\nInPlaceReplaceController = InPlaceReplaceController_1 = __decorate([__param(1, IEditorWorkerService)], InPlaceReplaceController);\nclass InPlaceReplaceUp extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.inPlaceReplace.up',\n      label: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\n      alias: 'Replace with Previous Value',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 87 /* KeyCode.Comma */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  run(accessor, editor) {\n    const controller = InPlaceReplaceController.get(editor);\n    if (!controller) {\n      return Promise.resolve(undefined);\n    }\n    return controller.run(this.id, false);\n  }\n}\nclass InPlaceReplaceDown extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.inPlaceReplace.down',\n      label: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\n      alias: 'Replace with Next Value',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 89 /* KeyCode.Period */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  run(accessor, editor) {\n    const controller = InPlaceReplaceController.get(editor);\n    if (!controller) {\n      return Promise.resolve(undefined);\n    }\n    return controller.run(this.id, true);\n  }\n}\nregisterEditorContribution(InPlaceReplaceController.ID, InPlaceReplaceController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(InPlaceReplaceUp);\nregisterEditorAction(InPlaceReplaceDown);","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","InPlaceReplaceController_1","createCancelablePromise","timeout","onUnexpectedError","EditorState","EditorAction","registerEditorAction","registerEditorContribution","Range","Selection","EditorContextKeys","ModelDecorationOptions","IEditorWorkerService","nls","InPlaceReplaceCommand","InPlaceReplaceController","get","editor","getContribution","ID","constructor","editorWorkerService","decorations","createDecorationsCollection","dispose","run","source","up","_a","currentRequest","cancel","editorSelection","getSelection","model","getModel","undefined","selection","startLineNumber","endLineNumber","state","modelURI","uri","canNavigateValueSet","Promise","resolve","token","navigateValueSet","then","result","range","value","validate","editRange","lift","highlightRange","diff","endColumn","startColumn","command","pushUndoStop","executeCommand","set","options","DECORATION","decorationRemover","clear","catch","register","description","className","InPlaceReplaceUp","id","label","localize","alias","precondition","writable","kbOpts","kbExpr","editorTextFocus","primary","weight","accessor","controller","InPlaceReplaceDown"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplace.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar InPlaceReplaceController_1;\nimport { createCancelablePromise, timeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { EditorState } from '../../editorState/browser/editorState.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport * as nls from '../../../../nls.js';\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand.js';\nimport './inPlaceReplace.css';\nlet InPlaceReplaceController = InPlaceReplaceController_1 = class InPlaceReplaceController {\n    static get(editor) {\n        return editor.getContribution(InPlaceReplaceController_1.ID);\n    }\n    constructor(editor, editorWorkerService) {\n        this.editor = editor;\n        this.editorWorkerService = editorWorkerService;\n        this.decorations = this.editor.createDecorationsCollection();\n    }\n    dispose() {\n    }\n    run(source, up) {\n        var _a;\n        // cancel any pending request\n        (_a = this.currentRequest) === null || _a === void 0 ? void 0 : _a.cancel();\n        const editorSelection = this.editor.getSelection();\n        const model = this.editor.getModel();\n        if (!model || !editorSelection) {\n            return undefined;\n        }\n        let selection = editorSelection;\n        if (selection.startLineNumber !== selection.endLineNumber) {\n            // Can't accept multiline selection\n            return undefined;\n        }\n        const state = new EditorState(this.editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n        const modelURI = model.uri;\n        if (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\n            return Promise.resolve(undefined);\n        }\n        this.currentRequest = createCancelablePromise(token => this.editorWorkerService.navigateValueSet(modelURI, selection, up));\n        return this.currentRequest.then(result => {\n            var _a;\n            if (!result || !result.range || !result.value) {\n                // No proper result\n                return;\n            }\n            if (!state.validate(this.editor)) {\n                // state has changed\n                return;\n            }\n            // Selection\n            const editRange = Range.lift(result.range);\n            let highlightRange = result.range;\n            const diff = result.value.length - (selection.endColumn - selection.startColumn);\n            // highlight\n            highlightRange = {\n                startLineNumber: highlightRange.startLineNumber,\n                startColumn: highlightRange.startColumn,\n                endLineNumber: highlightRange.endLineNumber,\n                endColumn: highlightRange.startColumn + result.value.length\n            };\n            if (diff > 1) {\n                selection = new Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);\n            }\n            // Insert new text\n            const command = new InPlaceReplaceCommand(editRange, selection, result.value);\n            this.editor.pushUndoStop();\n            this.editor.executeCommand(source, command);\n            this.editor.pushUndoStop();\n            // add decoration\n            this.decorations.set([{\n                    range: highlightRange,\n                    options: InPlaceReplaceController_1.DECORATION\n                }]);\n            // remove decoration after delay\n            (_a = this.decorationRemover) === null || _a === void 0 ? void 0 : _a.cancel();\n            this.decorationRemover = timeout(350);\n            this.decorationRemover.then(() => this.decorations.clear()).catch(onUnexpectedError);\n        }).catch(onUnexpectedError);\n    }\n};\nInPlaceReplaceController.ID = 'editor.contrib.inPlaceReplaceController';\nInPlaceReplaceController.DECORATION = ModelDecorationOptions.register({\n    description: 'in-place-replace',\n    className: 'valueSetReplacement'\n});\nInPlaceReplaceController = InPlaceReplaceController_1 = __decorate([\n    __param(1, IEditorWorkerService)\n], InPlaceReplaceController);\nclass InPlaceReplaceUp extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.up',\n            label: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\n            alias: 'Replace with Previous Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 87 /* KeyCode.Comma */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, false);\n    }\n}\nclass InPlaceReplaceDown extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.down',\n            label: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\n            alias: 'Replace with Next Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 89 /* KeyCode.Period */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, true);\n    }\n}\nregisterEditorContribution(InPlaceReplaceController.ID, InPlaceReplaceController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(InPlaceReplaceUp);\nregisterEditorAction(InPlaceReplaceDown);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,UAAU,GAAI,IAAI,IAAI,IAAI,CAACA,UAAU,IAAK,UAAUC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAE;EACnF,IAAIC,CAAC,GAAGC,SAAS,CAACC,MAAM;IAAEC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGH,MAAM,GAAGE,IAAI,KAAK,IAAI,GAAGA,IAAI,GAAGK,MAAM,CAACC,wBAAwB,CAACR,MAAM,EAAEC,GAAG,CAAC,GAAGC,IAAI;IAAEO,CAAC;EAC5H,IAAI,OAAOC,OAAO,KAAK,QAAQ,IAAI,OAAOA,OAAO,CAACC,QAAQ,KAAK,UAAU,EAAEL,CAAC,GAAGI,OAAO,CAACC,QAAQ,CAACZ,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,CAAC,CAAC,KAC1H,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAM,GAAG,CAAC,EAAEO,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE,IAAIH,CAAC,GAAGV,UAAU,CAACa,CAAC,CAAC,EAAEN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAC,GAAGM,CAAC,CAACH,CAAC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGM,CAAC,CAACT,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,GAAGG,CAAC,CAACT,MAAM,EAAEC,GAAG,CAAC,KAAKK,CAAC;EACjJ,OAAOH,CAAC,GAAG,CAAC,IAAIG,CAAC,IAAIC,MAAM,CAACM,cAAc,CAACb,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,EAAEA,CAAC;AACjE,CAAC;AACD,IAAIQ,OAAO,GAAI,IAAI,IAAI,IAAI,CAACA,OAAO,IAAK,UAAUC,UAAU,EAAEC,SAAS,EAAE;EACrE,OAAO,UAAUhB,MAAM,EAAEC,GAAG,EAAE;IAAEe,SAAS,CAAChB,MAAM,EAAEC,GAAG,EAAEc,UAAU,CAAC;EAAE,CAAC;AACzE,CAAC;AACD,IAAIE,0BAA0B;AAC9B,SAASC,uBAAuB,EAAEC,OAAO,QAAQ,kCAAkC;AACnF,SAASC,iBAAiB,QAAQ,mCAAmC;AACrE,SAASC,WAAW,QAAQ,0CAA0C;AACtE,SAASC,YAAY,EAAEC,oBAAoB,EAAEC,0BAA0B,QAAQ,sCAAsC;AACrH,SAASC,KAAK,QAAQ,+BAA+B;AACrD,SAASC,SAAS,QAAQ,mCAAmC;AAC7D,SAASC,iBAAiB,QAAQ,sCAAsC;AACxE,SAASC,sBAAsB,QAAQ,oCAAoC;AAC3E,SAASC,oBAAoB,QAAQ,0CAA0C;AAC/E,OAAO,KAAKC,GAAG,MAAM,oBAAoB;AACzC,SAASC,qBAAqB,QAAQ,4BAA4B;AAClE,OAAO,sBAAsB;AAC7B,IAAIC,wBAAwB,GAAGf,0BAA0B,GAAG,MAAMe,wBAAwB,CAAC;EACvF,OAAOC,GAAGA,CAACC,MAAM,EAAE;IACf,OAAOA,MAAM,CAACC,eAAe,CAAClB,0BAA0B,CAACmB,EAAE,CAAC;EAChE;EACAC,WAAWA,CAACH,MAAM,EAAEI,mBAAmB,EAAE;IACrC,IAAI,CAACJ,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACI,mBAAmB,GAAGA,mBAAmB;IAC9C,IAAI,CAACC,WAAW,GAAG,IAAI,CAACL,MAAM,CAACM,2BAA2B,CAAC,CAAC;EAChE;EACAC,OAAOA,CAAA,EAAG,CACV;EACAC,GAAGA,CAACC,MAAM,EAAEC,EAAE,EAAE;IACZ,IAAIC,EAAE;IACN;IACA,CAACA,EAAE,GAAG,IAAI,CAACC,cAAc,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,MAAM,CAAC,CAAC;IAC3E,MAAMC,eAAe,GAAG,IAAI,CAACd,MAAM,CAACe,YAAY,CAAC,CAAC;IAClD,MAAMC,KAAK,GAAG,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC;IACpC,IAAI,CAACD,KAAK,IAAI,CAACF,eAAe,EAAE;MAC5B,OAAOI,SAAS;IACpB;IACA,IAAIC,SAAS,GAAGL,eAAe;IAC/B,IAAIK,SAAS,CAACC,eAAe,KAAKD,SAAS,CAACE,aAAa,EAAE;MACvD;MACA,OAAOH,SAAS;IACpB;IACA,MAAMI,KAAK,GAAG,IAAInC,WAAW,CAAC,IAAI,CAACa,MAAM,EAAE,CAAC,CAAC,kCAAkC,CAAC,CAAC,kCAAkC,CAAC;IACpH,MAAMuB,QAAQ,GAAGP,KAAK,CAACQ,GAAG;IAC1B,IAAI,CAAC,IAAI,CAACpB,mBAAmB,CAACqB,mBAAmB,CAACF,QAAQ,CAAC,EAAE;MACzD,OAAOG,OAAO,CAACC,OAAO,CAACT,SAAS,CAAC;IACrC;IACA,IAAI,CAACN,cAAc,GAAG5B,uBAAuB,CAAC4C,KAAK,IAAI,IAAI,CAACxB,mBAAmB,CAACyB,gBAAgB,CAACN,QAAQ,EAAEJ,SAAS,EAAET,EAAE,CAAC,CAAC;IAC1H,OAAO,IAAI,CAACE,cAAc,CAACkB,IAAI,CAACC,MAAM,IAAI;MACtC,IAAIpB,EAAE;MACN,IAAI,CAACoB,MAAM,IAAI,CAACA,MAAM,CAACC,KAAK,IAAI,CAACD,MAAM,CAACE,KAAK,EAAE;QAC3C;QACA;MACJ;MACA,IAAI,CAACX,KAAK,CAACY,QAAQ,CAAC,IAAI,CAAClC,MAAM,CAAC,EAAE;QAC9B;QACA;MACJ;MACA;MACA,MAAMmC,SAAS,GAAG5C,KAAK,CAAC6C,IAAI,CAACL,MAAM,CAACC,KAAK,CAAC;MAC1C,IAAIK,cAAc,GAAGN,MAAM,CAACC,KAAK;MACjC,MAAMM,IAAI,GAAGP,MAAM,CAACE,KAAK,CAAC9D,MAAM,IAAIgD,SAAS,CAACoB,SAAS,GAAGpB,SAAS,CAACqB,WAAW,CAAC;MAChF;MACAH,cAAc,GAAG;QACbjB,eAAe,EAAEiB,cAAc,CAACjB,eAAe;QAC/CoB,WAAW,EAAEH,cAAc,CAACG,WAAW;QACvCnB,aAAa,EAAEgB,cAAc,CAAChB,aAAa;QAC3CkB,SAAS,EAAEF,cAAc,CAACG,WAAW,GAAGT,MAAM,CAACE,KAAK,CAAC9D;MACzD,CAAC;MACD,IAAImE,IAAI,GAAG,CAAC,EAAE;QACVnB,SAAS,GAAG,IAAI3B,SAAS,CAAC2B,SAAS,CAACC,eAAe,EAAED,SAAS,CAACqB,WAAW,EAAErB,SAAS,CAACE,aAAa,EAAEF,SAAS,CAACoB,SAAS,GAAGD,IAAI,GAAG,CAAC,CAAC;MACxI;MACA;MACA,MAAMG,OAAO,GAAG,IAAI5C,qBAAqB,CAACsC,SAAS,EAAEhB,SAAS,EAAEY,MAAM,CAACE,KAAK,CAAC;MAC7E,IAAI,CAACjC,MAAM,CAAC0C,YAAY,CAAC,CAAC;MAC1B,IAAI,CAAC1C,MAAM,CAAC2C,cAAc,CAAClC,MAAM,EAAEgC,OAAO,CAAC;MAC3C,IAAI,CAACzC,MAAM,CAAC0C,YAAY,CAAC,CAAC;MAC1B;MACA,IAAI,CAACrC,WAAW,CAACuC,GAAG,CAAC,CAAC;QACdZ,KAAK,EAAEK,cAAc;QACrBQ,OAAO,EAAE9D,0BAA0B,CAAC+D;MACxC,CAAC,CAAC,CAAC;MACP;MACA,CAACnC,EAAE,GAAG,IAAI,CAACoC,iBAAiB,MAAM,IAAI,IAAIpC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,MAAM,CAAC,CAAC;MAC9E,IAAI,CAACkC,iBAAiB,GAAG9D,OAAO,CAAC,GAAG,CAAC;MACrC,IAAI,CAAC8D,iBAAiB,CAACjB,IAAI,CAAC,MAAM,IAAI,CAACzB,WAAW,CAAC2C,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC/D,iBAAiB,CAAC;IACxF,CAAC,CAAC,CAAC+D,KAAK,CAAC/D,iBAAiB,CAAC;EAC/B;AACJ,CAAC;AACDY,wBAAwB,CAACI,EAAE,GAAG,yCAAyC;AACvEJ,wBAAwB,CAACgD,UAAU,GAAGpD,sBAAsB,CAACwD,QAAQ,CAAC;EAClEC,WAAW,EAAE,kBAAkB;EAC/BC,SAAS,EAAE;AACf,CAAC,CAAC;AACFtD,wBAAwB,GAAGf,0BAA0B,GAAGnB,UAAU,CAAC,CAC/DgB,OAAO,CAAC,CAAC,EAAEe,oBAAoB,CAAC,CACnC,EAAEG,wBAAwB,CAAC;AAC5B,MAAMuD,gBAAgB,SAASjE,YAAY,CAAC;EACxCe,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFmD,EAAE,EAAE,iCAAiC;MACrCC,KAAK,EAAE3D,GAAG,CAAC4D,QAAQ,CAAC,qCAAqC,EAAE,6BAA6B,CAAC;MACzFC,KAAK,EAAE,6BAA6B;MACpCC,YAAY,EAAEjE,iBAAiB,CAACkE,QAAQ;MACxCC,MAAM,EAAE;QACJC,MAAM,EAAEpE,iBAAiB,CAACqE,eAAe;QACzCC,OAAO,EAAE,IAAI,CAAC,uBAAuB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAClEC,MAAM,EAAE,GAAG,CAAC;MAChB;IACJ,CAAC,CAAC;EACN;EACAxD,GAAGA,CAACyD,QAAQ,EAAEjE,MAAM,EAAE;IAClB,MAAMkE,UAAU,GAAGpE,wBAAwB,CAACC,GAAG,CAACC,MAAM,CAAC;IACvD,IAAI,CAACkE,UAAU,EAAE;MACb,OAAOxC,OAAO,CAACC,OAAO,CAACT,SAAS,CAAC;IACrC;IACA,OAAOgD,UAAU,CAAC1D,GAAG,CAAC,IAAI,CAAC8C,EAAE,EAAE,KAAK,CAAC;EACzC;AACJ;AACA,MAAMa,kBAAkB,SAAS/E,YAAY,CAAC;EAC1Ce,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFmD,EAAE,EAAE,mCAAmC;MACvCC,KAAK,EAAE3D,GAAG,CAAC4D,QAAQ,CAAC,iCAAiC,EAAE,yBAAyB,CAAC;MACjFC,KAAK,EAAE,yBAAyB;MAChCC,YAAY,EAAEjE,iBAAiB,CAACkE,QAAQ;MACxCC,MAAM,EAAE;QACJC,MAAM,EAAEpE,iBAAiB,CAACqE,eAAe;QACzCC,OAAO,EAAE,IAAI,CAAC,uBAAuB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAClEC,MAAM,EAAE,GAAG,CAAC;MAChB;IACJ,CAAC,CAAC;EACN;EACAxD,GAAGA,CAACyD,QAAQ,EAAEjE,MAAM,EAAE;IAClB,MAAMkE,UAAU,GAAGpE,wBAAwB,CAACC,GAAG,CAACC,MAAM,CAAC;IACvD,IAAI,CAACkE,UAAU,EAAE;MACb,OAAOxC,OAAO,CAACC,OAAO,CAACT,SAAS,CAAC;IACrC;IACA,OAAOgD,UAAU,CAAC1D,GAAG,CAAC,IAAI,CAAC8C,EAAE,EAAE,IAAI,CAAC;EACxC;AACJ;AACAhE,0BAA0B,CAACQ,wBAAwB,CAACI,EAAE,EAAEJ,wBAAwB,EAAE,CAAC,CAAC,0CAA0C,CAAC;AAC/HT,oBAAoB,CAACgE,gBAAgB,CAAC;AACtChE,oBAAoB,CAAC8E,kBAAkB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}