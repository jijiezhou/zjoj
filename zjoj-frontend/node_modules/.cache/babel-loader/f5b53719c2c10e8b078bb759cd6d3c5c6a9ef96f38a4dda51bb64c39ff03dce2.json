{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { IOutlineModelService } from './outlineModel.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nCommandsRegistry.registerCommand('_executeDocumentSymbolProvider', async function (accessor, ...args) {\n  const [resource] = args;\n  assertType(URI.isUri(resource));\n  const outlineService = accessor.get(IOutlineModelService);\n  const modelService = accessor.get(ITextModelService);\n  const reference = await modelService.createModelReference(resource);\n  try {\n    return (await outlineService.getOrCreate(reference.object.textEditorModel, CancellationToken.None)).getTopLevelSymbols();\n  } finally {\n    reference.dispose();\n  }\n});","map":{"version":3,"names":["CancellationToken","assertType","URI","ITextModelService","IOutlineModelService","CommandsRegistry","registerCommand","accessor","args","resource","isUri","outlineService","get","modelService","reference","createModelReference","getOrCreate","object","textEditorModel","None","getTopLevelSymbols","dispose"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/browser/documentSymbols.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { IOutlineModelService } from './outlineModel.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nCommandsRegistry.registerCommand('_executeDocumentSymbolProvider', async function (accessor, ...args) {\n    const [resource] = args;\n    assertType(URI.isUri(resource));\n    const outlineService = accessor.get(IOutlineModelService);\n    const modelService = accessor.get(ITextModelService);\n    const reference = await modelService.createModelReference(resource);\n    try {\n        return (await outlineService.getOrCreate(reference.object.textEditorModel, CancellationToken.None)).getTopLevelSymbols();\n    }\n    finally {\n        reference.dispose();\n    }\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,iBAAiB,QAAQ,yCAAyC;AAC3E,SAASC,UAAU,QAAQ,kCAAkC;AAC7D,SAASC,GAAG,QAAQ,gCAAgC;AACpD,SAASC,iBAAiB,QAAQ,6CAA6C;AAC/E,SAASC,oBAAoB,QAAQ,mBAAmB;AACxD,SAASC,gBAAgB,QAAQ,kDAAkD;AACnFA,gBAAgB,CAACC,eAAe,CAAC,gCAAgC,EAAE,gBAAgBC,QAAQ,EAAE,GAAGC,IAAI,EAAE;EAClG,MAAM,CAACC,QAAQ,CAAC,GAAGD,IAAI;EACvBP,UAAU,CAACC,GAAG,CAACQ,KAAK,CAACD,QAAQ,CAAC,CAAC;EAC/B,MAAME,cAAc,GAAGJ,QAAQ,CAACK,GAAG,CAACR,oBAAoB,CAAC;EACzD,MAAMS,YAAY,GAAGN,QAAQ,CAACK,GAAG,CAACT,iBAAiB,CAAC;EACpD,MAAMW,SAAS,GAAG,MAAMD,YAAY,CAACE,oBAAoB,CAACN,QAAQ,CAAC;EACnE,IAAI;IACA,OAAO,CAAC,MAAME,cAAc,CAACK,WAAW,CAACF,SAAS,CAACG,MAAM,CAACC,eAAe,EAAElB,iBAAiB,CAACmB,IAAI,CAAC,EAAEC,kBAAkB,CAAC,CAAC;EAC5H,CAAC,SACO;IACJN,SAAS,CAACO,OAAO,CAAC,CAAC;EACvB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}