{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.45.0(5e5af013f8d295555a7210df0d5f2cea0bf5dd56)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/pla/pla.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [[\"[\", \"]\"], [\"<\", \">\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"<\",\n    close: \">\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }],\n  surroundingPairs: [{\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"<\",\n    close: \">\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".pla\",\n  brackets: [{\n    open: \"[\",\n    close: \"]\",\n    token: \"delimiter.square\"\n  }, {\n    open: \"<\",\n    close: \">\",\n    token: \"delimiter.angle\"\n  }, {\n    open: \"(\",\n    close: \")\",\n    token: \"delimiter.parenthesis\"\n  }],\n  keywords: [\".i\", \".o\", \".mv\", \".ilb\", \".ob\", \".label\", \".type\", \".phase\", \".pair\", \".symbolic\", \".symbolic-output\", \".kiss\", \".p\", \".e\", \".end\"],\n  comment: /#.*$/,\n  identifier: /[a-zA-Z]+[a-zA-Z0-9_\\-]*/,\n  plaContent: /[01\\-~\\|]+/,\n  tokenizer: {\n    root: [{\n      include: \"@whitespace\"\n    }, [/@comment/, \"comment\"], [/\\.([a-zA-Z_\\-]+)/, {\n      cases: {\n        \"@eos\": {\n          token: \"keyword.$1\"\n        },\n        \"@keywords\": {\n          cases: {\n            \".type\": {\n              token: \"keyword.$1\",\n              next: \"@type\"\n            },\n            \"@default\": {\n              token: \"keyword.$1\",\n              next: \"@keywordArg\"\n            }\n          }\n        },\n        \"@default\": {\n          token: \"keyword.$1\"\n        }\n      }\n    }], [/@identifier/, \"identifier\"], [/@plaContent/, \"string\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"]],\n    type: [{\n      include: \"@whitespace\"\n    }, [/\\w+/, {\n      token: \"type\",\n      next: \"@pop\"\n    }]],\n    keywordArg: [[/[ \\t\\r\\n]+/, {\n      cases: {\n        \"@eos\": {\n          token: \"\",\n          next: \"@pop\"\n        },\n        \"@default\": \"\"\n      }\n    }], [/@comment/, \"comment\", \"@pop\"], [/[<>()\\[\\]]/, {\n      cases: {\n        \"@eos\": {\n          token: \"@brackets\",\n          next: \"@pop\"\n        },\n        \"@default\": \"@brackets\"\n      }\n    }], [/\\-?\\d+/, {\n      cases: {\n        \"@eos\": {\n          token: \"number\",\n          next: \"@pop\"\n        },\n        \"@default\": \"number\"\n      }\n    }], [/@identifier/, {\n      cases: {\n        \"@eos\": {\n          token: \"identifier\",\n          next: \"@pop\"\n        },\n        \"@default\": \"identifier\"\n      }\n    }], [/[;=]/, {\n      cases: {\n        \"@eos\": {\n          token: \"delimiter\",\n          next: \"@pop\"\n        },\n        \"@default\": \"delimiter\"\n      }\n    }]]\n  }\n};\nexport { conf, language };","map":{"version":3,"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","token","keywords","comment","identifier","plaContent","tokenizer","root","include","cases","next","whitespace","type","keywordArg"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/basic-languages/pla/pla.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.45.0(5e5af013f8d295555a7210df0d5f2cea0bf5dd56)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/pla/pla.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"[\", \"]\"],\n    [\"<\", \">\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"[\", close: \"]\" },\n    { open: \"<\", close: \">\" },\n    { open: \"(\", close: \")\" }\n  ],\n  surroundingPairs: [\n    { open: \"[\", close: \"]\" },\n    { open: \"<\", close: \">\" },\n    { open: \"(\", close: \")\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".pla\",\n  brackets: [\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\n  ],\n  keywords: [\n    \".i\",\n    \".o\",\n    \".mv\",\n    \".ilb\",\n    \".ob\",\n    \".label\",\n    \".type\",\n    \".phase\",\n    \".pair\",\n    \".symbolic\",\n    \".symbolic-output\",\n    \".kiss\",\n    \".p\",\n    \".e\",\n    \".end\"\n  ],\n  comment: /#.*$/,\n  identifier: /[a-zA-Z]+[a-zA-Z0-9_\\-]*/,\n  plaContent: /[01\\-~\\|]+/,\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      [/@comment/, \"comment\"],\n      [\n        /\\.([a-zA-Z_\\-]+)/,\n        {\n          cases: {\n            \"@eos\": { token: \"keyword.$1\" },\n            \"@keywords\": {\n              cases: {\n                \".type\": { token: \"keyword.$1\", next: \"@type\" },\n                \"@default\": { token: \"keyword.$1\", next: \"@keywordArg\" }\n              }\n            },\n            \"@default\": { token: \"keyword.$1\" }\n          }\n        }\n      ],\n      [/@identifier/, \"identifier\"],\n      [/@plaContent/, \"string\"]\n    ],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"]],\n    type: [{ include: \"@whitespace\" }, [/\\w+/, { token: \"type\", next: \"@pop\" }]],\n    keywordArg: [\n      [\n        /[ \\t\\r\\n]+/,\n        {\n          cases: {\n            \"@eos\": { token: \"\", next: \"@pop\" },\n            \"@default\": \"\"\n          }\n        }\n      ],\n      [/@comment/, \"comment\", \"@pop\"],\n      [\n        /[<>()\\[\\]]/,\n        {\n          cases: {\n            \"@eos\": { token: \"@brackets\", next: \"@pop\" },\n            \"@default\": \"@brackets\"\n          }\n        }\n      ],\n      [\n        /\\-?\\d+/,\n        {\n          cases: {\n            \"@eos\": { token: \"number\", next: \"@pop\" },\n            \"@default\": \"number\"\n          }\n        }\n      ],\n      [\n        /@identifier/,\n        {\n          cases: {\n            \"@eos\": { token: \"identifier\", next: \"@pop\" },\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [\n        /[;=]/,\n        {\n          cases: {\n            \"@eos\": { token: \"delimiter\", next: \"@pop\" },\n            \"@default\": \"delimiter\"\n          }\n        }\n      ]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAIA,IAAI,GAAG;EACTC,QAAQ,EAAE;IACRC,WAAW,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE,CACR,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,CACX;EACDC,gBAAgB,EAAE,CAChB;IAAEC,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAI,CAAC,EACzB;IAAED,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAI,CAAC,EACzB;IAAED,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAI,CAAC,CAC1B;EACDC,gBAAgB,EAAE,CAChB;IAAEF,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAI,CAAC,EACzB;IAAED,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAI,CAAC,EACzB;IAAED,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAI,CAAC;AAE7B,CAAC;AACD,IAAIE,QAAQ,GAAG;EACbC,YAAY,EAAE,EAAE;EAChBC,YAAY,EAAE,MAAM;EACpBP,QAAQ,EAAE,CACR;IAAEE,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEK,KAAK,EAAE;EAAmB,CAAC,EACpD;IAAEN,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEK,KAAK,EAAE;EAAkB,CAAC,EACnD;IAAEN,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEK,KAAK,EAAE;EAAwB,CAAC,CAC1D;EACDC,QAAQ,EAAE,CACR,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,MAAM,EACN,KAAK,EACL,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,OAAO,EACP,WAAW,EACX,kBAAkB,EAClB,OAAO,EACP,IAAI,EACJ,IAAI,EACJ,MAAM,CACP;EACDC,OAAO,EAAE,MAAM;EACfC,UAAU,EAAE,0BAA0B;EACtCC,UAAU,EAAE,YAAY;EACxBC,SAAS,EAAE;IACTC,IAAI,EAAE,CACJ;MAAEC,OAAO,EAAE;IAAc,CAAC,EAC1B,CAAC,UAAU,EAAE,SAAS,CAAC,EACvB,CACE,kBAAkB,EAClB;MACEC,KAAK,EAAE;QACL,MAAM,EAAE;UAAER,KAAK,EAAE;QAAa,CAAC;QAC/B,WAAW,EAAE;UACXQ,KAAK,EAAE;YACL,OAAO,EAAE;cAAER,KAAK,EAAE,YAAY;cAAES,IAAI,EAAE;YAAQ,CAAC;YAC/C,UAAU,EAAE;cAAET,KAAK,EAAE,YAAY;cAAES,IAAI,EAAE;YAAc;UACzD;QACF,CAAC;QACD,UAAU,EAAE;UAAET,KAAK,EAAE;QAAa;MACpC;IACF,CAAC,CACF,EACD,CAAC,aAAa,EAAE,YAAY,CAAC,EAC7B,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC1B;IACDU,UAAU,EAAE,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;IAChCC,IAAI,EAAE,CAAC;MAAEJ,OAAO,EAAE;IAAc,CAAC,EAAE,CAAC,KAAK,EAAE;MAAEP,KAAK,EAAE,MAAM;MAAES,IAAI,EAAE;IAAO,CAAC,CAAC,CAAC;IAC5EG,UAAU,EAAE,CACV,CACE,YAAY,EACZ;MACEJ,KAAK,EAAE;QACL,MAAM,EAAE;UAAER,KAAK,EAAE,EAAE;UAAES,IAAI,EAAE;QAAO,CAAC;QACnC,UAAU,EAAE;MACd;IACF,CAAC,CACF,EACD,CAAC,UAAU,EAAE,SAAS,EAAE,MAAM,CAAC,EAC/B,CACE,YAAY,EACZ;MACED,KAAK,EAAE;QACL,MAAM,EAAE;UAAER,KAAK,EAAE,WAAW;UAAES,IAAI,EAAE;QAAO,CAAC;QAC5C,UAAU,EAAE;MACd;IACF,CAAC,CACF,EACD,CACE,QAAQ,EACR;MACED,KAAK,EAAE;QACL,MAAM,EAAE;UAAER,KAAK,EAAE,QAAQ;UAAES,IAAI,EAAE;QAAO,CAAC;QACzC,UAAU,EAAE;MACd;IACF,CAAC,CACF,EACD,CACE,aAAa,EACb;MACED,KAAK,EAAE;QACL,MAAM,EAAE;UAAER,KAAK,EAAE,YAAY;UAAES,IAAI,EAAE;QAAO,CAAC;QAC7C,UAAU,EAAE;MACd;IACF,CAAC,CACF,EACD,CACE,MAAM,EACN;MACED,KAAK,EAAE;QACL,MAAM,EAAE;UAAER,KAAK,EAAE,WAAW;UAAES,IAAI,EAAE;QAAO,CAAC;QAC5C,UAAU,EAAE;MACd;IACF,CAAC,CACF;EAEL;AACF,CAAC;AACD,SACEpB,IAAI,EACJQ,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}