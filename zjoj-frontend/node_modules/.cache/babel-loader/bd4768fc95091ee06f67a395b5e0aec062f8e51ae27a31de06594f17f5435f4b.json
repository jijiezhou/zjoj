{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nvar Severity;\n(function (Severity) {\n  Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n  Severity[Severity[\"Info\"] = 1] = \"Info\";\n  Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n  Severity[Severity[\"Error\"] = 3] = \"Error\";\n})(Severity || (Severity = {}));\n(function (Severity) {\n  const _error = 'error';\n  const _warning = 'warning';\n  const _warn = 'warn';\n  const _info = 'info';\n  const _ignore = 'ignore';\n  /**\n   * Parses 'error', 'warning', 'warn', 'info' in call casings\n   * and falls back to ignore.\n   */\n  function fromValue(value) {\n    if (!value) {\n      return Severity.Ignore;\n    }\n    if (strings.equalsIgnoreCase(_error, value)) {\n      return Severity.Error;\n    }\n    if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n      return Severity.Warning;\n    }\n    if (strings.equalsIgnoreCase(_info, value)) {\n      return Severity.Info;\n    }\n    return Severity.Ignore;\n  }\n  Severity.fromValue = fromValue;\n  function toString(severity) {\n    switch (severity) {\n      case Severity.Error:\n        return _error;\n      case Severity.Warning:\n        return _warning;\n      case Severity.Info:\n        return _info;\n      default:\n        return _ignore;\n    }\n  }\n  Severity.toString = toString;\n})(Severity || (Severity = {}));\nexport default Severity;","map":{"version":3,"names":["strings","Severity","_error","_warning","_warn","_info","_ignore","fromValue","value","Ignore","equalsIgnoreCase","Error","Warning","Info","toString","severity"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/base/common/severity.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nvar Severity;\n(function (Severity) {\n    Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n    Severity[Severity[\"Info\"] = 1] = \"Info\";\n    Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n    Severity[Severity[\"Error\"] = 3] = \"Error\";\n})(Severity || (Severity = {}));\n(function (Severity) {\n    const _error = 'error';\n    const _warning = 'warning';\n    const _warn = 'warn';\n    const _info = 'info';\n    const _ignore = 'ignore';\n    /**\n     * Parses 'error', 'warning', 'warn', 'info' in call casings\n     * and falls back to ignore.\n     */\n    function fromValue(value) {\n        if (!value) {\n            return Severity.Ignore;\n        }\n        if (strings.equalsIgnoreCase(_error, value)) {\n            return Severity.Error;\n        }\n        if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n            return Severity.Warning;\n        }\n        if (strings.equalsIgnoreCase(_info, value)) {\n            return Severity.Info;\n        }\n        return Severity.Ignore;\n    }\n    Severity.fromValue = fromValue;\n    function toString(severity) {\n        switch (severity) {\n            case Severity.Error: return _error;\n            case Severity.Warning: return _warning;\n            case Severity.Info: return _info;\n            default: return _ignore;\n        }\n    }\n    Severity.toString = toString;\n})(Severity || (Severity = {}));\nexport default Severity;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,OAAO,MAAM,cAAc;AACvC,IAAIC,QAAQ;AACZ,CAAC,UAAUA,QAAQ,EAAE;EACjBA,QAAQ,CAACA,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ;EAC3CA,QAAQ,CAACA,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;EACvCA,QAAQ,CAACA,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;EAC7CA,QAAQ,CAACA,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;AAC7C,CAAC,EAAEA,QAAQ,KAAKA,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,UAAUA,QAAQ,EAAE;EACjB,MAAMC,MAAM,GAAG,OAAO;EACtB,MAAMC,QAAQ,GAAG,SAAS;EAC1B,MAAMC,KAAK,GAAG,MAAM;EACpB,MAAMC,KAAK,GAAG,MAAM;EACpB,MAAMC,OAAO,GAAG,QAAQ;EACxB;AACJ;AACA;AACA;EACI,SAASC,SAASA,CAACC,KAAK,EAAE;IACtB,IAAI,CAACA,KAAK,EAAE;MACR,OAAOP,QAAQ,CAACQ,MAAM;IAC1B;IACA,IAAIT,OAAO,CAACU,gBAAgB,CAACR,MAAM,EAAEM,KAAK,CAAC,EAAE;MACzC,OAAOP,QAAQ,CAACU,KAAK;IACzB;IACA,IAAIX,OAAO,CAACU,gBAAgB,CAACP,QAAQ,EAAEK,KAAK,CAAC,IAAIR,OAAO,CAACU,gBAAgB,CAACN,KAAK,EAAEI,KAAK,CAAC,EAAE;MACrF,OAAOP,QAAQ,CAACW,OAAO;IAC3B;IACA,IAAIZ,OAAO,CAACU,gBAAgB,CAACL,KAAK,EAAEG,KAAK,CAAC,EAAE;MACxC,OAAOP,QAAQ,CAACY,IAAI;IACxB;IACA,OAAOZ,QAAQ,CAACQ,MAAM;EAC1B;EACAR,QAAQ,CAACM,SAAS,GAAGA,SAAS;EAC9B,SAASO,QAAQA,CAACC,QAAQ,EAAE;IACxB,QAAQA,QAAQ;MACZ,KAAKd,QAAQ,CAACU,KAAK;QAAE,OAAOT,MAAM;MAClC,KAAKD,QAAQ,CAACW,OAAO;QAAE,OAAOT,QAAQ;MACtC,KAAKF,QAAQ,CAACY,IAAI;QAAE,OAAOR,KAAK;MAChC;QAAS,OAAOC,OAAO;IAC3B;EACJ;EACAL,QAAQ,CAACa,QAAQ,GAAGA,QAAQ;AAChC,CAAC,EAAEb,QAAQ,KAAKA,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/B,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}