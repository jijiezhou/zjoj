{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar StickyScrollController_1;\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { StickyScrollWidget, StickyScrollWidgetState } from './stickyScrollWidget.js';\nimport { StickyLineCandidateProvider } from './stickyScrollProvider.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { Range } from '../../../common/core/range.js';\nimport { getDefinitionsAtPosition } from '../../gotoSymbol/browser/goToSymbol.js';\nimport { goToDefinitionWithLocation } from '../../inlayHints/browser/inlayHintsLocations.js';\nimport { Position } from '../../../common/core/position.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { StickyRange } from './stickyScrollElement.js';\nimport { StandardMouseEvent } from '../../../../base/browser/mouseEvent.js';\nimport { FoldingController } from '../../folding/browser/folding.js';\nimport { toggleCollapseState } from '../../folding/browser/foldingModel.js';\nlet StickyScrollController = StickyScrollController_1 = class StickyScrollController extends Disposable {\n  constructor(_editor, _contextMenuService, _languageFeaturesService, _instaService, _languageConfigurationService, _languageFeatureDebounceService, _contextKeyService) {\n    super();\n    this._editor = _editor;\n    this._contextMenuService = _contextMenuService;\n    this._languageFeaturesService = _languageFeaturesService;\n    this._instaService = _instaService;\n    this._contextKeyService = _contextKeyService;\n    this._sessionStore = new DisposableStore();\n    this._foldingModel = null;\n    this._maxStickyLines = Number.MAX_SAFE_INTEGER;\n    this._candidateDefinitionsLength = -1;\n    this._focusedStickyElementIndex = -1;\n    this._enabled = false;\n    this._focused = false;\n    this._positionRevealed = false;\n    this._onMouseDown = false;\n    this._endLineNumbers = [];\n    this._showEndForLine = null;\n    this._stickyScrollWidget = new StickyScrollWidget(this._editor);\n    this._stickyLineCandidateProvider = new StickyLineCandidateProvider(this._editor, _languageFeaturesService, _languageConfigurationService);\n    this._register(this._stickyScrollWidget);\n    this._register(this._stickyLineCandidateProvider);\n    this._widgetState = new StickyScrollWidgetState([], [], 0);\n    this._readConfiguration();\n    const stickyScrollDomNode = this._stickyScrollWidget.getDomNode();\n    this._register(this._editor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(114 /* EditorOption.stickyScroll */) || e.hasChanged(72 /* EditorOption.minimap */) || e.hasChanged(66 /* EditorOption.lineHeight */) || e.hasChanged(109 /* EditorOption.showFoldingControls */)) {\n        this._readConfiguration();\n      }\n    }));\n    this._register(dom.addDisposableListener(stickyScrollDomNode, dom.EventType.CONTEXT_MENU, async event => {\n      this._onContextMenu(dom.getWindow(stickyScrollDomNode), event);\n    }));\n    this._stickyScrollFocusedContextKey = EditorContextKeys.stickyScrollFocused.bindTo(this._contextKeyService);\n    this._stickyScrollVisibleContextKey = EditorContextKeys.stickyScrollVisible.bindTo(this._contextKeyService);\n    const focusTracker = this._register(dom.trackFocus(stickyScrollDomNode));\n    this._register(focusTracker.onDidBlur(_ => {\n      // Suppose that the blurring is caused by scrolling, then keep the focus on the sticky scroll\n      // This is determined by the fact that the height of the widget has become zero and there has been no position revealing\n      if (this._positionRevealed === false && stickyScrollDomNode.clientHeight === 0) {\n        this._focusedStickyElementIndex = -1;\n        this.focus();\n      }\n      // In all other casees, dispose the focus on the sticky scroll\n      else {\n        this._disposeFocusStickyScrollStore();\n      }\n    }));\n    this._register(focusTracker.onDidFocus(_ => {\n      this.focus();\n    }));\n    this._registerMouseListeners();\n    // Suppose that mouse down on the sticky scroll, then do not focus on the sticky scroll because this will be followed by the revealing of a position\n    this._register(dom.addDisposableListener(stickyScrollDomNode, dom.EventType.MOUSE_DOWN, e => {\n      this._onMouseDown = true;\n    }));\n  }\n  static get(editor) {\n    return editor.getContribution(StickyScrollController_1.ID);\n  }\n  _disposeFocusStickyScrollStore() {\n    var _a;\n    this._stickyScrollFocusedContextKey.set(false);\n    (_a = this._focusDisposableStore) === null || _a === void 0 ? void 0 : _a.dispose();\n    this._focused = false;\n    this._positionRevealed = false;\n    this._onMouseDown = false;\n  }\n  focus() {\n    // If the mouse is down, do not focus on the sticky scroll\n    if (this._onMouseDown) {\n      this._onMouseDown = false;\n      this._editor.focus();\n      return;\n    }\n    const focusState = this._stickyScrollFocusedContextKey.get();\n    if (focusState === true) {\n      return;\n    }\n    this._focused = true;\n    this._focusDisposableStore = new DisposableStore();\n    this._stickyScrollFocusedContextKey.set(true);\n    this._focusedStickyElementIndex = this._stickyScrollWidget.lineNumbers.length - 1;\n    this._stickyScrollWidget.focusLineWithIndex(this._focusedStickyElementIndex);\n  }\n  focusNext() {\n    if (this._focusedStickyElementIndex < this._stickyScrollWidget.lineNumberCount - 1) {\n      this._focusNav(true);\n    }\n  }\n  focusPrevious() {\n    if (this._focusedStickyElementIndex > 0) {\n      this._focusNav(false);\n    }\n  }\n  selectEditor() {\n    this._editor.focus();\n  }\n  // True is next, false is previous\n  _focusNav(direction) {\n    this._focusedStickyElementIndex = direction ? this._focusedStickyElementIndex + 1 : this._focusedStickyElementIndex - 1;\n    this._stickyScrollWidget.focusLineWithIndex(this._focusedStickyElementIndex);\n  }\n  goToFocused() {\n    const lineNumbers = this._stickyScrollWidget.lineNumbers;\n    this._disposeFocusStickyScrollStore();\n    this._revealPosition({\n      lineNumber: lineNumbers[this._focusedStickyElementIndex],\n      column: 1\n    });\n  }\n  _revealPosition(position) {\n    this._reveaInEditor(position, () => this._editor.revealPosition(position));\n  }\n  _revealLineInCenterIfOutsideViewport(position) {\n    this._reveaInEditor(position, () => this._editor.revealLineInCenterIfOutsideViewport(position.lineNumber, 0 /* ScrollType.Smooth */));\n  }\n  _reveaInEditor(position, revealFunction) {\n    if (this._focused) {\n      this._disposeFocusStickyScrollStore();\n    }\n    this._positionRevealed = true;\n    revealFunction();\n    this._editor.setSelection(Range.fromPositions(position));\n    this._editor.focus();\n  }\n  _registerMouseListeners() {\n    const sessionStore = this._register(new DisposableStore());\n    const gesture = this._register(new ClickLinkGesture(this._editor, {\n      extractLineNumberFromMouseEvent: e => {\n        const position = this._stickyScrollWidget.getEditorPositionFromNode(e.target.element);\n        return position ? position.lineNumber : 0;\n      }\n    }));\n    const getMouseEventTarget = mouseEvent => {\n      if (!this._editor.hasModel()) {\n        return null;\n      }\n      if (mouseEvent.target.type !== 12 /* MouseTargetType.OVERLAY_WIDGET */ || mouseEvent.target.detail !== this._stickyScrollWidget.getId()) {\n        // not hovering over our widget\n        return null;\n      }\n      const mouseTargetElement = mouseEvent.target.element;\n      if (!mouseTargetElement || mouseTargetElement.innerText !== mouseTargetElement.innerHTML) {\n        // not on a span element rendering text\n        return null;\n      }\n      const position = this._stickyScrollWidget.getEditorPositionFromNode(mouseTargetElement);\n      if (!position) {\n        // not hovering a sticky scroll line\n        return null;\n      }\n      return {\n        range: new Range(position.lineNumber, position.column, position.lineNumber, position.column + mouseTargetElement.innerText.length),\n        textElement: mouseTargetElement\n      };\n    };\n    const stickyScrollWidgetDomNode = this._stickyScrollWidget.getDomNode();\n    this._register(dom.addStandardDisposableListener(stickyScrollWidgetDomNode, dom.EventType.CLICK, mouseEvent => {\n      if (mouseEvent.ctrlKey || mouseEvent.altKey || mouseEvent.metaKey) {\n        // modifier pressed\n        return;\n      }\n      if (!mouseEvent.leftButton) {\n        // not left click\n        return;\n      }\n      if (mouseEvent.shiftKey) {\n        // shift click\n        const lineIndex = this._stickyScrollWidget.getLineIndexFromChildDomNode(mouseEvent.target);\n        if (lineIndex === null) {\n          return;\n        }\n        const position = new Position(this._endLineNumbers[lineIndex], 1);\n        this._revealLineInCenterIfOutsideViewport(position);\n        return;\n      }\n      const isInFoldingIconDomNode = this._stickyScrollWidget.isInFoldingIconDomNode(mouseEvent.target);\n      if (isInFoldingIconDomNode) {\n        // clicked on folding icon\n        const lineNumber = this._stickyScrollWidget.getLineNumberFromChildDomNode(mouseEvent.target);\n        this._toggleFoldingRegionForLine(lineNumber);\n        return;\n      }\n      const isInStickyLine = this._stickyScrollWidget.isInStickyLine(mouseEvent.target);\n      if (!isInStickyLine) {\n        return;\n      }\n      // normal click\n      let position = this._stickyScrollWidget.getEditorPositionFromNode(mouseEvent.target);\n      if (!position) {\n        const lineNumber = this._stickyScrollWidget.getLineNumberFromChildDomNode(mouseEvent.target);\n        if (lineNumber === null) {\n          // not hovering a sticky scroll line\n          return;\n        }\n        position = new Position(lineNumber, 1);\n      }\n      this._revealPosition(position);\n    }));\n    this._register(dom.addStandardDisposableListener(stickyScrollWidgetDomNode, dom.EventType.MOUSE_MOVE, mouseEvent => {\n      if (mouseEvent.shiftKey) {\n        const currentEndForLineIndex = this._stickyScrollWidget.getLineIndexFromChildDomNode(mouseEvent.target);\n        if (currentEndForLineIndex === null || this._showEndForLine !== null && this._showEndForLine === currentEndForLineIndex) {\n          return;\n        }\n        this._showEndForLine = currentEndForLineIndex;\n        this._renderStickyScroll();\n        return;\n      }\n      if (this._showEndForLine !== null) {\n        this._showEndForLine = null;\n        this._renderStickyScroll();\n      }\n    }));\n    this._register(dom.addDisposableListener(stickyScrollWidgetDomNode, dom.EventType.MOUSE_LEAVE, e => {\n      if (this._showEndForLine !== null) {\n        this._showEndForLine = null;\n        this._renderStickyScroll();\n      }\n    }));\n    this._register(gesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, _keyboardEvent]) => {\n      const mouseTarget = getMouseEventTarget(mouseEvent);\n      if (!mouseTarget || !mouseEvent.hasTriggerModifier || !this._editor.hasModel()) {\n        sessionStore.clear();\n        return;\n      }\n      const {\n        range,\n        textElement\n      } = mouseTarget;\n      if (!range.equalsRange(this._stickyRangeProjectedOnEditor)) {\n        this._stickyRangeProjectedOnEditor = range;\n        sessionStore.clear();\n      } else if (textElement.style.textDecoration === 'underline') {\n        return;\n      }\n      const cancellationToken = new CancellationTokenSource();\n      sessionStore.add(toDisposable(() => cancellationToken.dispose(true)));\n      let currentHTMLChild;\n      getDefinitionsAtPosition(this._languageFeaturesService.definitionProvider, this._editor.getModel(), new Position(range.startLineNumber, range.startColumn + 1), cancellationToken.token).then(candidateDefinitions => {\n        if (cancellationToken.token.isCancellationRequested) {\n          return;\n        }\n        if (candidateDefinitions.length !== 0) {\n          this._candidateDefinitionsLength = candidateDefinitions.length;\n          const childHTML = textElement;\n          if (currentHTMLChild !== childHTML) {\n            sessionStore.clear();\n            currentHTMLChild = childHTML;\n            currentHTMLChild.style.textDecoration = 'underline';\n            sessionStore.add(toDisposable(() => {\n              currentHTMLChild.style.textDecoration = 'none';\n            }));\n          } else if (!currentHTMLChild) {\n            currentHTMLChild = childHTML;\n            currentHTMLChild.style.textDecoration = 'underline';\n            sessionStore.add(toDisposable(() => {\n              currentHTMLChild.style.textDecoration = 'none';\n            }));\n          }\n        } else {\n          sessionStore.clear();\n        }\n      });\n    }));\n    this._register(gesture.onCancel(() => {\n      sessionStore.clear();\n    }));\n    this._register(gesture.onExecute(async e => {\n      if (e.target.type !== 12 /* MouseTargetType.OVERLAY_WIDGET */ || e.target.detail !== this._stickyScrollWidget.getId()) {\n        // not hovering over our widget\n        return;\n      }\n      const position = this._stickyScrollWidget.getEditorPositionFromNode(e.target.element);\n      if (!position) {\n        // not hovering a sticky scroll line\n        return;\n      }\n      if (this._candidateDefinitionsLength > 1) {\n        if (this._focused) {\n          this._disposeFocusStickyScrollStore();\n        }\n        this._revealPosition({\n          lineNumber: position.lineNumber,\n          column: 1\n        });\n      }\n      this._instaService.invokeFunction(goToDefinitionWithLocation, e, this._editor, {\n        uri: this._editor.getModel().uri,\n        range: this._stickyRangeProjectedOnEditor\n      });\n    }));\n  }\n  _onContextMenu(targetWindow, e) {\n    const event = new StandardMouseEvent(targetWindow, e);\n    this._contextMenuService.showContextMenu({\n      menuId: MenuId.StickyScrollContext,\n      getAnchor: () => event\n    });\n  }\n  _toggleFoldingRegionForLine(line) {\n    if (!this._foldingModel || line === null) {\n      return;\n    }\n    const stickyLine = this._stickyScrollWidget.getStickyLineForLine(line);\n    const foldingIcon = stickyLine === null || stickyLine === void 0 ? void 0 : stickyLine.foldingIcon;\n    if (!foldingIcon) {\n      return;\n    }\n    toggleCollapseState(this._foldingModel, Number.MAX_VALUE, [line]);\n    foldingIcon.isCollapsed = !foldingIcon.isCollapsed;\n    const scrollTop = (foldingIcon.isCollapsed ? this._editor.getTopForLineNumber(foldingIcon.foldingEndLine) : this._editor.getTopForLineNumber(foldingIcon.foldingStartLine)) - this._editor.getOption(66 /* EditorOption.lineHeight */) * stickyLine.index + 1;\n    this._editor.setScrollTop(scrollTop);\n    this._renderStickyScroll(line);\n  }\n  _readConfiguration() {\n    const options = this._editor.getOption(114 /* EditorOption.stickyScroll */);\n    if (options.enabled === false) {\n      this._editor.removeOverlayWidget(this._stickyScrollWidget);\n      this._sessionStore.clear();\n      this._enabled = false;\n      return;\n    } else if (options.enabled && !this._enabled) {\n      // When sticky scroll was just enabled, add the listeners on the sticky scroll\n      this._editor.addOverlayWidget(this._stickyScrollWidget);\n      this._sessionStore.add(this._editor.onDidScrollChange(e => {\n        if (e.scrollTopChanged) {\n          this._showEndForLine = null;\n          this._renderStickyScroll();\n        }\n      }));\n      this._sessionStore.add(this._editor.onDidLayoutChange(() => this._onDidResize()));\n      this._sessionStore.add(this._editor.onDidChangeModelTokens(e => this._onTokensChange(e)));\n      this._sessionStore.add(this._stickyLineCandidateProvider.onDidChangeStickyScroll(() => {\n        this._showEndForLine = null;\n        this._renderStickyScroll();\n      }));\n      this._enabled = true;\n    }\n    const lineNumberOption = this._editor.getOption(67 /* EditorOption.lineNumbers */);\n    if (lineNumberOption.renderType === 2 /* RenderLineNumbersType.Relative */) {\n      this._sessionStore.add(this._editor.onDidChangeCursorPosition(() => {\n        this._showEndForLine = null;\n        this._renderStickyScroll(-1);\n      }));\n    }\n  }\n  _needsUpdate(event) {\n    const stickyLineNumbers = this._stickyScrollWidget.getCurrentLines();\n    for (const stickyLineNumber of stickyLineNumbers) {\n      for (const range of event.ranges) {\n        if (stickyLineNumber >= range.fromLineNumber && stickyLineNumber <= range.toLineNumber) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  _onTokensChange(event) {\n    if (this._needsUpdate(event)) {\n      // Rebuilding the whole widget from line -1\n      this._renderStickyScroll(-1);\n    }\n  }\n  _onDidResize() {\n    const layoutInfo = this._editor.getLayoutInfo();\n    // Make sure sticky scroll doesn't take up more than 25% of the editor\n    const theoreticalLines = layoutInfo.height / this._editor.getOption(66 /* EditorOption.lineHeight */);\n    this._maxStickyLines = Math.round(theoreticalLines * .25);\n  }\n  async _renderStickyScroll(rebuildFromLine = Infinity) {\n    var _a, _b;\n    const model = this._editor.getModel();\n    if (!model || model.isTooLargeForTokenization()) {\n      this._foldingModel = null;\n      this._stickyScrollWidget.setState(undefined, null, rebuildFromLine);\n      return;\n    }\n    const stickyLineVersion = this._stickyLineCandidateProvider.getVersionId();\n    if (stickyLineVersion === undefined || stickyLineVersion === model.getVersionId()) {\n      this._foldingModel = (_b = await ((_a = FoldingController.get(this._editor)) === null || _a === void 0 ? void 0 : _a.getFoldingModel())) !== null && _b !== void 0 ? _b : null;\n      this._widgetState = this.findScrollWidgetState();\n      this._stickyScrollVisibleContextKey.set(!(this._widgetState.startLineNumbers.length === 0));\n      if (!this._focused) {\n        this._stickyScrollWidget.setState(this._widgetState, this._foldingModel, rebuildFromLine);\n      } else {\n        // Suppose that previously the sticky scroll widget had height 0, then if there are visible lines, set the last line as focused\n        if (this._focusedStickyElementIndex === -1) {\n          this._stickyScrollWidget.setState(this._widgetState, this._foldingModel, rebuildFromLine);\n          this._focusedStickyElementIndex = this._stickyScrollWidget.lineNumberCount - 1;\n          if (this._focusedStickyElementIndex !== -1) {\n            this._stickyScrollWidget.focusLineWithIndex(this._focusedStickyElementIndex);\n          }\n        } else {\n          const focusedStickyElementLineNumber = this._stickyScrollWidget.lineNumbers[this._focusedStickyElementIndex];\n          this._stickyScrollWidget.setState(this._widgetState, this._foldingModel, rebuildFromLine);\n          // Suppose that after setting the state, there are no sticky lines, set the focused index to -1\n          if (this._stickyScrollWidget.lineNumberCount === 0) {\n            this._focusedStickyElementIndex = -1;\n          } else {\n            const previousFocusedLineNumberExists = this._stickyScrollWidget.lineNumbers.includes(focusedStickyElementLineNumber);\n            // If the line number is still there, do not change anything\n            // If the line number is not there, set the new focused line to be the last line\n            if (!previousFocusedLineNumberExists) {\n              this._focusedStickyElementIndex = this._stickyScrollWidget.lineNumberCount - 1;\n            }\n            this._stickyScrollWidget.focusLineWithIndex(this._focusedStickyElementIndex);\n          }\n        }\n      }\n    }\n  }\n  findScrollWidgetState() {\n    const lineHeight = this._editor.getOption(66 /* EditorOption.lineHeight */);\n    const maxNumberStickyLines = Math.min(this._maxStickyLines, this._editor.getOption(114 /* EditorOption.stickyScroll */).maxLineCount);\n    const scrollTop = this._editor.getScrollTop();\n    let lastLineRelativePosition = 0;\n    const startLineNumbers = [];\n    const endLineNumbers = [];\n    const arrayVisibleRanges = this._editor.getVisibleRanges();\n    if (arrayVisibleRanges.length !== 0) {\n      const fullVisibleRange = new StickyRange(arrayVisibleRanges[0].startLineNumber, arrayVisibleRanges[arrayVisibleRanges.length - 1].endLineNumber);\n      const candidateRanges = this._stickyLineCandidateProvider.getCandidateStickyLinesIntersecting(fullVisibleRange);\n      for (const range of candidateRanges) {\n        const start = range.startLineNumber;\n        const end = range.endLineNumber;\n        const depth = range.nestingDepth;\n        if (end - start > 0) {\n          const topOfElementAtDepth = (depth - 1) * lineHeight;\n          const bottomOfElementAtDepth = depth * lineHeight;\n          const bottomOfBeginningLine = this._editor.getBottomForLineNumber(start) - scrollTop;\n          const topOfEndLine = this._editor.getTopForLineNumber(end) - scrollTop;\n          const bottomOfEndLine = this._editor.getBottomForLineNumber(end) - scrollTop;\n          if (topOfElementAtDepth > topOfEndLine && topOfElementAtDepth <= bottomOfEndLine) {\n            startLineNumbers.push(start);\n            endLineNumbers.push(end + 1);\n            lastLineRelativePosition = bottomOfEndLine - bottomOfElementAtDepth;\n            break;\n          } else if (bottomOfElementAtDepth > bottomOfBeginningLine && bottomOfElementAtDepth <= bottomOfEndLine) {\n            startLineNumbers.push(start);\n            endLineNumbers.push(end + 1);\n          }\n          if (startLineNumbers.length === maxNumberStickyLines) {\n            break;\n          }\n        }\n      }\n    }\n    this._endLineNumbers = endLineNumbers;\n    return new StickyScrollWidgetState(startLineNumbers, endLineNumbers, lastLineRelativePosition, this._showEndForLine);\n  }\n  dispose() {\n    super.dispose();\n    this._sessionStore.dispose();\n  }\n};\nStickyScrollController.ID = 'store.contrib.stickyScrollController';\nStickyScrollController = StickyScrollController_1 = __decorate([__param(1, IContextMenuService), __param(2, ILanguageFeaturesService), __param(3, IInstantiationService), __param(4, ILanguageConfigurationService), __param(5, ILanguageFeatureDebounceService), __param(6, IContextKeyService)], StickyScrollController);\nexport { StickyScrollController };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","StickyScrollController_1","Disposable","DisposableStore","toDisposable","ILanguageFeaturesService","StickyScrollWidget","StickyScrollWidgetState","StickyLineCandidateProvider","IInstantiationService","IContextMenuService","MenuId","IContextKeyService","EditorContextKeys","ClickLinkGesture","Range","getDefinitionsAtPosition","goToDefinitionWithLocation","Position","CancellationTokenSource","ILanguageConfigurationService","ILanguageFeatureDebounceService","dom","StickyRange","StandardMouseEvent","FoldingController","toggleCollapseState","StickyScrollController","constructor","_editor","_contextMenuService","_languageFeaturesService","_instaService","_languageConfigurationService","_languageFeatureDebounceService","_contextKeyService","_sessionStore","_foldingModel","_maxStickyLines","Number","MAX_SAFE_INTEGER","_candidateDefinitionsLength","_focusedStickyElementIndex","_enabled","_focused","_positionRevealed","_onMouseDown","_endLineNumbers","_showEndForLine","_stickyScrollWidget","_stickyLineCandidateProvider","_register","_widgetState","_readConfiguration","stickyScrollDomNode","getDomNode","onDidChangeConfiguration","e","hasChanged","addDisposableListener","EventType","CONTEXT_MENU","event","_onContextMenu","getWindow","_stickyScrollFocusedContextKey","stickyScrollFocused","bindTo","_stickyScrollVisibleContextKey","stickyScrollVisible","focusTracker","trackFocus","onDidBlur","_","clientHeight","focus","_disposeFocusStickyScrollStore","onDidFocus","_registerMouseListeners","MOUSE_DOWN","get","editor","getContribution","ID","_a","set","_focusDisposableStore","dispose","focusState","lineNumbers","focusLineWithIndex","focusNext","lineNumberCount","_focusNav","focusPrevious","selectEditor","direction","goToFocused","_revealPosition","lineNumber","column","position","_reveaInEditor","revealPosition","_revealLineInCenterIfOutsideViewport","revealLineInCenterIfOutsideViewport","revealFunction","setSelection","fromPositions","sessionStore","gesture","extractLineNumberFromMouseEvent","getEditorPositionFromNode","element","getMouseEventTarget","mouseEvent","hasModel","type","detail","getId","mouseTargetElement","innerText","innerHTML","range","textElement","stickyScrollWidgetDomNode","addStandardDisposableListener","CLICK","ctrlKey","altKey","metaKey","leftButton","shiftKey","lineIndex","getLineIndexFromChildDomNode","isInFoldingIconDomNode","getLineNumberFromChildDomNode","_toggleFoldingRegionForLine","isInStickyLine","MOUSE_MOVE","currentEndForLineIndex","_renderStickyScroll","MOUSE_LEAVE","onMouseMoveOrRelevantKeyDown","_keyboardEvent","mouseTarget","hasTriggerModifier","clear","equalsRange","_stickyRangeProjectedOnEditor","style","textDecoration","cancellationToken","add","currentHTMLChild","definitionProvider","getModel","startLineNumber","startColumn","token","then","candidateDefinitions","isCancellationRequested","childHTML","onCancel","onExecute","invokeFunction","uri","targetWindow","showContextMenu","menuId","StickyScrollContext","getAnchor","line","stickyLine","getStickyLineForLine","foldingIcon","MAX_VALUE","isCollapsed","scrollTop","getTopForLineNumber","foldingEndLine","foldingStartLine","getOption","index","setScrollTop","options","enabled","removeOverlayWidget","addOverlayWidget","onDidScrollChange","scrollTopChanged","onDidLayoutChange","_onDidResize","onDidChangeModelTokens","_onTokensChange","onDidChangeStickyScroll","lineNumberOption","renderType","onDidChangeCursorPosition","_needsUpdate","stickyLineNumbers","getCurrentLines","stickyLineNumber","ranges","fromLineNumber","toLineNumber","layoutInfo","getLayoutInfo","theoreticalLines","height","Math","round","rebuildFromLine","Infinity","_b","model","isTooLargeForTokenization","setState","undefined","stickyLineVersion","getVersionId","getFoldingModel","findScrollWidgetState","startLineNumbers","focusedStickyElementLineNumber","previousFocusedLineNumberExists","includes","lineHeight","maxNumberStickyLines","min","maxLineCount","getScrollTop","lastLineRelativePosition","endLineNumbers","arrayVisibleRanges","getVisibleRanges","fullVisibleRange","endLineNumber","candidateRanges","getCandidateStickyLinesIntersecting","start","end","depth","nestingDepth","topOfElementAtDepth","bottomOfElementAtDepth","bottomOfBeginningLine","getBottomForLineNumber","topOfEndLine","bottomOfEndLine","push"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/stickyScroll/browser/stickyScrollController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar StickyScrollController_1;\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { StickyScrollWidget, StickyScrollWidgetState } from './stickyScrollWidget.js';\nimport { StickyLineCandidateProvider } from './stickyScrollProvider.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { Range } from '../../../common/core/range.js';\nimport { getDefinitionsAtPosition } from '../../gotoSymbol/browser/goToSymbol.js';\nimport { goToDefinitionWithLocation } from '../../inlayHints/browser/inlayHintsLocations.js';\nimport { Position } from '../../../common/core/position.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { StickyRange } from './stickyScrollElement.js';\nimport { StandardMouseEvent } from '../../../../base/browser/mouseEvent.js';\nimport { FoldingController } from '../../folding/browser/folding.js';\nimport { toggleCollapseState } from '../../folding/browser/foldingModel.js';\nlet StickyScrollController = StickyScrollController_1 = class StickyScrollController extends Disposable {\n    constructor(_editor, _contextMenuService, _languageFeaturesService, _instaService, _languageConfigurationService, _languageFeatureDebounceService, _contextKeyService) {\n        super();\n        this._editor = _editor;\n        this._contextMenuService = _contextMenuService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._instaService = _instaService;\n        this._contextKeyService = _contextKeyService;\n        this._sessionStore = new DisposableStore();\n        this._foldingModel = null;\n        this._maxStickyLines = Number.MAX_SAFE_INTEGER;\n        this._candidateDefinitionsLength = -1;\n        this._focusedStickyElementIndex = -1;\n        this._enabled = false;\n        this._focused = false;\n        this._positionRevealed = false;\n        this._onMouseDown = false;\n        this._endLineNumbers = [];\n        this._showEndForLine = null;\n        this._stickyScrollWidget = new StickyScrollWidget(this._editor);\n        this._stickyLineCandidateProvider = new StickyLineCandidateProvider(this._editor, _languageFeaturesService, _languageConfigurationService);\n        this._register(this._stickyScrollWidget);\n        this._register(this._stickyLineCandidateProvider);\n        this._widgetState = new StickyScrollWidgetState([], [], 0);\n        this._readConfiguration();\n        const stickyScrollDomNode = this._stickyScrollWidget.getDomNode();\n        this._register(this._editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(114 /* EditorOption.stickyScroll */)\n                || e.hasChanged(72 /* EditorOption.minimap */)\n                || e.hasChanged(66 /* EditorOption.lineHeight */)\n                || e.hasChanged(109 /* EditorOption.showFoldingControls */)) {\n                this._readConfiguration();\n            }\n        }));\n        this._register(dom.addDisposableListener(stickyScrollDomNode, dom.EventType.CONTEXT_MENU, async (event) => {\n            this._onContextMenu(dom.getWindow(stickyScrollDomNode), event);\n        }));\n        this._stickyScrollFocusedContextKey = EditorContextKeys.stickyScrollFocused.bindTo(this._contextKeyService);\n        this._stickyScrollVisibleContextKey = EditorContextKeys.stickyScrollVisible.bindTo(this._contextKeyService);\n        const focusTracker = this._register(dom.trackFocus(stickyScrollDomNode));\n        this._register(focusTracker.onDidBlur(_ => {\n            // Suppose that the blurring is caused by scrolling, then keep the focus on the sticky scroll\n            // This is determined by the fact that the height of the widget has become zero and there has been no position revealing\n            if (this._positionRevealed === false && stickyScrollDomNode.clientHeight === 0) {\n                this._focusedStickyElementIndex = -1;\n                this.focus();\n            }\n            // In all other casees, dispose the focus on the sticky scroll\n            else {\n                this._disposeFocusStickyScrollStore();\n            }\n        }));\n        this._register(focusTracker.onDidFocus(_ => {\n            this.focus();\n        }));\n        this._registerMouseListeners();\n        // Suppose that mouse down on the sticky scroll, then do not focus on the sticky scroll because this will be followed by the revealing of a position\n        this._register(dom.addDisposableListener(stickyScrollDomNode, dom.EventType.MOUSE_DOWN, (e) => {\n            this._onMouseDown = true;\n        }));\n    }\n    static get(editor) {\n        return editor.getContribution(StickyScrollController_1.ID);\n    }\n    _disposeFocusStickyScrollStore() {\n        var _a;\n        this._stickyScrollFocusedContextKey.set(false);\n        (_a = this._focusDisposableStore) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._focused = false;\n        this._positionRevealed = false;\n        this._onMouseDown = false;\n    }\n    focus() {\n        // If the mouse is down, do not focus on the sticky scroll\n        if (this._onMouseDown) {\n            this._onMouseDown = false;\n            this._editor.focus();\n            return;\n        }\n        const focusState = this._stickyScrollFocusedContextKey.get();\n        if (focusState === true) {\n            return;\n        }\n        this._focused = true;\n        this._focusDisposableStore = new DisposableStore();\n        this._stickyScrollFocusedContextKey.set(true);\n        this._focusedStickyElementIndex = this._stickyScrollWidget.lineNumbers.length - 1;\n        this._stickyScrollWidget.focusLineWithIndex(this._focusedStickyElementIndex);\n    }\n    focusNext() {\n        if (this._focusedStickyElementIndex < this._stickyScrollWidget.lineNumberCount - 1) {\n            this._focusNav(true);\n        }\n    }\n    focusPrevious() {\n        if (this._focusedStickyElementIndex > 0) {\n            this._focusNav(false);\n        }\n    }\n    selectEditor() {\n        this._editor.focus();\n    }\n    // True is next, false is previous\n    _focusNav(direction) {\n        this._focusedStickyElementIndex = direction ? this._focusedStickyElementIndex + 1 : this._focusedStickyElementIndex - 1;\n        this._stickyScrollWidget.focusLineWithIndex(this._focusedStickyElementIndex);\n    }\n    goToFocused() {\n        const lineNumbers = this._stickyScrollWidget.lineNumbers;\n        this._disposeFocusStickyScrollStore();\n        this._revealPosition({ lineNumber: lineNumbers[this._focusedStickyElementIndex], column: 1 });\n    }\n    _revealPosition(position) {\n        this._reveaInEditor(position, () => this._editor.revealPosition(position));\n    }\n    _revealLineInCenterIfOutsideViewport(position) {\n        this._reveaInEditor(position, () => this._editor.revealLineInCenterIfOutsideViewport(position.lineNumber, 0 /* ScrollType.Smooth */));\n    }\n    _reveaInEditor(position, revealFunction) {\n        if (this._focused) {\n            this._disposeFocusStickyScrollStore();\n        }\n        this._positionRevealed = true;\n        revealFunction();\n        this._editor.setSelection(Range.fromPositions(position));\n        this._editor.focus();\n    }\n    _registerMouseListeners() {\n        const sessionStore = this._register(new DisposableStore());\n        const gesture = this._register(new ClickLinkGesture(this._editor, {\n            extractLineNumberFromMouseEvent: (e) => {\n                const position = this._stickyScrollWidget.getEditorPositionFromNode(e.target.element);\n                return position ? position.lineNumber : 0;\n            }\n        }));\n        const getMouseEventTarget = (mouseEvent) => {\n            if (!this._editor.hasModel()) {\n                return null;\n            }\n            if (mouseEvent.target.type !== 12 /* MouseTargetType.OVERLAY_WIDGET */ || mouseEvent.target.detail !== this._stickyScrollWidget.getId()) {\n                // not hovering over our widget\n                return null;\n            }\n            const mouseTargetElement = mouseEvent.target.element;\n            if (!mouseTargetElement || mouseTargetElement.innerText !== mouseTargetElement.innerHTML) {\n                // not on a span element rendering text\n                return null;\n            }\n            const position = this._stickyScrollWidget.getEditorPositionFromNode(mouseTargetElement);\n            if (!position) {\n                // not hovering a sticky scroll line\n                return null;\n            }\n            return {\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column + mouseTargetElement.innerText.length),\n                textElement: mouseTargetElement\n            };\n        };\n        const stickyScrollWidgetDomNode = this._stickyScrollWidget.getDomNode();\n        this._register(dom.addStandardDisposableListener(stickyScrollWidgetDomNode, dom.EventType.CLICK, (mouseEvent) => {\n            if (mouseEvent.ctrlKey || mouseEvent.altKey || mouseEvent.metaKey) {\n                // modifier pressed\n                return;\n            }\n            if (!mouseEvent.leftButton) {\n                // not left click\n                return;\n            }\n            if (mouseEvent.shiftKey) {\n                // shift click\n                const lineIndex = this._stickyScrollWidget.getLineIndexFromChildDomNode(mouseEvent.target);\n                if (lineIndex === null) {\n                    return;\n                }\n                const position = new Position(this._endLineNumbers[lineIndex], 1);\n                this._revealLineInCenterIfOutsideViewport(position);\n                return;\n            }\n            const isInFoldingIconDomNode = this._stickyScrollWidget.isInFoldingIconDomNode(mouseEvent.target);\n            if (isInFoldingIconDomNode) {\n                // clicked on folding icon\n                const lineNumber = this._stickyScrollWidget.getLineNumberFromChildDomNode(mouseEvent.target);\n                this._toggleFoldingRegionForLine(lineNumber);\n                return;\n            }\n            const isInStickyLine = this._stickyScrollWidget.isInStickyLine(mouseEvent.target);\n            if (!isInStickyLine) {\n                return;\n            }\n            // normal click\n            let position = this._stickyScrollWidget.getEditorPositionFromNode(mouseEvent.target);\n            if (!position) {\n                const lineNumber = this._stickyScrollWidget.getLineNumberFromChildDomNode(mouseEvent.target);\n                if (lineNumber === null) {\n                    // not hovering a sticky scroll line\n                    return;\n                }\n                position = new Position(lineNumber, 1);\n            }\n            this._revealPosition(position);\n        }));\n        this._register(dom.addStandardDisposableListener(stickyScrollWidgetDomNode, dom.EventType.MOUSE_MOVE, (mouseEvent) => {\n            if (mouseEvent.shiftKey) {\n                const currentEndForLineIndex = this._stickyScrollWidget.getLineIndexFromChildDomNode(mouseEvent.target);\n                if (currentEndForLineIndex === null || this._showEndForLine !== null && this._showEndForLine === currentEndForLineIndex) {\n                    return;\n                }\n                this._showEndForLine = currentEndForLineIndex;\n                this._renderStickyScroll();\n                return;\n            }\n            if (this._showEndForLine !== null) {\n                this._showEndForLine = null;\n                this._renderStickyScroll();\n            }\n        }));\n        this._register(dom.addDisposableListener(stickyScrollWidgetDomNode, dom.EventType.MOUSE_LEAVE, (e) => {\n            if (this._showEndForLine !== null) {\n                this._showEndForLine = null;\n                this._renderStickyScroll();\n            }\n        }));\n        this._register(gesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, _keyboardEvent]) => {\n            const mouseTarget = getMouseEventTarget(mouseEvent);\n            if (!mouseTarget || !mouseEvent.hasTriggerModifier || !this._editor.hasModel()) {\n                sessionStore.clear();\n                return;\n            }\n            const { range, textElement } = mouseTarget;\n            if (!range.equalsRange(this._stickyRangeProjectedOnEditor)) {\n                this._stickyRangeProjectedOnEditor = range;\n                sessionStore.clear();\n            }\n            else if (textElement.style.textDecoration === 'underline') {\n                return;\n            }\n            const cancellationToken = new CancellationTokenSource();\n            sessionStore.add(toDisposable(() => cancellationToken.dispose(true)));\n            let currentHTMLChild;\n            getDefinitionsAtPosition(this._languageFeaturesService.definitionProvider, this._editor.getModel(), new Position(range.startLineNumber, range.startColumn + 1), cancellationToken.token).then((candidateDefinitions => {\n                if (cancellationToken.token.isCancellationRequested) {\n                    return;\n                }\n                if (candidateDefinitions.length !== 0) {\n                    this._candidateDefinitionsLength = candidateDefinitions.length;\n                    const childHTML = textElement;\n                    if (currentHTMLChild !== childHTML) {\n                        sessionStore.clear();\n                        currentHTMLChild = childHTML;\n                        currentHTMLChild.style.textDecoration = 'underline';\n                        sessionStore.add(toDisposable(() => {\n                            currentHTMLChild.style.textDecoration = 'none';\n                        }));\n                    }\n                    else if (!currentHTMLChild) {\n                        currentHTMLChild = childHTML;\n                        currentHTMLChild.style.textDecoration = 'underline';\n                        sessionStore.add(toDisposable(() => {\n                            currentHTMLChild.style.textDecoration = 'none';\n                        }));\n                    }\n                }\n                else {\n                    sessionStore.clear();\n                }\n            }));\n        }));\n        this._register(gesture.onCancel(() => {\n            sessionStore.clear();\n        }));\n        this._register(gesture.onExecute(async (e) => {\n            if (e.target.type !== 12 /* MouseTargetType.OVERLAY_WIDGET */ || e.target.detail !== this._stickyScrollWidget.getId()) {\n                // not hovering over our widget\n                return;\n            }\n            const position = this._stickyScrollWidget.getEditorPositionFromNode(e.target.element);\n            if (!position) {\n                // not hovering a sticky scroll line\n                return;\n            }\n            if (this._candidateDefinitionsLength > 1) {\n                if (this._focused) {\n                    this._disposeFocusStickyScrollStore();\n                }\n                this._revealPosition({ lineNumber: position.lineNumber, column: 1 });\n            }\n            this._instaService.invokeFunction(goToDefinitionWithLocation, e, this._editor, { uri: this._editor.getModel().uri, range: this._stickyRangeProjectedOnEditor });\n        }));\n    }\n    _onContextMenu(targetWindow, e) {\n        const event = new StandardMouseEvent(targetWindow, e);\n        this._contextMenuService.showContextMenu({\n            menuId: MenuId.StickyScrollContext,\n            getAnchor: () => event,\n        });\n    }\n    _toggleFoldingRegionForLine(line) {\n        if (!this._foldingModel || line === null) {\n            return;\n        }\n        const stickyLine = this._stickyScrollWidget.getStickyLineForLine(line);\n        const foldingIcon = stickyLine === null || stickyLine === void 0 ? void 0 : stickyLine.foldingIcon;\n        if (!foldingIcon) {\n            return;\n        }\n        toggleCollapseState(this._foldingModel, Number.MAX_VALUE, [line]);\n        foldingIcon.isCollapsed = !foldingIcon.isCollapsed;\n        const scrollTop = (foldingIcon.isCollapsed ?\n            this._editor.getTopForLineNumber(foldingIcon.foldingEndLine)\n            : this._editor.getTopForLineNumber(foldingIcon.foldingStartLine))\n            - this._editor.getOption(66 /* EditorOption.lineHeight */) * stickyLine.index + 1;\n        this._editor.setScrollTop(scrollTop);\n        this._renderStickyScroll(line);\n    }\n    _readConfiguration() {\n        const options = this._editor.getOption(114 /* EditorOption.stickyScroll */);\n        if (options.enabled === false) {\n            this._editor.removeOverlayWidget(this._stickyScrollWidget);\n            this._sessionStore.clear();\n            this._enabled = false;\n            return;\n        }\n        else if (options.enabled && !this._enabled) {\n            // When sticky scroll was just enabled, add the listeners on the sticky scroll\n            this._editor.addOverlayWidget(this._stickyScrollWidget);\n            this._sessionStore.add(this._editor.onDidScrollChange((e) => {\n                if (e.scrollTopChanged) {\n                    this._showEndForLine = null;\n                    this._renderStickyScroll();\n                }\n            }));\n            this._sessionStore.add(this._editor.onDidLayoutChange(() => this._onDidResize()));\n            this._sessionStore.add(this._editor.onDidChangeModelTokens((e) => this._onTokensChange(e)));\n            this._sessionStore.add(this._stickyLineCandidateProvider.onDidChangeStickyScroll(() => {\n                this._showEndForLine = null;\n                this._renderStickyScroll();\n            }));\n            this._enabled = true;\n        }\n        const lineNumberOption = this._editor.getOption(67 /* EditorOption.lineNumbers */);\n        if (lineNumberOption.renderType === 2 /* RenderLineNumbersType.Relative */) {\n            this._sessionStore.add(this._editor.onDidChangeCursorPosition(() => {\n                this._showEndForLine = null;\n                this._renderStickyScroll(-1);\n            }));\n        }\n    }\n    _needsUpdate(event) {\n        const stickyLineNumbers = this._stickyScrollWidget.getCurrentLines();\n        for (const stickyLineNumber of stickyLineNumbers) {\n            for (const range of event.ranges) {\n                if (stickyLineNumber >= range.fromLineNumber && stickyLineNumber <= range.toLineNumber) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    _onTokensChange(event) {\n        if (this._needsUpdate(event)) {\n            // Rebuilding the whole widget from line -1\n            this._renderStickyScroll(-1);\n        }\n    }\n    _onDidResize() {\n        const layoutInfo = this._editor.getLayoutInfo();\n        // Make sure sticky scroll doesn't take up more than 25% of the editor\n        const theoreticalLines = layoutInfo.height / this._editor.getOption(66 /* EditorOption.lineHeight */);\n        this._maxStickyLines = Math.round(theoreticalLines * .25);\n    }\n    async _renderStickyScroll(rebuildFromLine = Infinity) {\n        var _a, _b;\n        const model = this._editor.getModel();\n        if (!model || model.isTooLargeForTokenization()) {\n            this._foldingModel = null;\n            this._stickyScrollWidget.setState(undefined, null, rebuildFromLine);\n            return;\n        }\n        const stickyLineVersion = this._stickyLineCandidateProvider.getVersionId();\n        if (stickyLineVersion === undefined || stickyLineVersion === model.getVersionId()) {\n            this._foldingModel = (_b = await ((_a = FoldingController.get(this._editor)) === null || _a === void 0 ? void 0 : _a.getFoldingModel())) !== null && _b !== void 0 ? _b : null;\n            this._widgetState = this.findScrollWidgetState();\n            this._stickyScrollVisibleContextKey.set(!(this._widgetState.startLineNumbers.length === 0));\n            if (!this._focused) {\n                this._stickyScrollWidget.setState(this._widgetState, this._foldingModel, rebuildFromLine);\n            }\n            else {\n                // Suppose that previously the sticky scroll widget had height 0, then if there are visible lines, set the last line as focused\n                if (this._focusedStickyElementIndex === -1) {\n                    this._stickyScrollWidget.setState(this._widgetState, this._foldingModel, rebuildFromLine);\n                    this._focusedStickyElementIndex = this._stickyScrollWidget.lineNumberCount - 1;\n                    if (this._focusedStickyElementIndex !== -1) {\n                        this._stickyScrollWidget.focusLineWithIndex(this._focusedStickyElementIndex);\n                    }\n                }\n                else {\n                    const focusedStickyElementLineNumber = this._stickyScrollWidget.lineNumbers[this._focusedStickyElementIndex];\n                    this._stickyScrollWidget.setState(this._widgetState, this._foldingModel, rebuildFromLine);\n                    // Suppose that after setting the state, there are no sticky lines, set the focused index to -1\n                    if (this._stickyScrollWidget.lineNumberCount === 0) {\n                        this._focusedStickyElementIndex = -1;\n                    }\n                    else {\n                        const previousFocusedLineNumberExists = this._stickyScrollWidget.lineNumbers.includes(focusedStickyElementLineNumber);\n                        // If the line number is still there, do not change anything\n                        // If the line number is not there, set the new focused line to be the last line\n                        if (!previousFocusedLineNumberExists) {\n                            this._focusedStickyElementIndex = this._stickyScrollWidget.lineNumberCount - 1;\n                        }\n                        this._stickyScrollWidget.focusLineWithIndex(this._focusedStickyElementIndex);\n                    }\n                }\n            }\n        }\n    }\n    findScrollWidgetState() {\n        const lineHeight = this._editor.getOption(66 /* EditorOption.lineHeight */);\n        const maxNumberStickyLines = Math.min(this._maxStickyLines, this._editor.getOption(114 /* EditorOption.stickyScroll */).maxLineCount);\n        const scrollTop = this._editor.getScrollTop();\n        let lastLineRelativePosition = 0;\n        const startLineNumbers = [];\n        const endLineNumbers = [];\n        const arrayVisibleRanges = this._editor.getVisibleRanges();\n        if (arrayVisibleRanges.length !== 0) {\n            const fullVisibleRange = new StickyRange(arrayVisibleRanges[0].startLineNumber, arrayVisibleRanges[arrayVisibleRanges.length - 1].endLineNumber);\n            const candidateRanges = this._stickyLineCandidateProvider.getCandidateStickyLinesIntersecting(fullVisibleRange);\n            for (const range of candidateRanges) {\n                const start = range.startLineNumber;\n                const end = range.endLineNumber;\n                const depth = range.nestingDepth;\n                if (end - start > 0) {\n                    const topOfElementAtDepth = (depth - 1) * lineHeight;\n                    const bottomOfElementAtDepth = depth * lineHeight;\n                    const bottomOfBeginningLine = this._editor.getBottomForLineNumber(start) - scrollTop;\n                    const topOfEndLine = this._editor.getTopForLineNumber(end) - scrollTop;\n                    const bottomOfEndLine = this._editor.getBottomForLineNumber(end) - scrollTop;\n                    if (topOfElementAtDepth > topOfEndLine && topOfElementAtDepth <= bottomOfEndLine) {\n                        startLineNumbers.push(start);\n                        endLineNumbers.push(end + 1);\n                        lastLineRelativePosition = bottomOfEndLine - bottomOfElementAtDepth;\n                        break;\n                    }\n                    else if (bottomOfElementAtDepth > bottomOfBeginningLine && bottomOfElementAtDepth <= bottomOfEndLine) {\n                        startLineNumbers.push(start);\n                        endLineNumbers.push(end + 1);\n                    }\n                    if (startLineNumbers.length === maxNumberStickyLines) {\n                        break;\n                    }\n                }\n            }\n        }\n        this._endLineNumbers = endLineNumbers;\n        return new StickyScrollWidgetState(startLineNumbers, endLineNumbers, lastLineRelativePosition, this._showEndForLine);\n    }\n    dispose() {\n        super.dispose();\n        this._sessionStore.dispose();\n    }\n};\nStickyScrollController.ID = 'store.contrib.stickyScrollController';\nStickyScrollController = StickyScrollController_1 = __decorate([\n    __param(1, IContextMenuService),\n    __param(2, ILanguageFeaturesService),\n    __param(3, IInstantiationService),\n    __param(4, ILanguageConfigurationService),\n    __param(5, ILanguageFeatureDebounceService),\n    __param(6, IContextKeyService)\n], StickyScrollController);\nexport { StickyScrollController };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA,IAAIA,UAAU,GAAI,IAAI,IAAI,IAAI,CAACA,UAAU,IAAK,UAAUC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAE;EACnF,IAAIC,CAAC,GAAGC,SAAS,CAACC,MAAM;IAAEC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGH,MAAM,GAAGE,IAAI,KAAK,IAAI,GAAGA,IAAI,GAAGK,MAAM,CAACC,wBAAwB,CAACR,MAAM,EAAEC,GAAG,CAAC,GAAGC,IAAI;IAAEO,CAAC;EAC5H,IAAI,OAAOC,OAAO,KAAK,QAAQ,IAAI,OAAOA,OAAO,CAACC,QAAQ,KAAK,UAAU,EAAEL,CAAC,GAAGI,OAAO,CAACC,QAAQ,CAACZ,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,CAAC,CAAC,KAC1H,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAM,GAAG,CAAC,EAAEO,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE,IAAIH,CAAC,GAAGV,UAAU,CAACa,CAAC,CAAC,EAAEN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAC,GAAGM,CAAC,CAACH,CAAC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGM,CAAC,CAACT,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,GAAGG,CAAC,CAACT,MAAM,EAAEC,GAAG,CAAC,KAAKK,CAAC;EACjJ,OAAOH,CAAC,GAAG,CAAC,IAAIG,CAAC,IAAIC,MAAM,CAACM,cAAc,CAACb,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,EAAEA,CAAC;AACjE,CAAC;AACD,IAAIQ,OAAO,GAAI,IAAI,IAAI,IAAI,CAACA,OAAO,IAAK,UAAUC,UAAU,EAAEC,SAAS,EAAE;EACrE,OAAO,UAAUhB,MAAM,EAAEC,GAAG,EAAE;IAAEe,SAAS,CAAChB,MAAM,EAAEC,GAAG,EAAEc,UAAU,CAAC;EAAE,CAAC;AACzE,CAAC;AACD,IAAIE,wBAAwB;AAC5B,SAASC,UAAU,EAAEC,eAAe,EAAEC,YAAY,QAAQ,sCAAsC;AAChG,SAASC,wBAAwB,QAAQ,8CAA8C;AACvF,SAASC,kBAAkB,EAAEC,uBAAuB,QAAQ,yBAAyB;AACrF,SAASC,2BAA2B,QAAQ,2BAA2B;AACvE,SAASC,qBAAqB,QAAQ,4DAA4D;AAClG,SAASC,mBAAmB,QAAQ,yDAAyD;AAC7F,SAASC,MAAM,QAAQ,gDAAgD;AACvE,SAASC,kBAAkB,QAAQ,sDAAsD;AACzF,SAASC,iBAAiB,QAAQ,sCAAsC;AACxE,SAASC,gBAAgB,QAAQ,mDAAmD;AACpF,SAASC,KAAK,QAAQ,+BAA+B;AACrD,SAASC,wBAAwB,QAAQ,wCAAwC;AACjF,SAASC,0BAA0B,QAAQ,iDAAiD;AAC5F,SAASC,QAAQ,QAAQ,kCAAkC;AAC3D,SAASC,uBAAuB,QAAQ,yCAAyC;AACjF,SAASC,6BAA6B,QAAQ,4DAA4D;AAC1G,SAASC,+BAA+B,QAAQ,qDAAqD;AACrG,OAAO,KAAKC,GAAG,MAAM,iCAAiC;AACtD,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,kBAAkB,QAAQ,wCAAwC;AAC3E,SAASC,iBAAiB,QAAQ,kCAAkC;AACpE,SAASC,mBAAmB,QAAQ,uCAAuC;AAC3E,IAAIC,sBAAsB,GAAG1B,wBAAwB,GAAG,MAAM0B,sBAAsB,SAASzB,UAAU,CAAC;EACpG0B,WAAWA,CAACC,OAAO,EAAEC,mBAAmB,EAAEC,wBAAwB,EAAEC,aAAa,EAAEC,6BAA6B,EAAEC,+BAA+B,EAAEC,kBAAkB,EAAE;IACnK,KAAK,CAAC,CAAC;IACP,IAAI,CAACN,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,mBAAmB,GAAGA,mBAAmB;IAC9C,IAAI,CAACC,wBAAwB,GAAGA,wBAAwB;IACxD,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACG,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,aAAa,GAAG,IAAIjC,eAAe,CAAC,CAAC;IAC1C,IAAI,CAACkC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,eAAe,GAAGC,MAAM,CAACC,gBAAgB;IAC9C,IAAI,CAACC,2BAA2B,GAAG,CAAC,CAAC;IACrC,IAAI,CAACC,0BAA0B,GAAG,CAAC,CAAC;IACpC,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,iBAAiB,GAAG,KAAK;IAC9B,IAAI,CAACC,YAAY,GAAG,KAAK;IACzB,IAAI,CAACC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACC,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACC,mBAAmB,GAAG,IAAI3C,kBAAkB,CAAC,IAAI,CAACuB,OAAO,CAAC;IAC/D,IAAI,CAACqB,4BAA4B,GAAG,IAAI1C,2BAA2B,CAAC,IAAI,CAACqB,OAAO,EAAEE,wBAAwB,EAAEE,6BAA6B,CAAC;IAC1I,IAAI,CAACkB,SAAS,CAAC,IAAI,CAACF,mBAAmB,CAAC;IACxC,IAAI,CAACE,SAAS,CAAC,IAAI,CAACD,4BAA4B,CAAC;IACjD,IAAI,CAACE,YAAY,GAAG,IAAI7C,uBAAuB,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC1D,IAAI,CAAC8C,kBAAkB,CAAC,CAAC;IACzB,MAAMC,mBAAmB,GAAG,IAAI,CAACL,mBAAmB,CAACM,UAAU,CAAC,CAAC;IACjE,IAAI,CAACJ,SAAS,CAAC,IAAI,CAACtB,OAAO,CAAC2B,wBAAwB,CAACC,CAAC,IAAI;MACtD,IAAIA,CAAC,CAACC,UAAU,CAAC,GAAG,CAAC,+BAA+B,CAAC,IAC9CD,CAAC,CAACC,UAAU,CAAC,EAAE,CAAC,0BAA0B,CAAC,IAC3CD,CAAC,CAACC,UAAU,CAAC,EAAE,CAAC,6BAA6B,CAAC,IAC9CD,CAAC,CAACC,UAAU,CAAC,GAAG,CAAC,sCAAsC,CAAC,EAAE;QAC7D,IAAI,CAACL,kBAAkB,CAAC,CAAC;MAC7B;IACJ,CAAC,CAAC,CAAC;IACH,IAAI,CAACF,SAAS,CAAC7B,GAAG,CAACqC,qBAAqB,CAACL,mBAAmB,EAAEhC,GAAG,CAACsC,SAAS,CAACC,YAAY,EAAE,MAAOC,KAAK,IAAK;MACvG,IAAI,CAACC,cAAc,CAACzC,GAAG,CAAC0C,SAAS,CAACV,mBAAmB,CAAC,EAAEQ,KAAK,CAAC;IAClE,CAAC,CAAC,CAAC;IACH,IAAI,CAACG,8BAA8B,GAAGpD,iBAAiB,CAACqD,mBAAmB,CAACC,MAAM,CAAC,IAAI,CAAChC,kBAAkB,CAAC;IAC3G,IAAI,CAACiC,8BAA8B,GAAGvD,iBAAiB,CAACwD,mBAAmB,CAACF,MAAM,CAAC,IAAI,CAAChC,kBAAkB,CAAC;IAC3G,MAAMmC,YAAY,GAAG,IAAI,CAACnB,SAAS,CAAC7B,GAAG,CAACiD,UAAU,CAACjB,mBAAmB,CAAC,CAAC;IACxE,IAAI,CAACH,SAAS,CAACmB,YAAY,CAACE,SAAS,CAACC,CAAC,IAAI;MACvC;MACA;MACA,IAAI,IAAI,CAAC5B,iBAAiB,KAAK,KAAK,IAAIS,mBAAmB,CAACoB,YAAY,KAAK,CAAC,EAAE;QAC5E,IAAI,CAAChC,0BAA0B,GAAG,CAAC,CAAC;QACpC,IAAI,CAACiC,KAAK,CAAC,CAAC;MAChB;MACA;MAAA,KACK;QACD,IAAI,CAACC,8BAA8B,CAAC,CAAC;MACzC;IACJ,CAAC,CAAC,CAAC;IACH,IAAI,CAACzB,SAAS,CAACmB,YAAY,CAACO,UAAU,CAACJ,CAAC,IAAI;MACxC,IAAI,CAACE,KAAK,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC;IACH,IAAI,CAACG,uBAAuB,CAAC,CAAC;IAC9B;IACA,IAAI,CAAC3B,SAAS,CAAC7B,GAAG,CAACqC,qBAAqB,CAACL,mBAAmB,EAAEhC,GAAG,CAACsC,SAAS,CAACmB,UAAU,EAAGtB,CAAC,IAAK;MAC3F,IAAI,CAACX,YAAY,GAAG,IAAI;IAC5B,CAAC,CAAC,CAAC;EACP;EACA,OAAOkC,GAAGA,CAACC,MAAM,EAAE;IACf,OAAOA,MAAM,CAACC,eAAe,CAACjF,wBAAwB,CAACkF,EAAE,CAAC;EAC9D;EACAP,8BAA8BA,CAAA,EAAG;IAC7B,IAAIQ,EAAE;IACN,IAAI,CAACnB,8BAA8B,CAACoB,GAAG,CAAC,KAAK,CAAC;IAC9C,CAACD,EAAE,GAAG,IAAI,CAACE,qBAAqB,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,OAAO,CAAC,CAAC;IACnF,IAAI,CAAC3C,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,iBAAiB,GAAG,KAAK;IAC9B,IAAI,CAACC,YAAY,GAAG,KAAK;EAC7B;EACA6B,KAAKA,CAAA,EAAG;IACJ;IACA,IAAI,IAAI,CAAC7B,YAAY,EAAE;MACnB,IAAI,CAACA,YAAY,GAAG,KAAK;MACzB,IAAI,CAACjB,OAAO,CAAC8C,KAAK,CAAC,CAAC;MACpB;IACJ;IACA,MAAMa,UAAU,GAAG,IAAI,CAACvB,8BAA8B,CAACe,GAAG,CAAC,CAAC;IAC5D,IAAIQ,UAAU,KAAK,IAAI,EAAE;MACrB;IACJ;IACA,IAAI,CAAC5C,QAAQ,GAAG,IAAI;IACpB,IAAI,CAAC0C,qBAAqB,GAAG,IAAInF,eAAe,CAAC,CAAC;IAClD,IAAI,CAAC8D,8BAA8B,CAACoB,GAAG,CAAC,IAAI,CAAC;IAC7C,IAAI,CAAC3C,0BAA0B,GAAG,IAAI,CAACO,mBAAmB,CAACwC,WAAW,CAACpG,MAAM,GAAG,CAAC;IACjF,IAAI,CAAC4D,mBAAmB,CAACyC,kBAAkB,CAAC,IAAI,CAAChD,0BAA0B,CAAC;EAChF;EACAiD,SAASA,CAAA,EAAG;IACR,IAAI,IAAI,CAACjD,0BAA0B,GAAG,IAAI,CAACO,mBAAmB,CAAC2C,eAAe,GAAG,CAAC,EAAE;MAChF,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC;IACxB;EACJ;EACAC,aAAaA,CAAA,EAAG;IACZ,IAAI,IAAI,CAACpD,0BAA0B,GAAG,CAAC,EAAE;MACrC,IAAI,CAACmD,SAAS,CAAC,KAAK,CAAC;IACzB;EACJ;EACAE,YAAYA,CAAA,EAAG;IACX,IAAI,CAAClE,OAAO,CAAC8C,KAAK,CAAC,CAAC;EACxB;EACA;EACAkB,SAASA,CAACG,SAAS,EAAE;IACjB,IAAI,CAACtD,0BAA0B,GAAGsD,SAAS,GAAG,IAAI,CAACtD,0BAA0B,GAAG,CAAC,GAAG,IAAI,CAACA,0BAA0B,GAAG,CAAC;IACvH,IAAI,CAACO,mBAAmB,CAACyC,kBAAkB,CAAC,IAAI,CAAChD,0BAA0B,CAAC;EAChF;EACAuD,WAAWA,CAAA,EAAG;IACV,MAAMR,WAAW,GAAG,IAAI,CAACxC,mBAAmB,CAACwC,WAAW;IACxD,IAAI,CAACb,8BAA8B,CAAC,CAAC;IACrC,IAAI,CAACsB,eAAe,CAAC;MAAEC,UAAU,EAAEV,WAAW,CAAC,IAAI,CAAC/C,0BAA0B,CAAC;MAAE0D,MAAM,EAAE;IAAE,CAAC,CAAC;EACjG;EACAF,eAAeA,CAACG,QAAQ,EAAE;IACtB,IAAI,CAACC,cAAc,CAACD,QAAQ,EAAE,MAAM,IAAI,CAACxE,OAAO,CAAC0E,cAAc,CAACF,QAAQ,CAAC,CAAC;EAC9E;EACAG,oCAAoCA,CAACH,QAAQ,EAAE;IAC3C,IAAI,CAACC,cAAc,CAACD,QAAQ,EAAE,MAAM,IAAI,CAACxE,OAAO,CAAC4E,mCAAmC,CAACJ,QAAQ,CAACF,UAAU,EAAE,CAAC,CAAC,uBAAuB,CAAC,CAAC;EACzI;EACAG,cAAcA,CAACD,QAAQ,EAAEK,cAAc,EAAE;IACrC,IAAI,IAAI,CAAC9D,QAAQ,EAAE;MACf,IAAI,CAACgC,8BAA8B,CAAC,CAAC;IACzC;IACA,IAAI,CAAC/B,iBAAiB,GAAG,IAAI;IAC7B6D,cAAc,CAAC,CAAC;IAChB,IAAI,CAAC7E,OAAO,CAAC8E,YAAY,CAAC5F,KAAK,CAAC6F,aAAa,CAACP,QAAQ,CAAC,CAAC;IACxD,IAAI,CAACxE,OAAO,CAAC8C,KAAK,CAAC,CAAC;EACxB;EACAG,uBAAuBA,CAAA,EAAG;IACtB,MAAM+B,YAAY,GAAG,IAAI,CAAC1D,SAAS,CAAC,IAAIhD,eAAe,CAAC,CAAC,CAAC;IAC1D,MAAM2G,OAAO,GAAG,IAAI,CAAC3D,SAAS,CAAC,IAAIrC,gBAAgB,CAAC,IAAI,CAACe,OAAO,EAAE;MAC9DkF,+BAA+B,EAAGtD,CAAC,IAAK;QACpC,MAAM4C,QAAQ,GAAG,IAAI,CAACpD,mBAAmB,CAAC+D,yBAAyB,CAACvD,CAAC,CAACzE,MAAM,CAACiI,OAAO,CAAC;QACrF,OAAOZ,QAAQ,GAAGA,QAAQ,CAACF,UAAU,GAAG,CAAC;MAC7C;IACJ,CAAC,CAAC,CAAC;IACH,MAAMe,mBAAmB,GAAIC,UAAU,IAAK;MACxC,IAAI,CAAC,IAAI,CAACtF,OAAO,CAACuF,QAAQ,CAAC,CAAC,EAAE;QAC1B,OAAO,IAAI;MACf;MACA,IAAID,UAAU,CAACnI,MAAM,CAACqI,IAAI,KAAK,EAAE,CAAC,wCAAwCF,UAAU,CAACnI,MAAM,CAACsI,MAAM,KAAK,IAAI,CAACrE,mBAAmB,CAACsE,KAAK,CAAC,CAAC,EAAE;QACrI;QACA,OAAO,IAAI;MACf;MACA,MAAMC,kBAAkB,GAAGL,UAAU,CAACnI,MAAM,CAACiI,OAAO;MACpD,IAAI,CAACO,kBAAkB,IAAIA,kBAAkB,CAACC,SAAS,KAAKD,kBAAkB,CAACE,SAAS,EAAE;QACtF;QACA,OAAO,IAAI;MACf;MACA,MAAMrB,QAAQ,GAAG,IAAI,CAACpD,mBAAmB,CAAC+D,yBAAyB,CAACQ,kBAAkB,CAAC;MACvF,IAAI,CAACnB,QAAQ,EAAE;QACX;QACA,OAAO,IAAI;MACf;MACA,OAAO;QACHsB,KAAK,EAAE,IAAI5G,KAAK,CAACsF,QAAQ,CAACF,UAAU,EAAEE,QAAQ,CAACD,MAAM,EAAEC,QAAQ,CAACF,UAAU,EAAEE,QAAQ,CAACD,MAAM,GAAGoB,kBAAkB,CAACC,SAAS,CAACpI,MAAM,CAAC;QAClIuI,WAAW,EAAEJ;MACjB,CAAC;IACL,CAAC;IACD,MAAMK,yBAAyB,GAAG,IAAI,CAAC5E,mBAAmB,CAACM,UAAU,CAAC,CAAC;IACvE,IAAI,CAACJ,SAAS,CAAC7B,GAAG,CAACwG,6BAA6B,CAACD,yBAAyB,EAAEvG,GAAG,CAACsC,SAAS,CAACmE,KAAK,EAAGZ,UAAU,IAAK;MAC7G,IAAIA,UAAU,CAACa,OAAO,IAAIb,UAAU,CAACc,MAAM,IAAId,UAAU,CAACe,OAAO,EAAE;QAC/D;QACA;MACJ;MACA,IAAI,CAACf,UAAU,CAACgB,UAAU,EAAE;QACxB;QACA;MACJ;MACA,IAAIhB,UAAU,CAACiB,QAAQ,EAAE;QACrB;QACA,MAAMC,SAAS,GAAG,IAAI,CAACpF,mBAAmB,CAACqF,4BAA4B,CAACnB,UAAU,CAACnI,MAAM,CAAC;QAC1F,IAAIqJ,SAAS,KAAK,IAAI,EAAE;UACpB;QACJ;QACA,MAAMhC,QAAQ,GAAG,IAAInF,QAAQ,CAAC,IAAI,CAAC6B,eAAe,CAACsF,SAAS,CAAC,EAAE,CAAC,CAAC;QACjE,IAAI,CAAC7B,oCAAoC,CAACH,QAAQ,CAAC;QACnD;MACJ;MACA,MAAMkC,sBAAsB,GAAG,IAAI,CAACtF,mBAAmB,CAACsF,sBAAsB,CAACpB,UAAU,CAACnI,MAAM,CAAC;MACjG,IAAIuJ,sBAAsB,EAAE;QACxB;QACA,MAAMpC,UAAU,GAAG,IAAI,CAAClD,mBAAmB,CAACuF,6BAA6B,CAACrB,UAAU,CAACnI,MAAM,CAAC;QAC5F,IAAI,CAACyJ,2BAA2B,CAACtC,UAAU,CAAC;QAC5C;MACJ;MACA,MAAMuC,cAAc,GAAG,IAAI,CAACzF,mBAAmB,CAACyF,cAAc,CAACvB,UAAU,CAACnI,MAAM,CAAC;MACjF,IAAI,CAAC0J,cAAc,EAAE;QACjB;MACJ;MACA;MACA,IAAIrC,QAAQ,GAAG,IAAI,CAACpD,mBAAmB,CAAC+D,yBAAyB,CAACG,UAAU,CAACnI,MAAM,CAAC;MACpF,IAAI,CAACqH,QAAQ,EAAE;QACX,MAAMF,UAAU,GAAG,IAAI,CAAClD,mBAAmB,CAACuF,6BAA6B,CAACrB,UAAU,CAACnI,MAAM,CAAC;QAC5F,IAAImH,UAAU,KAAK,IAAI,EAAE;UACrB;UACA;QACJ;QACAE,QAAQ,GAAG,IAAInF,QAAQ,CAACiF,UAAU,EAAE,CAAC,CAAC;MAC1C;MACA,IAAI,CAACD,eAAe,CAACG,QAAQ,CAAC;IAClC,CAAC,CAAC,CAAC;IACH,IAAI,CAAClD,SAAS,CAAC7B,GAAG,CAACwG,6BAA6B,CAACD,yBAAyB,EAAEvG,GAAG,CAACsC,SAAS,CAAC+E,UAAU,EAAGxB,UAAU,IAAK;MAClH,IAAIA,UAAU,CAACiB,QAAQ,EAAE;QACrB,MAAMQ,sBAAsB,GAAG,IAAI,CAAC3F,mBAAmB,CAACqF,4BAA4B,CAACnB,UAAU,CAACnI,MAAM,CAAC;QACvG,IAAI4J,sBAAsB,KAAK,IAAI,IAAI,IAAI,CAAC5F,eAAe,KAAK,IAAI,IAAI,IAAI,CAACA,eAAe,KAAK4F,sBAAsB,EAAE;UACrH;QACJ;QACA,IAAI,CAAC5F,eAAe,GAAG4F,sBAAsB;QAC7C,IAAI,CAACC,mBAAmB,CAAC,CAAC;QAC1B;MACJ;MACA,IAAI,IAAI,CAAC7F,eAAe,KAAK,IAAI,EAAE;QAC/B,IAAI,CAACA,eAAe,GAAG,IAAI;QAC3B,IAAI,CAAC6F,mBAAmB,CAAC,CAAC;MAC9B;IACJ,CAAC,CAAC,CAAC;IACH,IAAI,CAAC1F,SAAS,CAAC7B,GAAG,CAACqC,qBAAqB,CAACkE,yBAAyB,EAAEvG,GAAG,CAACsC,SAAS,CAACkF,WAAW,EAAGrF,CAAC,IAAK;MAClG,IAAI,IAAI,CAACT,eAAe,KAAK,IAAI,EAAE;QAC/B,IAAI,CAACA,eAAe,GAAG,IAAI;QAC3B,IAAI,CAAC6F,mBAAmB,CAAC,CAAC;MAC9B;IACJ,CAAC,CAAC,CAAC;IACH,IAAI,CAAC1F,SAAS,CAAC2D,OAAO,CAACiC,4BAA4B,CAAC,CAAC,CAAC5B,UAAU,EAAE6B,cAAc,CAAC,KAAK;MAClF,MAAMC,WAAW,GAAG/B,mBAAmB,CAACC,UAAU,CAAC;MACnD,IAAI,CAAC8B,WAAW,IAAI,CAAC9B,UAAU,CAAC+B,kBAAkB,IAAI,CAAC,IAAI,CAACrH,OAAO,CAACuF,QAAQ,CAAC,CAAC,EAAE;QAC5EP,YAAY,CAACsC,KAAK,CAAC,CAAC;QACpB;MACJ;MACA,MAAM;QAAExB,KAAK;QAAEC;MAAY,CAAC,GAAGqB,WAAW;MAC1C,IAAI,CAACtB,KAAK,CAACyB,WAAW,CAAC,IAAI,CAACC,6BAA6B,CAAC,EAAE;QACxD,IAAI,CAACA,6BAA6B,GAAG1B,KAAK;QAC1Cd,YAAY,CAACsC,KAAK,CAAC,CAAC;MACxB,CAAC,MACI,IAAIvB,WAAW,CAAC0B,KAAK,CAACC,cAAc,KAAK,WAAW,EAAE;QACvD;MACJ;MACA,MAAMC,iBAAiB,GAAG,IAAIrI,uBAAuB,CAAC,CAAC;MACvD0F,YAAY,CAAC4C,GAAG,CAACrJ,YAAY,CAAC,MAAMoJ,iBAAiB,CAACjE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;MACrE,IAAImE,gBAAgB;MACpB1I,wBAAwB,CAAC,IAAI,CAACe,wBAAwB,CAAC4H,kBAAkB,EAAE,IAAI,CAAC9H,OAAO,CAAC+H,QAAQ,CAAC,CAAC,EAAE,IAAI1I,QAAQ,CAACyG,KAAK,CAACkC,eAAe,EAAElC,KAAK,CAACmC,WAAW,GAAG,CAAC,CAAC,EAAEN,iBAAiB,CAACO,KAAK,CAAC,CAACC,IAAI,CAAEC,oBAAoB,IAAI;QACnN,IAAIT,iBAAiB,CAACO,KAAK,CAACG,uBAAuB,EAAE;UACjD;QACJ;QACA,IAAID,oBAAoB,CAAC5K,MAAM,KAAK,CAAC,EAAE;UACnC,IAAI,CAACoD,2BAA2B,GAAGwH,oBAAoB,CAAC5K,MAAM;UAC9D,MAAM8K,SAAS,GAAGvC,WAAW;UAC7B,IAAI8B,gBAAgB,KAAKS,SAAS,EAAE;YAChCtD,YAAY,CAACsC,KAAK,CAAC,CAAC;YACpBO,gBAAgB,GAAGS,SAAS;YAC5BT,gBAAgB,CAACJ,KAAK,CAACC,cAAc,GAAG,WAAW;YACnD1C,YAAY,CAAC4C,GAAG,CAACrJ,YAAY,CAAC,MAAM;cAChCsJ,gBAAgB,CAACJ,KAAK,CAACC,cAAc,GAAG,MAAM;YAClD,CAAC,CAAC,CAAC;UACP,CAAC,MACI,IAAI,CAACG,gBAAgB,EAAE;YACxBA,gBAAgB,GAAGS,SAAS;YAC5BT,gBAAgB,CAACJ,KAAK,CAACC,cAAc,GAAG,WAAW;YACnD1C,YAAY,CAAC4C,GAAG,CAACrJ,YAAY,CAAC,MAAM;cAChCsJ,gBAAgB,CAACJ,KAAK,CAACC,cAAc,GAAG,MAAM;YAClD,CAAC,CAAC,CAAC;UACP;QACJ,CAAC,MACI;UACD1C,YAAY,CAACsC,KAAK,CAAC,CAAC;QACxB;MACJ,CAAE,CAAC;IACP,CAAC,CAAC,CAAC;IACH,IAAI,CAAChG,SAAS,CAAC2D,OAAO,CAACsD,QAAQ,CAAC,MAAM;MAClCvD,YAAY,CAACsC,KAAK,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;IACH,IAAI,CAAChG,SAAS,CAAC2D,OAAO,CAACuD,SAAS,CAAC,MAAO5G,CAAC,IAAK;MAC1C,IAAIA,CAAC,CAACzE,MAAM,CAACqI,IAAI,KAAK,EAAE,CAAC,wCAAwC5D,CAAC,CAACzE,MAAM,CAACsI,MAAM,KAAK,IAAI,CAACrE,mBAAmB,CAACsE,KAAK,CAAC,CAAC,EAAE;QACnH;QACA;MACJ;MACA,MAAMlB,QAAQ,GAAG,IAAI,CAACpD,mBAAmB,CAAC+D,yBAAyB,CAACvD,CAAC,CAACzE,MAAM,CAACiI,OAAO,CAAC;MACrF,IAAI,CAACZ,QAAQ,EAAE;QACX;QACA;MACJ;MACA,IAAI,IAAI,CAAC5D,2BAA2B,GAAG,CAAC,EAAE;QACtC,IAAI,IAAI,CAACG,QAAQ,EAAE;UACf,IAAI,CAACgC,8BAA8B,CAAC,CAAC;QACzC;QACA,IAAI,CAACsB,eAAe,CAAC;UAAEC,UAAU,EAAEE,QAAQ,CAACF,UAAU;UAAEC,MAAM,EAAE;QAAE,CAAC,CAAC;MACxE;MACA,IAAI,CAACpE,aAAa,CAACsI,cAAc,CAACrJ,0BAA0B,EAAEwC,CAAC,EAAE,IAAI,CAAC5B,OAAO,EAAE;QAAE0I,GAAG,EAAE,IAAI,CAAC1I,OAAO,CAAC+H,QAAQ,CAAC,CAAC,CAACW,GAAG;QAAE5C,KAAK,EAAE,IAAI,CAAC0B;MAA8B,CAAC,CAAC;IACnK,CAAC,CAAC,CAAC;EACP;EACAtF,cAAcA,CAACyG,YAAY,EAAE/G,CAAC,EAAE;IAC5B,MAAMK,KAAK,GAAG,IAAItC,kBAAkB,CAACgJ,YAAY,EAAE/G,CAAC,CAAC;IACrD,IAAI,CAAC3B,mBAAmB,CAAC2I,eAAe,CAAC;MACrCC,MAAM,EAAE/J,MAAM,CAACgK,mBAAmB;MAClCC,SAAS,EAAEA,CAAA,KAAM9G;IACrB,CAAC,CAAC;EACN;EACA2E,2BAA2BA,CAACoC,IAAI,EAAE;IAC9B,IAAI,CAAC,IAAI,CAACxI,aAAa,IAAIwI,IAAI,KAAK,IAAI,EAAE;MACtC;IACJ;IACA,MAAMC,UAAU,GAAG,IAAI,CAAC7H,mBAAmB,CAAC8H,oBAAoB,CAACF,IAAI,CAAC;IACtE,MAAMG,WAAW,GAAGF,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACE,WAAW;IAClG,IAAI,CAACA,WAAW,EAAE;MACd;IACJ;IACAtJ,mBAAmB,CAAC,IAAI,CAACW,aAAa,EAAEE,MAAM,CAAC0I,SAAS,EAAE,CAACJ,IAAI,CAAC,CAAC;IACjEG,WAAW,CAACE,WAAW,GAAG,CAACF,WAAW,CAACE,WAAW;IAClD,MAAMC,SAAS,GAAG,CAACH,WAAW,CAACE,WAAW,GACtC,IAAI,CAACrJ,OAAO,CAACuJ,mBAAmB,CAACJ,WAAW,CAACK,cAAc,CAAC,GAC1D,IAAI,CAACxJ,OAAO,CAACuJ,mBAAmB,CAACJ,WAAW,CAACM,gBAAgB,CAAC,IAC9D,IAAI,CAACzJ,OAAO,CAAC0J,SAAS,CAAC,EAAE,CAAC,6BAA6B,CAAC,GAAGT,UAAU,CAACU,KAAK,GAAG,CAAC;IACrF,IAAI,CAAC3J,OAAO,CAAC4J,YAAY,CAACN,SAAS,CAAC;IACpC,IAAI,CAACtC,mBAAmB,CAACgC,IAAI,CAAC;EAClC;EACAxH,kBAAkBA,CAAA,EAAG;IACjB,MAAMqI,OAAO,GAAG,IAAI,CAAC7J,OAAO,CAAC0J,SAAS,CAAC,GAAG,CAAC,+BAA+B,CAAC;IAC3E,IAAIG,OAAO,CAACC,OAAO,KAAK,KAAK,EAAE;MAC3B,IAAI,CAAC9J,OAAO,CAAC+J,mBAAmB,CAAC,IAAI,CAAC3I,mBAAmB,CAAC;MAC1D,IAAI,CAACb,aAAa,CAAC+G,KAAK,CAAC,CAAC;MAC1B,IAAI,CAACxG,QAAQ,GAAG,KAAK;MACrB;IACJ,CAAC,MACI,IAAI+I,OAAO,CAACC,OAAO,IAAI,CAAC,IAAI,CAAChJ,QAAQ,EAAE;MACxC;MACA,IAAI,CAACd,OAAO,CAACgK,gBAAgB,CAAC,IAAI,CAAC5I,mBAAmB,CAAC;MACvD,IAAI,CAACb,aAAa,CAACqH,GAAG,CAAC,IAAI,CAAC5H,OAAO,CAACiK,iBAAiB,CAAErI,CAAC,IAAK;QACzD,IAAIA,CAAC,CAACsI,gBAAgB,EAAE;UACpB,IAAI,CAAC/I,eAAe,GAAG,IAAI;UAC3B,IAAI,CAAC6F,mBAAmB,CAAC,CAAC;QAC9B;MACJ,CAAC,CAAC,CAAC;MACH,IAAI,CAACzG,aAAa,CAACqH,GAAG,CAAC,IAAI,CAAC5H,OAAO,CAACmK,iBAAiB,CAAC,MAAM,IAAI,CAACC,YAAY,CAAC,CAAC,CAAC,CAAC;MACjF,IAAI,CAAC7J,aAAa,CAACqH,GAAG,CAAC,IAAI,CAAC5H,OAAO,CAACqK,sBAAsB,CAAEzI,CAAC,IAAK,IAAI,CAAC0I,eAAe,CAAC1I,CAAC,CAAC,CAAC,CAAC;MAC3F,IAAI,CAACrB,aAAa,CAACqH,GAAG,CAAC,IAAI,CAACvG,4BAA4B,CAACkJ,uBAAuB,CAAC,MAAM;QACnF,IAAI,CAACpJ,eAAe,GAAG,IAAI;QAC3B,IAAI,CAAC6F,mBAAmB,CAAC,CAAC;MAC9B,CAAC,CAAC,CAAC;MACH,IAAI,CAAClG,QAAQ,GAAG,IAAI;IACxB;IACA,MAAM0J,gBAAgB,GAAG,IAAI,CAACxK,OAAO,CAAC0J,SAAS,CAAC,EAAE,CAAC,8BAA8B,CAAC;IAClF,IAAIc,gBAAgB,CAACC,UAAU,KAAK,CAAC,CAAC,sCAAsC;MACxE,IAAI,CAAClK,aAAa,CAACqH,GAAG,CAAC,IAAI,CAAC5H,OAAO,CAAC0K,yBAAyB,CAAC,MAAM;QAChE,IAAI,CAACvJ,eAAe,GAAG,IAAI;QAC3B,IAAI,CAAC6F,mBAAmB,CAAC,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,CAAC;IACP;EACJ;EACA2D,YAAYA,CAAC1I,KAAK,EAAE;IAChB,MAAM2I,iBAAiB,GAAG,IAAI,CAACxJ,mBAAmB,CAACyJ,eAAe,CAAC,CAAC;IACpE,KAAK,MAAMC,gBAAgB,IAAIF,iBAAiB,EAAE;MAC9C,KAAK,MAAM9E,KAAK,IAAI7D,KAAK,CAAC8I,MAAM,EAAE;QAC9B,IAAID,gBAAgB,IAAIhF,KAAK,CAACkF,cAAc,IAAIF,gBAAgB,IAAIhF,KAAK,CAACmF,YAAY,EAAE;UACpF,OAAO,IAAI;QACf;MACJ;IACJ;IACA,OAAO,KAAK;EAChB;EACAX,eAAeA,CAACrI,KAAK,EAAE;IACnB,IAAI,IAAI,CAAC0I,YAAY,CAAC1I,KAAK,CAAC,EAAE;MAC1B;MACA,IAAI,CAAC+E,mBAAmB,CAAC,CAAC,CAAC,CAAC;IAChC;EACJ;EACAoD,YAAYA,CAAA,EAAG;IACX,MAAMc,UAAU,GAAG,IAAI,CAAClL,OAAO,CAACmL,aAAa,CAAC,CAAC;IAC/C;IACA,MAAMC,gBAAgB,GAAGF,UAAU,CAACG,MAAM,GAAG,IAAI,CAACrL,OAAO,CAAC0J,SAAS,CAAC,EAAE,CAAC,6BAA6B,CAAC;IACrG,IAAI,CAACjJ,eAAe,GAAG6K,IAAI,CAACC,KAAK,CAACH,gBAAgB,GAAG,GAAG,CAAC;EAC7D;EACA,MAAMpE,mBAAmBA,CAACwE,eAAe,GAAGC,QAAQ,EAAE;IAClD,IAAIlI,EAAE,EAAEmI,EAAE;IACV,MAAMC,KAAK,GAAG,IAAI,CAAC3L,OAAO,CAAC+H,QAAQ,CAAC,CAAC;IACrC,IAAI,CAAC4D,KAAK,IAAIA,KAAK,CAACC,yBAAyB,CAAC,CAAC,EAAE;MAC7C,IAAI,CAACpL,aAAa,GAAG,IAAI;MACzB,IAAI,CAACY,mBAAmB,CAACyK,QAAQ,CAACC,SAAS,EAAE,IAAI,EAAEN,eAAe,CAAC;MACnE;IACJ;IACA,MAAMO,iBAAiB,GAAG,IAAI,CAAC1K,4BAA4B,CAAC2K,YAAY,CAAC,CAAC;IAC1E,IAAID,iBAAiB,KAAKD,SAAS,IAAIC,iBAAiB,KAAKJ,KAAK,CAACK,YAAY,CAAC,CAAC,EAAE;MAC/E,IAAI,CAACxL,aAAa,GAAG,CAACkL,EAAE,GAAG,OAAO,CAACnI,EAAE,GAAG3D,iBAAiB,CAACuD,GAAG,CAAC,IAAI,CAACnD,OAAO,CAAC,MAAM,IAAI,IAAIuD,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC0I,eAAe,CAAC,CAAC,CAAC,MAAM,IAAI,IAAIP,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,IAAI;MAC9K,IAAI,CAACnK,YAAY,GAAG,IAAI,CAAC2K,qBAAqB,CAAC,CAAC;MAChD,IAAI,CAAC3J,8BAA8B,CAACiB,GAAG,CAAC,EAAE,IAAI,CAACjC,YAAY,CAAC4K,gBAAgB,CAAC3O,MAAM,KAAK,CAAC,CAAC,CAAC;MAC3F,IAAI,CAAC,IAAI,CAACuD,QAAQ,EAAE;QAChB,IAAI,CAACK,mBAAmB,CAACyK,QAAQ,CAAC,IAAI,CAACtK,YAAY,EAAE,IAAI,CAACf,aAAa,EAAEgL,eAAe,CAAC;MAC7F,CAAC,MACI;QACD;QACA,IAAI,IAAI,CAAC3K,0BAA0B,KAAK,CAAC,CAAC,EAAE;UACxC,IAAI,CAACO,mBAAmB,CAACyK,QAAQ,CAAC,IAAI,CAACtK,YAAY,EAAE,IAAI,CAACf,aAAa,EAAEgL,eAAe,CAAC;UACzF,IAAI,CAAC3K,0BAA0B,GAAG,IAAI,CAACO,mBAAmB,CAAC2C,eAAe,GAAG,CAAC;UAC9E,IAAI,IAAI,CAAClD,0BAA0B,KAAK,CAAC,CAAC,EAAE;YACxC,IAAI,CAACO,mBAAmB,CAACyC,kBAAkB,CAAC,IAAI,CAAChD,0BAA0B,CAAC;UAChF;QACJ,CAAC,MACI;UACD,MAAMuL,8BAA8B,GAAG,IAAI,CAAChL,mBAAmB,CAACwC,WAAW,CAAC,IAAI,CAAC/C,0BAA0B,CAAC;UAC5G,IAAI,CAACO,mBAAmB,CAACyK,QAAQ,CAAC,IAAI,CAACtK,YAAY,EAAE,IAAI,CAACf,aAAa,EAAEgL,eAAe,CAAC;UACzF;UACA,IAAI,IAAI,CAACpK,mBAAmB,CAAC2C,eAAe,KAAK,CAAC,EAAE;YAChD,IAAI,CAAClD,0BAA0B,GAAG,CAAC,CAAC;UACxC,CAAC,MACI;YACD,MAAMwL,+BAA+B,GAAG,IAAI,CAACjL,mBAAmB,CAACwC,WAAW,CAAC0I,QAAQ,CAACF,8BAA8B,CAAC;YACrH;YACA;YACA,IAAI,CAACC,+BAA+B,EAAE;cAClC,IAAI,CAACxL,0BAA0B,GAAG,IAAI,CAACO,mBAAmB,CAAC2C,eAAe,GAAG,CAAC;YAClF;YACA,IAAI,CAAC3C,mBAAmB,CAACyC,kBAAkB,CAAC,IAAI,CAAChD,0BAA0B,CAAC;UAChF;QACJ;MACJ;IACJ;EACJ;EACAqL,qBAAqBA,CAAA,EAAG;IACpB,MAAMK,UAAU,GAAG,IAAI,CAACvM,OAAO,CAAC0J,SAAS,CAAC,EAAE,CAAC,6BAA6B,CAAC;IAC3E,MAAM8C,oBAAoB,GAAGlB,IAAI,CAACmB,GAAG,CAAC,IAAI,CAAChM,eAAe,EAAE,IAAI,CAACT,OAAO,CAAC0J,SAAS,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAACgD,YAAY,CAAC;IACrI,MAAMpD,SAAS,GAAG,IAAI,CAACtJ,OAAO,CAAC2M,YAAY,CAAC,CAAC;IAC7C,IAAIC,wBAAwB,GAAG,CAAC;IAChC,MAAMT,gBAAgB,GAAG,EAAE;IAC3B,MAAMU,cAAc,GAAG,EAAE;IACzB,MAAMC,kBAAkB,GAAG,IAAI,CAAC9M,OAAO,CAAC+M,gBAAgB,CAAC,CAAC;IAC1D,IAAID,kBAAkB,CAACtP,MAAM,KAAK,CAAC,EAAE;MACjC,MAAMwP,gBAAgB,GAAG,IAAItN,WAAW,CAACoN,kBAAkB,CAAC,CAAC,CAAC,CAAC9E,eAAe,EAAE8E,kBAAkB,CAACA,kBAAkB,CAACtP,MAAM,GAAG,CAAC,CAAC,CAACyP,aAAa,CAAC;MAChJ,MAAMC,eAAe,GAAG,IAAI,CAAC7L,4BAA4B,CAAC8L,mCAAmC,CAACH,gBAAgB,CAAC;MAC/G,KAAK,MAAMlH,KAAK,IAAIoH,eAAe,EAAE;QACjC,MAAME,KAAK,GAAGtH,KAAK,CAACkC,eAAe;QACnC,MAAMqF,GAAG,GAAGvH,KAAK,CAACmH,aAAa;QAC/B,MAAMK,KAAK,GAAGxH,KAAK,CAACyH,YAAY;QAChC,IAAIF,GAAG,GAAGD,KAAK,GAAG,CAAC,EAAE;UACjB,MAAMI,mBAAmB,GAAG,CAACF,KAAK,GAAG,CAAC,IAAIf,UAAU;UACpD,MAAMkB,sBAAsB,GAAGH,KAAK,GAAGf,UAAU;UACjD,MAAMmB,qBAAqB,GAAG,IAAI,CAAC1N,OAAO,CAAC2N,sBAAsB,CAACP,KAAK,CAAC,GAAG9D,SAAS;UACpF,MAAMsE,YAAY,GAAG,IAAI,CAAC5N,OAAO,CAACuJ,mBAAmB,CAAC8D,GAAG,CAAC,GAAG/D,SAAS;UACtE,MAAMuE,eAAe,GAAG,IAAI,CAAC7N,OAAO,CAAC2N,sBAAsB,CAACN,GAAG,CAAC,GAAG/D,SAAS;UAC5E,IAAIkE,mBAAmB,GAAGI,YAAY,IAAIJ,mBAAmB,IAAIK,eAAe,EAAE;YAC9E1B,gBAAgB,CAAC2B,IAAI,CAACV,KAAK,CAAC;YAC5BP,cAAc,CAACiB,IAAI,CAACT,GAAG,GAAG,CAAC,CAAC;YAC5BT,wBAAwB,GAAGiB,eAAe,GAAGJ,sBAAsB;YACnE;UACJ,CAAC,MACI,IAAIA,sBAAsB,GAAGC,qBAAqB,IAAID,sBAAsB,IAAII,eAAe,EAAE;YAClG1B,gBAAgB,CAAC2B,IAAI,CAACV,KAAK,CAAC;YAC5BP,cAAc,CAACiB,IAAI,CAACT,GAAG,GAAG,CAAC,CAAC;UAChC;UACA,IAAIlB,gBAAgB,CAAC3O,MAAM,KAAKgP,oBAAoB,EAAE;YAClD;UACJ;QACJ;MACJ;IACJ;IACA,IAAI,CAACtL,eAAe,GAAG2L,cAAc;IACrC,OAAO,IAAInO,uBAAuB,CAACyN,gBAAgB,EAAEU,cAAc,EAAED,wBAAwB,EAAE,IAAI,CAACzL,eAAe,CAAC;EACxH;EACAuC,OAAOA,CAAA,EAAG;IACN,KAAK,CAACA,OAAO,CAAC,CAAC;IACf,IAAI,CAACnD,aAAa,CAACmD,OAAO,CAAC,CAAC;EAChC;AACJ,CAAC;AACD5D,sBAAsB,CAACwD,EAAE,GAAG,sCAAsC;AAClExD,sBAAsB,GAAG1B,wBAAwB,GAAGnB,UAAU,CAAC,CAC3DgB,OAAO,CAAC,CAAC,EAAEY,mBAAmB,CAAC,EAC/BZ,OAAO,CAAC,CAAC,EAAEO,wBAAwB,CAAC,EACpCP,OAAO,CAAC,CAAC,EAAEW,qBAAqB,CAAC,EACjCX,OAAO,CAAC,CAAC,EAAEsB,6BAA6B,CAAC,EACzCtB,OAAO,CAAC,CAAC,EAAEuB,+BAA+B,CAAC,EAC3CvB,OAAO,CAAC,CAAC,EAAEc,kBAAkB,CAAC,CACjC,EAAEe,sBAAsB,CAAC;AAC1B,SAASA,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}