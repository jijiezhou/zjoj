{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../core/selection.js';\nexport class ReplaceCommand {\n  constructor(range, text, insertsAutoWhitespace = false) {\n    this._range = range;\n    this._text = text;\n    this.insertsAutoWhitespace = insertsAutoWhitespace;\n  }\n  getEditOperations(model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text);\n  }\n  computeCursorState(model, helper) {\n    const inverseEditOperations = helper.getInverseEditOperations();\n    const srcRange = inverseEditOperations[0].range;\n    return Selection.fromPositions(srcRange.getEndPosition());\n  }\n}\nexport class ReplaceCommandThatSelectsText {\n  constructor(range, text) {\n    this._range = range;\n    this._text = text;\n  }\n  getEditOperations(model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text);\n  }\n  computeCursorState(model, helper) {\n    const inverseEditOperations = helper.getInverseEditOperations();\n    const srcRange = inverseEditOperations[0].range;\n    return Selection.fromRange(srcRange, 0 /* SelectionDirection.LTR */);\n  }\n}\nexport class ReplaceCommandWithoutChangingPosition {\n  constructor(range, text, insertsAutoWhitespace = false) {\n    this._range = range;\n    this._text = text;\n    this.insertsAutoWhitespace = insertsAutoWhitespace;\n  }\n  getEditOperations(model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text);\n  }\n  computeCursorState(model, helper) {\n    const inverseEditOperations = helper.getInverseEditOperations();\n    const srcRange = inverseEditOperations[0].range;\n    return Selection.fromPositions(srcRange.getStartPosition());\n  }\n}\nexport class ReplaceCommandWithOffsetCursorState {\n  constructor(range, text, lineNumberDeltaOffset, columnDeltaOffset, insertsAutoWhitespace = false) {\n    this._range = range;\n    this._text = text;\n    this._columnDeltaOffset = columnDeltaOffset;\n    this._lineNumberDeltaOffset = lineNumberDeltaOffset;\n    this.insertsAutoWhitespace = insertsAutoWhitespace;\n  }\n  getEditOperations(model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text);\n  }\n  computeCursorState(model, helper) {\n    const inverseEditOperations = helper.getInverseEditOperations();\n    const srcRange = inverseEditOperations[0].range;\n    return Selection.fromPositions(srcRange.getEndPosition().delta(this._lineNumberDeltaOffset, this._columnDeltaOffset));\n  }\n}\nexport class ReplaceCommandThatPreservesSelection {\n  constructor(editRange, text, initialSelection, forceMoveMarkers = false) {\n    this._range = editRange;\n    this._text = text;\n    this._initialSelection = initialSelection;\n    this._forceMoveMarkers = forceMoveMarkers;\n    this._selectionId = null;\n  }\n  getEditOperations(model, builder) {\n    builder.addTrackedEditOperation(this._range, this._text, this._forceMoveMarkers);\n    this._selectionId = builder.trackSelection(this._initialSelection);\n  }\n  computeCursorState(model, helper) {\n    return helper.getTrackedSelection(this._selectionId);\n  }\n}","map":{"version":3,"names":["Selection","ReplaceCommand","constructor","range","text","insertsAutoWhitespace","_range","_text","getEditOperations","model","builder","addTrackedEditOperation","computeCursorState","helper","inverseEditOperations","getInverseEditOperations","srcRange","fromPositions","getEndPosition","ReplaceCommandThatSelectsText","fromRange","ReplaceCommandWithoutChangingPosition","getStartPosition","ReplaceCommandWithOffsetCursorState","lineNumberDeltaOffset","columnDeltaOffset","_columnDeltaOffset","_lineNumberDeltaOffset","delta","ReplaceCommandThatPreservesSelection","editRange","initialSelection","forceMoveMarkers","_initialSelection","_forceMoveMarkers","_selectionId","trackSelection","getTrackedSelection"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/common/commands/replaceCommand.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../core/selection.js';\nexport class ReplaceCommand {\n    constructor(range, text, insertsAutoWhitespace = false) {\n        this._range = range;\n        this._text = text;\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        return Selection.fromPositions(srcRange.getEndPosition());\n    }\n}\nexport class ReplaceCommandThatSelectsText {\n    constructor(range, text) {\n        this._range = range;\n        this._text = text;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        return Selection.fromRange(srcRange, 0 /* SelectionDirection.LTR */);\n    }\n}\nexport class ReplaceCommandWithoutChangingPosition {\n    constructor(range, text, insertsAutoWhitespace = false) {\n        this._range = range;\n        this._text = text;\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        return Selection.fromPositions(srcRange.getStartPosition());\n    }\n}\nexport class ReplaceCommandWithOffsetCursorState {\n    constructor(range, text, lineNumberDeltaOffset, columnDeltaOffset, insertsAutoWhitespace = false) {\n        this._range = range;\n        this._text = text;\n        this._columnDeltaOffset = columnDeltaOffset;\n        this._lineNumberDeltaOffset = lineNumberDeltaOffset;\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        return Selection.fromPositions(srcRange.getEndPosition().delta(this._lineNumberDeltaOffset, this._columnDeltaOffset));\n    }\n}\nexport class ReplaceCommandThatPreservesSelection {\n    constructor(editRange, text, initialSelection, forceMoveMarkers = false) {\n        this._range = editRange;\n        this._text = text;\n        this._initialSelection = initialSelection;\n        this._forceMoveMarkers = forceMoveMarkers;\n        this._selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text, this._forceMoveMarkers);\n        this._selectionId = builder.trackSelection(this._initialSelection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._selectionId);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}