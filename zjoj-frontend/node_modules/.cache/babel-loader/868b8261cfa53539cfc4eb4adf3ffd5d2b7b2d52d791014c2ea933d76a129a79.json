{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { EventType, Gesture } from '../../../base/browser/touch.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { MouseHandler } from './mouseHandler.js';\nimport { EditorMouseEvent, EditorPointerEventFactory } from '../editorDom.js';\nimport { BrowserFeatures } from '../../../base/browser/canIUse.js';\nimport { TextAreaSyntethicEvents } from './textAreaInput.js';\nimport { mainWindow } from '../../../base/browser/window.js';\n/**\n * Currently only tested on iOS 13/ iPadOS.\n */\nexport class PointerEventHandler extends MouseHandler {\n  constructor(context, viewController, viewHelper) {\n    super(context, viewController, viewHelper);\n    this._register(Gesture.addTarget(this.viewHelper.linesContentDomNode));\n    this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Tap, e => this.onTap(e)));\n    this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Change, e => this.onChange(e)));\n    this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Contextmenu, e => this._onContextMenu(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode), false)));\n    this._lastPointerType = 'mouse';\n    this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, 'pointerdown', e => {\n      const pointerType = e.pointerType;\n      if (pointerType === 'mouse') {\n        this._lastPointerType = 'mouse';\n        return;\n      } else if (pointerType === 'touch') {\n        this._lastPointerType = 'touch';\n      } else {\n        this._lastPointerType = 'pen';\n      }\n    }));\n    // PonterEvents\n    const pointerEvents = new EditorPointerEventFactory(this.viewHelper.viewDomNode);\n    this._register(pointerEvents.onPointerMove(this.viewHelper.viewDomNode, e => this._onMouseMove(e)));\n    this._register(pointerEvents.onPointerUp(this.viewHelper.viewDomNode, e => this._onMouseUp(e)));\n    this._register(pointerEvents.onPointerLeave(this.viewHelper.viewDomNode, e => this._onMouseLeave(e)));\n    this._register(pointerEvents.onPointerDown(this.viewHelper.viewDomNode, (e, pointerId) => this._onMouseDown(e, pointerId)));\n  }\n  onTap(event) {\n    if (!event.initialTarget || !this.viewHelper.linesContentDomNode.contains(event.initialTarget)) {\n      return;\n    }\n    event.preventDefault();\n    this.viewHelper.focusTextArea();\n    const target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n    if (target.position) {\n      // this.viewController.moveTo(target.position);\n      this.viewController.dispatchMouse({\n        position: target.position,\n        mouseColumn: target.position.column,\n        startedOnLineNumbers: false,\n        revealType: 1 /* NavigationCommandRevealType.Minimal */,\n        mouseDownCount: event.tapCount,\n        inSelectionMode: false,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        shiftKey: false,\n        leftButton: false,\n        middleButton: false,\n        onInjectedText: target.type === 6 /* MouseTargetType.CONTENT_TEXT */ && target.detail.injectedText !== null\n      });\n    }\n  }\n  onChange(e) {\n    if (this._lastPointerType === 'touch') {\n      this._context.viewModel.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n    }\n  }\n  _onMouseDown(e, pointerId) {\n    if (e.browserEvent.pointerType === 'touch') {\n      return;\n    }\n    super._onMouseDown(e, pointerId);\n  }\n}\nclass TouchHandler extends MouseHandler {\n  constructor(context, viewController, viewHelper) {\n    super(context, viewController, viewHelper);\n    this._register(Gesture.addTarget(this.viewHelper.linesContentDomNode));\n    this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Tap, e => this.onTap(e)));\n    this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Change, e => this.onChange(e)));\n    this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Contextmenu, e => this._onContextMenu(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode), false)));\n  }\n  onTap(event) {\n    event.preventDefault();\n    this.viewHelper.focusTextArea();\n    const target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n    if (target.position) {\n      // Send the tap event also to the <textarea> (for input purposes)\n      const event = document.createEvent('CustomEvent');\n      event.initEvent(TextAreaSyntethicEvents.Tap, false, true);\n      this.viewHelper.dispatchTextAreaEvent(event);\n      this.viewController.moveTo(target.position, 1 /* NavigationCommandRevealType.Minimal */);\n    }\n  }\n  onChange(e) {\n    this._context.viewModel.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n  }\n}\nexport class PointerHandler extends Disposable {\n  constructor(context, viewController, viewHelper) {\n    super();\n    if (platform.isIOS && BrowserFeatures.pointerEvents) {\n      this.handler = this._register(new PointerEventHandler(context, viewController, viewHelper));\n    } else if (mainWindow.TouchEvent) {\n      this.handler = this._register(new TouchHandler(context, viewController, viewHelper));\n    } else {\n      this.handler = this._register(new MouseHandler(context, viewController, viewHelper));\n    }\n  }\n  getTargetAtClientPoint(clientX, clientY) {\n    return this.handler.getTargetAtClientPoint(clientX, clientY);\n  }\n}","map":{"version":3,"names":["dom","platform","EventType","Gesture","Disposable","MouseHandler","EditorMouseEvent","EditorPointerEventFactory","BrowserFeatures","TextAreaSyntethicEvents","mainWindow","PointerEventHandler","constructor","context","viewController","viewHelper","_register","addTarget","linesContentDomNode","addDisposableListener","Tap","e","onTap","Change","onChange","Contextmenu","_onContextMenu","viewDomNode","_lastPointerType","pointerType","pointerEvents","onPointerMove","_onMouseMove","onPointerUp","_onMouseUp","onPointerLeave","_onMouseLeave","onPointerDown","pointerId","_onMouseDown","event","initialTarget","contains","preventDefault","focusTextArea","target","_createMouseTarget","position","dispatchMouse","mouseColumn","column","startedOnLineNumbers","revealType","mouseDownCount","tapCount","inSelectionMode","altKey","ctrlKey","metaKey","shiftKey","leftButton","middleButton","onInjectedText","type","detail","injectedText","_context","viewModel","viewLayout","deltaScrollNow","translationX","translationY","browserEvent","TouchHandler","document","createEvent","initEvent","dispatchTextAreaEvent","moveTo","PointerHandler","isIOS","handler","TouchEvent","getTargetAtClientPoint","clientX","clientY"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/browser/controller/pointerHandler.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { EventType, Gesture } from '../../../base/browser/touch.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { MouseHandler } from './mouseHandler.js';\nimport { EditorMouseEvent, EditorPointerEventFactory } from '../editorDom.js';\nimport { BrowserFeatures } from '../../../base/browser/canIUse.js';\nimport { TextAreaSyntethicEvents } from './textAreaInput.js';\nimport { mainWindow } from '../../../base/browser/window.js';\n/**\n * Currently only tested on iOS 13/ iPadOS.\n */\nexport class PointerEventHandler extends MouseHandler {\n    constructor(context, viewController, viewHelper) {\n        super(context, viewController, viewHelper);\n        this._register(Gesture.addTarget(this.viewHelper.linesContentDomNode));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Tap, (e) => this.onTap(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Change, (e) => this.onChange(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Contextmenu, (e) => this._onContextMenu(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode), false)));\n        this._lastPointerType = 'mouse';\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, 'pointerdown', (e) => {\n            const pointerType = e.pointerType;\n            if (pointerType === 'mouse') {\n                this._lastPointerType = 'mouse';\n                return;\n            }\n            else if (pointerType === 'touch') {\n                this._lastPointerType = 'touch';\n            }\n            else {\n                this._lastPointerType = 'pen';\n            }\n        }));\n        // PonterEvents\n        const pointerEvents = new EditorPointerEventFactory(this.viewHelper.viewDomNode);\n        this._register(pointerEvents.onPointerMove(this.viewHelper.viewDomNode, (e) => this._onMouseMove(e)));\n        this._register(pointerEvents.onPointerUp(this.viewHelper.viewDomNode, (e) => this._onMouseUp(e)));\n        this._register(pointerEvents.onPointerLeave(this.viewHelper.viewDomNode, (e) => this._onMouseLeave(e)));\n        this._register(pointerEvents.onPointerDown(this.viewHelper.viewDomNode, (e, pointerId) => this._onMouseDown(e, pointerId)));\n    }\n    onTap(event) {\n        if (!event.initialTarget || !this.viewHelper.linesContentDomNode.contains(event.initialTarget)) {\n            return;\n        }\n        event.preventDefault();\n        this.viewHelper.focusTextArea();\n        const target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n        if (target.position) {\n            // this.viewController.moveTo(target.position);\n            this.viewController.dispatchMouse({\n                position: target.position,\n                mouseColumn: target.position.column,\n                startedOnLineNumbers: false,\n                revealType: 1 /* NavigationCommandRevealType.Minimal */,\n                mouseDownCount: event.tapCount,\n                inSelectionMode: false,\n                altKey: false,\n                ctrlKey: false,\n                metaKey: false,\n                shiftKey: false,\n                leftButton: false,\n                middleButton: false,\n                onInjectedText: target.type === 6 /* MouseTargetType.CONTENT_TEXT */ && target.detail.injectedText !== null\n            });\n        }\n    }\n    onChange(e) {\n        if (this._lastPointerType === 'touch') {\n            this._context.viewModel.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n        }\n    }\n    _onMouseDown(e, pointerId) {\n        if (e.browserEvent.pointerType === 'touch') {\n            return;\n        }\n        super._onMouseDown(e, pointerId);\n    }\n}\nclass TouchHandler extends MouseHandler {\n    constructor(context, viewController, viewHelper) {\n        super(context, viewController, viewHelper);\n        this._register(Gesture.addTarget(this.viewHelper.linesContentDomNode));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Tap, (e) => this.onTap(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Change, (e) => this.onChange(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Contextmenu, (e) => this._onContextMenu(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode), false)));\n    }\n    onTap(event) {\n        event.preventDefault();\n        this.viewHelper.focusTextArea();\n        const target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n        if (target.position) {\n            // Send the tap event also to the <textarea> (for input purposes)\n            const event = document.createEvent('CustomEvent');\n            event.initEvent(TextAreaSyntethicEvents.Tap, false, true);\n            this.viewHelper.dispatchTextAreaEvent(event);\n            this.viewController.moveTo(target.position, 1 /* NavigationCommandRevealType.Minimal */);\n        }\n    }\n    onChange(e) {\n        this._context.viewModel.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n    }\n}\nexport class PointerHandler extends Disposable {\n    constructor(context, viewController, viewHelper) {\n        super();\n        if ((platform.isIOS && BrowserFeatures.pointerEvents)) {\n            this.handler = this._register(new PointerEventHandler(context, viewController, viewHelper));\n        }\n        else if (mainWindow.TouchEvent) {\n            this.handler = this._register(new TouchHandler(context, viewController, viewHelper));\n        }\n        else {\n            this.handler = this._register(new MouseHandler(context, viewController, viewHelper));\n        }\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        return this.handler.getTargetAtClientPoint(clientX, clientY);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}