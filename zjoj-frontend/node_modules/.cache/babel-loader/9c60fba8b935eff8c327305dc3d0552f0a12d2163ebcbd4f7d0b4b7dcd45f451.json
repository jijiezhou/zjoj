{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isIOS, isLinux, isMacintosh, isMobile, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { localize } from '../../../nls.js';\nimport { RawContextKey } from './contextkey.js';\nexport const IsMacContext = new RawContextKey('isMac', isMacintosh, localize('isMac', \"Whether the operating system is macOS\"));\nexport const IsLinuxContext = new RawContextKey('isLinux', isLinux, localize('isLinux', \"Whether the operating system is Linux\"));\nexport const IsWindowsContext = new RawContextKey('isWindows', isWindows, localize('isWindows', \"Whether the operating system is Windows\"));\nexport const IsWebContext = new RawContextKey('isWeb', isWeb, localize('isWeb', \"Whether the platform is a web browser\"));\nexport const IsMacNativeContext = new RawContextKey('isMacNative', isMacintosh && !isWeb, localize('isMacNative', \"Whether the operating system is macOS on a non-browser platform\"));\nexport const IsIOSContext = new RawContextKey('isIOS', isIOS, localize('isIOS', \"Whether the operating system is iOS\"));\nexport const IsMobileContext = new RawContextKey('isMobile', isMobile, localize('isMobile', \"Whether the platform is a mobile web browser\"));\nexport const IsDevelopmentContext = new RawContextKey('isDevelopment', false, true);\nexport const ProductQualityContext = new RawContextKey('productQualityType', '', localize('productQualityType', \"Quality type of VS Code\"));\nexport const InputFocusedContextKey = 'inputFocus';\nexport const InputFocusedContext = new RawContextKey(InputFocusedContextKey, false, localize('inputFocus', \"Whether keyboard focus is inside an input box\"));","map":{"version":3,"names":["isIOS","isLinux","isMacintosh","isMobile","isWeb","isWindows","localize","RawContextKey","IsMacContext","IsLinuxContext","IsWindowsContext","IsWebContext","IsMacNativeContext","IsIOSContext","IsMobileContext","IsDevelopmentContext","ProductQualityContext","InputFocusedContextKey","InputFocusedContext"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkeys.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isIOS, isLinux, isMacintosh, isMobile, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { localize } from '../../../nls.js';\nimport { RawContextKey } from './contextkey.js';\nexport const IsMacContext = new RawContextKey('isMac', isMacintosh, localize('isMac', \"Whether the operating system is macOS\"));\nexport const IsLinuxContext = new RawContextKey('isLinux', isLinux, localize('isLinux', \"Whether the operating system is Linux\"));\nexport const IsWindowsContext = new RawContextKey('isWindows', isWindows, localize('isWindows', \"Whether the operating system is Windows\"));\nexport const IsWebContext = new RawContextKey('isWeb', isWeb, localize('isWeb', \"Whether the platform is a web browser\"));\nexport const IsMacNativeContext = new RawContextKey('isMacNative', isMacintosh && !isWeb, localize('isMacNative', \"Whether the operating system is macOS on a non-browser platform\"));\nexport const IsIOSContext = new RawContextKey('isIOS', isIOS, localize('isIOS', \"Whether the operating system is iOS\"));\nexport const IsMobileContext = new RawContextKey('isMobile', isMobile, localize('isMobile', \"Whether the platform is a mobile web browser\"));\nexport const IsDevelopmentContext = new RawContextKey('isDevelopment', false, true);\nexport const ProductQualityContext = new RawContextKey('productQualityType', '', localize('productQualityType', \"Quality type of VS Code\"));\nexport const InputFocusedContextKey = 'inputFocus';\nexport const InputFocusedContext = new RawContextKey(InputFocusedContextKey, false, localize('inputFocus', \"Whether keyboard focus is inside an input box\"));\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,KAAK,EAAEC,OAAO,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,SAAS,QAAQ,kCAAkC;AAC1G,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAO,MAAMC,YAAY,GAAG,IAAID,aAAa,CAAC,OAAO,EAAEL,WAAW,EAAEI,QAAQ,CAAC,OAAO,EAAE,uCAAuC,CAAC,CAAC;AAC/H,OAAO,MAAMG,cAAc,GAAG,IAAIF,aAAa,CAAC,SAAS,EAAEN,OAAO,EAAEK,QAAQ,CAAC,SAAS,EAAE,uCAAuC,CAAC,CAAC;AACjI,OAAO,MAAMI,gBAAgB,GAAG,IAAIH,aAAa,CAAC,WAAW,EAAEF,SAAS,EAAEC,QAAQ,CAAC,WAAW,EAAE,yCAAyC,CAAC,CAAC;AAC3I,OAAO,MAAMK,YAAY,GAAG,IAAIJ,aAAa,CAAC,OAAO,EAAEH,KAAK,EAAEE,QAAQ,CAAC,OAAO,EAAE,uCAAuC,CAAC,CAAC;AACzH,OAAO,MAAMM,kBAAkB,GAAG,IAAIL,aAAa,CAAC,aAAa,EAAEL,WAAW,IAAI,CAACE,KAAK,EAAEE,QAAQ,CAAC,aAAa,EAAE,iEAAiE,CAAC,CAAC;AACrL,OAAO,MAAMO,YAAY,GAAG,IAAIN,aAAa,CAAC,OAAO,EAAEP,KAAK,EAAEM,QAAQ,CAAC,OAAO,EAAE,qCAAqC,CAAC,CAAC;AACvH,OAAO,MAAMQ,eAAe,GAAG,IAAIP,aAAa,CAAC,UAAU,EAAEJ,QAAQ,EAAEG,QAAQ,CAAC,UAAU,EAAE,8CAA8C,CAAC,CAAC;AAC5I,OAAO,MAAMS,oBAAoB,GAAG,IAAIR,aAAa,CAAC,eAAe,EAAE,KAAK,EAAE,IAAI,CAAC;AACnF,OAAO,MAAMS,qBAAqB,GAAG,IAAIT,aAAa,CAAC,oBAAoB,EAAE,EAAE,EAAED,QAAQ,CAAC,oBAAoB,EAAE,yBAAyB,CAAC,CAAC;AAC3I,OAAO,MAAMW,sBAAsB,GAAG,YAAY;AAClD,OAAO,MAAMC,mBAAmB,GAAG,IAAIX,aAAa,CAACU,sBAAsB,EAAE,KAAK,EAAEX,QAAQ,CAAC,YAAY,EAAE,+CAA+C,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}