{"ast":null,"code":"import { defineComponent, toRefs, ref, computed, provide, reactive, watch, createVNode } from \"vue\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport { checkboxGroupKey } from \"./context.js\";\nimport { useFormItem } from \"../_hooks/use-form-item.js\";\nimport _Checkbox from \"./checkbox.js\";\nimport { isArray, isString, isNumber, isFunction } from \"../_utils/is.js\";\nvar CheckboxGroup = defineComponent({\n  name: \"CheckboxGroup\",\n  props: {\n    modelValue: {\n      type: Array,\n      default: void 0\n    },\n    defaultValue: {\n      type: Array,\n      default: () => []\n    },\n    max: {\n      type: Number\n    },\n    options: {\n      type: Array\n    },\n    direction: {\n      type: String,\n      default: \"horizontal\"\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: {\n    \"update:modelValue\": value => true,\n    \"change\": (value, ev) => true\n  },\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      disabled\n    } = toRefs(props);\n    const prefixCls = getPrefixCls(\"checkbox-group\");\n    const {\n      mergedDisabled,\n      eventHandlers\n    } = useFormItem({\n      disabled\n    });\n    const _value = ref(props.defaultValue);\n    const computedValue = computed(() => isArray(props.modelValue) ? props.modelValue : _value.value);\n    const isMaxed = computed(() => props.max === void 0 ? false : computedValue.value.length >= props.max);\n    const options = computed(() => {\n      var _a;\n      return ((_a = props.options) != null ? _a : []).map(option => {\n        if (isString(option) || isNumber(option)) {\n          return {\n            label: option,\n            value: option\n          };\n        }\n        return option;\n      });\n    });\n    const handleChange = (value, e) => {\n      var _a, _b;\n      _value.value = value;\n      emit(\"update:modelValue\", value);\n      emit(\"change\", value, e);\n      (_b = (_a = eventHandlers.value) == null ? void 0 : _a.onChange) == null ? void 0 : _b.call(_a, e);\n    };\n    provide(checkboxGroupKey, reactive({\n      name: \"ArcoCheckboxGroup\",\n      computedValue,\n      disabled: mergedDisabled,\n      isMaxed,\n      slots,\n      handleChange\n    }));\n    const cls = computed(() => [prefixCls, `${prefixCls}-direction-${props.direction}`]);\n    watch(() => props.modelValue, curValue => {\n      if (isArray(curValue)) {\n        _value.value = [...curValue];\n      } else {\n        _value.value = [];\n      }\n    });\n    const renderOptions = () => {\n      return options.value.map(option => {\n        const checked = computedValue.value.includes(option.value);\n        return createVNode(_Checkbox, {\n          \"key\": option.value,\n          \"value\": option.value,\n          \"disabled\": option.disabled || !checked && isMaxed.value,\n          \"indeterminate\": option.indeterminate,\n          \"modelValue\": checked\n        }, {\n          default: () => [slots.label ? slots.label({\n            data: option\n          }) : isFunction(option.label) ? option.label() : option.label]\n        });\n      });\n    };\n    return () => {\n      var _a;\n      return createVNode(\"span\", {\n        \"class\": cls.value\n      }, [options.value.length > 0 ? renderOptions() : (_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n  }\n});\nexport { CheckboxGroup as default };","map":{"version":3,"names":["defineComponent","toRefs","ref","computed","provide","reactive","watch","createVNode","getPrefixCls","checkboxGroupKey","useFormItem","_Checkbox","isArray","isString","isNumber","isFunction","CheckboxGroup","name","props","modelValue","type","Array","default","defaultValue","max","Number","options","direction","String","disabled","Boolean","emits","value","change","ev","setup","emit","slots","prefixCls","mergedDisabled","eventHandlers","_value","computedValue","isMaxed","length","_a","map","option","label","handleChange","e","_b","onChange","call","cls","curValue","renderOptions","checked","includes","indeterminate","data"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/@arco-design/web-vue/es/checkbox/checkbox-group.js"],"sourcesContent":["import { defineComponent, toRefs, ref, computed, provide, reactive, watch, createVNode } from \"vue\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport { checkboxGroupKey } from \"./context.js\";\nimport { useFormItem } from \"../_hooks/use-form-item.js\";\nimport _Checkbox from \"./checkbox.js\";\nimport { isArray, isString, isNumber, isFunction } from \"../_utils/is.js\";\nvar CheckboxGroup = defineComponent({\n  name: \"CheckboxGroup\",\n  props: {\n    modelValue: {\n      type: Array,\n      default: void 0\n    },\n    defaultValue: {\n      type: Array,\n      default: () => []\n    },\n    max: {\n      type: Number\n    },\n    options: {\n      type: Array\n    },\n    direction: {\n      type: String,\n      default: \"horizontal\"\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: {\n    \"update:modelValue\": (value) => true,\n    \"change\": (value, ev) => true\n  },\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      disabled\n    } = toRefs(props);\n    const prefixCls = getPrefixCls(\"checkbox-group\");\n    const {\n      mergedDisabled,\n      eventHandlers\n    } = useFormItem({\n      disabled\n    });\n    const _value = ref(props.defaultValue);\n    const computedValue = computed(() => isArray(props.modelValue) ? props.modelValue : _value.value);\n    const isMaxed = computed(() => props.max === void 0 ? false : computedValue.value.length >= props.max);\n    const options = computed(() => {\n      var _a;\n      return ((_a = props.options) != null ? _a : []).map((option) => {\n        if (isString(option) || isNumber(option)) {\n          return {\n            label: option,\n            value: option\n          };\n        }\n        return option;\n      });\n    });\n    const handleChange = (value, e) => {\n      var _a, _b;\n      _value.value = value;\n      emit(\"update:modelValue\", value);\n      emit(\"change\", value, e);\n      (_b = (_a = eventHandlers.value) == null ? void 0 : _a.onChange) == null ? void 0 : _b.call(_a, e);\n    };\n    provide(checkboxGroupKey, reactive({\n      name: \"ArcoCheckboxGroup\",\n      computedValue,\n      disabled: mergedDisabled,\n      isMaxed,\n      slots,\n      handleChange\n    }));\n    const cls = computed(() => [prefixCls, `${prefixCls}-direction-${props.direction}`]);\n    watch(() => props.modelValue, (curValue) => {\n      if (isArray(curValue)) {\n        _value.value = [...curValue];\n      } else {\n        _value.value = [];\n      }\n    });\n    const renderOptions = () => {\n      return options.value.map((option) => {\n        const checked = computedValue.value.includes(option.value);\n        return createVNode(_Checkbox, {\n          \"key\": option.value,\n          \"value\": option.value,\n          \"disabled\": option.disabled || !checked && isMaxed.value,\n          \"indeterminate\": option.indeterminate,\n          \"modelValue\": checked\n        }, {\n          default: () => [slots.label ? slots.label({\n            data: option\n          }) : isFunction(option.label) ? option.label() : option.label]\n        });\n      });\n    };\n    return () => {\n      var _a;\n      return createVNode(\"span\", {\n        \"class\": cls.value\n      }, [options.value.length > 0 ? renderOptions() : (_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n  }\n});\nexport { CheckboxGroup as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}