{"ast":null,"code":"import { toRefs, computed } from \"vue\";\nimport { isFunction } from \"../../_utils/is.js\";\nfunction getDefaultFormat(mode = \"date\", showTime = false) {\n  switch (mode) {\n    case \"date\":\n      return showTime ? \"YYYY-MM-DD HH:mm:ss\" : \"YYYY-MM-DD\";\n    case \"month\":\n      return \"YYYY-MM\";\n    case \"year\":\n      return \"YYYY\";\n    case \"week\":\n      return \"gggg-wo\";\n    case \"quarter\":\n      return \"YYYY-[Q]Q\";\n    default:\n      return \"YYYY-MM-DD\";\n  }\n}\nfunction getDefaultValueFormat(mode = \"date\", showTime = false) {\n  switch (mode) {\n    case \"date\":\n      return showTime ? \"YYYY-MM-DD HH:mm:ss\" : \"YYYY-MM-DD\";\n    case \"month\":\n      return \"YYYY-MM\";\n    case \"year\":\n      return \"YYYY\";\n    case \"week\":\n      return \"YYYY-MM-DD\";\n    case \"quarter\":\n      return \"YYYY-MM\";\n    default:\n      return \"YYYY-MM-DD\";\n  }\n}\nfunction useFormat(props) {\n  const {\n    format: propFormat,\n    mode,\n    showTime,\n    valueFormat: propValueFormat\n  } = toRefs(props);\n  const format = computed(() => !isFunction(propFormat == null ? void 0 : propFormat.value) && (propFormat == null ? void 0 : propFormat.value) || getDefaultFormat(mode == null ? void 0 : mode.value, showTime == null ? void 0 : showTime.value));\n  const valueFormat = computed(() => (propValueFormat == null ? void 0 : propValueFormat.value) || getDefaultValueFormat(mode == null ? void 0 : mode.value, showTime == null ? void 0 : showTime.value));\n  const parseValueFormat = computed(() => [\"timestamp\", \"Date\"].includes(valueFormat.value) ? format.value : valueFormat.value);\n  return {\n    format,\n    valueFormat,\n    parseValueFormat\n  };\n}\nexport { useFormat as default, getDefaultFormat, getDefaultValueFormat };","map":{"version":3,"names":["toRefs","computed","isFunction","getDefaultFormat","mode","showTime","getDefaultValueFormat","useFormat","props","format","propFormat","valueFormat","propValueFormat","value","parseValueFormat","includes","default"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/@arco-design/web-vue/es/date-picker/hooks/use-format.js"],"sourcesContent":["import { toRefs, computed } from \"vue\";\nimport { isFunction } from \"../../_utils/is.js\";\nfunction getDefaultFormat(mode = \"date\", showTime = false) {\n  switch (mode) {\n    case \"date\":\n      return showTime ? \"YYYY-MM-DD HH:mm:ss\" : \"YYYY-MM-DD\";\n    case \"month\":\n      return \"YYYY-MM\";\n    case \"year\":\n      return \"YYYY\";\n    case \"week\":\n      return \"gggg-wo\";\n    case \"quarter\":\n      return \"YYYY-[Q]Q\";\n    default:\n      return \"YYYY-MM-DD\";\n  }\n}\nfunction getDefaultValueFormat(mode = \"date\", showTime = false) {\n  switch (mode) {\n    case \"date\":\n      return showTime ? \"YYYY-MM-DD HH:mm:ss\" : \"YYYY-MM-DD\";\n    case \"month\":\n      return \"YYYY-MM\";\n    case \"year\":\n      return \"YYYY\";\n    case \"week\":\n      return \"YYYY-MM-DD\";\n    case \"quarter\":\n      return \"YYYY-MM\";\n    default:\n      return \"YYYY-MM-DD\";\n  }\n}\nfunction useFormat(props) {\n  const {\n    format: propFormat,\n    mode,\n    showTime,\n    valueFormat: propValueFormat\n  } = toRefs(props);\n  const format = computed(() => !isFunction(propFormat == null ? void 0 : propFormat.value) && (propFormat == null ? void 0 : propFormat.value) || getDefaultFormat(mode == null ? void 0 : mode.value, showTime == null ? void 0 : showTime.value));\n  const valueFormat = computed(() => (propValueFormat == null ? void 0 : propValueFormat.value) || getDefaultValueFormat(mode == null ? void 0 : mode.value, showTime == null ? void 0 : showTime.value));\n  const parseValueFormat = computed(() => [\"timestamp\", \"Date\"].includes(valueFormat.value) ? format.value : valueFormat.value);\n  return {\n    format,\n    valueFormat,\n    parseValueFormat\n  };\n}\nexport { useFormat as default, getDefaultFormat, getDefaultValueFormat };\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,KAAK;AACtC,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,gBAAgBA,CAACC,IAAI,GAAG,MAAM,EAAEC,QAAQ,GAAG,KAAK,EAAE;EACzD,QAAQD,IAAI;IACV,KAAK,MAAM;MACT,OAAOC,QAAQ,GAAG,qBAAqB,GAAG,YAAY;IACxD,KAAK,OAAO;MACV,OAAO,SAAS;IAClB,KAAK,MAAM;MACT,OAAO,MAAM;IACf,KAAK,MAAM;MACT,OAAO,SAAS;IAClB,KAAK,SAAS;MACZ,OAAO,WAAW;IACpB;MACE,OAAO,YAAY;EACvB;AACF;AACA,SAASC,qBAAqBA,CAACF,IAAI,GAAG,MAAM,EAAEC,QAAQ,GAAG,KAAK,EAAE;EAC9D,QAAQD,IAAI;IACV,KAAK,MAAM;MACT,OAAOC,QAAQ,GAAG,qBAAqB,GAAG,YAAY;IACxD,KAAK,OAAO;MACV,OAAO,SAAS;IAClB,KAAK,MAAM;MACT,OAAO,MAAM;IACf,KAAK,MAAM;MACT,OAAO,YAAY;IACrB,KAAK,SAAS;MACZ,OAAO,SAAS;IAClB;MACE,OAAO,YAAY;EACvB;AACF;AACA,SAASE,SAASA,CAACC,KAAK,EAAE;EACxB,MAAM;IACJC,MAAM,EAAEC,UAAU;IAClBN,IAAI;IACJC,QAAQ;IACRM,WAAW,EAAEC;EACf,CAAC,GAAGZ,MAAM,CAACQ,KAAK,CAAC;EACjB,MAAMC,MAAM,GAAGR,QAAQ,CAAC,MAAM,CAACC,UAAU,CAACQ,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACG,KAAK,CAAC,KAAKH,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACG,KAAK,CAAC,IAAIV,gBAAgB,CAACC,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACS,KAAK,EAAER,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACQ,KAAK,CAAC,CAAC;EAClP,MAAMF,WAAW,GAAGV,QAAQ,CAAC,MAAM,CAACW,eAAe,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACC,KAAK,KAAKP,qBAAqB,CAACF,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACS,KAAK,EAAER,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACQ,KAAK,CAAC,CAAC;EACvM,MAAMC,gBAAgB,GAAGb,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,CAACc,QAAQ,CAACJ,WAAW,CAACE,KAAK,CAAC,GAAGJ,MAAM,CAACI,KAAK,GAAGF,WAAW,CAACE,KAAK,CAAC;EAC7H,OAAO;IACLJ,MAAM;IACNE,WAAW;IACXG;EACF,CAAC;AACH;AACA,SAASP,SAAS,IAAIS,OAAO,EAAEb,gBAAgB,EAAEG,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}