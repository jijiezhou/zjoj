{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { $, addDisposableListener, append, asCSSUrl, EventType, ModifierKeyEmitter, prepend } from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { ActionViewItem, BaseActionViewItem, SelectActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { DropdownMenuActionViewItem } from '../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\nimport { ActionRunner, Separator, SubmenuAction } from '../../../base/common/actions.js';\nimport { UILabelProvider } from '../../../base/common/keybindingLabels.js';\nimport { combinedDisposable, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { isLinux, isWindows, OS } from '../../../base/common/platform.js';\nimport './menuEntryActionViewItem.css';\nimport { localize } from '../../../nls.js';\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { isICommandActionToggleInfo } from '../../action/common/action.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService, IContextViewService } from '../../contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { isDark } from '../../theme/common/theme.js';\nimport { assertType } from '../../../base/common/types.js';\nimport { asCssVariable, selectBorder } from '../../theme/common/colorRegistry.js';\nimport { defaultSelectBoxStyles } from '../../theme/browser/defaultStyles.js';\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\nexport function createAndFillInContextMenuActions(menu, options, target, primaryGroup) {\n  const groups = menu.getActions(options);\n  const modifierKeyEmitter = ModifierKeyEmitter.getInstance();\n  const useAlternativeActions = modifierKeyEmitter.keyStatus.altKey || (isWindows || isLinux) && modifierKeyEmitter.keyStatus.shiftKey;\n  fillInActions(groups, target, useAlternativeActions, primaryGroup ? actionGroup => actionGroup === primaryGroup : actionGroup => actionGroup === 'navigation');\n}\nexport function createAndFillInActionBarActions(menu, options, target, primaryGroup, shouldInlineSubmenu, useSeparatorsInPrimaryActions) {\n  const groups = menu.getActions(options);\n  const isPrimaryAction = typeof primaryGroup === 'string' ? actionGroup => actionGroup === primaryGroup : primaryGroup;\n  // Action bars handle alternative actions on their own so the alternative actions should be ignored\n  fillInActions(groups, target, false, isPrimaryAction, shouldInlineSubmenu, useSeparatorsInPrimaryActions);\n}\nfunction fillInActions(groups, target, useAlternativeActions, isPrimaryAction = actionGroup => actionGroup === 'navigation', shouldInlineSubmenu = () => false, useSeparatorsInPrimaryActions = false) {\n  let primaryBucket;\n  let secondaryBucket;\n  if (Array.isArray(target)) {\n    primaryBucket = target;\n    secondaryBucket = target;\n  } else {\n    primaryBucket = target.primary;\n    secondaryBucket = target.secondary;\n  }\n  const submenuInfo = new Set();\n  for (const [group, actions] of groups) {\n    let target;\n    if (isPrimaryAction(group)) {\n      target = primaryBucket;\n      if (target.length > 0 && useSeparatorsInPrimaryActions) {\n        target.push(new Separator());\n      }\n    } else {\n      target = secondaryBucket;\n      if (target.length > 0) {\n        target.push(new Separator());\n      }\n    }\n    for (let action of actions) {\n      if (useAlternativeActions) {\n        action = action instanceof MenuItemAction && action.alt ? action.alt : action;\n      }\n      const newLen = target.push(action);\n      // keep submenu info for later inlining\n      if (action instanceof SubmenuAction) {\n        submenuInfo.add({\n          group,\n          action,\n          index: newLen - 1\n        });\n      }\n    }\n  }\n  // ask the outside if submenu should be inlined or not. only ask when\n  // there would be enough space\n  for (const {\n    group,\n    action,\n    index\n  } of submenuInfo) {\n    const target = isPrimaryAction(group) ? primaryBucket : secondaryBucket;\n    // inlining submenus with length 0 or 1 is easy,\n    // larger submenus need to be checked with the overall limit\n    const submenuActions = action.actions;\n    if (shouldInlineSubmenu(action, group, target.length)) {\n      target.splice(index, 1, ...submenuActions);\n    }\n  }\n}\nlet MenuEntryActionViewItem = class MenuEntryActionViewItem extends ActionViewItem {\n  constructor(action, options, _keybindingService, _notificationService, _contextKeyService, _themeService, _contextMenuService, _accessibilityService) {\n    super(undefined, action, {\n      icon: !!(action.class || action.item.icon),\n      label: !action.class && !action.item.icon,\n      draggable: options === null || options === void 0 ? void 0 : options.draggable,\n      keybinding: options === null || options === void 0 ? void 0 : options.keybinding,\n      hoverDelegate: options === null || options === void 0 ? void 0 : options.hoverDelegate\n    });\n    this._keybindingService = _keybindingService;\n    this._notificationService = _notificationService;\n    this._contextKeyService = _contextKeyService;\n    this._themeService = _themeService;\n    this._contextMenuService = _contextMenuService;\n    this._accessibilityService = _accessibilityService;\n    this._wantsAltCommand = false;\n    this._itemClassDispose = this._register(new MutableDisposable());\n    this._altKey = ModifierKeyEmitter.getInstance();\n  }\n  get _menuItemAction() {\n    return this._action;\n  }\n  get _commandAction() {\n    return this._wantsAltCommand && this._menuItemAction.alt || this._menuItemAction;\n  }\n  async onClick(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    try {\n      await this.actionRunner.run(this._commandAction, this._context);\n    } catch (err) {\n      this._notificationService.error(err);\n    }\n  }\n  render(container) {\n    super.render(container);\n    container.classList.add('menu-entry');\n    if (this.options.icon) {\n      this._updateItemClass(this._menuItemAction.item);\n    }\n    if (this._menuItemAction.alt) {\n      let isMouseOver = false;\n      const updateAltState = () => {\n        var _a;\n        const wantsAltCommand = !!((_a = this._menuItemAction.alt) === null || _a === void 0 ? void 0 : _a.enabled) && (!this._accessibilityService.isMotionReduced() || isMouseOver) && (this._altKey.keyStatus.altKey || this._altKey.keyStatus.shiftKey && isMouseOver);\n        if (wantsAltCommand !== this._wantsAltCommand) {\n          this._wantsAltCommand = wantsAltCommand;\n          this.updateLabel();\n          this.updateTooltip();\n          this.updateClass();\n        }\n      };\n      this._register(this._altKey.event(updateAltState));\n      this._register(addDisposableListener(container, 'mouseleave', _ => {\n        isMouseOver = false;\n        updateAltState();\n      }));\n      this._register(addDisposableListener(container, 'mouseenter', _ => {\n        isMouseOver = true;\n        updateAltState();\n      }));\n      updateAltState();\n    }\n  }\n  updateLabel() {\n    if (this.options.label && this.label) {\n      this.label.textContent = this._commandAction.label;\n    }\n  }\n  getTooltip() {\n    var _a;\n    const keybinding = this._keybindingService.lookupKeybinding(this._commandAction.id, this._contextKeyService);\n    const keybindingLabel = keybinding && keybinding.getLabel();\n    const tooltip = this._commandAction.tooltip || this._commandAction.label;\n    let title = keybindingLabel ? localize('titleAndKb', \"{0} ({1})\", tooltip, keybindingLabel) : tooltip;\n    if (!this._wantsAltCommand && ((_a = this._menuItemAction.alt) === null || _a === void 0 ? void 0 : _a.enabled)) {\n      const altTooltip = this._menuItemAction.alt.tooltip || this._menuItemAction.alt.label;\n      const altKeybinding = this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id, this._contextKeyService);\n      const altKeybindingLabel = altKeybinding && altKeybinding.getLabel();\n      const altTitleSection = altKeybindingLabel ? localize('titleAndKb', \"{0} ({1})\", altTooltip, altKeybindingLabel) : altTooltip;\n      title = localize('titleAndKbAndAlt', \"{0}\\n[{1}] {2}\", title, UILabelProvider.modifierLabels[OS].altKey, altTitleSection);\n    }\n    return title;\n  }\n  updateClass() {\n    if (this.options.icon) {\n      if (this._commandAction !== this._menuItemAction) {\n        if (this._menuItemAction.alt) {\n          this._updateItemClass(this._menuItemAction.alt.item);\n        }\n      } else {\n        this._updateItemClass(this._menuItemAction.item);\n      }\n    }\n  }\n  _updateItemClass(item) {\n    this._itemClassDispose.value = undefined;\n    const {\n      element,\n      label\n    } = this;\n    if (!element || !label) {\n      return;\n    }\n    const icon = this._commandAction.checked && isICommandActionToggleInfo(item.toggled) && item.toggled.icon ? item.toggled.icon : item.icon;\n    if (!icon) {\n      return;\n    }\n    if (ThemeIcon.isThemeIcon(icon)) {\n      // theme icons\n      const iconClasses = ThemeIcon.asClassNameArray(icon);\n      label.classList.add(...iconClasses);\n      this._itemClassDispose.value = toDisposable(() => {\n        label.classList.remove(...iconClasses);\n      });\n    } else {\n      // icon path/url\n      label.style.backgroundImage = isDark(this._themeService.getColorTheme().type) ? asCSSUrl(icon.dark) : asCSSUrl(icon.light);\n      label.classList.add('icon');\n      this._itemClassDispose.value = combinedDisposable(toDisposable(() => {\n        label.style.backgroundImage = '';\n        label.classList.remove('icon');\n      }), this._themeService.onDidColorThemeChange(() => {\n        // refresh when the theme changes in case we go between dark <-> light\n        this.updateClass();\n      }));\n    }\n  }\n};\nMenuEntryActionViewItem = __decorate([__param(2, IKeybindingService), __param(3, INotificationService), __param(4, IContextKeyService), __param(5, IThemeService), __param(6, IContextMenuService), __param(7, IAccessibilityService)], MenuEntryActionViewItem);\nexport { MenuEntryActionViewItem };\nlet SubmenuEntryActionViewItem = class SubmenuEntryActionViewItem extends DropdownMenuActionViewItem {\n  constructor(action, options, _keybindingService, _contextMenuService, _themeService) {\n    var _a, _b, _c;\n    const dropdownOptions = {\n      ...options,\n      menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : false,\n      classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : ThemeIcon.isThemeIcon(action.item.icon) ? ThemeIcon.asClassName(action.item.icon) : undefined,\n      keybindingProvider: (_c = options === null || options === void 0 ? void 0 : options.keybindingProvider) !== null && _c !== void 0 ? _c : action => _keybindingService.lookupKeybinding(action.id)\n    };\n    super(action, {\n      getActions: () => action.actions\n    }, _contextMenuService, dropdownOptions);\n    this._keybindingService = _keybindingService;\n    this._contextMenuService = _contextMenuService;\n    this._themeService = _themeService;\n  }\n  render(container) {\n    super.render(container);\n    assertType(this.element);\n    container.classList.add('menu-entry');\n    const action = this._action;\n    const {\n      icon\n    } = action.item;\n    if (icon && !ThemeIcon.isThemeIcon(icon)) {\n      this.element.classList.add('icon');\n      const setBackgroundImage = () => {\n        if (this.element) {\n          this.element.style.backgroundImage = isDark(this._themeService.getColorTheme().type) ? asCSSUrl(icon.dark) : asCSSUrl(icon.light);\n        }\n      };\n      setBackgroundImage();\n      this._register(this._themeService.onDidColorThemeChange(() => {\n        // refresh when the theme changes in case we go between dark <-> light\n        setBackgroundImage();\n      }));\n    }\n  }\n};\nSubmenuEntryActionViewItem = __decorate([__param(2, IKeybindingService), __param(3, IContextMenuService), __param(4, IThemeService)], SubmenuEntryActionViewItem);\nexport { SubmenuEntryActionViewItem };\nlet DropdownWithDefaultActionViewItem = class DropdownWithDefaultActionViewItem extends BaseActionViewItem {\n  constructor(submenuAction, options, _keybindingService, _notificationService, _contextMenuService, _menuService, _instaService, _storageService) {\n    var _a, _b, _c;\n    super(null, submenuAction);\n    this._keybindingService = _keybindingService;\n    this._notificationService = _notificationService;\n    this._contextMenuService = _contextMenuService;\n    this._menuService = _menuService;\n    this._instaService = _instaService;\n    this._storageService = _storageService;\n    this._container = null;\n    this._options = options;\n    this._storageKey = `${submenuAction.item.submenu.id}_lastActionId`;\n    // determine default action\n    let defaultAction;\n    const defaultActionId = (options === null || options === void 0 ? void 0 : options.persistLastActionId) ? _storageService.get(this._storageKey, 1 /* StorageScope.WORKSPACE */) : undefined;\n    if (defaultActionId) {\n      defaultAction = submenuAction.actions.find(a => defaultActionId === a.id);\n    }\n    if (!defaultAction) {\n      defaultAction = submenuAction.actions[0];\n    }\n    this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, defaultAction, {\n      keybinding: this._getDefaultActionKeybindingLabel(defaultAction)\n    });\n    const dropdownOptions = {\n      keybindingProvider: action => this._keybindingService.lookupKeybinding(action.id),\n      ...options,\n      menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : true,\n      classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : ['codicon', 'codicon-chevron-down'],\n      actionRunner: (_c = options === null || options === void 0 ? void 0 : options.actionRunner) !== null && _c !== void 0 ? _c : new ActionRunner()\n    };\n    this._dropdown = new DropdownMenuActionViewItem(submenuAction, submenuAction.actions, this._contextMenuService, dropdownOptions);\n    this._dropdown.actionRunner.onDidRun(e => {\n      if (e.action instanceof MenuItemAction) {\n        this.update(e.action);\n      }\n    });\n  }\n  update(lastAction) {\n    var _a;\n    if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.persistLastActionId) {\n      this._storageService.store(this._storageKey, lastAction.id, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n    }\n    this._defaultAction.dispose();\n    this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, lastAction, {\n      keybinding: this._getDefaultActionKeybindingLabel(lastAction)\n    });\n    this._defaultAction.actionRunner = new class extends ActionRunner {\n      async runAction(action, context) {\n        await action.run(undefined);\n      }\n    }();\n    if (this._container) {\n      this._defaultAction.render(prepend(this._container, $('.action-container')));\n    }\n  }\n  _getDefaultActionKeybindingLabel(defaultAction) {\n    var _a;\n    let defaultActionKeybinding;\n    if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.renderKeybindingWithDefaultActionLabel) {\n      const kb = this._keybindingService.lookupKeybinding(defaultAction.id);\n      if (kb) {\n        defaultActionKeybinding = `(${kb.getLabel()})`;\n      }\n    }\n    return defaultActionKeybinding;\n  }\n  setActionContext(newContext) {\n    super.setActionContext(newContext);\n    this._defaultAction.setActionContext(newContext);\n    this._dropdown.setActionContext(newContext);\n  }\n  render(container) {\n    this._container = container;\n    super.render(this._container);\n    this._container.classList.add('monaco-dropdown-with-default');\n    const primaryContainer = $('.action-container');\n    this._defaultAction.render(append(this._container, primaryContainer));\n    this._register(addDisposableListener(primaryContainer, EventType.KEY_DOWN, e => {\n      const event = new StandardKeyboardEvent(e);\n      if (event.equals(17 /* KeyCode.RightArrow */)) {\n        this._defaultAction.element.tabIndex = -1;\n        this._dropdown.focus();\n        event.stopPropagation();\n      }\n    }));\n    const dropdownContainer = $('.dropdown-action-container');\n    this._dropdown.render(append(this._container, dropdownContainer));\n    this._register(addDisposableListener(dropdownContainer, EventType.KEY_DOWN, e => {\n      var _a;\n      const event = new StandardKeyboardEvent(e);\n      if (event.equals(15 /* KeyCode.LeftArrow */)) {\n        this._defaultAction.element.tabIndex = 0;\n        this._dropdown.setFocusable(false);\n        (_a = this._defaultAction.element) === null || _a === void 0 ? void 0 : _a.focus();\n        event.stopPropagation();\n      }\n    }));\n  }\n  focus(fromRight) {\n    if (fromRight) {\n      this._dropdown.focus();\n    } else {\n      this._defaultAction.element.tabIndex = 0;\n      this._defaultAction.element.focus();\n    }\n  }\n  blur() {\n    this._defaultAction.element.tabIndex = -1;\n    this._dropdown.blur();\n    this._container.blur();\n  }\n  setFocusable(focusable) {\n    if (focusable) {\n      this._defaultAction.element.tabIndex = 0;\n    } else {\n      this._defaultAction.element.tabIndex = -1;\n      this._dropdown.setFocusable(false);\n    }\n  }\n  dispose() {\n    this._defaultAction.dispose();\n    this._dropdown.dispose();\n    super.dispose();\n  }\n};\nDropdownWithDefaultActionViewItem = __decorate([__param(2, IKeybindingService), __param(3, INotificationService), __param(4, IContextMenuService), __param(5, IMenuService), __param(6, IInstantiationService), __param(7, IStorageService)], DropdownWithDefaultActionViewItem);\nexport { DropdownWithDefaultActionViewItem };\nlet SubmenuEntrySelectActionViewItem = class SubmenuEntrySelectActionViewItem extends SelectActionViewItem {\n  constructor(action, contextViewService) {\n    super(null, action, action.actions.map(a => ({\n      text: a.id === Separator.ID ? '\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500' : a.label,\n      isDisabled: !a.enabled\n    })), 0, contextViewService, defaultSelectBoxStyles, {\n      ariaLabel: action.tooltip,\n      optionsAsChildren: true\n    });\n    this.select(Math.max(0, action.actions.findIndex(a => a.checked)));\n  }\n  render(container) {\n    super.render(container);\n    container.style.borderColor = asCssVariable(selectBorder);\n  }\n  runAction(option, index) {\n    const action = this.action.actions[index];\n    if (action) {\n      this.actionRunner.run(action);\n    }\n  }\n};\nSubmenuEntrySelectActionViewItem = __decorate([__param(1, IContextViewService)], SubmenuEntrySelectActionViewItem);\n/**\n * Creates action view items for menu actions or submenu actions.\n */\nexport function createActionViewItem(instaService, action, options) {\n  if (action instanceof MenuItemAction) {\n    return instaService.createInstance(MenuEntryActionViewItem, action, options);\n  } else if (action instanceof SubmenuItemAction) {\n    if (action.item.isSelection) {\n      return instaService.createInstance(SubmenuEntrySelectActionViewItem, action);\n    } else {\n      if (action.item.rememberDefaultAction) {\n        return instaService.createInstance(DropdownWithDefaultActionViewItem, action, {\n          ...options,\n          persistLastActionId: true\n        });\n      } else {\n        return instaService.createInstance(SubmenuEntryActionViewItem, action, options);\n      }\n    }\n  } else {\n    return undefined;\n  }\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","$","addDisposableListener","append","asCSSUrl","EventType","ModifierKeyEmitter","prepend","StandardKeyboardEvent","ActionViewItem","BaseActionViewItem","SelectActionViewItem","DropdownMenuActionViewItem","ActionRunner","Separator","SubmenuAction","UILabelProvider","combinedDisposable","MutableDisposable","toDisposable","isLinux","isWindows","OS","localize","IMenuService","MenuItemAction","SubmenuItemAction","isICommandActionToggleInfo","IContextKeyService","IContextMenuService","IContextViewService","IInstantiationService","IKeybindingService","INotificationService","IStorageService","IThemeService","ThemeIcon","isDark","assertType","asCssVariable","selectBorder","defaultSelectBoxStyles","IAccessibilityService","createAndFillInContextMenuActions","menu","options","primaryGroup","groups","getActions","modifierKeyEmitter","getInstance","useAlternativeActions","keyStatus","altKey","shiftKey","fillInActions","actionGroup","createAndFillInActionBarActions","shouldInlineSubmenu","useSeparatorsInPrimaryActions","isPrimaryAction","primaryBucket","secondaryBucket","Array","isArray","primary","secondary","submenuInfo","Set","group","actions","push","action","alt","newLen","add","index","submenuActions","splice","MenuEntryActionViewItem","constructor","_keybindingService","_notificationService","_contextKeyService","_themeService","_contextMenuService","_accessibilityService","undefined","icon","class","item","label","draggable","keybinding","hoverDelegate","_wantsAltCommand","_itemClassDispose","_register","_altKey","_menuItemAction","_action","_commandAction","onClick","event","preventDefault","stopPropagation","actionRunner","run","_context","err","error","render","container","classList","_updateItemClass","isMouseOver","updateAltState","_a","wantsAltCommand","enabled","isMotionReduced","updateLabel","updateTooltip","updateClass","_","textContent","getTooltip","lookupKeybinding","id","keybindingLabel","getLabel","tooltip","title","altTooltip","altKeybinding","altKeybindingLabel","altTitleSection","modifierLabels","value","element","checked","toggled","isThemeIcon","iconClasses","asClassNameArray","remove","style","backgroundImage","getColorTheme","type","dark","light","onDidColorThemeChange","SubmenuEntryActionViewItem","_b","_c","dropdownOptions","menuAsChild","classNames","asClassName","keybindingProvider","setBackgroundImage","DropdownWithDefaultActionViewItem","submenuAction","_menuService","_instaService","_storageService","_container","_options","_storageKey","submenu","defaultAction","defaultActionId","persistLastActionId","get","find","a","_defaultAction","createInstance","_getDefaultActionKeybindingLabel","_dropdown","onDidRun","e","update","lastAction","store","dispose","runAction","context","defaultActionKeybinding","renderKeybindingWithDefaultActionLabel","kb","setActionContext","newContext","primaryContainer","KEY_DOWN","equals","tabIndex","focus","dropdownContainer","setFocusable","fromRight","blur","focusable","SubmenuEntrySelectActionViewItem","contextViewService","map","text","ID","isDisabled","ariaLabel","optionsAsChildren","select","Math","max","findIndex","borderColor","option","createActionViewItem","instaService","isSelection","rememberDefaultAction"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { $, addDisposableListener, append, asCSSUrl, EventType, ModifierKeyEmitter, prepend } from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { ActionViewItem, BaseActionViewItem, SelectActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { DropdownMenuActionViewItem } from '../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\nimport { ActionRunner, Separator, SubmenuAction } from '../../../base/common/actions.js';\nimport { UILabelProvider } from '../../../base/common/keybindingLabels.js';\nimport { combinedDisposable, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { isLinux, isWindows, OS } from '../../../base/common/platform.js';\nimport './menuEntryActionViewItem.css';\nimport { localize } from '../../../nls.js';\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { isICommandActionToggleInfo } from '../../action/common/action.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService, IContextViewService } from '../../contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { isDark } from '../../theme/common/theme.js';\nimport { assertType } from '../../../base/common/types.js';\nimport { asCssVariable, selectBorder } from '../../theme/common/colorRegistry.js';\nimport { defaultSelectBoxStyles } from '../../theme/browser/defaultStyles.js';\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\nexport function createAndFillInContextMenuActions(menu, options, target, primaryGroup) {\n    const groups = menu.getActions(options);\n    const modifierKeyEmitter = ModifierKeyEmitter.getInstance();\n    const useAlternativeActions = modifierKeyEmitter.keyStatus.altKey || ((isWindows || isLinux) && modifierKeyEmitter.keyStatus.shiftKey);\n    fillInActions(groups, target, useAlternativeActions, primaryGroup ? actionGroup => actionGroup === primaryGroup : actionGroup => actionGroup === 'navigation');\n}\nexport function createAndFillInActionBarActions(menu, options, target, primaryGroup, shouldInlineSubmenu, useSeparatorsInPrimaryActions) {\n    const groups = menu.getActions(options);\n    const isPrimaryAction = typeof primaryGroup === 'string' ? (actionGroup) => actionGroup === primaryGroup : primaryGroup;\n    // Action bars handle alternative actions on their own so the alternative actions should be ignored\n    fillInActions(groups, target, false, isPrimaryAction, shouldInlineSubmenu, useSeparatorsInPrimaryActions);\n}\nfunction fillInActions(groups, target, useAlternativeActions, isPrimaryAction = actionGroup => actionGroup === 'navigation', shouldInlineSubmenu = () => false, useSeparatorsInPrimaryActions = false) {\n    let primaryBucket;\n    let secondaryBucket;\n    if (Array.isArray(target)) {\n        primaryBucket = target;\n        secondaryBucket = target;\n    }\n    else {\n        primaryBucket = target.primary;\n        secondaryBucket = target.secondary;\n    }\n    const submenuInfo = new Set();\n    for (const [group, actions] of groups) {\n        let target;\n        if (isPrimaryAction(group)) {\n            target = primaryBucket;\n            if (target.length > 0 && useSeparatorsInPrimaryActions) {\n                target.push(new Separator());\n            }\n        }\n        else {\n            target = secondaryBucket;\n            if (target.length > 0) {\n                target.push(new Separator());\n            }\n        }\n        for (let action of actions) {\n            if (useAlternativeActions) {\n                action = action instanceof MenuItemAction && action.alt ? action.alt : action;\n            }\n            const newLen = target.push(action);\n            // keep submenu info for later inlining\n            if (action instanceof SubmenuAction) {\n                submenuInfo.add({ group, action, index: newLen - 1 });\n            }\n        }\n    }\n    // ask the outside if submenu should be inlined or not. only ask when\n    // there would be enough space\n    for (const { group, action, index } of submenuInfo) {\n        const target = isPrimaryAction(group) ? primaryBucket : secondaryBucket;\n        // inlining submenus with length 0 or 1 is easy,\n        // larger submenus need to be checked with the overall limit\n        const submenuActions = action.actions;\n        if (shouldInlineSubmenu(action, group, target.length)) {\n            target.splice(index, 1, ...submenuActions);\n        }\n    }\n}\nlet MenuEntryActionViewItem = class MenuEntryActionViewItem extends ActionViewItem {\n    constructor(action, options, _keybindingService, _notificationService, _contextKeyService, _themeService, _contextMenuService, _accessibilityService) {\n        super(undefined, action, { icon: !!(action.class || action.item.icon), label: !action.class && !action.item.icon, draggable: options === null || options === void 0 ? void 0 : options.draggable, keybinding: options === null || options === void 0 ? void 0 : options.keybinding, hoverDelegate: options === null || options === void 0 ? void 0 : options.hoverDelegate });\n        this._keybindingService = _keybindingService;\n        this._notificationService = _notificationService;\n        this._contextKeyService = _contextKeyService;\n        this._themeService = _themeService;\n        this._contextMenuService = _contextMenuService;\n        this._accessibilityService = _accessibilityService;\n        this._wantsAltCommand = false;\n        this._itemClassDispose = this._register(new MutableDisposable());\n        this._altKey = ModifierKeyEmitter.getInstance();\n    }\n    get _menuItemAction() {\n        return this._action;\n    }\n    get _commandAction() {\n        return this._wantsAltCommand && this._menuItemAction.alt || this._menuItemAction;\n    }\n    async onClick(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        try {\n            await this.actionRunner.run(this._commandAction, this._context);\n        }\n        catch (err) {\n            this._notificationService.error(err);\n        }\n    }\n    render(container) {\n        super.render(container);\n        container.classList.add('menu-entry');\n        if (this.options.icon) {\n            this._updateItemClass(this._menuItemAction.item);\n        }\n        if (this._menuItemAction.alt) {\n            let isMouseOver = false;\n            const updateAltState = () => {\n                var _a;\n                const wantsAltCommand = !!((_a = this._menuItemAction.alt) === null || _a === void 0 ? void 0 : _a.enabled) &&\n                    (!this._accessibilityService.isMotionReduced() || isMouseOver) && (this._altKey.keyStatus.altKey ||\n                    (this._altKey.keyStatus.shiftKey && isMouseOver));\n                if (wantsAltCommand !== this._wantsAltCommand) {\n                    this._wantsAltCommand = wantsAltCommand;\n                    this.updateLabel();\n                    this.updateTooltip();\n                    this.updateClass();\n                }\n            };\n            this._register(this._altKey.event(updateAltState));\n            this._register(addDisposableListener(container, 'mouseleave', _ => {\n                isMouseOver = false;\n                updateAltState();\n            }));\n            this._register(addDisposableListener(container, 'mouseenter', _ => {\n                isMouseOver = true;\n                updateAltState();\n            }));\n            updateAltState();\n        }\n    }\n    updateLabel() {\n        if (this.options.label && this.label) {\n            this.label.textContent = this._commandAction.label;\n        }\n    }\n    getTooltip() {\n        var _a;\n        const keybinding = this._keybindingService.lookupKeybinding(this._commandAction.id, this._contextKeyService);\n        const keybindingLabel = keybinding && keybinding.getLabel();\n        const tooltip = this._commandAction.tooltip || this._commandAction.label;\n        let title = keybindingLabel\n            ? localize('titleAndKb', \"{0} ({1})\", tooltip, keybindingLabel)\n            : tooltip;\n        if (!this._wantsAltCommand && ((_a = this._menuItemAction.alt) === null || _a === void 0 ? void 0 : _a.enabled)) {\n            const altTooltip = this._menuItemAction.alt.tooltip || this._menuItemAction.alt.label;\n            const altKeybinding = this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id, this._contextKeyService);\n            const altKeybindingLabel = altKeybinding && altKeybinding.getLabel();\n            const altTitleSection = altKeybindingLabel\n                ? localize('titleAndKb', \"{0} ({1})\", altTooltip, altKeybindingLabel)\n                : altTooltip;\n            title = localize('titleAndKbAndAlt', \"{0}\\n[{1}] {2}\", title, UILabelProvider.modifierLabels[OS].altKey, altTitleSection);\n        }\n        return title;\n    }\n    updateClass() {\n        if (this.options.icon) {\n            if (this._commandAction !== this._menuItemAction) {\n                if (this._menuItemAction.alt) {\n                    this._updateItemClass(this._menuItemAction.alt.item);\n                }\n            }\n            else {\n                this._updateItemClass(this._menuItemAction.item);\n            }\n        }\n    }\n    _updateItemClass(item) {\n        this._itemClassDispose.value = undefined;\n        const { element, label } = this;\n        if (!element || !label) {\n            return;\n        }\n        const icon = this._commandAction.checked && isICommandActionToggleInfo(item.toggled) && item.toggled.icon ? item.toggled.icon : item.icon;\n        if (!icon) {\n            return;\n        }\n        if (ThemeIcon.isThemeIcon(icon)) {\n            // theme icons\n            const iconClasses = ThemeIcon.asClassNameArray(icon);\n            label.classList.add(...iconClasses);\n            this._itemClassDispose.value = toDisposable(() => {\n                label.classList.remove(...iconClasses);\n            });\n        }\n        else {\n            // icon path/url\n            label.style.backgroundImage = (isDark(this._themeService.getColorTheme().type)\n                ? asCSSUrl(icon.dark)\n                : asCSSUrl(icon.light));\n            label.classList.add('icon');\n            this._itemClassDispose.value = combinedDisposable(toDisposable(() => {\n                label.style.backgroundImage = '';\n                label.classList.remove('icon');\n            }), this._themeService.onDidColorThemeChange(() => {\n                // refresh when the theme changes in case we go between dark <-> light\n                this.updateClass();\n            }));\n        }\n    }\n};\nMenuEntryActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, INotificationService),\n    __param(4, IContextKeyService),\n    __param(5, IThemeService),\n    __param(6, IContextMenuService),\n    __param(7, IAccessibilityService)\n], MenuEntryActionViewItem);\nexport { MenuEntryActionViewItem };\nlet SubmenuEntryActionViewItem = class SubmenuEntryActionViewItem extends DropdownMenuActionViewItem {\n    constructor(action, options, _keybindingService, _contextMenuService, _themeService) {\n        var _a, _b, _c;\n        const dropdownOptions = {\n            ...options,\n            menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : false,\n            classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : (ThemeIcon.isThemeIcon(action.item.icon) ? ThemeIcon.asClassName(action.item.icon) : undefined),\n            keybindingProvider: (_c = options === null || options === void 0 ? void 0 : options.keybindingProvider) !== null && _c !== void 0 ? _c : (action => _keybindingService.lookupKeybinding(action.id))\n        };\n        super(action, { getActions: () => action.actions }, _contextMenuService, dropdownOptions);\n        this._keybindingService = _keybindingService;\n        this._contextMenuService = _contextMenuService;\n        this._themeService = _themeService;\n    }\n    render(container) {\n        super.render(container);\n        assertType(this.element);\n        container.classList.add('menu-entry');\n        const action = this._action;\n        const { icon } = action.item;\n        if (icon && !ThemeIcon.isThemeIcon(icon)) {\n            this.element.classList.add('icon');\n            const setBackgroundImage = () => {\n                if (this.element) {\n                    this.element.style.backgroundImage = (isDark(this._themeService.getColorTheme().type)\n                        ? asCSSUrl(icon.dark)\n                        : asCSSUrl(icon.light));\n                }\n            };\n            setBackgroundImage();\n            this._register(this._themeService.onDidColorThemeChange(() => {\n                // refresh when the theme changes in case we go between dark <-> light\n                setBackgroundImage();\n            }));\n        }\n    }\n};\nSubmenuEntryActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, IContextMenuService),\n    __param(4, IThemeService)\n], SubmenuEntryActionViewItem);\nexport { SubmenuEntryActionViewItem };\nlet DropdownWithDefaultActionViewItem = class DropdownWithDefaultActionViewItem extends BaseActionViewItem {\n    constructor(submenuAction, options, _keybindingService, _notificationService, _contextMenuService, _menuService, _instaService, _storageService) {\n        var _a, _b, _c;\n        super(null, submenuAction);\n        this._keybindingService = _keybindingService;\n        this._notificationService = _notificationService;\n        this._contextMenuService = _contextMenuService;\n        this._menuService = _menuService;\n        this._instaService = _instaService;\n        this._storageService = _storageService;\n        this._container = null;\n        this._options = options;\n        this._storageKey = `${submenuAction.item.submenu.id}_lastActionId`;\n        // determine default action\n        let defaultAction;\n        const defaultActionId = (options === null || options === void 0 ? void 0 : options.persistLastActionId) ? _storageService.get(this._storageKey, 1 /* StorageScope.WORKSPACE */) : undefined;\n        if (defaultActionId) {\n            defaultAction = submenuAction.actions.find(a => defaultActionId === a.id);\n        }\n        if (!defaultAction) {\n            defaultAction = submenuAction.actions[0];\n        }\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, defaultAction, { keybinding: this._getDefaultActionKeybindingLabel(defaultAction) });\n        const dropdownOptions = {\n            keybindingProvider: action => this._keybindingService.lookupKeybinding(action.id),\n            ...options,\n            menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : true,\n            classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : ['codicon', 'codicon-chevron-down'],\n            actionRunner: (_c = options === null || options === void 0 ? void 0 : options.actionRunner) !== null && _c !== void 0 ? _c : new ActionRunner(),\n        };\n        this._dropdown = new DropdownMenuActionViewItem(submenuAction, submenuAction.actions, this._contextMenuService, dropdownOptions);\n        this._dropdown.actionRunner.onDidRun((e) => {\n            if (e.action instanceof MenuItemAction) {\n                this.update(e.action);\n            }\n        });\n    }\n    update(lastAction) {\n        var _a;\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.persistLastActionId) {\n            this._storageService.store(this._storageKey, lastAction.id, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        this._defaultAction.dispose();\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, lastAction, { keybinding: this._getDefaultActionKeybindingLabel(lastAction) });\n        this._defaultAction.actionRunner = new class extends ActionRunner {\n            async runAction(action, context) {\n                await action.run(undefined);\n            }\n        }();\n        if (this._container) {\n            this._defaultAction.render(prepend(this._container, $('.action-container')));\n        }\n    }\n    _getDefaultActionKeybindingLabel(defaultAction) {\n        var _a;\n        let defaultActionKeybinding;\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.renderKeybindingWithDefaultActionLabel) {\n            const kb = this._keybindingService.lookupKeybinding(defaultAction.id);\n            if (kb) {\n                defaultActionKeybinding = `(${kb.getLabel()})`;\n            }\n        }\n        return defaultActionKeybinding;\n    }\n    setActionContext(newContext) {\n        super.setActionContext(newContext);\n        this._defaultAction.setActionContext(newContext);\n        this._dropdown.setActionContext(newContext);\n    }\n    render(container) {\n        this._container = container;\n        super.render(this._container);\n        this._container.classList.add('monaco-dropdown-with-default');\n        const primaryContainer = $('.action-container');\n        this._defaultAction.render(append(this._container, primaryContainer));\n        this._register(addDisposableListener(primaryContainer, EventType.KEY_DOWN, (e) => {\n            const event = new StandardKeyboardEvent(e);\n            if (event.equals(17 /* KeyCode.RightArrow */)) {\n                this._defaultAction.element.tabIndex = -1;\n                this._dropdown.focus();\n                event.stopPropagation();\n            }\n        }));\n        const dropdownContainer = $('.dropdown-action-container');\n        this._dropdown.render(append(this._container, dropdownContainer));\n        this._register(addDisposableListener(dropdownContainer, EventType.KEY_DOWN, (e) => {\n            var _a;\n            const event = new StandardKeyboardEvent(e);\n            if (event.equals(15 /* KeyCode.LeftArrow */)) {\n                this._defaultAction.element.tabIndex = 0;\n                this._dropdown.setFocusable(false);\n                (_a = this._defaultAction.element) === null || _a === void 0 ? void 0 : _a.focus();\n                event.stopPropagation();\n            }\n        }));\n    }\n    focus(fromRight) {\n        if (fromRight) {\n            this._dropdown.focus();\n        }\n        else {\n            this._defaultAction.element.tabIndex = 0;\n            this._defaultAction.element.focus();\n        }\n    }\n    blur() {\n        this._defaultAction.element.tabIndex = -1;\n        this._dropdown.blur();\n        this._container.blur();\n    }\n    setFocusable(focusable) {\n        if (focusable) {\n            this._defaultAction.element.tabIndex = 0;\n        }\n        else {\n            this._defaultAction.element.tabIndex = -1;\n            this._dropdown.setFocusable(false);\n        }\n    }\n    dispose() {\n        this._defaultAction.dispose();\n        this._dropdown.dispose();\n        super.dispose();\n    }\n};\nDropdownWithDefaultActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, INotificationService),\n    __param(4, IContextMenuService),\n    __param(5, IMenuService),\n    __param(6, IInstantiationService),\n    __param(7, IStorageService)\n], DropdownWithDefaultActionViewItem);\nexport { DropdownWithDefaultActionViewItem };\nlet SubmenuEntrySelectActionViewItem = class SubmenuEntrySelectActionViewItem extends SelectActionViewItem {\n    constructor(action, contextViewService) {\n        super(null, action, action.actions.map(a => ({\n            text: a.id === Separator.ID ? '\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500' : a.label,\n            isDisabled: !a.enabled,\n        })), 0, contextViewService, defaultSelectBoxStyles, { ariaLabel: action.tooltip, optionsAsChildren: true });\n        this.select(Math.max(0, action.actions.findIndex(a => a.checked)));\n    }\n    render(container) {\n        super.render(container);\n        container.style.borderColor = asCssVariable(selectBorder);\n    }\n    runAction(option, index) {\n        const action = this.action.actions[index];\n        if (action) {\n            this.actionRunner.run(action);\n        }\n    }\n};\nSubmenuEntrySelectActionViewItem = __decorate([\n    __param(1, IContextViewService)\n], SubmenuEntrySelectActionViewItem);\n/**\n * Creates action view items for menu actions or submenu actions.\n */\nexport function createActionViewItem(instaService, action, options) {\n    if (action instanceof MenuItemAction) {\n        return instaService.createInstance(MenuEntryActionViewItem, action, options);\n    }\n    else if (action instanceof SubmenuItemAction) {\n        if (action.item.isSelection) {\n            return instaService.createInstance(SubmenuEntrySelectActionViewItem, action);\n        }\n        else {\n            if (action.item.rememberDefaultAction) {\n                return instaService.createInstance(DropdownWithDefaultActionViewItem, action, { ...options, persistLastActionId: true });\n            }\n            else {\n                return instaService.createInstance(SubmenuEntryActionViewItem, action, options);\n            }\n        }\n    }\n    else {\n        return undefined;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}