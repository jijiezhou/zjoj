{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Given a function, returns a function that is only calling that function once.\n */\nexport function createSingleCallFunction(fn, fnDidRunCallback) {\n  const _this = this;\n  let didCall = false;\n  let result;\n  return function () {\n    if (didCall) {\n      return result;\n    }\n    didCall = true;\n    if (fnDidRunCallback) {\n      try {\n        result = fn.apply(_this, arguments);\n      } finally {\n        fnDidRunCallback();\n      }\n    } else {\n      result = fn.apply(_this, arguments);\n    }\n    return result;\n  };\n}","map":{"version":3,"names":["createSingleCallFunction","fn","fnDidRunCallback","_this","didCall","result","apply","arguments"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/base/common/functional.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Given a function, returns a function that is only calling that function once.\n */\nexport function createSingleCallFunction(fn, fnDidRunCallback) {\n    const _this = this;\n    let didCall = false;\n    let result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        if (fnDidRunCallback) {\n            try {\n                result = fn.apply(_this, arguments);\n            }\n            finally {\n                fnDidRunCallback();\n            }\n        }\n        else {\n            result = fn.apply(_this, arguments);\n        }\n        return result;\n    };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,wBAAwBA,CAACC,EAAE,EAAEC,gBAAgB,EAAE;EAC3D,MAAMC,KAAK,GAAG,IAAI;EAClB,IAAIC,OAAO,GAAG,KAAK;EACnB,IAAIC,MAAM;EACV,OAAO,YAAY;IACf,IAAID,OAAO,EAAE;MACT,OAAOC,MAAM;IACjB;IACAD,OAAO,GAAG,IAAI;IACd,IAAIF,gBAAgB,EAAE;MAClB,IAAI;QACAG,MAAM,GAAGJ,EAAE,CAACK,KAAK,CAACH,KAAK,EAAEI,SAAS,CAAC;MACvC,CAAC,SACO;QACJL,gBAAgB,CAAC,CAAC;MACtB;IACJ,CAAC,MACI;MACDG,MAAM,GAAGJ,EAAE,CAACK,KAAK,CAACH,KAAK,EAAEI,SAAS,CAAC;IACvC;IACA,OAAOF,MAAM;EACjB,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}