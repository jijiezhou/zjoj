{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from '../../base/common/arrays.js';\nimport * as strings from '../../base/common/strings.js';\nimport { Range } from './core/range.js';\nexport class Viewport {\n  constructor(top, left, width, height) {\n    this._viewportBrand = undefined;\n    this.top = top | 0;\n    this.left = left | 0;\n    this.width = width | 0;\n    this.height = height | 0;\n  }\n}\nexport class MinimapLinesRenderingData {\n  constructor(tabSize, data) {\n    this.tabSize = tabSize;\n    this.data = data;\n  }\n}\nexport class ViewLineData {\n  constructor(content, continuesWithWrappedLine, minColumn, maxColumn, startVisibleColumn, tokens, inlineDecorations) {\n    this._viewLineDataBrand = undefined;\n    this.content = content;\n    this.continuesWithWrappedLine = continuesWithWrappedLine;\n    this.minColumn = minColumn;\n    this.maxColumn = maxColumn;\n    this.startVisibleColumn = startVisibleColumn;\n    this.tokens = tokens;\n    this.inlineDecorations = inlineDecorations;\n  }\n}\nexport class ViewLineRenderingData {\n  constructor(minColumn, maxColumn, content, continuesWithWrappedLine, mightContainRTL, mightContainNonBasicASCII, tokens, inlineDecorations, tabSize, startVisibleColumn) {\n    this.minColumn = minColumn;\n    this.maxColumn = maxColumn;\n    this.content = content;\n    this.continuesWithWrappedLine = continuesWithWrappedLine;\n    this.isBasicASCII = ViewLineRenderingData.isBasicASCII(content, mightContainNonBasicASCII);\n    this.containsRTL = ViewLineRenderingData.containsRTL(content, this.isBasicASCII, mightContainRTL);\n    this.tokens = tokens;\n    this.inlineDecorations = inlineDecorations;\n    this.tabSize = tabSize;\n    this.startVisibleColumn = startVisibleColumn;\n  }\n  static isBasicASCII(lineContent, mightContainNonBasicASCII) {\n    if (mightContainNonBasicASCII) {\n      return strings.isBasicASCII(lineContent);\n    }\n    return true;\n  }\n  static containsRTL(lineContent, isBasicASCII, mightContainRTL) {\n    if (!isBasicASCII && mightContainRTL) {\n      return strings.containsRTL(lineContent);\n    }\n    return false;\n  }\n}\nexport class InlineDecoration {\n  constructor(range, inlineClassName, type) {\n    this.range = range;\n    this.inlineClassName = inlineClassName;\n    this.type = type;\n  }\n}\nexport class SingleLineInlineDecoration {\n  constructor(startOffset, endOffset, inlineClassName, inlineClassNameAffectsLetterSpacing) {\n    this.startOffset = startOffset;\n    this.endOffset = endOffset;\n    this.inlineClassName = inlineClassName;\n    this.inlineClassNameAffectsLetterSpacing = inlineClassNameAffectsLetterSpacing;\n  }\n  toInlineDecoration(lineNumber) {\n    return new InlineDecoration(new Range(lineNumber, this.startOffset + 1, lineNumber, this.endOffset + 1), this.inlineClassName, this.inlineClassNameAffectsLetterSpacing ? 3 /* InlineDecorationType.RegularAffectingLetterSpacing */ : 0 /* InlineDecorationType.Regular */);\n  }\n}\nexport class ViewModelDecoration {\n  constructor(range, options) {\n    this._viewModelDecorationBrand = undefined;\n    this.range = range;\n    this.options = options;\n  }\n}\nexport class OverviewRulerDecorationsGroup {\n  constructor(color, zIndex,\n  /**\n   * Decorations are encoded in a number array using the following scheme:\n   *  - 3*i = lane\n   *  - 3*i+1 = startLineNumber\n   *  - 3*i+2 = endLineNumber\n   */\n  data) {\n    this.color = color;\n    this.zIndex = zIndex;\n    this.data = data;\n  }\n  static compareByRenderingProps(a, b) {\n    if (a.zIndex === b.zIndex) {\n      if (a.color < b.color) {\n        return -1;\n      }\n      if (a.color > b.color) {\n        return 1;\n      }\n      return 0;\n    }\n    return a.zIndex - b.zIndex;\n  }\n  static equals(a, b) {\n    return a.color === b.color && a.zIndex === b.zIndex && arrays.equals(a.data, b.data);\n  }\n  static equalsArr(a, b) {\n    return arrays.equals(a, b, OverviewRulerDecorationsGroup.equals);\n  }\n}","map":{"version":3,"names":["arrays","strings","Range","Viewport","constructor","top","left","width","height","_viewportBrand","undefined","MinimapLinesRenderingData","tabSize","data","ViewLineData","content","continuesWithWrappedLine","minColumn","maxColumn","startVisibleColumn","tokens","inlineDecorations","_viewLineDataBrand","ViewLineRenderingData","mightContainRTL","mightContainNonBasicASCII","isBasicASCII","containsRTL","lineContent","InlineDecoration","range","inlineClassName","type","SingleLineInlineDecoration","startOffset","endOffset","inlineClassNameAffectsLetterSpacing","toInlineDecoration","lineNumber","ViewModelDecoration","options","_viewModelDecorationBrand","OverviewRulerDecorationsGroup","color","zIndex","compareByRenderingProps","a","b","equals","equalsArr"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/common/viewModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from '../../base/common/arrays.js';\nimport * as strings from '../../base/common/strings.js';\nimport { Range } from './core/range.js';\nexport class Viewport {\n    constructor(top, left, width, height) {\n        this._viewportBrand = undefined;\n        this.top = top | 0;\n        this.left = left | 0;\n        this.width = width | 0;\n        this.height = height | 0;\n    }\n}\nexport class MinimapLinesRenderingData {\n    constructor(tabSize, data) {\n        this.tabSize = tabSize;\n        this.data = data;\n    }\n}\nexport class ViewLineData {\n    constructor(content, continuesWithWrappedLine, minColumn, maxColumn, startVisibleColumn, tokens, inlineDecorations) {\n        this._viewLineDataBrand = undefined;\n        this.content = content;\n        this.continuesWithWrappedLine = continuesWithWrappedLine;\n        this.minColumn = minColumn;\n        this.maxColumn = maxColumn;\n        this.startVisibleColumn = startVisibleColumn;\n        this.tokens = tokens;\n        this.inlineDecorations = inlineDecorations;\n    }\n}\nexport class ViewLineRenderingData {\n    constructor(minColumn, maxColumn, content, continuesWithWrappedLine, mightContainRTL, mightContainNonBasicASCII, tokens, inlineDecorations, tabSize, startVisibleColumn) {\n        this.minColumn = minColumn;\n        this.maxColumn = maxColumn;\n        this.content = content;\n        this.continuesWithWrappedLine = continuesWithWrappedLine;\n        this.isBasicASCII = ViewLineRenderingData.isBasicASCII(content, mightContainNonBasicASCII);\n        this.containsRTL = ViewLineRenderingData.containsRTL(content, this.isBasicASCII, mightContainRTL);\n        this.tokens = tokens;\n        this.inlineDecorations = inlineDecorations;\n        this.tabSize = tabSize;\n        this.startVisibleColumn = startVisibleColumn;\n    }\n    static isBasicASCII(lineContent, mightContainNonBasicASCII) {\n        if (mightContainNonBasicASCII) {\n            return strings.isBasicASCII(lineContent);\n        }\n        return true;\n    }\n    static containsRTL(lineContent, isBasicASCII, mightContainRTL) {\n        if (!isBasicASCII && mightContainRTL) {\n            return strings.containsRTL(lineContent);\n        }\n        return false;\n    }\n}\nexport class InlineDecoration {\n    constructor(range, inlineClassName, type) {\n        this.range = range;\n        this.inlineClassName = inlineClassName;\n        this.type = type;\n    }\n}\nexport class SingleLineInlineDecoration {\n    constructor(startOffset, endOffset, inlineClassName, inlineClassNameAffectsLetterSpacing) {\n        this.startOffset = startOffset;\n        this.endOffset = endOffset;\n        this.inlineClassName = inlineClassName;\n        this.inlineClassNameAffectsLetterSpacing = inlineClassNameAffectsLetterSpacing;\n    }\n    toInlineDecoration(lineNumber) {\n        return new InlineDecoration(new Range(lineNumber, this.startOffset + 1, lineNumber, this.endOffset + 1), this.inlineClassName, this.inlineClassNameAffectsLetterSpacing ? 3 /* InlineDecorationType.RegularAffectingLetterSpacing */ : 0 /* InlineDecorationType.Regular */);\n    }\n}\nexport class ViewModelDecoration {\n    constructor(range, options) {\n        this._viewModelDecorationBrand = undefined;\n        this.range = range;\n        this.options = options;\n    }\n}\nexport class OverviewRulerDecorationsGroup {\n    constructor(color, zIndex, \n    /**\n     * Decorations are encoded in a number array using the following scheme:\n     *  - 3*i = lane\n     *  - 3*i+1 = startLineNumber\n     *  - 3*i+2 = endLineNumber\n     */\n    data) {\n        this.color = color;\n        this.zIndex = zIndex;\n        this.data = data;\n    }\n    static compareByRenderingProps(a, b) {\n        if (a.zIndex === b.zIndex) {\n            if (a.color < b.color) {\n                return -1;\n            }\n            if (a.color > b.color) {\n                return 1;\n            }\n            return 0;\n        }\n        return a.zIndex - b.zIndex;\n    }\n    static equals(a, b) {\n        return (a.color === b.color\n            && a.zIndex === b.zIndex\n            && arrays.equals(a.data, b.data));\n    }\n    static equalsArr(a, b) {\n        return arrays.equals(a, b, OverviewRulerDecorationsGroup.equals);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}