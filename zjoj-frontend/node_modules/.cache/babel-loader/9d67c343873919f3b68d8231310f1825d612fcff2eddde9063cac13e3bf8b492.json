{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { SmoothScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { getThemeTypeSelector } from '../../../../platform/theme/common/themeService.js';\nexport class EditorScrollbar extends ViewPart {\n  constructor(context, linesContent, viewDomNode, overflowGuardDomNode) {\n    super(context);\n    const options = this._context.configuration.options;\n    const scrollbar = options.get(102 /* EditorOption.scrollbar */);\n    const mouseWheelScrollSensitivity = options.get(74 /* EditorOption.mouseWheelScrollSensitivity */);\n    const fastScrollSensitivity = options.get(40 /* EditorOption.fastScrollSensitivity */);\n    const scrollPredominantAxis = options.get(105 /* EditorOption.scrollPredominantAxis */);\n    const scrollbarOptions = {\n      listenOnDomNode: viewDomNode.domNode,\n      className: 'editor-scrollable' + ' ' + getThemeTypeSelector(context.theme.type),\n      useShadows: false,\n      lazyRender: true,\n      vertical: scrollbar.vertical,\n      horizontal: scrollbar.horizontal,\n      verticalHasArrows: scrollbar.verticalHasArrows,\n      horizontalHasArrows: scrollbar.horizontalHasArrows,\n      verticalScrollbarSize: scrollbar.verticalScrollbarSize,\n      verticalSliderSize: scrollbar.verticalSliderSize,\n      horizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n      horizontalSliderSize: scrollbar.horizontalSliderSize,\n      handleMouseWheel: scrollbar.handleMouseWheel,\n      alwaysConsumeMouseWheel: scrollbar.alwaysConsumeMouseWheel,\n      arrowSize: scrollbar.arrowSize,\n      mouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n      fastScrollSensitivity: fastScrollSensitivity,\n      scrollPredominantAxis: scrollPredominantAxis,\n      scrollByPage: scrollbar.scrollByPage\n    };\n    this.scrollbar = this._register(new SmoothScrollableElement(linesContent.domNode, scrollbarOptions, this._context.viewLayout.getScrollable()));\n    PartFingerprints.write(this.scrollbar.getDomNode(), 5 /* PartFingerprint.ScrollableElement */);\n    this.scrollbarDomNode = createFastDomNode(this.scrollbar.getDomNode());\n    this.scrollbarDomNode.setPosition('absolute');\n    this._setLayout();\n    // When having a zone widget that calls .focus() on one of its dom elements,\n    // the browser will try desperately to reveal that dom node, unexpectedly\n    // changing the .scrollTop of this.linesContent\n    const onBrowserDesperateReveal = (domNode, lookAtScrollTop, lookAtScrollLeft) => {\n      const newScrollPosition = {};\n      if (lookAtScrollTop) {\n        const deltaTop = domNode.scrollTop;\n        if (deltaTop) {\n          newScrollPosition.scrollTop = this._context.viewLayout.getCurrentScrollTop() + deltaTop;\n          domNode.scrollTop = 0;\n        }\n      }\n      if (lookAtScrollLeft) {\n        const deltaLeft = domNode.scrollLeft;\n        if (deltaLeft) {\n          newScrollPosition.scrollLeft = this._context.viewLayout.getCurrentScrollLeft() + deltaLeft;\n          domNode.scrollLeft = 0;\n        }\n      }\n      this._context.viewModel.viewLayout.setScrollPosition(newScrollPosition, 1 /* ScrollType.Immediate */);\n    };\n    // I've seen this happen both on the view dom node & on the lines content dom node.\n    this._register(dom.addDisposableListener(viewDomNode.domNode, 'scroll', e => onBrowserDesperateReveal(viewDomNode.domNode, true, true)));\n    this._register(dom.addDisposableListener(linesContent.domNode, 'scroll', e => onBrowserDesperateReveal(linesContent.domNode, true, false)));\n    this._register(dom.addDisposableListener(overflowGuardDomNode.domNode, 'scroll', e => onBrowserDesperateReveal(overflowGuardDomNode.domNode, true, false)));\n    this._register(dom.addDisposableListener(this.scrollbarDomNode.domNode, 'scroll', e => onBrowserDesperateReveal(this.scrollbarDomNode.domNode, true, false)));\n  }\n  dispose() {\n    super.dispose();\n  }\n  _setLayout() {\n    const options = this._context.configuration.options;\n    const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n    this.scrollbarDomNode.setLeft(layoutInfo.contentLeft);\n    const minimap = options.get(72 /* EditorOption.minimap */);\n    const side = minimap.side;\n    if (side === 'right') {\n      this.scrollbarDomNode.setWidth(layoutInfo.contentWidth + layoutInfo.minimap.minimapWidth);\n    } else {\n      this.scrollbarDomNode.setWidth(layoutInfo.contentWidth);\n    }\n    this.scrollbarDomNode.setHeight(layoutInfo.height);\n  }\n  getOverviewRulerLayoutInfo() {\n    return this.scrollbar.getOverviewRulerLayoutInfo();\n  }\n  getDomNode() {\n    return this.scrollbarDomNode;\n  }\n  delegateVerticalScrollbarPointerDown(browserEvent) {\n    this.scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n  }\n  delegateScrollFromMouseWheelEvent(browserEvent) {\n    this.scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n  }\n  // --- begin event handlers\n  onConfigurationChanged(e) {\n    if (e.hasChanged(102 /* EditorOption.scrollbar */) || e.hasChanged(74 /* EditorOption.mouseWheelScrollSensitivity */) || e.hasChanged(40 /* EditorOption.fastScrollSensitivity */)) {\n      const options = this._context.configuration.options;\n      const scrollbar = options.get(102 /* EditorOption.scrollbar */);\n      const mouseWheelScrollSensitivity = options.get(74 /* EditorOption.mouseWheelScrollSensitivity */);\n      const fastScrollSensitivity = options.get(40 /* EditorOption.fastScrollSensitivity */);\n      const scrollPredominantAxis = options.get(105 /* EditorOption.scrollPredominantAxis */);\n      const newOpts = {\n        vertical: scrollbar.vertical,\n        horizontal: scrollbar.horizontal,\n        verticalScrollbarSize: scrollbar.verticalScrollbarSize,\n        horizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n        scrollByPage: scrollbar.scrollByPage,\n        handleMouseWheel: scrollbar.handleMouseWheel,\n        mouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n        fastScrollSensitivity: fastScrollSensitivity,\n        scrollPredominantAxis: scrollPredominantAxis\n      };\n      this.scrollbar.updateOptions(newOpts);\n    }\n    if (e.hasChanged(143 /* EditorOption.layoutInfo */)) {\n      this._setLayout();\n    }\n    return true;\n  }\n  onScrollChanged(e) {\n    return true;\n  }\n  onThemeChanged(e) {\n    this.scrollbar.updateClassName('editor-scrollable' + ' ' + getThemeTypeSelector(this._context.theme.type));\n    return true;\n  }\n  // --- end event handlers\n  prepareRender(ctx) {\n    // Nothing to do\n  }\n  render(ctx) {\n    this.scrollbar.renderNow();\n  }\n}","map":{"version":3,"names":["dom","createFastDomNode","SmoothScrollableElement","PartFingerprints","ViewPart","getThemeTypeSelector","EditorScrollbar","constructor","context","linesContent","viewDomNode","overflowGuardDomNode","options","_context","configuration","scrollbar","get","mouseWheelScrollSensitivity","fastScrollSensitivity","scrollPredominantAxis","scrollbarOptions","listenOnDomNode","domNode","className","theme","type","useShadows","lazyRender","vertical","horizontal","verticalHasArrows","horizontalHasArrows","verticalScrollbarSize","verticalSliderSize","horizontalScrollbarSize","horizontalSliderSize","handleMouseWheel","alwaysConsumeMouseWheel","arrowSize","scrollByPage","_register","viewLayout","getScrollable","write","getDomNode","scrollbarDomNode","setPosition","_setLayout","onBrowserDesperateReveal","lookAtScrollTop","lookAtScrollLeft","newScrollPosition","deltaTop","scrollTop","getCurrentScrollTop","deltaLeft","scrollLeft","getCurrentScrollLeft","viewModel","setScrollPosition","addDisposableListener","e","dispose","layoutInfo","setLeft","contentLeft","minimap","side","setWidth","contentWidth","minimapWidth","setHeight","height","getOverviewRulerLayoutInfo","delegateVerticalScrollbarPointerDown","browserEvent","delegateScrollFromMouseWheelEvent","onConfigurationChanged","hasChanged","newOpts","updateOptions","onScrollChanged","onThemeChanged","updateClassName","prepareRender","ctx","render","renderNow"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/editorScrollbar/editorScrollbar.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { SmoothScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { getThemeTypeSelector } from '../../../../platform/theme/common/themeService.js';\nexport class EditorScrollbar extends ViewPart {\n    constructor(context, linesContent, viewDomNode, overflowGuardDomNode) {\n        super(context);\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(102 /* EditorOption.scrollbar */);\n        const mouseWheelScrollSensitivity = options.get(74 /* EditorOption.mouseWheelScrollSensitivity */);\n        const fastScrollSensitivity = options.get(40 /* EditorOption.fastScrollSensitivity */);\n        const scrollPredominantAxis = options.get(105 /* EditorOption.scrollPredominantAxis */);\n        const scrollbarOptions = {\n            listenOnDomNode: viewDomNode.domNode,\n            className: 'editor-scrollable' + ' ' + getThemeTypeSelector(context.theme.type),\n            useShadows: false,\n            lazyRender: true,\n            vertical: scrollbar.vertical,\n            horizontal: scrollbar.horizontal,\n            verticalHasArrows: scrollbar.verticalHasArrows,\n            horizontalHasArrows: scrollbar.horizontalHasArrows,\n            verticalScrollbarSize: scrollbar.verticalScrollbarSize,\n            verticalSliderSize: scrollbar.verticalSliderSize,\n            horizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n            horizontalSliderSize: scrollbar.horizontalSliderSize,\n            handleMouseWheel: scrollbar.handleMouseWheel,\n            alwaysConsumeMouseWheel: scrollbar.alwaysConsumeMouseWheel,\n            arrowSize: scrollbar.arrowSize,\n            mouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n            fastScrollSensitivity: fastScrollSensitivity,\n            scrollPredominantAxis: scrollPredominantAxis,\n            scrollByPage: scrollbar.scrollByPage,\n        };\n        this.scrollbar = this._register(new SmoothScrollableElement(linesContent.domNode, scrollbarOptions, this._context.viewLayout.getScrollable()));\n        PartFingerprints.write(this.scrollbar.getDomNode(), 5 /* PartFingerprint.ScrollableElement */);\n        this.scrollbarDomNode = createFastDomNode(this.scrollbar.getDomNode());\n        this.scrollbarDomNode.setPosition('absolute');\n        this._setLayout();\n        // When having a zone widget that calls .focus() on one of its dom elements,\n        // the browser will try desperately to reveal that dom node, unexpectedly\n        // changing the .scrollTop of this.linesContent\n        const onBrowserDesperateReveal = (domNode, lookAtScrollTop, lookAtScrollLeft) => {\n            const newScrollPosition = {};\n            if (lookAtScrollTop) {\n                const deltaTop = domNode.scrollTop;\n                if (deltaTop) {\n                    newScrollPosition.scrollTop = this._context.viewLayout.getCurrentScrollTop() + deltaTop;\n                    domNode.scrollTop = 0;\n                }\n            }\n            if (lookAtScrollLeft) {\n                const deltaLeft = domNode.scrollLeft;\n                if (deltaLeft) {\n                    newScrollPosition.scrollLeft = this._context.viewLayout.getCurrentScrollLeft() + deltaLeft;\n                    domNode.scrollLeft = 0;\n                }\n            }\n            this._context.viewModel.viewLayout.setScrollPosition(newScrollPosition, 1 /* ScrollType.Immediate */);\n        };\n        // I've seen this happen both on the view dom node & on the lines content dom node.\n        this._register(dom.addDisposableListener(viewDomNode.domNode, 'scroll', (e) => onBrowserDesperateReveal(viewDomNode.domNode, true, true)));\n        this._register(dom.addDisposableListener(linesContent.domNode, 'scroll', (e) => onBrowserDesperateReveal(linesContent.domNode, true, false)));\n        this._register(dom.addDisposableListener(overflowGuardDomNode.domNode, 'scroll', (e) => onBrowserDesperateReveal(overflowGuardDomNode.domNode, true, false)));\n        this._register(dom.addDisposableListener(this.scrollbarDomNode.domNode, 'scroll', (e) => onBrowserDesperateReveal(this.scrollbarDomNode.domNode, true, false)));\n    }\n    dispose() {\n        super.dispose();\n    }\n    _setLayout() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this.scrollbarDomNode.setLeft(layoutInfo.contentLeft);\n        const minimap = options.get(72 /* EditorOption.minimap */);\n        const side = minimap.side;\n        if (side === 'right') {\n            this.scrollbarDomNode.setWidth(layoutInfo.contentWidth + layoutInfo.minimap.minimapWidth);\n        }\n        else {\n            this.scrollbarDomNode.setWidth(layoutInfo.contentWidth);\n        }\n        this.scrollbarDomNode.setHeight(layoutInfo.height);\n    }\n    getOverviewRulerLayoutInfo() {\n        return this.scrollbar.getOverviewRulerLayoutInfo();\n    }\n    getDomNode() {\n        return this.scrollbarDomNode;\n    }\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        this.scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        this.scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        if (e.hasChanged(102 /* EditorOption.scrollbar */)\n            || e.hasChanged(74 /* EditorOption.mouseWheelScrollSensitivity */)\n            || e.hasChanged(40 /* EditorOption.fastScrollSensitivity */)) {\n            const options = this._context.configuration.options;\n            const scrollbar = options.get(102 /* EditorOption.scrollbar */);\n            const mouseWheelScrollSensitivity = options.get(74 /* EditorOption.mouseWheelScrollSensitivity */);\n            const fastScrollSensitivity = options.get(40 /* EditorOption.fastScrollSensitivity */);\n            const scrollPredominantAxis = options.get(105 /* EditorOption.scrollPredominantAxis */);\n            const newOpts = {\n                vertical: scrollbar.vertical,\n                horizontal: scrollbar.horizontal,\n                verticalScrollbarSize: scrollbar.verticalScrollbarSize,\n                horizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n                scrollByPage: scrollbar.scrollByPage,\n                handleMouseWheel: scrollbar.handleMouseWheel,\n                mouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n                fastScrollSensitivity: fastScrollSensitivity,\n                scrollPredominantAxis: scrollPredominantAxis\n            };\n            this.scrollbar.updateOptions(newOpts);\n        }\n        if (e.hasChanged(143 /* EditorOption.layoutInfo */)) {\n            this._setLayout();\n        }\n        return true;\n    }\n    onScrollChanged(e) {\n        return true;\n    }\n    onThemeChanged(e) {\n        this.scrollbar.updateClassName('editor-scrollable' + ' ' + getThemeTypeSelector(this._context.theme.type));\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to do\n    }\n    render(ctx) {\n        this.scrollbar.renderNow();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}