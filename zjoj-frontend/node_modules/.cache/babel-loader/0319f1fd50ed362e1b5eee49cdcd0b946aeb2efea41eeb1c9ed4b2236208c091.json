{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { LanguagesRegistry } from './languagesRegistry.js';\nimport { firstOrDefault } from '../../../base/common/arrays.js';\nimport { TokenizationRegistry } from '../languages.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nexport class LanguageService extends Disposable {\n  constructor(warnOnOverwrite = false) {\n    super();\n    this._onDidRequestBasicLanguageFeatures = this._register(new Emitter());\n    this.onDidRequestBasicLanguageFeatures = this._onDidRequestBasicLanguageFeatures.event;\n    this._onDidRequestRichLanguageFeatures = this._register(new Emitter());\n    this.onDidRequestRichLanguageFeatures = this._onDidRequestRichLanguageFeatures.event;\n    this._onDidChange = this._register(new Emitter({\n      leakWarningThreshold: 200 /* https://github.com/microsoft/vscode/issues/119968 */\n    }));\n    this.onDidChange = this._onDidChange.event;\n    this._requestedBasicLanguages = new Set();\n    this._requestedRichLanguages = new Set();\n    LanguageService.instanceCount++;\n    this._registry = this._register(new LanguagesRegistry(true, warnOnOverwrite));\n    this.languageIdCodec = this._registry.languageIdCodec;\n    this._register(this._registry.onDidChange(() => this._onDidChange.fire()));\n  }\n  dispose() {\n    LanguageService.instanceCount--;\n    super.dispose();\n  }\n  isRegisteredLanguageId(languageId) {\n    return this._registry.isRegisteredLanguageId(languageId);\n  }\n  getLanguageIdByLanguageName(languageName) {\n    return this._registry.getLanguageIdByLanguageName(languageName);\n  }\n  getLanguageIdByMimeType(mimeType) {\n    return this._registry.getLanguageIdByMimeType(mimeType);\n  }\n  guessLanguageIdByFilepathOrFirstLine(resource, firstLine) {\n    const languageIds = this._registry.guessLanguageIdByFilepathOrFirstLine(resource, firstLine);\n    return firstOrDefault(languageIds, null);\n  }\n  createById(languageId) {\n    return new LanguageSelection(this.onDidChange, () => {\n      return this._createAndGetLanguageIdentifier(languageId);\n    });\n  }\n  createByFilepathOrFirstLine(resource, firstLine) {\n    return new LanguageSelection(this.onDidChange, () => {\n      const languageId = this.guessLanguageIdByFilepathOrFirstLine(resource, firstLine);\n      return this._createAndGetLanguageIdentifier(languageId);\n    });\n  }\n  _createAndGetLanguageIdentifier(languageId) {\n    if (!languageId || !this.isRegisteredLanguageId(languageId)) {\n      // Fall back to plain text if language is unknown\n      languageId = PLAINTEXT_LANGUAGE_ID;\n    }\n    return languageId;\n  }\n  requestBasicLanguageFeatures(languageId) {\n    if (!this._requestedBasicLanguages.has(languageId)) {\n      this._requestedBasicLanguages.add(languageId);\n      this._onDidRequestBasicLanguageFeatures.fire(languageId);\n    }\n  }\n  requestRichLanguageFeatures(languageId) {\n    if (!this._requestedRichLanguages.has(languageId)) {\n      this._requestedRichLanguages.add(languageId);\n      // Ensure basic features are requested\n      this.requestBasicLanguageFeatures(languageId);\n      // Ensure tokenizers are created\n      TokenizationRegistry.getOrCreate(languageId);\n      this._onDidRequestRichLanguageFeatures.fire(languageId);\n    }\n  }\n}\nLanguageService.instanceCount = 0;\nclass LanguageSelection {\n  constructor(_onDidChangeLanguages, _selector) {\n    this._onDidChangeLanguages = _onDidChangeLanguages;\n    this._selector = _selector;\n    this._listener = null;\n    this._emitter = null;\n    this.languageId = this._selector();\n  }\n  _dispose() {\n    if (this._listener) {\n      this._listener.dispose();\n      this._listener = null;\n    }\n    if (this._emitter) {\n      this._emitter.dispose();\n      this._emitter = null;\n    }\n  }\n  get onDidChange() {\n    if (!this._listener) {\n      this._listener = this._onDidChangeLanguages(() => this._evaluate());\n    }\n    if (!this._emitter) {\n      this._emitter = new Emitter({\n        onDidRemoveLastListener: () => {\n          this._dispose();\n        }\n      });\n    }\n    return this._emitter.event;\n  }\n  _evaluate() {\n    var _a;\n    const languageId = this._selector();\n    if (languageId === this.languageId) {\n      // no change\n      return;\n    }\n    this.languageId = languageId;\n    (_a = this._emitter) === null || _a === void 0 ? void 0 : _a.fire(this.languageId);\n  }\n}","map":{"version":3,"names":["Emitter","Disposable","LanguagesRegistry","firstOrDefault","TokenizationRegistry","PLAINTEXT_LANGUAGE_ID","LanguageService","constructor","warnOnOverwrite","_onDidRequestBasicLanguageFeatures","_register","onDidRequestBasicLanguageFeatures","event","_onDidRequestRichLanguageFeatures","onDidRequestRichLanguageFeatures","_onDidChange","leakWarningThreshold","onDidChange","_requestedBasicLanguages","Set","_requestedRichLanguages","instanceCount","_registry","languageIdCodec","fire","dispose","isRegisteredLanguageId","languageId","getLanguageIdByLanguageName","languageName","getLanguageIdByMimeType","mimeType","guessLanguageIdByFilepathOrFirstLine","resource","firstLine","languageIds","createById","LanguageSelection","_createAndGetLanguageIdentifier","createByFilepathOrFirstLine","requestBasicLanguageFeatures","has","add","requestRichLanguageFeatures","getOrCreate","_onDidChangeLanguages","_selector","_listener","_emitter","_dispose","_evaluate","onDidRemoveLastListener","_a"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/common/services/languageService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { LanguagesRegistry } from './languagesRegistry.js';\nimport { firstOrDefault } from '../../../base/common/arrays.js';\nimport { TokenizationRegistry } from '../languages.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nexport class LanguageService extends Disposable {\n    constructor(warnOnOverwrite = false) {\n        super();\n        this._onDidRequestBasicLanguageFeatures = this._register(new Emitter());\n        this.onDidRequestBasicLanguageFeatures = this._onDidRequestBasicLanguageFeatures.event;\n        this._onDidRequestRichLanguageFeatures = this._register(new Emitter());\n        this.onDidRequestRichLanguageFeatures = this._onDidRequestRichLanguageFeatures.event;\n        this._onDidChange = this._register(new Emitter({ leakWarningThreshold: 200 /* https://github.com/microsoft/vscode/issues/119968 */ }));\n        this.onDidChange = this._onDidChange.event;\n        this._requestedBasicLanguages = new Set();\n        this._requestedRichLanguages = new Set();\n        LanguageService.instanceCount++;\n        this._registry = this._register(new LanguagesRegistry(true, warnOnOverwrite));\n        this.languageIdCodec = this._registry.languageIdCodec;\n        this._register(this._registry.onDidChange(() => this._onDidChange.fire()));\n    }\n    dispose() {\n        LanguageService.instanceCount--;\n        super.dispose();\n    }\n    isRegisteredLanguageId(languageId) {\n        return this._registry.isRegisteredLanguageId(languageId);\n    }\n    getLanguageIdByLanguageName(languageName) {\n        return this._registry.getLanguageIdByLanguageName(languageName);\n    }\n    getLanguageIdByMimeType(mimeType) {\n        return this._registry.getLanguageIdByMimeType(mimeType);\n    }\n    guessLanguageIdByFilepathOrFirstLine(resource, firstLine) {\n        const languageIds = this._registry.guessLanguageIdByFilepathOrFirstLine(resource, firstLine);\n        return firstOrDefault(languageIds, null);\n    }\n    createById(languageId) {\n        return new LanguageSelection(this.onDidChange, () => {\n            return this._createAndGetLanguageIdentifier(languageId);\n        });\n    }\n    createByFilepathOrFirstLine(resource, firstLine) {\n        return new LanguageSelection(this.onDidChange, () => {\n            const languageId = this.guessLanguageIdByFilepathOrFirstLine(resource, firstLine);\n            return this._createAndGetLanguageIdentifier(languageId);\n        });\n    }\n    _createAndGetLanguageIdentifier(languageId) {\n        if (!languageId || !this.isRegisteredLanguageId(languageId)) {\n            // Fall back to plain text if language is unknown\n            languageId = PLAINTEXT_LANGUAGE_ID;\n        }\n        return languageId;\n    }\n    requestBasicLanguageFeatures(languageId) {\n        if (!this._requestedBasicLanguages.has(languageId)) {\n            this._requestedBasicLanguages.add(languageId);\n            this._onDidRequestBasicLanguageFeatures.fire(languageId);\n        }\n    }\n    requestRichLanguageFeatures(languageId) {\n        if (!this._requestedRichLanguages.has(languageId)) {\n            this._requestedRichLanguages.add(languageId);\n            // Ensure basic features are requested\n            this.requestBasicLanguageFeatures(languageId);\n            // Ensure tokenizers are created\n            TokenizationRegistry.getOrCreate(languageId);\n            this._onDidRequestRichLanguageFeatures.fire(languageId);\n        }\n    }\n}\nLanguageService.instanceCount = 0;\nclass LanguageSelection {\n    constructor(_onDidChangeLanguages, _selector) {\n        this._onDidChangeLanguages = _onDidChangeLanguages;\n        this._selector = _selector;\n        this._listener = null;\n        this._emitter = null;\n        this.languageId = this._selector();\n    }\n    _dispose() {\n        if (this._listener) {\n            this._listener.dispose();\n            this._listener = null;\n        }\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    }\n    get onDidChange() {\n        if (!this._listener) {\n            this._listener = this._onDidChangeLanguages(() => this._evaluate());\n        }\n        if (!this._emitter) {\n            this._emitter = new Emitter({\n                onDidRemoveLastListener: () => {\n                    this._dispose();\n                }\n            });\n        }\n        return this._emitter.event;\n    }\n    _evaluate() {\n        var _a;\n        const languageId = this._selector();\n        if (languageId === this.languageId) {\n            // no change\n            return;\n        }\n        this.languageId = languageId;\n        (_a = this._emitter) === null || _a === void 0 ? void 0 : _a.fire(this.languageId);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}