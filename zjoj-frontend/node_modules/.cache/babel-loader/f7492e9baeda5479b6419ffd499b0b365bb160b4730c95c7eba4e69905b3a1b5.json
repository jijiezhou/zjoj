{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { IMarkerService, MarkerSeverity } from '../../../platform/markers/common/markers.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { OverviewRulerLane, MinimapPosition } from '../model.js';\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\nimport { overviewRulerWarning, overviewRulerInfo, overviewRulerError } from '../core/editorColorRegistry.js';\nimport { IModelService } from './model.js';\nimport { Range } from '../core/range.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { minimapInfo, minimapWarning, minimapError } from '../../../platform/theme/common/colorRegistry.js';\nimport { BidirectionalMap, ResourceMap } from '../../../base/common/map.js';\nimport { diffSets } from '../../../base/common/collections.js';\nlet MarkerDecorationsService = class MarkerDecorationsService extends Disposable {\n  constructor(modelService, _markerService) {\n    super();\n    this._markerService = _markerService;\n    this._onDidChangeMarker = this._register(new Emitter());\n    this._markerDecorations = new ResourceMap();\n    modelService.getModels().forEach(model => this._onModelAdded(model));\n    this._register(modelService.onModelAdded(this._onModelAdded, this));\n    this._register(modelService.onModelRemoved(this._onModelRemoved, this));\n    this._register(this._markerService.onMarkerChanged(this._handleMarkerChange, this));\n  }\n  dispose() {\n    super.dispose();\n    this._markerDecorations.forEach(value => value.dispose());\n    this._markerDecorations.clear();\n  }\n  getMarker(uri, decoration) {\n    const markerDecorations = this._markerDecorations.get(uri);\n    return markerDecorations ? markerDecorations.getMarker(decoration) || null : null;\n  }\n  _handleMarkerChange(changedResources) {\n    changedResources.forEach(resource => {\n      const markerDecorations = this._markerDecorations.get(resource);\n      if (markerDecorations) {\n        this._updateDecorations(markerDecorations);\n      }\n    });\n  }\n  _onModelAdded(model) {\n    const markerDecorations = new MarkerDecorations(model);\n    this._markerDecorations.set(model.uri, markerDecorations);\n    this._updateDecorations(markerDecorations);\n  }\n  _onModelRemoved(model) {\n    var _a;\n    const markerDecorations = this._markerDecorations.get(model.uri);\n    if (markerDecorations) {\n      markerDecorations.dispose();\n      this._markerDecorations.delete(model.uri);\n    }\n    // clean up markers for internal, transient models\n    if (model.uri.scheme === Schemas.inMemory || model.uri.scheme === Schemas.internal || model.uri.scheme === Schemas.vscode) {\n      (_a = this._markerService) === null || _a === void 0 ? void 0 : _a.read({\n        resource: model.uri\n      }).map(marker => marker.owner).forEach(owner => this._markerService.remove(owner, [model.uri]));\n    }\n  }\n  _updateDecorations(markerDecorations) {\n    // Limit to the first 500 errors/warnings\n    const markers = this._markerService.read({\n      resource: markerDecorations.model.uri,\n      take: 500\n    });\n    if (markerDecorations.update(markers)) {\n      this._onDidChangeMarker.fire(markerDecorations.model);\n    }\n  }\n};\nMarkerDecorationsService = __decorate([__param(0, IModelService), __param(1, IMarkerService)], MarkerDecorationsService);\nexport { MarkerDecorationsService };\nclass MarkerDecorations extends Disposable {\n  constructor(model) {\n    super();\n    this.model = model;\n    this._map = new BidirectionalMap();\n    this._register(toDisposable(() => {\n      this.model.deltaDecorations([...this._map.values()], []);\n      this._map.clear();\n    }));\n  }\n  update(markers) {\n    // We use the fact that marker instances are not recreated when different owners\n    // update. So we can compare references to find out what changed since the last update.\n    const {\n      added,\n      removed\n    } = diffSets(new Set(this._map.keys()), new Set(markers));\n    if (added.length === 0 && removed.length === 0) {\n      return false;\n    }\n    const oldIds = removed.map(marker => this._map.get(marker));\n    const newDecorations = added.map(marker => {\n      return {\n        range: this._createDecorationRange(this.model, marker),\n        options: this._createDecorationOption(marker)\n      };\n    });\n    const ids = this.model.deltaDecorations(oldIds, newDecorations);\n    for (const removedMarker of removed) {\n      this._map.delete(removedMarker);\n    }\n    for (let index = 0; index < ids.length; index++) {\n      this._map.set(added[index], ids[index]);\n    }\n    return true;\n  }\n  getMarker(decoration) {\n    return this._map.getKey(decoration.id);\n  }\n  _createDecorationRange(model, rawMarker) {\n    let ret = Range.lift(rawMarker);\n    if (rawMarker.severity === MarkerSeverity.Hint && !this._hasMarkerTag(rawMarker, 1 /* MarkerTag.Unnecessary */) && !this._hasMarkerTag(rawMarker, 2 /* MarkerTag.Deprecated */)) {\n      // * never render hints on multiple lines\n      // * make enough space for three dots\n      ret = ret.setEndPosition(ret.startLineNumber, ret.startColumn + 2);\n    }\n    ret = model.validateRange(ret);\n    if (ret.isEmpty()) {\n      const maxColumn = model.getLineLastNonWhitespaceColumn(ret.startLineNumber) || model.getLineMaxColumn(ret.startLineNumber);\n      if (maxColumn === 1 || ret.endColumn >= maxColumn) {\n        // empty line or behind eol\n        // keep the range as is, it will be rendered 1ch wide\n        return ret;\n      }\n      const word = model.getWordAtPosition(ret.getStartPosition());\n      if (word) {\n        ret = new Range(ret.startLineNumber, word.startColumn, ret.endLineNumber, word.endColumn);\n      }\n    } else if (rawMarker.endColumn === Number.MAX_VALUE && rawMarker.startColumn === 1 && ret.startLineNumber === ret.endLineNumber) {\n      const minColumn = model.getLineFirstNonWhitespaceColumn(rawMarker.startLineNumber);\n      if (minColumn < ret.endColumn) {\n        ret = new Range(ret.startLineNumber, minColumn, ret.endLineNumber, ret.endColumn);\n        rawMarker.startColumn = minColumn;\n      }\n    }\n    return ret;\n  }\n  _createDecorationOption(marker) {\n    let className;\n    let color = undefined;\n    let zIndex;\n    let inlineClassName = undefined;\n    let minimap;\n    switch (marker.severity) {\n      case MarkerSeverity.Hint:\n        if (this._hasMarkerTag(marker, 2 /* MarkerTag.Deprecated */)) {\n          className = undefined;\n        } else if (this._hasMarkerTag(marker, 1 /* MarkerTag.Unnecessary */)) {\n          className = \"squiggly-unnecessary\" /* ClassName.EditorUnnecessaryDecoration */;\n        } else {\n          className = \"squiggly-hint\" /* ClassName.EditorHintDecoration */;\n        }\n        zIndex = 0;\n        break;\n      case MarkerSeverity.Info:\n        className = \"squiggly-info\" /* ClassName.EditorInfoDecoration */;\n        color = themeColorFromId(overviewRulerInfo);\n        zIndex = 10;\n        minimap = {\n          color: themeColorFromId(minimapInfo),\n          position: MinimapPosition.Inline\n        };\n        break;\n      case MarkerSeverity.Warning:\n        className = \"squiggly-warning\" /* ClassName.EditorWarningDecoration */;\n        color = themeColorFromId(overviewRulerWarning);\n        zIndex = 20;\n        minimap = {\n          color: themeColorFromId(minimapWarning),\n          position: MinimapPosition.Inline\n        };\n        break;\n      case MarkerSeverity.Error:\n      default:\n        className = \"squiggly-error\" /* ClassName.EditorErrorDecoration */;\n        color = themeColorFromId(overviewRulerError);\n        zIndex = 30;\n        minimap = {\n          color: themeColorFromId(minimapError),\n          position: MinimapPosition.Inline\n        };\n        break;\n    }\n    if (marker.tags) {\n      if (marker.tags.indexOf(1 /* MarkerTag.Unnecessary */) !== -1) {\n        inlineClassName = \"squiggly-inline-unnecessary\" /* ClassName.EditorUnnecessaryInlineDecoration */;\n      }\n      if (marker.tags.indexOf(2 /* MarkerTag.Deprecated */) !== -1) {\n        inlineClassName = \"squiggly-inline-deprecated\" /* ClassName.EditorDeprecatedInlineDecoration */;\n      }\n    }\n    return {\n      description: 'marker-decoration',\n      stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n      className,\n      showIfCollapsed: true,\n      overviewRuler: {\n        color,\n        position: OverviewRulerLane.Right\n      },\n      minimap,\n      zIndex,\n      inlineClassName\n    };\n  }\n  _hasMarkerTag(marker, tag) {\n    if (marker.tags) {\n      return marker.tags.indexOf(tag) >= 0;\n    }\n    return false;\n  }\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","IMarkerService","MarkerSeverity","Disposable","toDisposable","OverviewRulerLane","MinimapPosition","themeColorFromId","overviewRulerWarning","overviewRulerInfo","overviewRulerError","IModelService","Range","Schemas","Emitter","minimapInfo","minimapWarning","minimapError","BidirectionalMap","ResourceMap","diffSets","MarkerDecorationsService","constructor","modelService","_markerService","_onDidChangeMarker","_register","_markerDecorations","getModels","forEach","model","_onModelAdded","onModelAdded","onModelRemoved","_onModelRemoved","onMarkerChanged","_handleMarkerChange","dispose","value","clear","getMarker","uri","decoration","markerDecorations","get","changedResources","resource","_updateDecorations","MarkerDecorations","set","_a","delete","scheme","inMemory","internal","vscode","read","map","marker","owner","remove","markers","take","update","fire","_map","deltaDecorations","values","added","removed","Set","keys","oldIds","newDecorations","range","_createDecorationRange","options","_createDecorationOption","ids","removedMarker","index","getKey","id","rawMarker","ret","lift","severity","Hint","_hasMarkerTag","setEndPosition","startLineNumber","startColumn","validateRange","isEmpty","maxColumn","getLineLastNonWhitespaceColumn","getLineMaxColumn","endColumn","word","getWordAtPosition","getStartPosition","endLineNumber","Number","MAX_VALUE","minColumn","getLineFirstNonWhitespaceColumn","className","color","undefined","zIndex","inlineClassName","minimap","Info","position","Inline","Warning","Error","tags","indexOf","description","stickiness","showIfCollapsed","overviewRuler","Right","tag"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/common/services/markerDecorationsService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { IMarkerService, MarkerSeverity } from '../../../platform/markers/common/markers.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { OverviewRulerLane, MinimapPosition } from '../model.js';\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\nimport { overviewRulerWarning, overviewRulerInfo, overviewRulerError } from '../core/editorColorRegistry.js';\nimport { IModelService } from './model.js';\nimport { Range } from '../core/range.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { minimapInfo, minimapWarning, minimapError } from '../../../platform/theme/common/colorRegistry.js';\nimport { BidirectionalMap, ResourceMap } from '../../../base/common/map.js';\nimport { diffSets } from '../../../base/common/collections.js';\nlet MarkerDecorationsService = class MarkerDecorationsService extends Disposable {\n    constructor(modelService, _markerService) {\n        super();\n        this._markerService = _markerService;\n        this._onDidChangeMarker = this._register(new Emitter());\n        this._markerDecorations = new ResourceMap();\n        modelService.getModels().forEach(model => this._onModelAdded(model));\n        this._register(modelService.onModelAdded(this._onModelAdded, this));\n        this._register(modelService.onModelRemoved(this._onModelRemoved, this));\n        this._register(this._markerService.onMarkerChanged(this._handleMarkerChange, this));\n    }\n    dispose() {\n        super.dispose();\n        this._markerDecorations.forEach(value => value.dispose());\n        this._markerDecorations.clear();\n    }\n    getMarker(uri, decoration) {\n        const markerDecorations = this._markerDecorations.get(uri);\n        return markerDecorations ? (markerDecorations.getMarker(decoration) || null) : null;\n    }\n    _handleMarkerChange(changedResources) {\n        changedResources.forEach((resource) => {\n            const markerDecorations = this._markerDecorations.get(resource);\n            if (markerDecorations) {\n                this._updateDecorations(markerDecorations);\n            }\n        });\n    }\n    _onModelAdded(model) {\n        const markerDecorations = new MarkerDecorations(model);\n        this._markerDecorations.set(model.uri, markerDecorations);\n        this._updateDecorations(markerDecorations);\n    }\n    _onModelRemoved(model) {\n        var _a;\n        const markerDecorations = this._markerDecorations.get(model.uri);\n        if (markerDecorations) {\n            markerDecorations.dispose();\n            this._markerDecorations.delete(model.uri);\n        }\n        // clean up markers for internal, transient models\n        if (model.uri.scheme === Schemas.inMemory\n            || model.uri.scheme === Schemas.internal\n            || model.uri.scheme === Schemas.vscode) {\n            (_a = this._markerService) === null || _a === void 0 ? void 0 : _a.read({ resource: model.uri }).map(marker => marker.owner).forEach(owner => this._markerService.remove(owner, [model.uri]));\n        }\n    }\n    _updateDecorations(markerDecorations) {\n        // Limit to the first 500 errors/warnings\n        const markers = this._markerService.read({ resource: markerDecorations.model.uri, take: 500 });\n        if (markerDecorations.update(markers)) {\n            this._onDidChangeMarker.fire(markerDecorations.model);\n        }\n    }\n};\nMarkerDecorationsService = __decorate([\n    __param(0, IModelService),\n    __param(1, IMarkerService)\n], MarkerDecorationsService);\nexport { MarkerDecorationsService };\nclass MarkerDecorations extends Disposable {\n    constructor(model) {\n        super();\n        this.model = model;\n        this._map = new BidirectionalMap();\n        this._register(toDisposable(() => {\n            this.model.deltaDecorations([...this._map.values()], []);\n            this._map.clear();\n        }));\n    }\n    update(markers) {\n        // We use the fact that marker instances are not recreated when different owners\n        // update. So we can compare references to find out what changed since the last update.\n        const { added, removed } = diffSets(new Set(this._map.keys()), new Set(markers));\n        if (added.length === 0 && removed.length === 0) {\n            return false;\n        }\n        const oldIds = removed.map(marker => this._map.get(marker));\n        const newDecorations = added.map(marker => {\n            return {\n                range: this._createDecorationRange(this.model, marker),\n                options: this._createDecorationOption(marker)\n            };\n        });\n        const ids = this.model.deltaDecorations(oldIds, newDecorations);\n        for (const removedMarker of removed) {\n            this._map.delete(removedMarker);\n        }\n        for (let index = 0; index < ids.length; index++) {\n            this._map.set(added[index], ids[index]);\n        }\n        return true;\n    }\n    getMarker(decoration) {\n        return this._map.getKey(decoration.id);\n    }\n    _createDecorationRange(model, rawMarker) {\n        let ret = Range.lift(rawMarker);\n        if (rawMarker.severity === MarkerSeverity.Hint && !this._hasMarkerTag(rawMarker, 1 /* MarkerTag.Unnecessary */) && !this._hasMarkerTag(rawMarker, 2 /* MarkerTag.Deprecated */)) {\n            // * never render hints on multiple lines\n            // * make enough space for three dots\n            ret = ret.setEndPosition(ret.startLineNumber, ret.startColumn + 2);\n        }\n        ret = model.validateRange(ret);\n        if (ret.isEmpty()) {\n            const maxColumn = model.getLineLastNonWhitespaceColumn(ret.startLineNumber) ||\n                model.getLineMaxColumn(ret.startLineNumber);\n            if (maxColumn === 1 || ret.endColumn >= maxColumn) {\n                // empty line or behind eol\n                // keep the range as is, it will be rendered 1ch wide\n                return ret;\n            }\n            const word = model.getWordAtPosition(ret.getStartPosition());\n            if (word) {\n                ret = new Range(ret.startLineNumber, word.startColumn, ret.endLineNumber, word.endColumn);\n            }\n        }\n        else if (rawMarker.endColumn === Number.MAX_VALUE && rawMarker.startColumn === 1 && ret.startLineNumber === ret.endLineNumber) {\n            const minColumn = model.getLineFirstNonWhitespaceColumn(rawMarker.startLineNumber);\n            if (minColumn < ret.endColumn) {\n                ret = new Range(ret.startLineNumber, minColumn, ret.endLineNumber, ret.endColumn);\n                rawMarker.startColumn = minColumn;\n            }\n        }\n        return ret;\n    }\n    _createDecorationOption(marker) {\n        let className;\n        let color = undefined;\n        let zIndex;\n        let inlineClassName = undefined;\n        let minimap;\n        switch (marker.severity) {\n            case MarkerSeverity.Hint:\n                if (this._hasMarkerTag(marker, 2 /* MarkerTag.Deprecated */)) {\n                    className = undefined;\n                }\n                else if (this._hasMarkerTag(marker, 1 /* MarkerTag.Unnecessary */)) {\n                    className = \"squiggly-unnecessary\" /* ClassName.EditorUnnecessaryDecoration */;\n                }\n                else {\n                    className = \"squiggly-hint\" /* ClassName.EditorHintDecoration */;\n                }\n                zIndex = 0;\n                break;\n            case MarkerSeverity.Info:\n                className = \"squiggly-info\" /* ClassName.EditorInfoDecoration */;\n                color = themeColorFromId(overviewRulerInfo);\n                zIndex = 10;\n                minimap = {\n                    color: themeColorFromId(minimapInfo),\n                    position: MinimapPosition.Inline\n                };\n                break;\n            case MarkerSeverity.Warning:\n                className = \"squiggly-warning\" /* ClassName.EditorWarningDecoration */;\n                color = themeColorFromId(overviewRulerWarning);\n                zIndex = 20;\n                minimap = {\n                    color: themeColorFromId(minimapWarning),\n                    position: MinimapPosition.Inline\n                };\n                break;\n            case MarkerSeverity.Error:\n            default:\n                className = \"squiggly-error\" /* ClassName.EditorErrorDecoration */;\n                color = themeColorFromId(overviewRulerError);\n                zIndex = 30;\n                minimap = {\n                    color: themeColorFromId(minimapError),\n                    position: MinimapPosition.Inline\n                };\n                break;\n        }\n        if (marker.tags) {\n            if (marker.tags.indexOf(1 /* MarkerTag.Unnecessary */) !== -1) {\n                inlineClassName = \"squiggly-inline-unnecessary\" /* ClassName.EditorUnnecessaryInlineDecoration */;\n            }\n            if (marker.tags.indexOf(2 /* MarkerTag.Deprecated */) !== -1) {\n                inlineClassName = \"squiggly-inline-deprecated\" /* ClassName.EditorDeprecatedInlineDecoration */;\n            }\n        }\n        return {\n            description: 'marker-decoration',\n            stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n            className,\n            showIfCollapsed: true,\n            overviewRuler: {\n                color,\n                position: OverviewRulerLane.Right\n            },\n            minimap,\n            zIndex,\n            inlineClassName,\n        };\n    }\n    _hasMarkerTag(marker, tag) {\n        if (marker.tags) {\n            return marker.tags.indexOf(tag) >= 0;\n        }\n        return false;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}