{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\nclass ViewCursorRenderData {\n  constructor(top, left, paddingLeft, width, height, textContent, textContentClassName) {\n    this.top = top;\n    this.left = left;\n    this.paddingLeft = paddingLeft;\n    this.width = width;\n    this.height = height;\n    this.textContent = textContent;\n    this.textContentClassName = textContentClassName;\n  }\n}\nexport class ViewCursor {\n  constructor(context) {\n    this._context = context;\n    const options = this._context.configuration.options;\n    const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n    this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n    this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n    this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n    this._lineCursorWidth = Math.min(options.get(31 /* EditorOption.cursorWidth */), this._typicalHalfwidthCharacterWidth);\n    this._isVisible = true;\n    // Create the dom node\n    this._domNode = createFastDomNode(document.createElement('div'));\n    this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n    this._domNode.setHeight(this._lineHeight);\n    this._domNode.setTop(0);\n    this._domNode.setLeft(0);\n    applyFontInfo(this._domNode, fontInfo);\n    this._domNode.setDisplay('none');\n    this._position = new Position(1, 1);\n    this._lastRenderedContent = '';\n    this._renderData = null;\n  }\n  getDomNode() {\n    return this._domNode;\n  }\n  getPosition() {\n    return this._position;\n  }\n  show() {\n    if (!this._isVisible) {\n      this._domNode.setVisibility('inherit');\n      this._isVisible = true;\n    }\n  }\n  hide() {\n    if (this._isVisible) {\n      this._domNode.setVisibility('hidden');\n      this._isVisible = false;\n    }\n  }\n  onConfigurationChanged(e) {\n    const options = this._context.configuration.options;\n    const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n    this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n    this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n    this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n    this._lineCursorWidth = Math.min(options.get(31 /* EditorOption.cursorWidth */), this._typicalHalfwidthCharacterWidth);\n    applyFontInfo(this._domNode, fontInfo);\n    return true;\n  }\n  onCursorPositionChanged(position, pauseAnimation) {\n    if (pauseAnimation) {\n      this._domNode.domNode.style.transitionProperty = 'none';\n    } else {\n      this._domNode.domNode.style.transitionProperty = '';\n    }\n    this._position = position;\n    return true;\n  }\n  /**\n   * If `this._position` is inside a grapheme, returns the position where the grapheme starts.\n   * Also returns the next grapheme.\n   */\n  _getGraphemeAwarePosition() {\n    const {\n      lineNumber,\n      column\n    } = this._position;\n    const lineContent = this._context.viewModel.getLineContent(lineNumber);\n    const [startOffset, endOffset] = strings.getCharContainingOffset(lineContent, column - 1);\n    return [new Position(lineNumber, startOffset + 1), lineContent.substring(startOffset, endOffset)];\n  }\n  _prepareRender(ctx) {\n    let textContent = '';\n    let textContentClassName = '';\n    const [position, nextGrapheme] = this._getGraphemeAwarePosition();\n    if (this._cursorStyle === TextEditorCursorStyle.Line || this._cursorStyle === TextEditorCursorStyle.LineThin) {\n      const visibleRange = ctx.visibleRangeForPosition(position);\n      if (!visibleRange || visibleRange.outsideRenderedLine) {\n        // Outside viewport\n        return null;\n      }\n      const window = dom.getWindow(this._domNode.domNode);\n      let width;\n      if (this._cursorStyle === TextEditorCursorStyle.Line) {\n        width = dom.computeScreenAwareSize(window, this._lineCursorWidth > 0 ? this._lineCursorWidth : 2);\n        if (width > 2) {\n          textContent = nextGrapheme;\n          textContentClassName = this._getTokenClassName(position);\n        }\n      } else {\n        width = dom.computeScreenAwareSize(window, 1);\n      }\n      let left = visibleRange.left;\n      let paddingLeft = 0;\n      if (width >= 2 && left >= 1) {\n        // shift the cursor a bit between the characters\n        paddingLeft = 1;\n        left -= paddingLeft;\n      }\n      const top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n      return new ViewCursorRenderData(top, left, paddingLeft, width, this._lineHeight, textContent, textContentClassName);\n    }\n    const visibleRangeForCharacter = ctx.linesVisibleRangesForRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column + nextGrapheme.length), false);\n    if (!visibleRangeForCharacter || visibleRangeForCharacter.length === 0) {\n      // Outside viewport\n      return null;\n    }\n    const firstVisibleRangeForCharacter = visibleRangeForCharacter[0];\n    if (firstVisibleRangeForCharacter.outsideRenderedLine || firstVisibleRangeForCharacter.ranges.length === 0) {\n      // Outside viewport\n      return null;\n    }\n    const range = firstVisibleRangeForCharacter.ranges[0];\n    const width = nextGrapheme === '\\t' ? this._typicalHalfwidthCharacterWidth : range.width < 1 ? this._typicalHalfwidthCharacterWidth : range.width;\n    if (this._cursorStyle === TextEditorCursorStyle.Block) {\n      textContent = nextGrapheme;\n      textContentClassName = this._getTokenClassName(position);\n    }\n    let top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n    let height = this._lineHeight;\n    // Underline might interfere with clicking\n    if (this._cursorStyle === TextEditorCursorStyle.Underline || this._cursorStyle === TextEditorCursorStyle.UnderlineThin) {\n      top += this._lineHeight - 2;\n      height = 2;\n    }\n    return new ViewCursorRenderData(top, range.left, 0, width, height, textContent, textContentClassName);\n  }\n  _getTokenClassName(position) {\n    const lineData = this._context.viewModel.getViewLineData(position.lineNumber);\n    const tokenIndex = lineData.tokens.findTokenIndexAtOffset(position.column - 1);\n    return lineData.tokens.getClassName(tokenIndex);\n  }\n  prepareRender(ctx) {\n    this._renderData = this._prepareRender(ctx);\n  }\n  render(ctx) {\n    if (!this._renderData) {\n      this._domNode.setDisplay('none');\n      return null;\n    }\n    if (this._lastRenderedContent !== this._renderData.textContent) {\n      this._lastRenderedContent = this._renderData.textContent;\n      this._domNode.domNode.textContent = this._lastRenderedContent;\n    }\n    this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ${this._renderData.textContentClassName}`);\n    this._domNode.setDisplay('block');\n    this._domNode.setTop(this._renderData.top);\n    this._domNode.setLeft(this._renderData.left);\n    this._domNode.setPaddingLeft(this._renderData.paddingLeft);\n    this._domNode.setWidth(this._renderData.width);\n    this._domNode.setLineHeight(this._renderData.height);\n    this._domNode.setHeight(this._renderData.height);\n    return {\n      domNode: this._domNode.domNode,\n      position: this._position,\n      contentLeft: this._renderData.left,\n      height: this._renderData.height,\n      width: 2\n    };\n  }\n}","map":{"version":3,"names":["dom","createFastDomNode","strings","applyFontInfo","TextEditorCursorStyle","Position","Range","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","ViewCursorRenderData","constructor","top","left","paddingLeft","width","height","textContent","textContentClassName","ViewCursor","context","_context","options","configuration","fontInfo","get","_cursorStyle","_lineHeight","_typicalHalfwidthCharacterWidth","typicalHalfwidthCharacterWidth","_lineCursorWidth","Math","min","_isVisible","_domNode","document","createElement","setClassName","setHeight","setTop","setLeft","setDisplay","_position","_lastRenderedContent","_renderData","getDomNode","getPosition","show","setVisibility","hide","onConfigurationChanged","e","onCursorPositionChanged","position","pauseAnimation","domNode","style","transitionProperty","_getGraphemeAwarePosition","lineNumber","column","lineContent","viewModel","getLineContent","startOffset","endOffset","getCharContainingOffset","substring","_prepareRender","ctx","nextGrapheme","Line","LineThin","visibleRange","visibleRangeForPosition","outsideRenderedLine","window","getWindow","computeScreenAwareSize","_getTokenClassName","getVerticalOffsetForLineNumber","bigNumbersDelta","visibleRangeForCharacter","linesVisibleRangesForRange","length","firstVisibleRangeForCharacter","ranges","range","Block","Underline","UnderlineThin","lineData","getViewLineData","tokenIndex","tokens","findTokenIndexAtOffset","getClassName","prepareRender","render","setPaddingLeft","setWidth","setLineHeight","contentLeft"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/viewCursor.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\nclass ViewCursorRenderData {\n    constructor(top, left, paddingLeft, width, height, textContent, textContentClassName) {\n        this.top = top;\n        this.left = left;\n        this.paddingLeft = paddingLeft;\n        this.width = width;\n        this.height = height;\n        this.textContent = textContent;\n        this.textContentClassName = textContentClassName;\n    }\n}\nexport class ViewCursor {\n    constructor(context) {\n        this._context = context;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._lineCursorWidth = Math.min(options.get(31 /* EditorOption.cursorWidth */), this._typicalHalfwidthCharacterWidth);\n        this._isVisible = true;\n        // Create the dom node\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n        this._domNode.setHeight(this._lineHeight);\n        this._domNode.setTop(0);\n        this._domNode.setLeft(0);\n        applyFontInfo(this._domNode, fontInfo);\n        this._domNode.setDisplay('none');\n        this._position = new Position(1, 1);\n        this._lastRenderedContent = '';\n        this._renderData = null;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return this._position;\n    }\n    show() {\n        if (!this._isVisible) {\n            this._domNode.setVisibility('inherit');\n            this._isVisible = true;\n        }\n    }\n    hide() {\n        if (this._isVisible) {\n            this._domNode.setVisibility('hidden');\n            this._isVisible = false;\n        }\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._lineCursorWidth = Math.min(options.get(31 /* EditorOption.cursorWidth */), this._typicalHalfwidthCharacterWidth);\n        applyFontInfo(this._domNode, fontInfo);\n        return true;\n    }\n    onCursorPositionChanged(position, pauseAnimation) {\n        if (pauseAnimation) {\n            this._domNode.domNode.style.transitionProperty = 'none';\n        }\n        else {\n            this._domNode.domNode.style.transitionProperty = '';\n        }\n        this._position = position;\n        return true;\n    }\n    /**\n     * If `this._position` is inside a grapheme, returns the position where the grapheme starts.\n     * Also returns the next grapheme.\n     */\n    _getGraphemeAwarePosition() {\n        const { lineNumber, column } = this._position;\n        const lineContent = this._context.viewModel.getLineContent(lineNumber);\n        const [startOffset, endOffset] = strings.getCharContainingOffset(lineContent, column - 1);\n        return [new Position(lineNumber, startOffset + 1), lineContent.substring(startOffset, endOffset)];\n    }\n    _prepareRender(ctx) {\n        let textContent = '';\n        let textContentClassName = '';\n        const [position, nextGrapheme] = this._getGraphemeAwarePosition();\n        if (this._cursorStyle === TextEditorCursorStyle.Line || this._cursorStyle === TextEditorCursorStyle.LineThin) {\n            const visibleRange = ctx.visibleRangeForPosition(position);\n            if (!visibleRange || visibleRange.outsideRenderedLine) {\n                // Outside viewport\n                return null;\n            }\n            const window = dom.getWindow(this._domNode.domNode);\n            let width;\n            if (this._cursorStyle === TextEditorCursorStyle.Line) {\n                width = dom.computeScreenAwareSize(window, this._lineCursorWidth > 0 ? this._lineCursorWidth : 2);\n                if (width > 2) {\n                    textContent = nextGrapheme;\n                    textContentClassName = this._getTokenClassName(position);\n                }\n            }\n            else {\n                width = dom.computeScreenAwareSize(window, 1);\n            }\n            let left = visibleRange.left;\n            let paddingLeft = 0;\n            if (width >= 2 && left >= 1) {\n                // shift the cursor a bit between the characters\n                paddingLeft = 1;\n                left -= paddingLeft;\n            }\n            const top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n            return new ViewCursorRenderData(top, left, paddingLeft, width, this._lineHeight, textContent, textContentClassName);\n        }\n        const visibleRangeForCharacter = ctx.linesVisibleRangesForRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column + nextGrapheme.length), false);\n        if (!visibleRangeForCharacter || visibleRangeForCharacter.length === 0) {\n            // Outside viewport\n            return null;\n        }\n        const firstVisibleRangeForCharacter = visibleRangeForCharacter[0];\n        if (firstVisibleRangeForCharacter.outsideRenderedLine || firstVisibleRangeForCharacter.ranges.length === 0) {\n            // Outside viewport\n            return null;\n        }\n        const range = firstVisibleRangeForCharacter.ranges[0];\n        const width = (nextGrapheme === '\\t'\n            ? this._typicalHalfwidthCharacterWidth\n            : (range.width < 1\n                ? this._typicalHalfwidthCharacterWidth\n                : range.width));\n        if (this._cursorStyle === TextEditorCursorStyle.Block) {\n            textContent = nextGrapheme;\n            textContentClassName = this._getTokenClassName(position);\n        }\n        let top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n        let height = this._lineHeight;\n        // Underline might interfere with clicking\n        if (this._cursorStyle === TextEditorCursorStyle.Underline || this._cursorStyle === TextEditorCursorStyle.UnderlineThin) {\n            top += this._lineHeight - 2;\n            height = 2;\n        }\n        return new ViewCursorRenderData(top, range.left, 0, width, height, textContent, textContentClassName);\n    }\n    _getTokenClassName(position) {\n        const lineData = this._context.viewModel.getViewLineData(position.lineNumber);\n        const tokenIndex = lineData.tokens.findTokenIndexAtOffset(position.column - 1);\n        return lineData.tokens.getClassName(tokenIndex);\n    }\n    prepareRender(ctx) {\n        this._renderData = this._prepareRender(ctx);\n    }\n    render(ctx) {\n        if (!this._renderData) {\n            this._domNode.setDisplay('none');\n            return null;\n        }\n        if (this._lastRenderedContent !== this._renderData.textContent) {\n            this._lastRenderedContent = this._renderData.textContent;\n            this._domNode.domNode.textContent = this._lastRenderedContent;\n        }\n        this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ${this._renderData.textContentClassName}`);\n        this._domNode.setDisplay('block');\n        this._domNode.setTop(this._renderData.top);\n        this._domNode.setLeft(this._renderData.left);\n        this._domNode.setPaddingLeft(this._renderData.paddingLeft);\n        this._domNode.setWidth(this._renderData.width);\n        this._domNode.setLineHeight(this._renderData.height);\n        this._domNode.setHeight(this._renderData.height);\n        return {\n            domNode: this._domNode.domNode,\n            position: this._position,\n            contentLeft: this._renderData.left,\n            height: this._renderData.height,\n            width: 2\n        };\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}