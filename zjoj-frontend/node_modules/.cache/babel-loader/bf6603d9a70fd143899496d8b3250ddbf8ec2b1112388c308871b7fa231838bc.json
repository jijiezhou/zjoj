{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n// ESM-uncomment-begin\nlet __marked_exports = {};\n(function () {\n  function define(deps, factory) {\n    factory(__marked_exports);\n  }\n  define.amd = true;\n  // ESM-uncomment-end\n\n  (function (global, factory) {\n    typeof define === 'function' && define.amd ? define(['exports'], factory) : typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.marked = {}));\n  })(this, function (exports) {\n    'use strict';\n\n    function _defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    function _createClass(Constructor, protoProps, staticProps) {\n      if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) _defineProperties(Constructor, staticProps);\n      Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n      });\n      return Constructor;\n    }\n    function _unsupportedIterableToArray(o, minLen) {\n      if (!o) return;\n      if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n      var n = Object.prototype.toString.call(o).slice(8, -1);\n      if (n === \"Object\" && o.constructor) n = o.constructor.name;\n      if (n === \"Map\" || n === \"Set\") return Array.from(o);\n      if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n    }\n    function _arrayLikeToArray(arr, len) {\n      if (len == null || len > arr.length) len = arr.length;\n      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n      return arr2;\n    }\n    function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n      var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n      if (it) return (it = it.call(o)).next.bind(it);\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        return function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        };\n      }\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    function getDefaults() {\n      return {\n        async: false,\n        baseUrl: null,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        headerIds: true,\n        headerPrefix: '',\n        highlight: null,\n        langPrefix: 'language-',\n        mangle: true,\n        pedantic: false,\n        renderer: null,\n        sanitize: false,\n        sanitizer: null,\n        silent: false,\n        smartLists: false,\n        smartypants: false,\n        tokenizer: null,\n        walkTokens: null,\n        xhtml: false\n      };\n    }\n    exports.defaults = getDefaults();\n    function changeDefaults(newDefaults) {\n      exports.defaults = newDefaults;\n    }\n\n    /**\n     * Helpers\n     */\n    var escapeTest = /[&<>\"']/;\n    var escapeReplace = /[&<>\"']/g;\n    var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n    var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n    var escapeReplacements = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#39;'\n    };\n    var getEscapeReplacement = function getEscapeReplacement(ch) {\n      return escapeReplacements[ch];\n    };\n    function escape(html, encode) {\n      if (encode) {\n        if (escapeTest.test(html)) {\n          return html.replace(escapeReplace, getEscapeReplacement);\n        }\n      } else {\n        if (escapeTestNoEncode.test(html)) {\n          return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n        }\n      }\n      return html;\n    }\n    var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n    /**\n     * @param {string} html\n     */\n\n    function unescape(html) {\n      // explicitly match decimal, hex, and named HTML entities\n      return html.replace(unescapeTest, function (_, n) {\n        n = n.toLowerCase();\n        if (n === 'colon') return ':';\n        if (n.charAt(0) === '#') {\n          return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n        }\n        return '';\n      });\n    }\n    var caret = /(^|[^\\[])\\^/g;\n    /**\n     * @param {string | RegExp} regex\n     * @param {string} opt\n     */\n\n    function edit(regex, opt) {\n      regex = typeof regex === 'string' ? regex : regex.source;\n      opt = opt || '';\n      var obj = {\n        replace: function replace(name, val) {\n          val = val.source || val;\n          val = val.replace(caret, '$1');\n          regex = regex.replace(name, val);\n          return obj;\n        },\n        getRegex: function getRegex() {\n          return new RegExp(regex, opt);\n        }\n      };\n      return obj;\n    }\n    var nonWordAndColonTest = /[^\\w:]/g;\n    var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n    /**\n     * @param {boolean} sanitize\n     * @param {string} base\n     * @param {string} href\n     */\n\n    function cleanUrl(sanitize, base, href) {\n      if (sanitize) {\n        var prot;\n        try {\n          prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n        } catch (e) {\n          return null;\n        }\n        if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n          return null;\n        }\n      }\n      if (base && !originIndependentUrl.test(href)) {\n        href = resolveUrl(base, href);\n      }\n      try {\n        href = encodeURI(href).replace(/%25/g, '%');\n      } catch (e) {\n        return null;\n      }\n      return href;\n    }\n    var baseUrls = {};\n    var justDomain = /^[^:]+:\\/*[^/]*$/;\n    var protocol = /^([^:]+:)[\\s\\S]*$/;\n    var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n    /**\n     * @param {string} base\n     * @param {string} href\n     */\n\n    function resolveUrl(base, href) {\n      if (!baseUrls[' ' + base]) {\n        // we can ignore everything in base after the last slash of its path component,\n        // but we might need to add _that_\n        // https://tools.ietf.org/html/rfc3986#section-3\n        if (justDomain.test(base)) {\n          baseUrls[' ' + base] = base + '/';\n        } else {\n          baseUrls[' ' + base] = rtrim(base, '/', true);\n        }\n      }\n      base = baseUrls[' ' + base];\n      var relativeBase = base.indexOf(':') === -1;\n      if (href.substring(0, 2) === '//') {\n        if (relativeBase) {\n          return href;\n        }\n        return base.replace(protocol, '$1') + href;\n      } else if (href.charAt(0) === '/') {\n        if (relativeBase) {\n          return href;\n        }\n        return base.replace(domain, '$1') + href;\n      } else {\n        return base + href;\n      }\n    }\n    var noopTest = {\n      exec: function noopTest() {}\n    };\n    function merge(obj) {\n      var i = 1,\n        target,\n        key;\n      for (; i < arguments.length; i++) {\n        target = arguments[i];\n        for (key in target) {\n          if (Object.prototype.hasOwnProperty.call(target, key)) {\n            obj[key] = target[key];\n          }\n        }\n      }\n      return obj;\n    }\n    function splitCells(tableRow, count) {\n      // ensure that every cell-delimiting pipe has a space\n      // before it to distinguish it from an escaped pipe\n      var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n          var escaped = false,\n            curr = offset;\n          while (--curr >= 0 && str[curr] === '\\\\') {\n            escaped = !escaped;\n          }\n          if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n          } else {\n            // add space before unescaped |\n            return ' |';\n          }\n        }),\n        cells = row.split(/ \\|/);\n      var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n\n      if (!cells[0].trim()) {\n        cells.shift();\n      }\n      if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n        cells.pop();\n      }\n      if (cells.length > count) {\n        cells.splice(count);\n      } else {\n        while (cells.length < count) {\n          cells.push('');\n        }\n      }\n      for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n      }\n      return cells;\n    }\n    /**\n     * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n     * /c*$/ is vulnerable to REDOS.\n     *\n     * @param {string} str\n     * @param {string} c\n     * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n     */\n\n    function rtrim(str, c, invert) {\n      var l = str.length;\n      if (l === 0) {\n        return '';\n      } // Length of suffix matching the invert condition.\n\n      var suffLen = 0; // Step left until we fail to match the invert condition.\n\n      while (suffLen < l) {\n        var currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && !invert) {\n          suffLen++;\n        } else if (currChar !== c && invert) {\n          suffLen++;\n        } else {\n          break;\n        }\n      }\n      return str.slice(0, l - suffLen);\n    }\n    function findClosingBracket(str, b) {\n      if (str.indexOf(b[1]) === -1) {\n        return -1;\n      }\n      var l = str.length;\n      var level = 0,\n        i = 0;\n      for (; i < l; i++) {\n        if (str[i] === '\\\\') {\n          i++;\n        } else if (str[i] === b[0]) {\n          level++;\n        } else if (str[i] === b[1]) {\n          level--;\n          if (level < 0) {\n            return i;\n          }\n        }\n      }\n      return -1;\n    }\n    function checkSanitizeDeprecation(opt) {\n      if (opt && opt.sanitize && !opt.silent) {\n        console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n      }\n    } // copied from https://stackoverflow.com/a/5450113/806777\n\n    /**\n     * @param {string} pattern\n     * @param {number} count\n     */\n\n    function repeatString(pattern, count) {\n      if (count < 1) {\n        return '';\n      }\n      var result = '';\n      while (count > 1) {\n        if (count & 1) {\n          result += pattern;\n        }\n        count >>= 1;\n        pattern += pattern;\n      }\n      return result + pattern;\n    }\n    function outputLink(cap, link, raw, lexer) {\n      var href = link.href;\n      var title = link.title ? escape(link.title) : null;\n      var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n      if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        var token = {\n          type: 'link',\n          raw: raw,\n          href: href,\n          title: title,\n          text: text,\n          tokens: lexer.inlineTokens(text)\n        };\n        lexer.state.inLink = false;\n        return token;\n      }\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: escape(text)\n      };\n    }\n    function indentCodeCompensation(raw, text) {\n      var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n      if (matchIndentToCode === null) {\n        return text;\n      }\n      var indentToCode = matchIndentToCode[1];\n      return text.split('\\n').map(function (node) {\n        var matchIndentInNode = node.match(/^\\s+/);\n        if (matchIndentInNode === null) {\n          return node;\n        }\n        var indentInNode = matchIndentInNode[0];\n        if (indentInNode.length >= indentToCode.length) {\n          return node.slice(indentToCode.length);\n        }\n        return node;\n      }).join('\\n');\n    }\n    /**\n     * Tokenizer\n     */\n\n    var Tokenizer = /*#__PURE__*/function () {\n      function Tokenizer(options) {\n        this.options = options || exports.defaults;\n      }\n      var _proto = Tokenizer.prototype;\n      _proto.space = function space(src) {\n        var cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n      };\n      _proto.code = function code(src) {\n        var cap = this.rules.block.code.exec(src);\n        if (cap) {\n          var text = cap[0].replace(/^ {1,4}/gm, '');\n          return {\n            type: 'code',\n            raw: cap[0],\n            codeBlockStyle: 'indented',\n            text: !this.options.pedantic ? rtrim(text, '\\n') : text\n          };\n        }\n      };\n      _proto.fences = function fences(src) {\n        var cap = this.rules.block.fences.exec(src);\n        if (cap) {\n          var raw = cap[0];\n          var text = indentCodeCompensation(raw, cap[3] || '');\n          return {\n            type: 'code',\n            raw: raw,\n            lang: cap[2] ? cap[2].trim() : cap[2],\n            text: text\n          };\n        }\n      };\n      _proto.heading = function heading(src) {\n        var cap = this.rules.block.heading.exec(src);\n        if (cap) {\n          var text = cap[2].trim(); // remove trailing #s\n\n          if (/#$/.test(text)) {\n            var trimmed = rtrim(text, '#');\n            if (this.options.pedantic) {\n              text = trimmed.trim();\n            } else if (!trimmed || / $/.test(trimmed)) {\n              // CommonMark requires space before trailing #s\n              text = trimmed.trim();\n            }\n          }\n          return {\n            type: 'heading',\n            raw: cap[0],\n            depth: cap[1].length,\n            text: text,\n            tokens: this.lexer.inline(text)\n          };\n        }\n      };\n      _proto.hr = function hr(src) {\n        var cap = this.rules.block.hr.exec(src);\n        if (cap) {\n          return {\n            type: 'hr',\n            raw: cap[0]\n          };\n        }\n      };\n      _proto.blockquote = function blockquote(src) {\n        var cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n          var text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n          return {\n            type: 'blockquote',\n            raw: cap[0],\n            tokens: this.lexer.blockTokens(text, []),\n            text: text\n          };\n        }\n      };\n      _proto.list = function list(src) {\n        var cap = this.rules.block.list.exec(src);\n        if (cap) {\n          var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;\n          var bull = cap[1].trim();\n          var isordered = bull.length > 1;\n          var list = {\n            type: 'list',\n            raw: '',\n            ordered: isordered,\n            start: isordered ? +bull.slice(0, -1) : '',\n            loose: false,\n            items: []\n          };\n          bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n          if (this.options.pedantic) {\n            bull = isordered ? bull : '[*+-]';\n          } // Get next list item\n\n          var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))\"); // Check if current bullet point can start a new List Item\n\n          while (src) {\n            endEarly = false;\n            if (!(cap = itemRegex.exec(src))) {\n              break;\n            }\n            if (this.rules.block.hr.test(src)) {\n              // End list if bullet was actually HR (possibly move into itemRegex?)\n              break;\n            }\n            raw = cap[0];\n            src = src.substring(raw.length);\n            line = cap[2].split('\\n', 1)[0];\n            nextLine = src.split('\\n', 1)[0];\n            if (this.options.pedantic) {\n              indent = 2;\n              itemContents = line.trimLeft();\n            } else {\n              indent = cap[2].search(/[^ ]/); // Find first non-space char\n\n              indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n\n              itemContents = line.slice(indent);\n              indent += cap[1].length;\n            }\n            blankLine = false;\n            if (!line && /^ *$/.test(nextLine)) {\n              // Items begin with at most one blank line\n              raw += nextLine + '\\n';\n              src = src.substring(nextLine.length + 1);\n              endEarly = true;\n            }\n            if (!endEarly) {\n              var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))\");\n              var hrRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)\");\n              var fencesBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:```|~~~)\");\n              var headingBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}#\"); // Check if following lines should be included in List Item\n\n              while (src) {\n                rawLine = src.split('\\n', 1)[0];\n                line = rawLine; // Re-align to follow commonmark nesting rules\n\n                if (this.options.pedantic) {\n                  line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n                } // End list item if found code fences\n\n                if (fencesBeginRegex.test(line)) {\n                  break;\n                } // End list item if found start of new heading\n\n                if (headingBeginRegex.test(line)) {\n                  break;\n                } // End list item if found start of new bullet\n\n                if (nextBulletRegex.test(line)) {\n                  break;\n                } // Horizontal rule found\n\n                if (hrRegex.test(src)) {\n                  break;\n                }\n                if (line.search(/[^ ]/) >= indent || !line.trim()) {\n                  // Dedent if possible\n                  itemContents += '\\n' + line.slice(indent);\n                } else if (!blankLine) {\n                  // Until blank line, item doesn't need indentation\n                  itemContents += '\\n' + line;\n                } else {\n                  // Otherwise, improper indentation ends this item\n                  break;\n                }\n                if (!blankLine && !line.trim()) {\n                  // Check if current line is blank\n                  blankLine = true;\n                }\n                raw += rawLine + '\\n';\n                src = src.substring(rawLine.length + 1);\n              }\n            }\n            if (!list.loose) {\n              // If the previous item ended with a blank line, the list is loose\n              if (endsWithBlankLine) {\n                list.loose = true;\n              } else if (/\\n *\\n *$/.test(raw)) {\n                endsWithBlankLine = true;\n              }\n            } // Check for task list items\n\n            if (this.options.gfm) {\n              istask = /^\\[[ xX]\\] /.exec(itemContents);\n              if (istask) {\n                ischecked = istask[0] !== '[ ] ';\n                itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n              }\n            }\n            list.items.push({\n              type: 'list_item',\n              raw: raw,\n              task: !!istask,\n              checked: ischecked,\n              loose: false,\n              text: itemContents\n            });\n            list.raw += raw;\n          } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n\n          list.items[list.items.length - 1].raw = raw.trimRight();\n          list.items[list.items.length - 1].text = itemContents.trimRight();\n          list.raw = list.raw.trimRight();\n          var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first\n\n          for (i = 0; i < l; i++) {\n            this.lexer.state.top = false;\n            list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n            var spacers = list.items[i].tokens.filter(function (t) {\n              return t.type === 'space';\n            });\n            var hasMultipleLineBreaks = spacers.every(function (t) {\n              var chars = t.raw.split('');\n              var lineBreaks = 0;\n              for (var _iterator = _createForOfIteratorHelperLoose(chars), _step; !(_step = _iterator()).done;) {\n                var _char = _step.value;\n                if (_char === '\\n') {\n                  lineBreaks += 1;\n                }\n                if (lineBreaks > 1) {\n                  return true;\n                }\n              }\n              return false;\n            });\n            if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n              // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n              list.loose = true;\n              list.items[i].loose = true;\n            }\n          }\n          return list;\n        }\n      };\n      _proto.html = function html(src) {\n        var cap = this.rules.block.html.exec(src);\n        if (cap) {\n          var token = {\n            type: 'html',\n            raw: cap[0],\n            pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n            text: cap[0]\n          };\n          if (this.options.sanitize) {\n            var text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n            token.type = 'paragraph';\n            token.text = text;\n            token.tokens = this.lexer.inline(text);\n          }\n          return token;\n        }\n      };\n      _proto.def = function def(src) {\n        var cap = this.rules.block.def.exec(src);\n        if (cap) {\n          if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n          var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n          return {\n            type: 'def',\n            tag: tag,\n            raw: cap[0],\n            href: cap[2],\n            title: cap[3]\n          };\n        }\n      };\n      _proto.table = function table(src) {\n        var cap = this.rules.block.table.exec(src);\n        if (cap) {\n          var item = {\n            type: 'table',\n            header: splitCells(cap[1]).map(function (c) {\n              return {\n                text: c\n              };\n            }),\n            align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n            rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n          };\n          if (item.header.length === item.align.length) {\n            item.raw = cap[0];\n            var l = item.align.length;\n            var i, j, k, row;\n            for (i = 0; i < l; i++) {\n              if (/^ *-+: *$/.test(item.align[i])) {\n                item.align[i] = 'right';\n              } else if (/^ *:-+: *$/.test(item.align[i])) {\n                item.align[i] = 'center';\n              } else if (/^ *:-+ *$/.test(item.align[i])) {\n                item.align[i] = 'left';\n              } else {\n                item.align[i] = null;\n              }\n            }\n            l = item.rows.length;\n            for (i = 0; i < l; i++) {\n              item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n                return {\n                  text: c\n                };\n              });\n            } // parse child tokens inside headers and cells\n            // header child tokens\n\n            l = item.header.length;\n            for (j = 0; j < l; j++) {\n              item.header[j].tokens = this.lexer.inline(item.header[j].text);\n            } // cell child tokens\n\n            l = item.rows.length;\n            for (j = 0; j < l; j++) {\n              row = item.rows[j];\n              for (k = 0; k < row.length; k++) {\n                row[k].tokens = this.lexer.inline(row[k].text);\n              }\n            }\n            return item;\n          }\n        }\n      };\n      _proto.lheading = function lheading(src) {\n        var cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n          return {\n            type: 'heading',\n            raw: cap[0],\n            depth: cap[2].charAt(0) === '=' ? 1 : 2,\n            text: cap[1],\n            tokens: this.lexer.inline(cap[1])\n          };\n        }\n      };\n      _proto.paragraph = function paragraph(src) {\n        var cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n          var text = cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1];\n          return {\n            type: 'paragraph',\n            raw: cap[0],\n            text: text,\n            tokens: this.lexer.inline(text)\n          };\n        }\n      };\n      _proto.text = function text(src) {\n        var cap = this.rules.block.text.exec(src);\n        if (cap) {\n          return {\n            type: 'text',\n            raw: cap[0],\n            text: cap[0],\n            tokens: this.lexer.inline(cap[0])\n          };\n        }\n      };\n      _proto.escape = function escape$1(src) {\n        var cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n          return {\n            type: 'escape',\n            raw: cap[0],\n            text: escape(cap[1])\n          };\n        }\n      };\n      _proto.tag = function tag(src) {\n        var cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n          if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n            this.lexer.state.inLink = true;\n          } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n            this.lexer.state.inLink = false;\n          }\n          if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n            this.lexer.state.inRawBlock = true;\n          } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n            this.lexer.state.inRawBlock = false;\n          }\n          return {\n            type: this.options.sanitize ? 'text' : 'html',\n            raw: cap[0],\n            inLink: this.lexer.state.inLink,\n            inRawBlock: this.lexer.state.inRawBlock,\n            text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n          };\n        }\n      };\n      _proto.link = function link(src) {\n        var cap = this.rules.inline.link.exec(src);\n        if (cap) {\n          var trimmedUrl = cap[2].trim();\n          if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n            // commonmark requires matching angle brackets\n            if (!/>$/.test(trimmedUrl)) {\n              return;\n            } // ending angle bracket cannot be escaped\n\n            var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n            if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n              return;\n            }\n          } else {\n            // find closing parenthesis\n            var lastParenIndex = findClosingBracket(cap[2], '()');\n            if (lastParenIndex > -1) {\n              var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n              var linkLen = start + cap[1].length + lastParenIndex;\n              cap[2] = cap[2].substring(0, lastParenIndex);\n              cap[0] = cap[0].substring(0, linkLen).trim();\n              cap[3] = '';\n            }\n          }\n          var href = cap[2];\n          var title = '';\n          if (this.options.pedantic) {\n            // split pedantic href and title\n            var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n            if (link) {\n              href = link[1];\n              title = link[3];\n            }\n          } else {\n            title = cap[3] ? cap[3].slice(1, -1) : '';\n          }\n          href = href.trim();\n          if (/^</.test(href)) {\n            if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n              // pedantic allows starting angle bracket without ending angle bracket\n              href = href.slice(1);\n            } else {\n              href = href.slice(1, -1);\n            }\n          }\n          return outputLink(cap, {\n            href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n            title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n          }, cap[0], this.lexer);\n        }\n      };\n      _proto.reflink = function reflink(src, links) {\n        var cap;\n        if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n          var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n          link = links[link.toLowerCase()];\n          if (!link || !link.href) {\n            var text = cap[0].charAt(0);\n            return {\n              type: 'text',\n              raw: text,\n              text: text\n            };\n          }\n          return outputLink(cap, link, cap[0], this.lexer);\n        }\n      };\n      _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n        if (prevChar === void 0) {\n          prevChar = '';\n        }\n        var match = this.rules.inline.emStrong.lDelim.exec(src);\n        if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n        if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n        var nextChar = match[1] || match[2] || '';\n        if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n          var lLength = match[0].length - 1;\n          var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n          var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n          endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n          maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n          while ((match = endReg.exec(maskedSrc)) != null) {\n            rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n            if (!rDelim) continue; // skip single * in __abc*abc__\n\n            rLength = rDelim.length;\n            if (match[3] || match[4]) {\n              // found another Left Delim\n              delimTotal += rLength;\n              continue;\n            } else if (match[5] || match[6]) {\n              // either Left or Right Delim\n              if (lLength % 3 && !((lLength + rLength) % 3)) {\n                midDelimTotal += rLength;\n                continue; // CommonMark Emphasis Rules 9-10\n              }\n            }\n            delimTotal -= rLength;\n            if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n            // Remove extra characters. *a*** -> *a*\n\n            rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n            if (Math.min(lLength, rLength) % 2) {\n              var _text = src.slice(1, lLength + match.index + rLength);\n              return {\n                type: 'em',\n                raw: src.slice(0, lLength + match.index + rLength + 1),\n                text: _text,\n                tokens: this.lexer.inlineTokens(_text)\n              };\n            } // Create 'strong' if smallest delimiter has even char count. **a***\n\n            var text = src.slice(2, lLength + match.index + rLength - 1);\n            return {\n              type: 'strong',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: text,\n              tokens: this.lexer.inlineTokens(text)\n            };\n          }\n        }\n      };\n      _proto.codespan = function codespan(src) {\n        var cap = this.rules.inline.code.exec(src);\n        if (cap) {\n          var text = cap[2].replace(/\\n/g, ' ');\n          var hasNonSpaceChars = /[^ ]/.test(text);\n          var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n          if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n            text = text.substring(1, text.length - 1);\n          }\n          text = escape(text, true);\n          return {\n            type: 'codespan',\n            raw: cap[0],\n            text: text\n          };\n        }\n      };\n      _proto.br = function br(src) {\n        var cap = this.rules.inline.br.exec(src);\n        if (cap) {\n          return {\n            type: 'br',\n            raw: cap[0]\n          };\n        }\n      };\n      _proto.del = function del(src) {\n        var cap = this.rules.inline.del.exec(src);\n        if (cap) {\n          return {\n            type: 'del',\n            raw: cap[0],\n            text: cap[2],\n            tokens: this.lexer.inlineTokens(cap[2])\n          };\n        }\n      };\n      _proto.autolink = function autolink(src, mangle) {\n        var cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n          var text, href;\n          if (cap[2] === '@') {\n            text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n            href = 'mailto:' + text;\n          } else {\n            text = escape(cap[1]);\n            href = text;\n          }\n          return {\n            type: 'link',\n            raw: cap[0],\n            text: text,\n            href: href,\n            tokens: [{\n              type: 'text',\n              raw: text,\n              text: text\n            }]\n          };\n        }\n      };\n      _proto.url = function url(src, mangle) {\n        var cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n          var text, href;\n          if (cap[2] === '@') {\n            text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n            href = 'mailto:' + text;\n          } else {\n            // do extended autolink path validation\n            var prevCapZero;\n            do {\n              prevCapZero = cap[0];\n              cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n            } while (prevCapZero !== cap[0]);\n            text = escape(cap[0]);\n            if (cap[1] === 'www.') {\n              href = 'http://' + text;\n            } else {\n              href = text;\n            }\n          }\n          return {\n            type: 'link',\n            raw: cap[0],\n            text: text,\n            href: href,\n            tokens: [{\n              type: 'text',\n              raw: text,\n              text: text\n            }]\n          };\n        }\n      };\n      _proto.inlineText = function inlineText(src, smartypants) {\n        var cap = this.rules.inline.text.exec(src);\n        if (cap) {\n          var text;\n          if (this.lexer.state.inRawBlock) {\n            text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n          } else {\n            text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n          }\n          return {\n            type: 'text',\n            raw: cap[0],\n            text: text\n          };\n        }\n      };\n      return Tokenizer;\n    }();\n\n    /**\n     * Block-Level Grammar\n     */\n\n    var block = {\n      newline: /^(?: *(?:\\n|$))+/,\n      code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n      fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n      hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n      heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n      blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n      list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n      html: '^ {0,3}(?:' // optional indentation\n      + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n      + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n      + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n      + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n      + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n      + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n      + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n      + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n      + ')',\n      def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n      table: noopTest,\n      lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n      // regex template, placeholders will be replaced according to different paragraph\n      // interruption rules of commonmark and the original markdown spec:\n      _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n      text: /^[^\\n]+/\n    };\n    block._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\n    block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n    block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n    block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n    block.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n    block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n    block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n    block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n    block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n    block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n    .replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\n    block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n    /**\n     * Normal Block Grammar\n     */\n\n    block.normal = merge({}, block);\n    /**\n     * GFM Block Grammar\n     */\n\n    block.gfm = merge({}, block.normal, {\n      table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n      + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n      + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n    });\n    block.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\n    block.gfm.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n    .replace('table', block.gfm.table) // interrupt paragraphs with table\n    .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\n    /**\n     * Pedantic grammar (original John Gruber's loose markdown specification)\n     */\n\n    block.pedantic = merge({}, block.normal, {\n      html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n      + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n      def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n      heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n      fences: noopTest,\n      // fences not supported\n      paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n    });\n    /**\n     * Inline-Level Grammar\n     */\n\n    var inline = {\n      escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n      autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n      url: noopTest,\n      tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n      + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n      + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n      + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n      + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n      // CDATA section\n      link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n      reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n      nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n      reflinkSearch: 'reflink|nolink(?!\\\\()',\n      emStrong: {\n        lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n        //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n        //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n        rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n        rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n      },\n      code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n      br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n      del: noopTest,\n      text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n      punctuation: /^([\\spunctuation])/\n    }; // list of punctuation marks from CommonMark spec\n    // without * and _ to handle the different emphasis markers * and _\n\n    inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n    inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n    inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n    inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n    inline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n    inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n    inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n    inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n    inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n    inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n    inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n    inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n    inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n    inline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n    inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n    inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n    inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n    inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n    inline.reflink = edit(inline.reflink).replace('label', inline._label).replace('ref', block._label).getRegex();\n    inline.nolink = edit(inline.nolink).replace('ref', block._label).getRegex();\n    inline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n    /**\n     * Normal Inline Grammar\n     */\n\n    inline.normal = merge({}, inline);\n    /**\n     * Pedantic Inline Grammar\n     */\n\n    inline.pedantic = merge({}, inline.normal, {\n      strong: {\n        start: /^__|\\*\\*/,\n        middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n        endAst: /\\*\\*(?!\\*)/g,\n        endUnd: /__(?!_)/g\n      },\n      em: {\n        start: /^_|\\*/,\n        middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n        endAst: /\\*(?!\\*)/g,\n        endUnd: /_(?!_)/g\n      },\n      link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n      reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n    });\n    /**\n     * GFM Inline Grammar\n     */\n\n    inline.gfm = merge({}, inline.normal, {\n      escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n      _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n      url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n      _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n      del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n      text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n    });\n    inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n    /**\n     * GFM + Line Breaks Inline Grammar\n     */\n\n    inline.breaks = merge({}, inline.gfm, {\n      br: edit(inline.br).replace('{2,}', '*').getRegex(),\n      text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n    });\n\n    /**\n     * smartypants text replacement\n     * @param {string} text\n     */\n\n    function smartypants(text) {\n      return text // em-dashes\n      .replace(/---/g, \"\\u2014\") // en-dashes\n      .replace(/--/g, \"\\u2013\") // opening singles\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n      .replace(/'/g, \"\\u2019\") // opening doubles\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n      .replace(/\"/g, \"\\u201D\") // ellipses\n      .replace(/\\.{3}/g, \"\\u2026\");\n    }\n    /**\n     * mangle email addresses\n     * @param {string} text\n     */\n\n    function mangle(text) {\n      var out = '',\n        i,\n        ch;\n      var l = text.length;\n      for (i = 0; i < l; i++) {\n        ch = text.charCodeAt(i);\n        if (Math.random() > 0.5) {\n          ch = 'x' + ch.toString(16);\n        }\n        out += '&#' + ch + ';';\n      }\n      return out;\n    }\n    /**\n     * Block Lexer\n     */\n\n    var Lexer = /*#__PURE__*/function () {\n      function Lexer(options) {\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || exports.defaults;\n        this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n          inLink: false,\n          inRawBlock: false,\n          top: true\n        };\n        var rules = {\n          block: block.normal,\n          inline: inline.normal\n        };\n        if (this.options.pedantic) {\n          rules.block = block.pedantic;\n          rules.inline = inline.pedantic;\n        } else if (this.options.gfm) {\n          rules.block = block.gfm;\n          if (this.options.breaks) {\n            rules.inline = inline.breaks;\n          } else {\n            rules.inline = inline.gfm;\n          }\n        }\n        this.tokenizer.rules = rules;\n      }\n      /**\n       * Expose Rules\n       */\n\n      /**\n       * Static Lex Method\n       */\n      Lexer.lex = function lex(src, options) {\n        var lexer = new Lexer(options);\n        return lexer.lex(src);\n      }\n      /**\n       * Static Lex Inline Method\n       */;\n      Lexer.lexInline = function lexInline(src, options) {\n        var lexer = new Lexer(options);\n        return lexer.inlineTokens(src);\n      }\n      /**\n       * Preprocessing\n       */;\n      var _proto = Lexer.prototype;\n      _proto.lex = function lex(src) {\n        src = src.replace(/\\r\\n|\\r/g, '\\n');\n        this.blockTokens(src, this.tokens);\n        var next;\n        while (next = this.inlineQueue.shift()) {\n          this.inlineTokens(next.src, next.tokens);\n        }\n        return this.tokens;\n      }\n      /**\n       * Lexing\n       */;\n      _proto.blockTokens = function blockTokens(src, tokens) {\n        var _this = this;\n        if (tokens === void 0) {\n          tokens = [];\n        }\n        if (this.options.pedantic) {\n          src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n        } else {\n          src = src.replace(/^( *)(\\t+)/gm, function (_, leading, tabs) {\n            return leading + '    '.repeat(tabs.length);\n          });\n        }\n        var token, lastToken, cutSrc, lastParagraphClipped;\n        while (src) {\n          if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n            if (token = extTokenizer.call({\n              lexer: _this\n            }, src, tokens)) {\n              src = src.substring(token.raw.length);\n              tokens.push(token);\n              return true;\n            }\n            return false;\n          })) {\n            continue;\n          } // newline\n\n          if (token = this.tokenizer.space(src)) {\n            src = src.substring(token.raw.length);\n            if (token.raw.length === 1 && tokens.length > 0) {\n              // if there's a single \\n as a spacer, it's terminating the last line,\n              // so move it there so that we don't get unecessary paragraph tags\n              tokens[tokens.length - 1].raw += '\\n';\n            } else {\n              tokens.push(token);\n            }\n            continue;\n          } // code\n\n          if (token = this.tokenizer.code(src)) {\n            src = src.substring(token.raw.length);\n            lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n            if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n              lastToken.raw += '\\n' + token.raw;\n              lastToken.text += '\\n' + token.text;\n              this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n            } else {\n              tokens.push(token);\n            }\n            continue;\n          } // fences\n\n          if (token = this.tokenizer.fences(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // heading\n\n          if (token = this.tokenizer.heading(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // hr\n\n          if (token = this.tokenizer.hr(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // blockquote\n\n          if (token = this.tokenizer.blockquote(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // list\n\n          if (token = this.tokenizer.list(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // html\n\n          if (token = this.tokenizer.html(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // def\n\n          if (token = this.tokenizer.def(src)) {\n            src = src.substring(token.raw.length);\n            lastToken = tokens[tokens.length - 1];\n            if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n              lastToken.raw += '\\n' + token.raw;\n              lastToken.text += '\\n' + token.raw;\n              this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n            } else if (!this.tokens.links[token.tag]) {\n              this.tokens.links[token.tag] = {\n                href: token.href,\n                title: token.title\n              };\n            }\n            continue;\n          } // table (gfm)\n\n          if (token = this.tokenizer.table(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // lheading\n\n          if (token = this.tokenizer.lheading(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // top-level paragraph\n          // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n          cutSrc = src;\n          if (this.options.extensions && this.options.extensions.startBlock) {\n            (function () {\n              var startIndex = Infinity;\n              var tempSrc = src.slice(1);\n              var tempStart = void 0;\n              _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n                tempStart = getStartIndex.call({\n                  lexer: this\n                }, tempSrc);\n                if (typeof tempStart === 'number' && tempStart >= 0) {\n                  startIndex = Math.min(startIndex, tempStart);\n                }\n              });\n              if (startIndex < Infinity && startIndex >= 0) {\n                cutSrc = src.substring(0, startIndex + 1);\n              }\n            })();\n          }\n          if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n            lastToken = tokens[tokens.length - 1];\n            if (lastParagraphClipped && lastToken.type === 'paragraph') {\n              lastToken.raw += '\\n' + token.raw;\n              lastToken.text += '\\n' + token.text;\n              this.inlineQueue.pop();\n              this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n            } else {\n              tokens.push(token);\n            }\n            lastParagraphClipped = cutSrc.length !== src.length;\n            src = src.substring(token.raw.length);\n            continue;\n          } // text\n\n          if (token = this.tokenizer.text(src)) {\n            src = src.substring(token.raw.length);\n            lastToken = tokens[tokens.length - 1];\n            if (lastToken && lastToken.type === 'text') {\n              lastToken.raw += '\\n' + token.raw;\n              lastToken.text += '\\n' + token.text;\n              this.inlineQueue.pop();\n              this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n            } else {\n              tokens.push(token);\n            }\n            continue;\n          }\n          if (src) {\n            var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n            if (this.options.silent) {\n              console.error(errMsg);\n              break;\n            } else {\n              throw new Error(errMsg);\n            }\n          }\n        }\n        this.state.top = true;\n        return tokens;\n      };\n      _proto.inline = function inline(src, tokens) {\n        if (tokens === void 0) {\n          tokens = [];\n        }\n        this.inlineQueue.push({\n          src: src,\n          tokens: tokens\n        });\n        return tokens;\n      }\n      /**\n       * Lexing/Compiling\n       */;\n      _proto.inlineTokens = function inlineTokens(src, tokens) {\n        var _this2 = this;\n        if (tokens === void 0) {\n          tokens = [];\n        }\n        var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n        var maskedSrc = src;\n        var match;\n        var keepPrevChar, prevChar; // Mask out reflinks\n\n        if (this.tokens.links) {\n          var links = Object.keys(this.tokens.links);\n          if (links.length > 0) {\n            while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n              if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n              }\n            }\n          }\n        } // Mask out other blocks\n\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n          maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        } // Mask out escaped em & strong delimiters\n\n        while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n          maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n        }\n        while (src) {\n          if (!keepPrevChar) {\n            prevChar = '';\n          }\n          keepPrevChar = false; // extensions\n\n          if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n            if (token = extTokenizer.call({\n              lexer: _this2\n            }, src, tokens)) {\n              src = src.substring(token.raw.length);\n              tokens.push(token);\n              return true;\n            }\n            return false;\n          })) {\n            continue;\n          } // escape\n\n          if (token = this.tokenizer.escape(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // tag\n\n          if (token = this.tokenizer.tag(src)) {\n            src = src.substring(token.raw.length);\n            lastToken = tokens[tokens.length - 1];\n            if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n              lastToken.raw += token.raw;\n              lastToken.text += token.text;\n            } else {\n              tokens.push(token);\n            }\n            continue;\n          } // link\n\n          if (token = this.tokenizer.link(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // reflink, nolink\n\n          if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n            src = src.substring(token.raw.length);\n            lastToken = tokens[tokens.length - 1];\n            if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n              lastToken.raw += token.raw;\n              lastToken.text += token.text;\n            } else {\n              tokens.push(token);\n            }\n            continue;\n          } // em & strong\n\n          if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // code\n\n          if (token = this.tokenizer.codespan(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // br\n\n          if (token = this.tokenizer.br(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // del (gfm)\n\n          if (token = this.tokenizer.del(src)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // autolink\n\n          if (token = this.tokenizer.autolink(src, mangle)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // url (gfm)\n\n          if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            continue;\n          } // text\n          // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n          cutSrc = src;\n          if (this.options.extensions && this.options.extensions.startInline) {\n            (function () {\n              var startIndex = Infinity;\n              var tempSrc = src.slice(1);\n              var tempStart = void 0;\n              _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n                tempStart = getStartIndex.call({\n                  lexer: this\n                }, tempSrc);\n                if (typeof tempStart === 'number' && tempStart >= 0) {\n                  startIndex = Math.min(startIndex, tempStart);\n                }\n              });\n              if (startIndex < Infinity && startIndex >= 0) {\n                cutSrc = src.substring(0, startIndex + 1);\n              }\n            })();\n          }\n          if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n            src = src.substring(token.raw.length);\n            if (token.raw.slice(-1) !== '_') {\n              // Track prevChar before string of ____ started\n              prevChar = token.raw.slice(-1);\n            }\n            keepPrevChar = true;\n            lastToken = tokens[tokens.length - 1];\n            if (lastToken && lastToken.type === 'text') {\n              lastToken.raw += token.raw;\n              lastToken.text += token.text;\n            } else {\n              tokens.push(token);\n            }\n            continue;\n          }\n          if (src) {\n            var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n            if (this.options.silent) {\n              console.error(errMsg);\n              break;\n            } else {\n              throw new Error(errMsg);\n            }\n          }\n        }\n        return tokens;\n      };\n      _createClass(Lexer, null, [{\n        key: \"rules\",\n        get: function get() {\n          return {\n            block: block,\n            inline: inline\n          };\n        }\n      }]);\n      return Lexer;\n    }();\n\n    /**\n     * Renderer\n     */\n\n    var Renderer = /*#__PURE__*/function () {\n      function Renderer(options) {\n        this.options = options || exports.defaults;\n      }\n      var _proto = Renderer.prototype;\n      _proto.code = function code(_code, infostring, escaped) {\n        var lang = (infostring || '').match(/\\S*/)[0];\n        if (this.options.highlight) {\n          var out = this.options.highlight(_code, lang);\n          if (out != null && out !== _code) {\n            escaped = true;\n            _code = out;\n          }\n        }\n        _code = _code.replace(/\\n$/, '') + '\\n';\n        if (!lang) {\n          return '<pre><code>' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n      }\n      /**\n       * @param {string} quote\n       */;\n      _proto.blockquote = function blockquote(quote) {\n        return \"<blockquote>\\n\" + quote + \"</blockquote>\\n\";\n      };\n      _proto.html = function html(_html) {\n        return _html;\n      }\n      /**\n       * @param {string} text\n       * @param {string} level\n       * @param {string} raw\n       * @param {any} slugger\n       */;\n      _proto.heading = function heading(text, level, raw, slugger) {\n        if (this.options.headerIds) {\n          var id = this.options.headerPrefix + slugger.slug(raw);\n          return \"<h\" + level + \" id=\\\"\" + id + \"\\\">\" + text + \"</h\" + level + \">\\n\";\n        } // ignore IDs\n\n        return \"<h\" + level + \">\" + text + \"</h\" + level + \">\\n\";\n      };\n      _proto.hr = function hr() {\n        return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n      };\n      _proto.list = function list(body, ordered, start) {\n        var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n        return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n      }\n      /**\n       * @param {string} text\n       */;\n      _proto.listitem = function listitem(text) {\n        return \"<li>\" + text + \"</li>\\n\";\n      };\n      _proto.checkbox = function checkbox(checked) {\n        return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n      }\n      /**\n       * @param {string} text\n       */;\n      _proto.paragraph = function paragraph(text) {\n        return \"<p>\" + text + \"</p>\\n\";\n      }\n      /**\n       * @param {string} header\n       * @param {string} body\n       */;\n      _proto.table = function table(header, body) {\n        if (body) body = \"<tbody>\" + body + \"</tbody>\";\n        return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n      }\n      /**\n       * @param {string} content\n       */;\n      _proto.tablerow = function tablerow(content) {\n        return \"<tr>\\n\" + content + \"</tr>\\n\";\n      };\n      _proto.tablecell = function tablecell(content, flags) {\n        var type = flags.header ? 'th' : 'td';\n        var tag = flags.align ? \"<\" + type + \" align=\\\"\" + flags.align + \"\\\">\" : \"<\" + type + \">\";\n        return tag + content + (\"</\" + type + \">\\n\");\n      }\n      /**\n       * span level renderer\n       * @param {string} text\n       */;\n      _proto.strong = function strong(text) {\n        return \"<strong>\" + text + \"</strong>\";\n      }\n      /**\n       * @param {string} text\n       */;\n      _proto.em = function em(text) {\n        return \"<em>\" + text + \"</em>\";\n      }\n      /**\n       * @param {string} text\n       */;\n      _proto.codespan = function codespan(text) {\n        return \"<code>\" + text + \"</code>\";\n      };\n      _proto.br = function br() {\n        return this.options.xhtml ? '<br/>' : '<br>';\n      }\n      /**\n       * @param {string} text\n       */;\n      _proto.del = function del(text) {\n        return \"<del>\" + text + \"</del>\";\n      }\n      /**\n       * @param {string} href\n       * @param {string} title\n       * @param {string} text\n       */;\n      _proto.link = function link(href, title, text) {\n        href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n        if (href === null) {\n          return text;\n        }\n        var out = '<a href=\"' + escape(href) + '\"';\n        if (title) {\n          out += ' title=\"' + title + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n      }\n      /**\n       * @param {string} href\n       * @param {string} title\n       * @param {string} text\n       */;\n      _proto.image = function image(href, title, text) {\n        href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n        if (href === null) {\n          return text;\n        }\n        var out = \"<img src=\\\"\" + href + \"\\\" alt=\\\"\" + text + \"\\\"\";\n        if (title) {\n          out += \" title=\\\"\" + title + \"\\\"\";\n        }\n        out += this.options.xhtml ? '/>' : '>';\n        return out;\n      };\n      _proto.text = function text(_text) {\n        return _text;\n      };\n      return Renderer;\n    }();\n\n    /**\n     * TextRenderer\n     * returns only the textual part of the token\n     */\n    var TextRenderer = /*#__PURE__*/function () {\n      function TextRenderer() {}\n      var _proto = TextRenderer.prototype;\n\n      // no need for block level renderers\n      _proto.strong = function strong(text) {\n        return text;\n      };\n      _proto.em = function em(text) {\n        return text;\n      };\n      _proto.codespan = function codespan(text) {\n        return text;\n      };\n      _proto.del = function del(text) {\n        return text;\n      };\n      _proto.html = function html(text) {\n        return text;\n      };\n      _proto.text = function text(_text) {\n        return _text;\n      };\n      _proto.link = function link(href, title, text) {\n        return '' + text;\n      };\n      _proto.image = function image(href, title, text) {\n        return '' + text;\n      };\n      _proto.br = function br() {\n        return '';\n      };\n      return TextRenderer;\n    }();\n\n    /**\n     * Slugger generates header id\n     */\n    var Slugger = /*#__PURE__*/function () {\n      function Slugger() {\n        this.seen = {};\n      }\n      /**\n       * @param {string} value\n       */\n\n      var _proto = Slugger.prototype;\n      _proto.serialize = function serialize(value) {\n        return value.toLowerCase().trim() // remove html tags\n        .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n        .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n      }\n      /**\n       * Finds the next safe (unique) slug to use\n       * @param {string} originalSlug\n       * @param {boolean} isDryRun\n       */;\n      _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n        var slug = originalSlug;\n        var occurenceAccumulator = 0;\n        if (this.seen.hasOwnProperty(slug)) {\n          occurenceAccumulator = this.seen[originalSlug];\n          do {\n            occurenceAccumulator++;\n            slug = originalSlug + '-' + occurenceAccumulator;\n          } while (this.seen.hasOwnProperty(slug));\n        }\n        if (!isDryRun) {\n          this.seen[originalSlug] = occurenceAccumulator;\n          this.seen[slug] = 0;\n        }\n        return slug;\n      }\n      /**\n       * Convert string to unique id\n       * @param {object} [options]\n       * @param {boolean} [options.dryrun] Generates the next unique slug without\n       * updating the internal accumulator.\n       */;\n      _proto.slug = function slug(value, options) {\n        if (options === void 0) {\n          options = {};\n        }\n        var slug = this.serialize(value);\n        return this.getNextSafeSlug(slug, options.dryrun);\n      };\n      return Slugger;\n    }();\n\n    /**\n     * Parsing & Compiling\n     */\n\n    var Parser = /*#__PURE__*/function () {\n      function Parser(options) {\n        this.options = options || exports.defaults;\n        this.options.renderer = this.options.renderer || new Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.textRenderer = new TextRenderer();\n        this.slugger = new Slugger();\n      }\n      /**\n       * Static Parse Method\n       */\n\n      Parser.parse = function parse(tokens, options) {\n        var parser = new Parser(options);\n        return parser.parse(tokens);\n      }\n      /**\n       * Static Parse Inline Method\n       */;\n      Parser.parseInline = function parseInline(tokens, options) {\n        var parser = new Parser(options);\n        return parser.parseInline(tokens);\n      }\n      /**\n       * Parse Loop\n       */;\n      var _proto = Parser.prototype;\n      _proto.parse = function parse(tokens, top) {\n        if (top === void 0) {\n          top = true;\n        }\n        var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox,\n          ret;\n        var l = tokens.length;\n        for (i = 0; i < l; i++) {\n          token = tokens[i]; // Run any renderer extensions\n\n          if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n            ret = this.options.extensions.renderers[token.type].call({\n              parser: this\n            }, token);\n            if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n              out += ret || '';\n              continue;\n            }\n          }\n          switch (token.type) {\n            case 'space':\n              {\n                continue;\n              }\n            case 'hr':\n              {\n                out += this.renderer.hr();\n                continue;\n              }\n            case 'heading':\n              {\n                out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n                continue;\n              }\n            case 'code':\n              {\n                out += this.renderer.code(token.text, token.lang, token.escaped);\n                continue;\n              }\n            case 'table':\n              {\n                header = ''; // header\n\n                cell = '';\n                l2 = token.header.length;\n                for (j = 0; j < l2; j++) {\n                  cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                    header: true,\n                    align: token.align[j]\n                  });\n                }\n                header += this.renderer.tablerow(cell);\n                body = '';\n                l2 = token.rows.length;\n                for (j = 0; j < l2; j++) {\n                  row = token.rows[j];\n                  cell = '';\n                  l3 = row.length;\n                  for (k = 0; k < l3; k++) {\n                    cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                      header: false,\n                      align: token.align[k]\n                    });\n                  }\n                  body += this.renderer.tablerow(cell);\n                }\n                out += this.renderer.table(header, body);\n                continue;\n              }\n            case 'blockquote':\n              {\n                body = this.parse(token.tokens);\n                out += this.renderer.blockquote(body);\n                continue;\n              }\n            case 'list':\n              {\n                ordered = token.ordered;\n                start = token.start;\n                loose = token.loose;\n                l2 = token.items.length;\n                body = '';\n                for (j = 0; j < l2; j++) {\n                  item = token.items[j];\n                  checked = item.checked;\n                  task = item.task;\n                  itemBody = '';\n                  if (item.task) {\n                    checkbox = this.renderer.checkbox(checked);\n                    if (loose) {\n                      if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                        item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                        if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                          item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                        }\n                      } else {\n                        item.tokens.unshift({\n                          type: 'text',\n                          text: checkbox\n                        });\n                      }\n                    } else {\n                      itemBody += checkbox;\n                    }\n                  }\n                  itemBody += this.parse(item.tokens, loose);\n                  body += this.renderer.listitem(itemBody, task, checked);\n                }\n                out += this.renderer.list(body, ordered, start);\n                continue;\n              }\n            case 'html':\n              {\n                // TODO parse inline content if parameter markdown=1\n                out += this.renderer.html(token.text);\n                continue;\n              }\n            case 'paragraph':\n              {\n                out += this.renderer.paragraph(this.parseInline(token.tokens));\n                continue;\n              }\n            case 'text':\n              {\n                body = token.tokens ? this.parseInline(token.tokens) : token.text;\n                while (i + 1 < l && tokens[i + 1].type === 'text') {\n                  token = tokens[++i];\n                  body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n                }\n                out += top ? this.renderer.paragraph(body) : body;\n                continue;\n              }\n            default:\n              {\n                var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                if (this.options.silent) {\n                  console.error(errMsg);\n                  return;\n                } else {\n                  throw new Error(errMsg);\n                }\n              }\n          }\n        }\n        return out;\n      }\n      /**\n       * Parse Inline Tokens\n       */;\n      _proto.parseInline = function parseInline(tokens, renderer) {\n        renderer = renderer || this.renderer;\n        var out = '',\n          i,\n          token,\n          ret;\n        var l = tokens.length;\n        for (i = 0; i < l; i++) {\n          token = tokens[i]; // Run any renderer extensions\n\n          if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n            ret = this.options.extensions.renderers[token.type].call({\n              parser: this\n            }, token);\n            if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n              out += ret || '';\n              continue;\n            }\n          }\n          switch (token.type) {\n            case 'escape':\n              {\n                out += renderer.text(token.text);\n                break;\n              }\n            case 'html':\n              {\n                out += renderer.html(token.text);\n                break;\n              }\n            case 'link':\n              {\n                out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n                break;\n              }\n            case 'image':\n              {\n                out += renderer.image(token.href, token.title, token.text);\n                break;\n              }\n            case 'strong':\n              {\n                out += renderer.strong(this.parseInline(token.tokens, renderer));\n                break;\n              }\n            case 'em':\n              {\n                out += renderer.em(this.parseInline(token.tokens, renderer));\n                break;\n              }\n            case 'codespan':\n              {\n                out += renderer.codespan(token.text);\n                break;\n              }\n            case 'br':\n              {\n                out += renderer.br();\n                break;\n              }\n            case 'del':\n              {\n                out += renderer.del(this.parseInline(token.tokens, renderer));\n                break;\n              }\n            case 'text':\n              {\n                out += renderer.text(token.text);\n                break;\n              }\n            default:\n              {\n                var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                if (this.options.silent) {\n                  console.error(errMsg);\n                  return;\n                } else {\n                  throw new Error(errMsg);\n                }\n              }\n          }\n        }\n        return out;\n      };\n      return Parser;\n    }();\n\n    /**\n     * Marked\n     */\n\n    function marked(src, opt, callback) {\n      // throw error in case of non string input\n      if (typeof src === 'undefined' || src === null) {\n        throw new Error('marked(): input parameter is undefined or null');\n      }\n      if (typeof src !== 'string') {\n        throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n      }\n      if (typeof opt === 'function') {\n        callback = opt;\n        opt = null;\n      }\n      opt = merge({}, marked.defaults, opt || {});\n      checkSanitizeDeprecation(opt);\n      if (callback) {\n        var highlight = opt.highlight;\n        var tokens;\n        try {\n          tokens = Lexer.lex(src, opt);\n        } catch (e) {\n          return callback(e);\n        }\n        var done = function done(err) {\n          var out;\n          if (!err) {\n            try {\n              if (opt.walkTokens) {\n                marked.walkTokens(tokens, opt.walkTokens);\n              }\n              out = Parser.parse(tokens, opt);\n            } catch (e) {\n              err = e;\n            }\n          }\n          opt.highlight = highlight;\n          return err ? callback(err) : callback(null, out);\n        };\n        if (!highlight || highlight.length < 3) {\n          return done();\n        }\n        delete opt.highlight;\n        if (!tokens.length) return done();\n        var pending = 0;\n        marked.walkTokens(tokens, function (token) {\n          if (token.type === 'code') {\n            pending++;\n            setTimeout(function () {\n              highlight(token.text, token.lang, function (err, code) {\n                if (err) {\n                  return done(err);\n                }\n                if (code != null && code !== token.text) {\n                  token.text = code;\n                  token.escaped = true;\n                }\n                pending--;\n                if (pending === 0) {\n                  done();\n                }\n              });\n            }, 0);\n          }\n        });\n        if (pending === 0) {\n          done();\n        }\n        return;\n      }\n      function onError(e) {\n        e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n        if (opt.silent) {\n          return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n        }\n        throw e;\n      }\n      try {\n        var _tokens = Lexer.lex(src, opt);\n        if (opt.walkTokens) {\n          if (opt.async) {\n            return Promise.all(marked.walkTokens(_tokens, opt.walkTokens)).then(function () {\n              return Parser.parse(_tokens, opt);\n            })[\"catch\"](onError);\n          }\n          marked.walkTokens(_tokens, opt.walkTokens);\n        }\n        return Parser.parse(_tokens, opt);\n      } catch (e) {\n        onError(e);\n      }\n    }\n    /**\n     * Options\n     */\n\n    marked.options = marked.setOptions = function (opt) {\n      merge(marked.defaults, opt);\n      changeDefaults(marked.defaults);\n      return marked;\n    };\n    marked.getDefaults = getDefaults;\n    marked.defaults = exports.defaults;\n    /**\n     * Use Extension\n     */\n\n    marked.use = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      var opts = merge.apply(void 0, [{}].concat(args));\n      var extensions = marked.defaults.extensions || {\n        renderers: {},\n        childTokens: {}\n      };\n      var hasExtensions;\n      args.forEach(function (pack) {\n        // ==-- Parse \"addon\" extensions --== //\n        if (pack.extensions) {\n          hasExtensions = true;\n          pack.extensions.forEach(function (ext) {\n            if (!ext.name) {\n              throw new Error('extension name required');\n            }\n            if (ext.renderer) {\n              // Renderer extensions\n              var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n              if (prevRenderer) {\n                // Replace extension with func to run new extension but fall back if false\n                extensions.renderers[ext.name] = function () {\n                  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                    args[_key2] = arguments[_key2];\n                  }\n                  var ret = ext.renderer.apply(this, args);\n                  if (ret === false) {\n                    ret = prevRenderer.apply(this, args);\n                  }\n                  return ret;\n                };\n              } else {\n                extensions.renderers[ext.name] = ext.renderer;\n              }\n            }\n            if (ext.tokenizer) {\n              // Tokenizer Extensions\n              if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n                throw new Error(\"extension level must be 'block' or 'inline'\");\n              }\n              if (extensions[ext.level]) {\n                extensions[ext.level].unshift(ext.tokenizer);\n              } else {\n                extensions[ext.level] = [ext.tokenizer];\n              }\n              if (ext.start) {\n                // Function to check for start of token\n                if (ext.level === 'block') {\n                  if (extensions.startBlock) {\n                    extensions.startBlock.push(ext.start);\n                  } else {\n                    extensions.startBlock = [ext.start];\n                  }\n                } else if (ext.level === 'inline') {\n                  if (extensions.startInline) {\n                    extensions.startInline.push(ext.start);\n                  } else {\n                    extensions.startInline = [ext.start];\n                  }\n                }\n              }\n            }\n            if (ext.childTokens) {\n              // Child tokens to be visited by walkTokens\n              extensions.childTokens[ext.name] = ext.childTokens;\n            }\n          });\n        } // ==-- Parse \"overwrite\" extensions --== //\n\n        if (pack.renderer) {\n          (function () {\n            var renderer = marked.defaults.renderer || new Renderer();\n            var _loop = function _loop(prop) {\n              var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n              renderer[prop] = function () {\n                for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                  args[_key3] = arguments[_key3];\n                }\n                var ret = pack.renderer[prop].apply(renderer, args);\n                if (ret === false) {\n                  ret = prevRenderer.apply(renderer, args);\n                }\n                return ret;\n              };\n            };\n            for (var prop in pack.renderer) {\n              _loop(prop);\n            }\n            opts.renderer = renderer;\n          })();\n        }\n        if (pack.tokenizer) {\n          (function () {\n            var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n            var _loop2 = function _loop2(prop) {\n              var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n              tokenizer[prop] = function () {\n                for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                  args[_key4] = arguments[_key4];\n                }\n                var ret = pack.tokenizer[prop].apply(tokenizer, args);\n                if (ret === false) {\n                  ret = prevTokenizer.apply(tokenizer, args);\n                }\n                return ret;\n              };\n            };\n            for (var prop in pack.tokenizer) {\n              _loop2(prop);\n            }\n            opts.tokenizer = tokenizer;\n          })();\n        } // ==-- Parse WalkTokens extensions --== //\n\n        if (pack.walkTokens) {\n          var _walkTokens = marked.defaults.walkTokens;\n          opts.walkTokens = function (token) {\n            var values = [];\n            values.push(pack.walkTokens.call(this, token));\n            if (_walkTokens) {\n              values = values.concat(_walkTokens.call(this, token));\n            }\n            return values;\n          };\n        }\n        if (hasExtensions) {\n          opts.extensions = extensions;\n        }\n        marked.setOptions(opts);\n      });\n    };\n    /**\n     * Run callback for every token\n     */\n\n    marked.walkTokens = function (tokens, callback) {\n      var values = [];\n      var _loop3 = function _loop3() {\n        var token = _step.value;\n        values = values.concat(callback.call(marked, token));\n        switch (token.type) {\n          case 'table':\n            {\n              for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n                var cell = _step2.value;\n                values = values.concat(marked.walkTokens(cell.tokens, callback));\n              }\n              for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n                var row = _step3.value;\n                for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                  var _cell = _step4.value;\n                  values = values.concat(marked.walkTokens(_cell.tokens, callback));\n                }\n              }\n              break;\n            }\n          case 'list':\n            {\n              values = values.concat(marked.walkTokens(token.items, callback));\n              break;\n            }\n          default:\n            {\n              if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n                // Walk any extensions\n                marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                  values = values.concat(marked.walkTokens(token[childTokens], callback));\n                });\n              } else if (token.tokens) {\n                values = values.concat(marked.walkTokens(token.tokens, callback));\n              }\n            }\n        }\n      };\n      for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n        _loop3();\n      }\n      return values;\n    };\n    /**\n     * Parse Inline\n     * @param {string} src\n     */\n\n    marked.parseInline = function (src, opt) {\n      // throw error in case of non string input\n      if (typeof src === 'undefined' || src === null) {\n        throw new Error('marked.parseInline(): input parameter is undefined or null');\n      }\n      if (typeof src !== 'string') {\n        throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n      }\n      opt = merge({}, marked.defaults, opt || {});\n      checkSanitizeDeprecation(opt);\n      try {\n        var tokens = Lexer.lexInline(src, opt);\n        if (opt.walkTokens) {\n          marked.walkTokens(tokens, opt.walkTokens);\n        }\n        return Parser.parseInline(tokens, opt);\n      } catch (e) {\n        e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n        if (opt.silent) {\n          return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n        }\n        throw e;\n      }\n    };\n    /**\n     * Expose\n     */\n\n    marked.Parser = Parser;\n    marked.parser = Parser.parse;\n    marked.Renderer = Renderer;\n    marked.TextRenderer = TextRenderer;\n    marked.Lexer = Lexer;\n    marked.lexer = Lexer.lex;\n    marked.Tokenizer = Tokenizer;\n    marked.Slugger = Slugger;\n    marked.parse = marked;\n    var options = marked.options;\n    var setOptions = marked.setOptions;\n    var use = marked.use;\n    var walkTokens = marked.walkTokens;\n    var parseInline = marked.parseInline;\n    var parse = marked;\n    var parser = Parser.parse;\n    var lexer = Lexer.lex;\n    exports.Lexer = Lexer;\n    exports.Parser = Parser;\n    exports.Renderer = Renderer;\n    exports.Slugger = Slugger;\n    exports.TextRenderer = TextRenderer;\n    exports.Tokenizer = Tokenizer;\n    exports.getDefaults = getDefaults;\n    exports.lexer = lexer;\n    exports.marked = marked;\n    exports.options = options;\n    exports.parse = parse;\n    exports.parseInline = parseInline;\n    exports.parser = parser;\n    exports.setOptions = setOptions;\n    exports.use = use;\n    exports.walkTokens = walkTokens;\n    Object.defineProperty(exports, '__esModule', {\n      value: true\n    });\n  });\n\n  // ESM-uncomment-begin\n})();\nexport var Lexer = __marked_exports.Lexer || exports.Lexer;\nexport var Parser = __marked_exports.Parser || exports.Parser;\nexport var Renderer = __marked_exports.Renderer || exports.Renderer;\nexport var Slugger = __marked_exports.Slugger || exports.Slugger;\nexport var TextRenderer = __marked_exports.TextRenderer || exports.TextRenderer;\nexport var Tokenizer = __marked_exports.Tokenizer || exports.Tokenizer;\nexport var getDefaults = __marked_exports.getDefaults || exports.getDefaults;\nexport var lexer = __marked_exports.lexer || exports.lexer;\nexport var marked = __marked_exports.marked || exports.marked;\nexport var options = __marked_exports.options || exports.options;\nexport var parse = __marked_exports.parse || exports.parse;\nexport var parseInline = __marked_exports.parseInline || exports.parseInline;\nexport var parser = __marked_exports.parser || exports.parser;\nexport var setOptions = __marked_exports.setOptions || exports.setOptions;\nexport var use = __marked_exports.use || exports.use;\nexport var walkTokens = __marked_exports.walkTokens || exports.walkTokens;\n// ESM-uncomment-end","map":{"version":3,"names":["__marked_exports","define","deps","factory","amd","global","exports","module","globalThis","self","marked","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_unsupportedIterableToArray","o","minLen","_arrayLikeToArray","n","toString","call","slice","constructor","name","Array","from","test","arr","len","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","next","bind","isArray","done","value","TypeError","getDefaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","replace","unescapeTest","unescape","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","e","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","merge","arguments","hasOwnProperty","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","trim","shift","pop","splice","push","c","invert","l","suffLen","currChar","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","title","text","state","inLink","token","type","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","Tokenizer","options","_proto","space","src","rules","block","newline","code","codeBlockStyle","fences","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","top","spacers","filter","t","hasMultipleLineBreaks","every","chars","lineBreaks","_iterator","_step","_char","pre","def","tag","table","item","header","align","rows","j","k","lheading","paragraph","escape$1","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","_text","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","out","charCodeAt","random","Lexer","create","inlineQueue","lex","lexInline","_this","leading","tabs","repeat","lastToken","cutSrc","lastParagraphClipped","some","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","error","Error","_this2","keepPrevChar","keys","includes","lastIndexOf","startInline","get","Renderer","_code","infostring","quote","_html","slugger","id","slug","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parse","parser","parseInline","l2","l3","cell","itemBody","ret","renderers","unshift","callback","err","pending","setTimeout","onError","message","_tokens","Promise","all","then","setOptions","use","_len","args","_key","opts","apply","concat","childTokens","hasExtensions","pack","ext","prevRenderer","_len2","_key2","_loop","prop","_len3","_key3","_loop2","prevTokenizer","_len4","_key4","_walkTokens","values","_loop3","_iterator2","_step2","_iterator3","_step3","_iterator4","_step4","_cell"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/base/common/marked/marked.js"],"sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n// ESM-uncomment-begin\nlet __marked_exports = {};\n(function() {\n  function define(deps, factory) {\n    factory(__marked_exports);\n  }\n  define.amd = true;\n// ESM-uncomment-end\n\n (function (global, factory) {\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.marked = {}));\n})(this, (function (exports) { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  function getDefaults() {\n    return {\n      async: false,\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n  exports.defaults = getDefaults();\n  function changeDefaults(newDefaults) {\n    exports.defaults = newDefaults;\n  }\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n  /**\n   * @param {string} html\n   */\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n  var caret = /(^|[^\\[])\\^/g;\n  /**\n   * @param {string | RegExp} regex\n   * @param {string} opt\n   */\n\n  function edit(regex, opt) {\n    regex = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n  /**\n   * @param {boolean} sanitize\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n  /**\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  }\n  /**\n   * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n   * /c*$/ is vulnerable to REDOS.\n   *\n   * @param {string} str\n   * @param {string} c\n   * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n   */\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.slice(0, l - suffLen);\n  }\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n  /**\n   * @param {string} pattern\n   * @param {number} count\n   */\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      var token = {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text)\n      };\n      lexer.state.inLink = false;\n      return token;\n    }\n\n    return {\n      type: 'image',\n      raw: raw,\n      href: href,\n      title: title,\n      text: escape(text)\n    };\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap && cap[0].length > 0) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: this.lexer.inline(text)\n        };\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: this.lexer.blockTokens(text, []),\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        } // Get next list item\n\n\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))\"); // Check if current bullet point can start a new List Item\n\n        while (src) {\n          endEarly = false;\n\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n\n          if (this.rules.block.hr.test(src)) {\n            // End list if bullet was actually HR (possibly move into itemRegex?)\n            break;\n          }\n\n          raw = cap[0];\n          src = src.substring(raw.length);\n          line = cap[2].split('\\n', 1)[0];\n          nextLine = src.split('\\n', 1)[0];\n\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = line.trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n\n            indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n\n            itemContents = line.slice(indent);\n            indent += cap[1].length;\n          }\n\n          blankLine = false;\n\n          if (!line && /^ *$/.test(nextLine)) {\n            // Items begin with at most one blank line\n            raw += nextLine + '\\n';\n            src = src.substring(nextLine.length + 1);\n            endEarly = true;\n          }\n\n          if (!endEarly) {\n            var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))\");\n            var hrRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)\");\n            var fencesBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:```|~~~)\");\n            var headingBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}#\"); // Check if following lines should be included in List Item\n\n            while (src) {\n              rawLine = src.split('\\n', 1)[0];\n              line = rawLine; // Re-align to follow commonmark nesting rules\n\n              if (this.options.pedantic) {\n                line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n              } // End list item if found code fences\n\n\n              if (fencesBeginRegex.test(line)) {\n                break;\n              } // End list item if found start of new heading\n\n\n              if (headingBeginRegex.test(line)) {\n                break;\n              } // End list item if found start of new bullet\n\n\n              if (nextBulletRegex.test(line)) {\n                break;\n              } // Horizontal rule found\n\n\n              if (hrRegex.test(src)) {\n                break;\n              }\n\n              if (line.search(/[^ ]/) >= indent || !line.trim()) {\n                // Dedent if possible\n                itemContents += '\\n' + line.slice(indent);\n              } else if (!blankLine) {\n                // Until blank line, item doesn't need indentation\n                itemContents += '\\n' + line;\n              } else {\n                // Otherwise, improper indentation ends this item\n                break;\n              }\n\n              if (!blankLine && !line.trim()) {\n                // Check if current line is blank\n                blankLine = true;\n              }\n\n              raw += rawLine + '\\n';\n              src = src.substring(rawLine.length + 1);\n            }\n          }\n\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n        } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n\n\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first\n\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n          var spacers = list.items[i].tokens.filter(function (t) {\n            return t.type === 'space';\n          });\n          var hasMultipleLineBreaks = spacers.every(function (t) {\n            var chars = t.raw.split('');\n            var lineBreaks = 0;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(chars), _step; !(_step = _iterator()).done;) {\n              var _char = _step.value;\n\n              if (_char === '\\n') {\n                lineBreaks += 1;\n              }\n\n              if (lineBreaks > 1) {\n                return true;\n              }\n            }\n\n            return false;\n          });\n\n          if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n            // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n            list.loose = true;\n            list.items[i].loose = true;\n          }\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n\n        if (this.options.sanitize) {\n          var text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n          token.type = 'paragraph';\n          token.text = text;\n          token.tokens = this.lexer.inline(text);\n        }\n\n        return token;\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.rows.length;\n\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          } // parse child tokens inside headers and cells\n          // header child tokens\n\n\n          l = item.header.length;\n\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = this.lexer.inline(item.header[j].text);\n          } // cell child tokens\n\n\n          l = item.rows.length;\n\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = this.lexer.inline(row[k].text);\n            }\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: this.lexer.inline(cap[1])\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        var text = cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1];\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: text,\n          tokens: this.lexer.inline(text)\n        };\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: this.lexer.inline(cap[0])\n        };\n      }\n    };\n\n    _proto.escape = function escape$1(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = src.slice(1, lLength + match.index + rLength);\n\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text)\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n          var text = src.slice(2, lLength + match.index + rLength - 1);\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2])\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        } else {\n          text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge({}, block.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n    nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit(inline.reflink).replace('label', inline._label).replace('ref', block._label).getRegex();\n  inline.nolink = edit(inline.nolink).replace('ref', block._label).getRegex();\n  inline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n\n  /**\n   * smartypants text replacement\n   * @param {string} text\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   * @param {string} text\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || exports.defaults;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n');\n      this.blockTokens(src, this.tokens);\n      var next;\n\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n      } else {\n        src = src.replace(/^( *)(\\t+)/gm, function (_, leading, tabs) {\n          return leading + '    '.repeat(tabs.length);\n        });\n      }\n\n      var token, lastToken, cutSrc, lastParagraphClipped;\n\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // newline\n\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.length === 1 && tokens.length > 0) {\n            // if there's a single \\n as a spacer, it's terminating the last line,\n            // so move it there so that we don't get unecessary paragraph tags\n            tokens[tokens.length - 1].raw += '\\n';\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (token = this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      this.state.top = true;\n      return tokens;\n    };\n\n    _proto.inline = function inline(src, tokens) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // escape\n\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  /**\n   * Renderer\n   */\n\n  var Renderer = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n    }\n    /**\n     * @param {string} quote\n     */\n    ;\n\n    _proto.blockquote = function blockquote(quote) {\n      return \"<blockquote>\\n\" + quote + \"</blockquote>\\n\";\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    }\n    /**\n     * @param {string} text\n     * @param {string} level\n     * @param {string} raw\n     * @param {any} slugger\n     */\n    ;\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        var id = this.options.headerPrefix + slugger.slug(raw);\n        return \"<h\" + level + \" id=\\\"\" + id + \"\\\">\" + text + \"</h\" + level + \">\\n\";\n      } // ignore IDs\n\n\n      return \"<h\" + level + \">\" + text + \"</h\" + level + \">\\n\";\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.listitem = function listitem(text) {\n      return \"<li>\" + text + \"</li>\\n\";\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.paragraph = function paragraph(text) {\n      return \"<p>\" + text + \"</p>\\n\";\n    }\n    /**\n     * @param {string} header\n     * @param {string} body\n     */\n    ;\n\n    _proto.table = function table(header, body) {\n      if (body) body = \"<tbody>\" + body + \"</tbody>\";\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    }\n    /**\n     * @param {string} content\n     */\n    ;\n\n    _proto.tablerow = function tablerow(content) {\n      return \"<tr>\\n\" + content + \"</tr>\\n\";\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? \"<\" + type + \" align=\\\"\" + flags.align + \"\\\">\" : \"<\" + type + \">\";\n      return tag + content + (\"</\" + type + \">\\n\");\n    }\n    /**\n     * span level renderer\n     * @param {string} text\n     */\n    ;\n\n    _proto.strong = function strong(text) {\n      return \"<strong>\" + text + \"</strong>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.em = function em(text) {\n      return \"<em>\" + text + \"</em>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.codespan = function codespan(text) {\n      return \"<code>\" + text + \"</code>\";\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.del = function del(text) {\n      return \"<del>\" + text + \"</del>\";\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = \"<img src=\\\"\" + href + \"\\\" alt=\\\"\" + text + \"\\\"\";\n\n      if (title) {\n        out += \" title=\\\"\" + title + \"\\\"\";\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n    /**\n     * @param {string} value\n     */\n\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     * @param {string} originalSlug\n     * @param {boolean} isDryRun\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} [options]\n     * @param {boolean} [options.dryrun] Generates the next unique slug without\n     * updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || exports.defaults;\n      this.options.renderer = this.options.renderer || new Renderer();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer();\n      this.slugger = new Slugger();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    function onError(e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        if (opt.async) {\n          return Promise.all(marked.walkTokens(_tokens, opt.walkTokens)).then(function () {\n            return Parser.parse(_tokens, opt);\n          })[\"catch\"](onError);\n        }\n\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      onError(e);\n    }\n  }\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = exports.defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                var ret = ext.renderer.apply(this, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              var ret = pack.renderer[prop].apply(renderer, args);\n\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n\n          opts.renderer = renderer;\n        })();\n      }\n\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n\n      if (pack.walkTokens) {\n        var _walkTokens = marked.defaults.walkTokens;\n\n        opts.walkTokens = function (token) {\n          var values = [];\n          values.push(pack.walkTokens.call(this, token));\n\n          if (_walkTokens) {\n            values = values.concat(_walkTokens.call(this, token));\n          }\n\n          return values;\n        };\n      }\n\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    var values = [];\n\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      values = values.concat(callback.call(marked, token));\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              values = values.concat(marked.walkTokens(cell.tokens, callback));\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                values = values.concat(marked.walkTokens(_cell.tokens, callback));\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            values = values.concat(marked.walkTokens(token.items, callback));\n            break;\n          }\n\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                values = values.concat(marked.walkTokens(token[childTokens], callback));\n              });\n            } else if (token.tokens) {\n              values = values.concat(marked.walkTokens(token.tokens, callback));\n            }\n          }\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n\n    return values;\n  };\n  /**\n   * Parse Inline\n   * @param {string} src\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var options = marked.options;\n  var setOptions = marked.setOptions;\n  var use = marked.use;\n  var walkTokens = marked.walkTokens;\n  var parseInline = marked.parseInline;\n  var parse = marked;\n  var parser = Parser.parse;\n  var lexer = Lexer.lex;\n\n  exports.Lexer = Lexer;\n  exports.Parser = Parser;\n  exports.Renderer = Renderer;\n  exports.Slugger = Slugger;\n  exports.TextRenderer = TextRenderer;\n  exports.Tokenizer = Tokenizer;\n  exports.getDefaults = getDefaults;\n  exports.lexer = lexer;\n  exports.marked = marked;\n  exports.options = options;\n  exports.parse = parse;\n  exports.parseInline = parseInline;\n  exports.parser = parser;\n  exports.setOptions = setOptions;\n  exports.use = use;\n  exports.walkTokens = walkTokens;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n// ESM-uncomment-begin\n})();\nexport var Lexer = (__marked_exports.Lexer || exports.Lexer);\nexport var Parser = (__marked_exports.Parser || exports.Parser);\nexport var Renderer = (__marked_exports.Renderer || exports.Renderer);\nexport var Slugger = (__marked_exports.Slugger || exports.Slugger);\nexport var TextRenderer = (__marked_exports.TextRenderer || exports.TextRenderer);\nexport var Tokenizer = (__marked_exports.Tokenizer || exports.Tokenizer);\nexport var getDefaults = (__marked_exports.getDefaults || exports.getDefaults);\nexport var lexer = (__marked_exports.lexer || exports.lexer);\nexport var marked = (__marked_exports.marked || exports.marked);\nexport var options = (__marked_exports.options || exports.options);\nexport var parse = (__marked_exports.parse || exports.parse);\nexport var parseInline = (__marked_exports.parseInline || exports.parseInline);\nexport var parser = (__marked_exports.parser || exports.parser);\nexport var setOptions = (__marked_exports.setOptions || exports.setOptions);\nexport var use = (__marked_exports.use || exports.use);\nexport var walkTokens = (__marked_exports.walkTokens || exports.walkTokens);\n// ESM-uncomment-end\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}