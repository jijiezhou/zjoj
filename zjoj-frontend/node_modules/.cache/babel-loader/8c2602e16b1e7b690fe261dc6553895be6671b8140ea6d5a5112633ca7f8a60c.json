{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './viewCursors.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { TimeoutTimer } from '../../../../base/common/async.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { ViewCursor } from './viewCursor.js';\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\nimport { editorCursorBackground, editorCursorForeground } from '../../../common/core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { WindowIntervalTimer, getWindow } from '../../../../base/browser/dom.js';\nexport class ViewCursors extends ViewPart {\n  constructor(context) {\n    super(context);\n    const options = this._context.configuration.options;\n    this._readOnly = options.get(90 /* EditorOption.readOnly */);\n    this._cursorBlinking = options.get(26 /* EditorOption.cursorBlinking */);\n    this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n    this._cursorSmoothCaretAnimation = options.get(27 /* EditorOption.cursorSmoothCaretAnimation */);\n    this._selectionIsEmpty = true;\n    this._isComposingInput = false;\n    this._isVisible = false;\n    this._primaryCursor = new ViewCursor(this._context);\n    this._secondaryCursors = [];\n    this._renderData = [];\n    this._domNode = createFastDomNode(document.createElement('div'));\n    this._domNode.setAttribute('role', 'presentation');\n    this._domNode.setAttribute('aria-hidden', 'true');\n    this._updateDomClassName();\n    this._domNode.appendChild(this._primaryCursor.getDomNode());\n    this._startCursorBlinkAnimation = new TimeoutTimer();\n    this._cursorFlatBlinkInterval = new WindowIntervalTimer();\n    this._blinkingEnabled = false;\n    this._editorHasFocus = false;\n    this._updateBlinking();\n  }\n  dispose() {\n    super.dispose();\n    this._startCursorBlinkAnimation.dispose();\n    this._cursorFlatBlinkInterval.dispose();\n  }\n  getDomNode() {\n    return this._domNode;\n  }\n  // --- begin event handlers\n  onCompositionStart(e) {\n    this._isComposingInput = true;\n    this._updateBlinking();\n    return true;\n  }\n  onCompositionEnd(e) {\n    this._isComposingInput = false;\n    this._updateBlinking();\n    return true;\n  }\n  onConfigurationChanged(e) {\n    const options = this._context.configuration.options;\n    this._readOnly = options.get(90 /* EditorOption.readOnly */);\n    this._cursorBlinking = options.get(26 /* EditorOption.cursorBlinking */);\n    this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n    this._cursorSmoothCaretAnimation = options.get(27 /* EditorOption.cursorSmoothCaretAnimation */);\n    this._updateBlinking();\n    this._updateDomClassName();\n    this._primaryCursor.onConfigurationChanged(e);\n    for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n      this._secondaryCursors[i].onConfigurationChanged(e);\n    }\n    return true;\n  }\n  _onCursorPositionChanged(position, secondaryPositions, reason) {\n    const pauseAnimation = this._secondaryCursors.length !== secondaryPositions.length || this._cursorSmoothCaretAnimation === 'explicit' && reason !== 3 /* CursorChangeReason.Explicit */;\n    this._primaryCursor.onCursorPositionChanged(position, pauseAnimation);\n    this._updateBlinking();\n    if (this._secondaryCursors.length < secondaryPositions.length) {\n      // Create new cursors\n      const addCnt = secondaryPositions.length - this._secondaryCursors.length;\n      for (let i = 0; i < addCnt; i++) {\n        const newCursor = new ViewCursor(this._context);\n        this._domNode.domNode.insertBefore(newCursor.getDomNode().domNode, this._primaryCursor.getDomNode().domNode.nextSibling);\n        this._secondaryCursors.push(newCursor);\n      }\n    } else if (this._secondaryCursors.length > secondaryPositions.length) {\n      // Remove some cursors\n      const removeCnt = this._secondaryCursors.length - secondaryPositions.length;\n      for (let i = 0; i < removeCnt; i++) {\n        this._domNode.removeChild(this._secondaryCursors[0].getDomNode());\n        this._secondaryCursors.splice(0, 1);\n      }\n    }\n    for (let i = 0; i < secondaryPositions.length; i++) {\n      this._secondaryCursors[i].onCursorPositionChanged(secondaryPositions[i], pauseAnimation);\n    }\n  }\n  onCursorStateChanged(e) {\n    const positions = [];\n    for (let i = 0, len = e.selections.length; i < len; i++) {\n      positions[i] = e.selections[i].getPosition();\n    }\n    this._onCursorPositionChanged(positions[0], positions.slice(1), e.reason);\n    const selectionIsEmpty = e.selections[0].isEmpty();\n    if (this._selectionIsEmpty !== selectionIsEmpty) {\n      this._selectionIsEmpty = selectionIsEmpty;\n      this._updateDomClassName();\n    }\n    return true;\n  }\n  onDecorationsChanged(e) {\n    // true for inline decorations that can end up relayouting text\n    return true;\n  }\n  onFlushed(e) {\n    return true;\n  }\n  onFocusChanged(e) {\n    this._editorHasFocus = e.isFocused;\n    this._updateBlinking();\n    return false;\n  }\n  onLinesChanged(e) {\n    return true;\n  }\n  onLinesDeleted(e) {\n    return true;\n  }\n  onLinesInserted(e) {\n    return true;\n  }\n  onScrollChanged(e) {\n    return true;\n  }\n  onTokensChanged(e) {\n    const shouldRender = position => {\n      for (let i = 0, len = e.ranges.length; i < len; i++) {\n        if (e.ranges[i].fromLineNumber <= position.lineNumber && position.lineNumber <= e.ranges[i].toLineNumber) {\n          return true;\n        }\n      }\n      return false;\n    };\n    if (shouldRender(this._primaryCursor.getPosition())) {\n      return true;\n    }\n    for (const secondaryCursor of this._secondaryCursors) {\n      if (shouldRender(secondaryCursor.getPosition())) {\n        return true;\n      }\n    }\n    return false;\n  }\n  onZonesChanged(e) {\n    return true;\n  }\n  // --- end event handlers\n  // ---- blinking logic\n  _getCursorBlinking() {\n    if (this._isComposingInput) {\n      // avoid double cursors\n      return 0 /* TextEditorCursorBlinkingStyle.Hidden */;\n    }\n    if (!this._editorHasFocus) {\n      return 0 /* TextEditorCursorBlinkingStyle.Hidden */;\n    }\n    if (this._readOnly) {\n      return 5 /* TextEditorCursorBlinkingStyle.Solid */;\n    }\n    return this._cursorBlinking;\n  }\n  _updateBlinking() {\n    this._startCursorBlinkAnimation.cancel();\n    this._cursorFlatBlinkInterval.cancel();\n    const blinkingStyle = this._getCursorBlinking();\n    // hidden and solid are special as they involve no animations\n    const isHidden = blinkingStyle === 0 /* TextEditorCursorBlinkingStyle.Hidden */;\n    const isSolid = blinkingStyle === 5 /* TextEditorCursorBlinkingStyle.Solid */;\n    if (isHidden) {\n      this._hide();\n    } else {\n      this._show();\n    }\n    this._blinkingEnabled = false;\n    this._updateDomClassName();\n    if (!isHidden && !isSolid) {\n      if (blinkingStyle === 1 /* TextEditorCursorBlinkingStyle.Blink */) {\n        // flat blinking is handled by JavaScript to save battery life due to Chromium step timing issue https://bugs.chromium.org/p/chromium/issues/detail?id=361587\n        this._cursorFlatBlinkInterval.cancelAndSet(() => {\n          if (this._isVisible) {\n            this._hide();\n          } else {\n            this._show();\n          }\n        }, ViewCursors.BLINK_INTERVAL, getWindow(this._domNode.domNode));\n      } else {\n        this._startCursorBlinkAnimation.setIfNotSet(() => {\n          this._blinkingEnabled = true;\n          this._updateDomClassName();\n        }, ViewCursors.BLINK_INTERVAL);\n      }\n    }\n  }\n  // --- end blinking logic\n  _updateDomClassName() {\n    this._domNode.setClassName(this._getClassName());\n  }\n  _getClassName() {\n    let result = 'cursors-layer';\n    if (!this._selectionIsEmpty) {\n      result += ' has-selection';\n    }\n    switch (this._cursorStyle) {\n      case TextEditorCursorStyle.Line:\n        result += ' cursor-line-style';\n        break;\n      case TextEditorCursorStyle.Block:\n        result += ' cursor-block-style';\n        break;\n      case TextEditorCursorStyle.Underline:\n        result += ' cursor-underline-style';\n        break;\n      case TextEditorCursorStyle.LineThin:\n        result += ' cursor-line-thin-style';\n        break;\n      case TextEditorCursorStyle.BlockOutline:\n        result += ' cursor-block-outline-style';\n        break;\n      case TextEditorCursorStyle.UnderlineThin:\n        result += ' cursor-underline-thin-style';\n        break;\n      default:\n        result += ' cursor-line-style';\n    }\n    if (this._blinkingEnabled) {\n      switch (this._getCursorBlinking()) {\n        case 1 /* TextEditorCursorBlinkingStyle.Blink */:\n          result += ' cursor-blink';\n          break;\n        case 2 /* TextEditorCursorBlinkingStyle.Smooth */:\n          result += ' cursor-smooth';\n          break;\n        case 3 /* TextEditorCursorBlinkingStyle.Phase */:\n          result += ' cursor-phase';\n          break;\n        case 4 /* TextEditorCursorBlinkingStyle.Expand */:\n          result += ' cursor-expand';\n          break;\n        case 5 /* TextEditorCursorBlinkingStyle.Solid */:\n          result += ' cursor-solid';\n          break;\n        default:\n          result += ' cursor-solid';\n      }\n    } else {\n      result += ' cursor-solid';\n    }\n    if (this._cursorSmoothCaretAnimation === 'on' || this._cursorSmoothCaretAnimation === 'explicit') {\n      result += ' cursor-smooth-caret-animation';\n    }\n    return result;\n  }\n  _show() {\n    this._primaryCursor.show();\n    for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n      this._secondaryCursors[i].show();\n    }\n    this._isVisible = true;\n  }\n  _hide() {\n    this._primaryCursor.hide();\n    for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n      this._secondaryCursors[i].hide();\n    }\n    this._isVisible = false;\n  }\n  // ---- IViewPart implementation\n  prepareRender(ctx) {\n    this._primaryCursor.prepareRender(ctx);\n    for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n      this._secondaryCursors[i].prepareRender(ctx);\n    }\n  }\n  render(ctx) {\n    const renderData = [];\n    let renderDataLen = 0;\n    const primaryRenderData = this._primaryCursor.render(ctx);\n    if (primaryRenderData) {\n      renderData[renderDataLen++] = primaryRenderData;\n    }\n    for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n      const secondaryRenderData = this._secondaryCursors[i].render(ctx);\n      if (secondaryRenderData) {\n        renderData[renderDataLen++] = secondaryRenderData;\n      }\n    }\n    this._renderData = renderData;\n  }\n  getLastRenderData() {\n    return this._renderData;\n  }\n}\nViewCursors.BLINK_INTERVAL = 500;\nregisterThemingParticipant((theme, collector) => {\n  const caret = theme.getColor(editorCursorForeground);\n  if (caret) {\n    let caretBackground = theme.getColor(editorCursorBackground);\n    if (!caretBackground) {\n      caretBackground = caret.opposite();\n    }\n    collector.addRule(`.monaco-editor .cursors-layer .cursor { background-color: ${caret}; border-color: ${caret}; color: ${caretBackground}; }`);\n    if (isHighContrast(theme.type)) {\n      collector.addRule(`.monaco-editor .cursors-layer.has-selection .cursor { border-left: 1px solid ${caretBackground}; border-right: 1px solid ${caretBackground}; }`);\n    }\n  }\n});","map":{"version":3,"names":["createFastDomNode","TimeoutTimer","ViewPart","ViewCursor","TextEditorCursorStyle","editorCursorBackground","editorCursorForeground","registerThemingParticipant","isHighContrast","WindowIntervalTimer","getWindow","ViewCursors","constructor","context","options","_context","configuration","_readOnly","get","_cursorBlinking","_cursorStyle","_cursorSmoothCaretAnimation","_selectionIsEmpty","_isComposingInput","_isVisible","_primaryCursor","_secondaryCursors","_renderData","_domNode","document","createElement","setAttribute","_updateDomClassName","appendChild","getDomNode","_startCursorBlinkAnimation","_cursorFlatBlinkInterval","_blinkingEnabled","_editorHasFocus","_updateBlinking","dispose","onCompositionStart","e","onCompositionEnd","onConfigurationChanged","i","len","length","_onCursorPositionChanged","position","secondaryPositions","reason","pauseAnimation","onCursorPositionChanged","addCnt","newCursor","domNode","insertBefore","nextSibling","push","removeCnt","removeChild","splice","onCursorStateChanged","positions","selections","getPosition","slice","selectionIsEmpty","isEmpty","onDecorationsChanged","onFlushed","onFocusChanged","isFocused","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","onTokensChanged","shouldRender","ranges","fromLineNumber","lineNumber","toLineNumber","secondaryCursor","onZonesChanged","_getCursorBlinking","cancel","blinkingStyle","isHidden","isSolid","_hide","_show","cancelAndSet","BLINK_INTERVAL","setIfNotSet","setClassName","_getClassName","result","Line","Block","Underline","LineThin","BlockOutline","UnderlineThin","show","hide","prepareRender","ctx","render","renderData","renderDataLen","primaryRenderData","secondaryRenderData","getLastRenderData","theme","collector","caret","getColor","caretBackground","opposite","addRule","type"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/viewCursors.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './viewCursors.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { TimeoutTimer } from '../../../../base/common/async.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { ViewCursor } from './viewCursor.js';\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\nimport { editorCursorBackground, editorCursorForeground } from '../../../common/core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { WindowIntervalTimer, getWindow } from '../../../../base/browser/dom.js';\nexport class ViewCursors extends ViewPart {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        this._readOnly = options.get(90 /* EditorOption.readOnly */);\n        this._cursorBlinking = options.get(26 /* EditorOption.cursorBlinking */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._cursorSmoothCaretAnimation = options.get(27 /* EditorOption.cursorSmoothCaretAnimation */);\n        this._selectionIsEmpty = true;\n        this._isComposingInput = false;\n        this._isVisible = false;\n        this._primaryCursor = new ViewCursor(this._context);\n        this._secondaryCursors = [];\n        this._renderData = [];\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._updateDomClassName();\n        this._domNode.appendChild(this._primaryCursor.getDomNode());\n        this._startCursorBlinkAnimation = new TimeoutTimer();\n        this._cursorFlatBlinkInterval = new WindowIntervalTimer();\n        this._blinkingEnabled = false;\n        this._editorHasFocus = false;\n        this._updateBlinking();\n    }\n    dispose() {\n        super.dispose();\n        this._startCursorBlinkAnimation.dispose();\n        this._cursorFlatBlinkInterval.dispose();\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    // --- begin event handlers\n    onCompositionStart(e) {\n        this._isComposingInput = true;\n        this._updateBlinking();\n        return true;\n    }\n    onCompositionEnd(e) {\n        this._isComposingInput = false;\n        this._updateBlinking();\n        return true;\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._readOnly = options.get(90 /* EditorOption.readOnly */);\n        this._cursorBlinking = options.get(26 /* EditorOption.cursorBlinking */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._cursorSmoothCaretAnimation = options.get(27 /* EditorOption.cursorSmoothCaretAnimation */);\n        this._updateBlinking();\n        this._updateDomClassName();\n        this._primaryCursor.onConfigurationChanged(e);\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].onConfigurationChanged(e);\n        }\n        return true;\n    }\n    _onCursorPositionChanged(position, secondaryPositions, reason) {\n        const pauseAnimation = (this._secondaryCursors.length !== secondaryPositions.length\n            || (this._cursorSmoothCaretAnimation === 'explicit' && reason !== 3 /* CursorChangeReason.Explicit */));\n        this._primaryCursor.onCursorPositionChanged(position, pauseAnimation);\n        this._updateBlinking();\n        if (this._secondaryCursors.length < secondaryPositions.length) {\n            // Create new cursors\n            const addCnt = secondaryPositions.length - this._secondaryCursors.length;\n            for (let i = 0; i < addCnt; i++) {\n                const newCursor = new ViewCursor(this._context);\n                this._domNode.domNode.insertBefore(newCursor.getDomNode().domNode, this._primaryCursor.getDomNode().domNode.nextSibling);\n                this._secondaryCursors.push(newCursor);\n            }\n        }\n        else if (this._secondaryCursors.length > secondaryPositions.length) {\n            // Remove some cursors\n            const removeCnt = this._secondaryCursors.length - secondaryPositions.length;\n            for (let i = 0; i < removeCnt; i++) {\n                this._domNode.removeChild(this._secondaryCursors[0].getDomNode());\n                this._secondaryCursors.splice(0, 1);\n            }\n        }\n        for (let i = 0; i < secondaryPositions.length; i++) {\n            this._secondaryCursors[i].onCursorPositionChanged(secondaryPositions[i], pauseAnimation);\n        }\n    }\n    onCursorStateChanged(e) {\n        const positions = [];\n        for (let i = 0, len = e.selections.length; i < len; i++) {\n            positions[i] = e.selections[i].getPosition();\n        }\n        this._onCursorPositionChanged(positions[0], positions.slice(1), e.reason);\n        const selectionIsEmpty = e.selections[0].isEmpty();\n        if (this._selectionIsEmpty !== selectionIsEmpty) {\n            this._selectionIsEmpty = selectionIsEmpty;\n            this._updateDomClassName();\n        }\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onFocusChanged(e) {\n        this._editorHasFocus = e.isFocused;\n        this._updateBlinking();\n        return false;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return true;\n    }\n    onTokensChanged(e) {\n        const shouldRender = (position) => {\n            for (let i = 0, len = e.ranges.length; i < len; i++) {\n                if (e.ranges[i].fromLineNumber <= position.lineNumber && position.lineNumber <= e.ranges[i].toLineNumber) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        if (shouldRender(this._primaryCursor.getPosition())) {\n            return true;\n        }\n        for (const secondaryCursor of this._secondaryCursors) {\n            if (shouldRender(secondaryCursor.getPosition())) {\n                return true;\n            }\n        }\n        return false;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    // ---- blinking logic\n    _getCursorBlinking() {\n        if (this._isComposingInput) {\n            // avoid double cursors\n            return 0 /* TextEditorCursorBlinkingStyle.Hidden */;\n        }\n        if (!this._editorHasFocus) {\n            return 0 /* TextEditorCursorBlinkingStyle.Hidden */;\n        }\n        if (this._readOnly) {\n            return 5 /* TextEditorCursorBlinkingStyle.Solid */;\n        }\n        return this._cursorBlinking;\n    }\n    _updateBlinking() {\n        this._startCursorBlinkAnimation.cancel();\n        this._cursorFlatBlinkInterval.cancel();\n        const blinkingStyle = this._getCursorBlinking();\n        // hidden and solid are special as they involve no animations\n        const isHidden = (blinkingStyle === 0 /* TextEditorCursorBlinkingStyle.Hidden */);\n        const isSolid = (blinkingStyle === 5 /* TextEditorCursorBlinkingStyle.Solid */);\n        if (isHidden) {\n            this._hide();\n        }\n        else {\n            this._show();\n        }\n        this._blinkingEnabled = false;\n        this._updateDomClassName();\n        if (!isHidden && !isSolid) {\n            if (blinkingStyle === 1 /* TextEditorCursorBlinkingStyle.Blink */) {\n                // flat blinking is handled by JavaScript to save battery life due to Chromium step timing issue https://bugs.chromium.org/p/chromium/issues/detail?id=361587\n                this._cursorFlatBlinkInterval.cancelAndSet(() => {\n                    if (this._isVisible) {\n                        this._hide();\n                    }\n                    else {\n                        this._show();\n                    }\n                }, ViewCursors.BLINK_INTERVAL, getWindow(this._domNode.domNode));\n            }\n            else {\n                this._startCursorBlinkAnimation.setIfNotSet(() => {\n                    this._blinkingEnabled = true;\n                    this._updateDomClassName();\n                }, ViewCursors.BLINK_INTERVAL);\n            }\n        }\n    }\n    // --- end blinking logic\n    _updateDomClassName() {\n        this._domNode.setClassName(this._getClassName());\n    }\n    _getClassName() {\n        let result = 'cursors-layer';\n        if (!this._selectionIsEmpty) {\n            result += ' has-selection';\n        }\n        switch (this._cursorStyle) {\n            case TextEditorCursorStyle.Line:\n                result += ' cursor-line-style';\n                break;\n            case TextEditorCursorStyle.Block:\n                result += ' cursor-block-style';\n                break;\n            case TextEditorCursorStyle.Underline:\n                result += ' cursor-underline-style';\n                break;\n            case TextEditorCursorStyle.LineThin:\n                result += ' cursor-line-thin-style';\n                break;\n            case TextEditorCursorStyle.BlockOutline:\n                result += ' cursor-block-outline-style';\n                break;\n            case TextEditorCursorStyle.UnderlineThin:\n                result += ' cursor-underline-thin-style';\n                break;\n            default:\n                result += ' cursor-line-style';\n        }\n        if (this._blinkingEnabled) {\n            switch (this._getCursorBlinking()) {\n                case 1 /* TextEditorCursorBlinkingStyle.Blink */:\n                    result += ' cursor-blink';\n                    break;\n                case 2 /* TextEditorCursorBlinkingStyle.Smooth */:\n                    result += ' cursor-smooth';\n                    break;\n                case 3 /* TextEditorCursorBlinkingStyle.Phase */:\n                    result += ' cursor-phase';\n                    break;\n                case 4 /* TextEditorCursorBlinkingStyle.Expand */:\n                    result += ' cursor-expand';\n                    break;\n                case 5 /* TextEditorCursorBlinkingStyle.Solid */:\n                    result += ' cursor-solid';\n                    break;\n                default:\n                    result += ' cursor-solid';\n            }\n        }\n        else {\n            result += ' cursor-solid';\n        }\n        if (this._cursorSmoothCaretAnimation === 'on' || this._cursorSmoothCaretAnimation === 'explicit') {\n            result += ' cursor-smooth-caret-animation';\n        }\n        return result;\n    }\n    _show() {\n        this._primaryCursor.show();\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].show();\n        }\n        this._isVisible = true;\n    }\n    _hide() {\n        this._primaryCursor.hide();\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].hide();\n        }\n        this._isVisible = false;\n    }\n    // ---- IViewPart implementation\n    prepareRender(ctx) {\n        this._primaryCursor.prepareRender(ctx);\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].prepareRender(ctx);\n        }\n    }\n    render(ctx) {\n        const renderData = [];\n        let renderDataLen = 0;\n        const primaryRenderData = this._primaryCursor.render(ctx);\n        if (primaryRenderData) {\n            renderData[renderDataLen++] = primaryRenderData;\n        }\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            const secondaryRenderData = this._secondaryCursors[i].render(ctx);\n            if (secondaryRenderData) {\n                renderData[renderDataLen++] = secondaryRenderData;\n            }\n        }\n        this._renderData = renderData;\n    }\n    getLastRenderData() {\n        return this._renderData;\n    }\n}\nViewCursors.BLINK_INTERVAL = 500;\nregisterThemingParticipant((theme, collector) => {\n    const caret = theme.getColor(editorCursorForeground);\n    if (caret) {\n        let caretBackground = theme.getColor(editorCursorBackground);\n        if (!caretBackground) {\n            caretBackground = caret.opposite();\n        }\n        collector.addRule(`.monaco-editor .cursors-layer .cursor { background-color: ${caret}; border-color: ${caret}; color: ${caretBackground}; }`);\n        if (isHighContrast(theme.type)) {\n            collector.addRule(`.monaco-editor .cursors-layer.has-selection .cursor { border-left: 1px solid ${caretBackground}; border-right: 1px solid ${caretBackground}; }`);\n        }\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}