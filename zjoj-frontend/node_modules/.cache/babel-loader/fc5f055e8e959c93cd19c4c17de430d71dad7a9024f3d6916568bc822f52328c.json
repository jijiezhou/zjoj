{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport * as dom from '../../base/browser/dom.js';\nimport { Selection } from '../common/core/selection.js';\nimport { Range } from '../common/core/range.js';\nimport { createFastDomNode } from '../../base/browser/fastDomNode.js';\nimport { BugIndicatingError, onUnexpectedError } from '../../base/common/errors.js';\nimport { PointerHandler } from './controller/pointerHandler.js';\nimport { TextAreaHandler } from './controller/textAreaHandler.js';\nimport { ViewController } from './view/viewController.js';\nimport { ViewUserInputEvents } from './view/viewUserInputEvents.js';\nimport { ContentViewOverlays, MarginViewOverlays } from './view/viewOverlays.js';\nimport { PartFingerprints } from './view/viewPart.js';\nimport { ViewContentWidgets } from './viewParts/contentWidgets/contentWidgets.js';\nimport { CurrentLineHighlightOverlay, CurrentLineMarginHighlightOverlay } from './viewParts/currentLineHighlight/currentLineHighlight.js';\nimport { DecorationsOverlay } from './viewParts/decorations/decorations.js';\nimport { EditorScrollbar } from './viewParts/editorScrollbar/editorScrollbar.js';\nimport { IndentGuidesOverlay } from './viewParts/indentGuides/indentGuides.js';\nimport { LineNumbersOverlay } from './viewParts/lineNumbers/lineNumbers.js';\nimport { ViewLines } from './viewParts/lines/viewLines.js';\nimport { LinesDecorationsOverlay } from './viewParts/linesDecorations/linesDecorations.js';\nimport { Margin } from './viewParts/margin/margin.js';\nimport { MarginViewLineDecorationsOverlay } from './viewParts/marginDecorations/marginDecorations.js';\nimport { Minimap } from './viewParts/minimap/minimap.js';\nimport { ViewOverlayWidgets } from './viewParts/overlayWidgets/overlayWidgets.js';\nimport { DecorationsOverviewRuler } from './viewParts/overviewRuler/decorationsOverviewRuler.js';\nimport { OverviewRuler } from './viewParts/overviewRuler/overviewRuler.js';\nimport { Rulers } from './viewParts/rulers/rulers.js';\nimport { ScrollDecorationViewPart } from './viewParts/scrollDecoration/scrollDecoration.js';\nimport { SelectionsOverlay } from './viewParts/selections/selections.js';\nimport { ViewCursors } from './viewParts/viewCursors/viewCursors.js';\nimport { ViewZones } from './viewParts/viewZones/viewZones.js';\nimport { Position } from '../common/core/position.js';\nimport { RenderingContext } from './view/renderingContext.js';\nimport { ViewContext } from '../common/viewModel/viewContext.js';\nimport { ViewportData } from '../common/viewLayout/viewLinesViewportData.js';\nimport { ViewEventHandler } from '../common/viewEventHandler.js';\nimport { getThemeTypeSelector } from '../../platform/theme/common/themeService.js';\nimport { PointerHandlerLastRenderData } from './controller/mouseTarget.js';\nimport { BlockDecorations } from './viewParts/blockDecorations/blockDecorations.js';\nimport { inputLatency } from '../../base/browser/performance.js';\nimport { WhitespaceOverlay } from './viewParts/whitespace/whitespace.js';\nimport { GlyphMarginWidgets } from './viewParts/glyphMargin/glyphMargin.js';\nimport { GlyphMarginLane } from '../common/model.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nlet View = class View extends ViewEventHandler {\n  constructor(commandDelegate, configuration, colorTheme, model, userInputEvents, overflowWidgetsDomNode, _instantiationService) {\n    super();\n    this._instantiationService = _instantiationService;\n    // Actual mutable state\n    this._shouldRecomputeGlyphMarginLanes = false;\n    this._selections = [new Selection(1, 1, 1, 1)];\n    this._renderAnimationFrame = null;\n    const viewController = new ViewController(configuration, model, userInputEvents, commandDelegate);\n    // The view context is passed on to most classes (basically to reduce param. counts in ctors)\n    this._context = new ViewContext(configuration, colorTheme, model);\n    // Ensure the view is the first event handler in order to update the layout\n    this._context.addEventHandler(this);\n    this._viewParts = [];\n    // Keyboard handler\n    this._textAreaHandler = this._instantiationService.createInstance(TextAreaHandler, this._context, viewController, this._createTextAreaHandlerHelper());\n    this._viewParts.push(this._textAreaHandler);\n    // These two dom nodes must be constructed up front, since references are needed in the layout provider (scrolling & co.)\n    this._linesContent = createFastDomNode(document.createElement('div'));\n    this._linesContent.setClassName('lines-content' + ' monaco-editor-background');\n    this._linesContent.setPosition('absolute');\n    this.domNode = createFastDomNode(document.createElement('div'));\n    this.domNode.setClassName(this._getEditorClassName());\n    // Set role 'code' for better screen reader support https://github.com/microsoft/vscode/issues/93438\n    this.domNode.setAttribute('role', 'code');\n    this._overflowGuardContainer = createFastDomNode(document.createElement('div'));\n    PartFingerprints.write(this._overflowGuardContainer, 3 /* PartFingerprint.OverflowGuard */);\n    this._overflowGuardContainer.setClassName('overflow-guard');\n    this._scrollbar = new EditorScrollbar(this._context, this._linesContent, this.domNode, this._overflowGuardContainer);\n    this._viewParts.push(this._scrollbar);\n    // View Lines\n    this._viewLines = new ViewLines(this._context, this._linesContent);\n    // View Zones\n    this._viewZones = new ViewZones(this._context);\n    this._viewParts.push(this._viewZones);\n    // Decorations overview ruler\n    const decorationsOverviewRuler = new DecorationsOverviewRuler(this._context);\n    this._viewParts.push(decorationsOverviewRuler);\n    const scrollDecoration = new ScrollDecorationViewPart(this._context);\n    this._viewParts.push(scrollDecoration);\n    const contentViewOverlays = new ContentViewOverlays(this._context);\n    this._viewParts.push(contentViewOverlays);\n    contentViewOverlays.addDynamicOverlay(new CurrentLineHighlightOverlay(this._context));\n    contentViewOverlays.addDynamicOverlay(new SelectionsOverlay(this._context));\n    contentViewOverlays.addDynamicOverlay(new IndentGuidesOverlay(this._context));\n    contentViewOverlays.addDynamicOverlay(new DecorationsOverlay(this._context));\n    contentViewOverlays.addDynamicOverlay(new WhitespaceOverlay(this._context));\n    const marginViewOverlays = new MarginViewOverlays(this._context);\n    this._viewParts.push(marginViewOverlays);\n    marginViewOverlays.addDynamicOverlay(new CurrentLineMarginHighlightOverlay(this._context));\n    marginViewOverlays.addDynamicOverlay(new MarginViewLineDecorationsOverlay(this._context));\n    marginViewOverlays.addDynamicOverlay(new LinesDecorationsOverlay(this._context));\n    marginViewOverlays.addDynamicOverlay(new LineNumbersOverlay(this._context));\n    // Glyph margin widgets\n    this._glyphMarginWidgets = new GlyphMarginWidgets(this._context);\n    this._viewParts.push(this._glyphMarginWidgets);\n    const margin = new Margin(this._context);\n    margin.getDomNode().appendChild(this._viewZones.marginDomNode);\n    margin.getDomNode().appendChild(marginViewOverlays.getDomNode());\n    margin.getDomNode().appendChild(this._glyphMarginWidgets.domNode);\n    this._viewParts.push(margin);\n    // Content widgets\n    this._contentWidgets = new ViewContentWidgets(this._context, this.domNode);\n    this._viewParts.push(this._contentWidgets);\n    this._viewCursors = new ViewCursors(this._context);\n    this._viewParts.push(this._viewCursors);\n    // Overlay widgets\n    this._overlayWidgets = new ViewOverlayWidgets(this._context);\n    this._viewParts.push(this._overlayWidgets);\n    const rulers = new Rulers(this._context);\n    this._viewParts.push(rulers);\n    const blockOutline = new BlockDecorations(this._context);\n    this._viewParts.push(blockOutline);\n    const minimap = new Minimap(this._context);\n    this._viewParts.push(minimap);\n    // -------------- Wire dom nodes up\n    if (decorationsOverviewRuler) {\n      const overviewRulerData = this._scrollbar.getOverviewRulerLayoutInfo();\n      overviewRulerData.parent.insertBefore(decorationsOverviewRuler.getDomNode(), overviewRulerData.insertBefore);\n    }\n    this._linesContent.appendChild(contentViewOverlays.getDomNode());\n    this._linesContent.appendChild(rulers.domNode);\n    this._linesContent.appendChild(this._viewZones.domNode);\n    this._linesContent.appendChild(this._viewLines.getDomNode());\n    this._linesContent.appendChild(this._contentWidgets.domNode);\n    this._linesContent.appendChild(this._viewCursors.getDomNode());\n    this._overflowGuardContainer.appendChild(margin.getDomNode());\n    this._overflowGuardContainer.appendChild(this._scrollbar.getDomNode());\n    this._overflowGuardContainer.appendChild(scrollDecoration.getDomNode());\n    this._overflowGuardContainer.appendChild(this._textAreaHandler.textArea);\n    this._overflowGuardContainer.appendChild(this._textAreaHandler.textAreaCover);\n    this._overflowGuardContainer.appendChild(this._overlayWidgets.getDomNode());\n    this._overflowGuardContainer.appendChild(minimap.getDomNode());\n    this._overflowGuardContainer.appendChild(blockOutline.domNode);\n    this.domNode.appendChild(this._overflowGuardContainer);\n    if (overflowWidgetsDomNode) {\n      overflowWidgetsDomNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode.domNode);\n    } else {\n      this.domNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode);\n    }\n    this._applyLayout();\n    // Pointer handler\n    this._pointerHandler = this._register(new PointerHandler(this._context, viewController, this._createPointerHandlerHelper()));\n  }\n  _computeGlyphMarginLaneCount() {\n    const model = this._context.viewModel.model;\n    let glyphs = [];\n    // Add all margin decorations\n    glyphs = glyphs.concat(model.getAllMarginDecorations().map(decoration => {\n      var _a, _b;\n      const lane = (_b = (_a = decoration.options.glyphMargin) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : GlyphMarginLane.Left;\n      return {\n        range: decoration.range,\n        lane\n      };\n    }));\n    // Add all glyph margin widgets\n    glyphs = glyphs.concat(this._glyphMarginWidgets.getWidgets().map(widget => {\n      const range = model.validateRange(widget.preference.range);\n      return {\n        range,\n        lane: widget.preference.lane\n      };\n    }));\n    // Sorted by their start position\n    glyphs.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n    let leftDecRange = null;\n    let rightDecRange = null;\n    for (const decoration of glyphs) {\n      if (decoration.lane === GlyphMarginLane.Left && (!leftDecRange || Range.compareRangesUsingEnds(leftDecRange, decoration.range) < 0)) {\n        // assign only if the range of `decoration` ends after, which means it has a higher chance to overlap with the other lane\n        leftDecRange = decoration.range;\n      }\n      if (decoration.lane === GlyphMarginLane.Right && (!rightDecRange || Range.compareRangesUsingEnds(rightDecRange, decoration.range) < 0)) {\n        // assign only if the range of `decoration` ends after, which means it has a higher chance to overlap with the other lane\n        rightDecRange = decoration.range;\n      }\n      if (leftDecRange && rightDecRange) {\n        if (leftDecRange.endLineNumber < rightDecRange.startLineNumber) {\n          // there's no chance for `leftDecRange` to ever intersect something going further\n          leftDecRange = null;\n          continue;\n        }\n        if (rightDecRange.endLineNumber < leftDecRange.startLineNumber) {\n          // there's no chance for `rightDecRange` to ever intersect something going further\n          rightDecRange = null;\n          continue;\n        }\n        // leftDecRange and rightDecRange are intersecting or touching => we need two lanes\n        return 2;\n      }\n    }\n    return 1;\n  }\n  _createPointerHandlerHelper() {\n    return {\n      viewDomNode: this.domNode.domNode,\n      linesContentDomNode: this._linesContent.domNode,\n      viewLinesDomNode: this._viewLines.getDomNode().domNode,\n      focusTextArea: () => {\n        this.focus();\n      },\n      dispatchTextAreaEvent: event => {\n        this._textAreaHandler.textArea.domNode.dispatchEvent(event);\n      },\n      getLastRenderData: () => {\n        const lastViewCursorsRenderData = this._viewCursors.getLastRenderData() || [];\n        const lastTextareaPosition = this._textAreaHandler.getLastRenderData();\n        return new PointerHandlerLastRenderData(lastViewCursorsRenderData, lastTextareaPosition);\n      },\n      renderNow: () => {\n        this.render(true, false);\n      },\n      shouldSuppressMouseDownOnViewZone: viewZoneId => {\n        return this._viewZones.shouldSuppressMouseDownOnViewZone(viewZoneId);\n      },\n      shouldSuppressMouseDownOnWidget: widgetId => {\n        return this._contentWidgets.shouldSuppressMouseDownOnWidget(widgetId);\n      },\n      getPositionFromDOMInfo: (spanNode, offset) => {\n        this._flushAccumulatedAndRenderNow();\n        return this._viewLines.getPositionFromDOMInfo(spanNode, offset);\n      },\n      visibleRangeForPosition: (lineNumber, column) => {\n        this._flushAccumulatedAndRenderNow();\n        return this._viewLines.visibleRangeForPosition(new Position(lineNumber, column));\n      },\n      getLineWidth: lineNumber => {\n        this._flushAccumulatedAndRenderNow();\n        return this._viewLines.getLineWidth(lineNumber);\n      }\n    };\n  }\n  _createTextAreaHandlerHelper() {\n    return {\n      visibleRangeForPosition: position => {\n        this._flushAccumulatedAndRenderNow();\n        return this._viewLines.visibleRangeForPosition(position);\n      }\n    };\n  }\n  _applyLayout() {\n    const options = this._context.configuration.options;\n    const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n    this.domNode.setWidth(layoutInfo.width);\n    this.domNode.setHeight(layoutInfo.height);\n    this._overflowGuardContainer.setWidth(layoutInfo.width);\n    this._overflowGuardContainer.setHeight(layoutInfo.height);\n    this._linesContent.setWidth(1000000);\n    this._linesContent.setHeight(1000000);\n  }\n  _getEditorClassName() {\n    const focused = this._textAreaHandler.isFocused() ? ' focused' : '';\n    return this._context.configuration.options.get(140 /* EditorOption.editorClassName */) + ' ' + getThemeTypeSelector(this._context.theme.type) + focused;\n  }\n  // --- begin event handlers\n  handleEvents(events) {\n    super.handleEvents(events);\n    this._scheduleRender();\n  }\n  onConfigurationChanged(e) {\n    this.domNode.setClassName(this._getEditorClassName());\n    this._applyLayout();\n    return false;\n  }\n  onCursorStateChanged(e) {\n    this._selections = e.selections;\n    return false;\n  }\n  onDecorationsChanged(e) {\n    if (e.affectsGlyphMargin) {\n      this._shouldRecomputeGlyphMarginLanes = true;\n    }\n    return false;\n  }\n  onFocusChanged(e) {\n    this.domNode.setClassName(this._getEditorClassName());\n    return false;\n  }\n  onThemeChanged(e) {\n    this._context.theme.update(e.theme);\n    this.domNode.setClassName(this._getEditorClassName());\n    return false;\n  }\n  // --- end event handlers\n  dispose() {\n    if (this._renderAnimationFrame !== null) {\n      this._renderAnimationFrame.dispose();\n      this._renderAnimationFrame = null;\n    }\n    this._contentWidgets.overflowingContentWidgetsDomNode.domNode.remove();\n    this._context.removeEventHandler(this);\n    this._viewLines.dispose();\n    // Destroy view parts\n    for (const viewPart of this._viewParts) {\n      viewPart.dispose();\n    }\n    super.dispose();\n  }\n  _scheduleRender() {\n    if (this._store.isDisposed) {\n      throw new BugIndicatingError();\n    }\n    if (this._renderAnimationFrame === null) {\n      const rendering = this._createCoordinatedRendering();\n      this._renderAnimationFrame = EditorRenderingCoordinator.INSTANCE.scheduleCoordinatedRendering({\n        window: dom.getWindow(this.domNode.domNode),\n        prepareRenderText: () => {\n          if (this._store.isDisposed) {\n            throw new BugIndicatingError();\n          }\n          try {\n            return rendering.prepareRenderText();\n          } finally {\n            this._renderAnimationFrame = null;\n          }\n        },\n        renderText: () => {\n          if (this._store.isDisposed) {\n            throw new BugIndicatingError();\n          }\n          return rendering.renderText();\n        },\n        prepareRender: (viewParts, ctx) => {\n          if (this._store.isDisposed) {\n            throw new BugIndicatingError();\n          }\n          return rendering.prepareRender(viewParts, ctx);\n        },\n        render: (viewParts, ctx) => {\n          if (this._store.isDisposed) {\n            throw new BugIndicatingError();\n          }\n          return rendering.render(viewParts, ctx);\n        }\n      });\n    }\n  }\n  _flushAccumulatedAndRenderNow() {\n    const rendering = this._createCoordinatedRendering();\n    safeInvokeNoArg(() => rendering.prepareRenderText());\n    const data = safeInvokeNoArg(() => rendering.renderText());\n    if (data) {\n      const [viewParts, ctx] = data;\n      safeInvokeNoArg(() => rendering.prepareRender(viewParts, ctx));\n      safeInvokeNoArg(() => rendering.render(viewParts, ctx));\n    }\n  }\n  _getViewPartsToRender() {\n    const result = [];\n    let resultLen = 0;\n    for (const viewPart of this._viewParts) {\n      if (viewPart.shouldRender()) {\n        result[resultLen++] = viewPart;\n      }\n    }\n    return result;\n  }\n  _createCoordinatedRendering() {\n    return {\n      prepareRenderText: () => {\n        if (this._shouldRecomputeGlyphMarginLanes) {\n          this._shouldRecomputeGlyphMarginLanes = false;\n          this._context.configuration.setGlyphMarginDecorationLaneCount(this._computeGlyphMarginLaneCount());\n        }\n        inputLatency.onRenderStart();\n      },\n      renderText: () => {\n        if (!this.domNode.domNode.isConnected) {\n          return null;\n        }\n        let viewPartsToRender = this._getViewPartsToRender();\n        if (!this._viewLines.shouldRender() && viewPartsToRender.length === 0) {\n          // Nothing to render\n          return null;\n        }\n        const partialViewportData = this._context.viewLayout.getLinesViewportData();\n        this._context.viewModel.setViewport(partialViewportData.startLineNumber, partialViewportData.endLineNumber, partialViewportData.centeredLineNumber);\n        const viewportData = new ViewportData(this._selections, partialViewportData, this._context.viewLayout.getWhitespaceViewportData(), this._context.viewModel);\n        if (this._contentWidgets.shouldRender()) {\n          // Give the content widgets a chance to set their max width before a possible synchronous layout\n          this._contentWidgets.onBeforeRender(viewportData);\n        }\n        if (this._viewLines.shouldRender()) {\n          this._viewLines.renderText(viewportData);\n          this._viewLines.onDidRender();\n          // Rendering of viewLines might cause scroll events to occur, so collect view parts to render again\n          viewPartsToRender = this._getViewPartsToRender();\n        }\n        return [viewPartsToRender, new RenderingContext(this._context.viewLayout, viewportData, this._viewLines)];\n      },\n      prepareRender: (viewPartsToRender, ctx) => {\n        for (const viewPart of viewPartsToRender) {\n          viewPart.prepareRender(ctx);\n        }\n      },\n      render: (viewPartsToRender, ctx) => {\n        for (const viewPart of viewPartsToRender) {\n          viewPart.render(ctx);\n          viewPart.onDidRender();\n        }\n      }\n    };\n  }\n  // --- BEGIN CodeEditor helpers\n  delegateVerticalScrollbarPointerDown(browserEvent) {\n    this._scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n  }\n  delegateScrollFromMouseWheelEvent(browserEvent) {\n    this._scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n  }\n  restoreState(scrollPosition) {\n    this._context.viewModel.viewLayout.setScrollPosition({\n      scrollTop: scrollPosition.scrollTop,\n      scrollLeft: scrollPosition.scrollLeft\n    }, 1 /* ScrollType.Immediate */);\n    this._context.viewModel.visibleLinesStabilized();\n  }\n  getOffsetForColumn(modelLineNumber, modelColumn) {\n    const modelPosition = this._context.viewModel.model.validatePosition({\n      lineNumber: modelLineNumber,\n      column: modelColumn\n    });\n    const viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n    this._flushAccumulatedAndRenderNow();\n    const visibleRange = this._viewLines.visibleRangeForPosition(new Position(viewPosition.lineNumber, viewPosition.column));\n    if (!visibleRange) {\n      return -1;\n    }\n    return visibleRange.left;\n  }\n  getTargetAtClientPoint(clientX, clientY) {\n    const mouseTarget = this._pointerHandler.getTargetAtClientPoint(clientX, clientY);\n    if (!mouseTarget) {\n      return null;\n    }\n    return ViewUserInputEvents.convertViewToModelMouseTarget(mouseTarget, this._context.viewModel.coordinatesConverter);\n  }\n  createOverviewRuler(cssClassName) {\n    return new OverviewRuler(this._context, cssClassName);\n  }\n  change(callback) {\n    this._viewZones.changeViewZones(callback);\n    this._scheduleRender();\n  }\n  render(now, everything) {\n    if (everything) {\n      // Force everything to render...\n      this._viewLines.forceShouldRender();\n      for (const viewPart of this._viewParts) {\n        viewPart.forceShouldRender();\n      }\n    }\n    if (now) {\n      this._flushAccumulatedAndRenderNow();\n    } else {\n      this._scheduleRender();\n    }\n  }\n  writeScreenReaderContent(reason) {\n    this._textAreaHandler.writeScreenReaderContent(reason);\n  }\n  focus() {\n    this._textAreaHandler.focusTextArea();\n  }\n  isFocused() {\n    return this._textAreaHandler.isFocused();\n  }\n  setAriaOptions(options) {\n    this._textAreaHandler.setAriaOptions(options);\n  }\n  addContentWidget(widgetData) {\n    this._contentWidgets.addWidget(widgetData.widget);\n    this.layoutContentWidget(widgetData);\n    this._scheduleRender();\n  }\n  layoutContentWidget(widgetData) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    this._contentWidgets.setWidgetPosition(widgetData.widget, (_b = (_a = widgetData.position) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : null, (_d = (_c = widgetData.position) === null || _c === void 0 ? void 0 : _c.secondaryPosition) !== null && _d !== void 0 ? _d : null, (_f = (_e = widgetData.position) === null || _e === void 0 ? void 0 : _e.preference) !== null && _f !== void 0 ? _f : null, (_h = (_g = widgetData.position) === null || _g === void 0 ? void 0 : _g.positionAffinity) !== null && _h !== void 0 ? _h : null);\n    this._scheduleRender();\n  }\n  removeContentWidget(widgetData) {\n    this._contentWidgets.removeWidget(widgetData.widget);\n    this._scheduleRender();\n  }\n  addOverlayWidget(widgetData) {\n    this._overlayWidgets.addWidget(widgetData.widget);\n    this.layoutOverlayWidget(widgetData);\n    this._scheduleRender();\n  }\n  layoutOverlayWidget(widgetData) {\n    const newPreference = widgetData.position ? widgetData.position.preference : null;\n    const shouldRender = this._overlayWidgets.setWidgetPosition(widgetData.widget, newPreference);\n    if (shouldRender) {\n      this._scheduleRender();\n    }\n  }\n  removeOverlayWidget(widgetData) {\n    this._overlayWidgets.removeWidget(widgetData.widget);\n    this._scheduleRender();\n  }\n  addGlyphMarginWidget(widgetData) {\n    this._glyphMarginWidgets.addWidget(widgetData.widget);\n    this._shouldRecomputeGlyphMarginLanes = true;\n    this._scheduleRender();\n  }\n  layoutGlyphMarginWidget(widgetData) {\n    const newPreference = widgetData.position;\n    const shouldRender = this._glyphMarginWidgets.setWidgetPosition(widgetData.widget, newPreference);\n    if (shouldRender) {\n      this._shouldRecomputeGlyphMarginLanes = true;\n      this._scheduleRender();\n    }\n  }\n  removeGlyphMarginWidget(widgetData) {\n    this._glyphMarginWidgets.removeWidget(widgetData.widget);\n    this._shouldRecomputeGlyphMarginLanes = true;\n    this._scheduleRender();\n  }\n};\nView = __decorate([__param(6, IInstantiationService)], View);\nexport { View };\nfunction safeInvokeNoArg(func) {\n  try {\n    return func();\n  } catch (e) {\n    onUnexpectedError(e);\n    return null;\n  }\n}\nclass EditorRenderingCoordinator {\n  constructor() {\n    this._coordinatedRenderings = [];\n    this._animationFrameRunners = new Map();\n  }\n  scheduleCoordinatedRendering(rendering) {\n    this._coordinatedRenderings.push(rendering);\n    this._scheduleRender(rendering.window);\n    return {\n      dispose: () => {\n        const renderingIndex = this._coordinatedRenderings.indexOf(rendering);\n        if (renderingIndex === -1) {\n          return;\n        }\n        this._coordinatedRenderings.splice(renderingIndex, 1);\n        if (this._coordinatedRenderings.length === 0) {\n          // There are no more renderings to coordinate => cancel animation frames\n          for (const [_, disposable] of this._animationFrameRunners) {\n            disposable.dispose();\n          }\n          this._animationFrameRunners.clear();\n        }\n      }\n    };\n  }\n  _scheduleRender(window) {\n    if (!this._animationFrameRunners.has(window)) {\n      const runner = () => {\n        this._animationFrameRunners.delete(window);\n        this._onRenderScheduled();\n      };\n      this._animationFrameRunners.set(window, dom.runAtThisOrScheduleAtNextAnimationFrame(window, runner, 100));\n    }\n  }\n  _onRenderScheduled() {\n    const coordinatedRenderings = this._coordinatedRenderings.slice(0);\n    this._coordinatedRenderings = [];\n    for (const rendering of coordinatedRenderings) {\n      safeInvokeNoArg(() => rendering.prepareRenderText());\n    }\n    const datas = [];\n    for (let i = 0, len = coordinatedRenderings.length; i < len; i++) {\n      const rendering = coordinatedRenderings[i];\n      datas[i] = safeInvokeNoArg(() => rendering.renderText());\n    }\n    for (let i = 0, len = coordinatedRenderings.length; i < len; i++) {\n      const rendering = coordinatedRenderings[i];\n      const data = datas[i];\n      if (!data) {\n        continue;\n      }\n      const [viewParts, ctx] = data;\n      safeInvokeNoArg(() => rendering.prepareRender(viewParts, ctx));\n    }\n    for (let i = 0, len = coordinatedRenderings.length; i < len; i++) {\n      const rendering = coordinatedRenderings[i];\n      const data = datas[i];\n      if (!data) {\n        continue;\n      }\n      const [viewParts, ctx] = data;\n      safeInvokeNoArg(() => rendering.render(viewParts, ctx));\n    }\n  }\n}\nEditorRenderingCoordinator.INSTANCE = new EditorRenderingCoordinator();","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","dom","Selection","Range","createFastDomNode","BugIndicatingError","onUnexpectedError","PointerHandler","TextAreaHandler","ViewController","ViewUserInputEvents","ContentViewOverlays","MarginViewOverlays","PartFingerprints","ViewContentWidgets","CurrentLineHighlightOverlay","CurrentLineMarginHighlightOverlay","DecorationsOverlay","EditorScrollbar","IndentGuidesOverlay","LineNumbersOverlay","ViewLines","LinesDecorationsOverlay","Margin","MarginViewLineDecorationsOverlay","Minimap","ViewOverlayWidgets","DecorationsOverviewRuler","OverviewRuler","Rulers","ScrollDecorationViewPart","SelectionsOverlay","ViewCursors","ViewZones","Position","RenderingContext","ViewContext","ViewportData","ViewEventHandler","getThemeTypeSelector","PointerHandlerLastRenderData","BlockDecorations","inputLatency","WhitespaceOverlay","GlyphMarginWidgets","GlyphMarginLane","IInstantiationService","View","constructor","commandDelegate","configuration","colorTheme","model","userInputEvents","overflowWidgetsDomNode","_instantiationService","_shouldRecomputeGlyphMarginLanes","_selections","_renderAnimationFrame","viewController","_context","addEventHandler","_viewParts","_textAreaHandler","createInstance","_createTextAreaHandlerHelper","push","_linesContent","document","createElement","setClassName","setPosition","domNode","_getEditorClassName","setAttribute","_overflowGuardContainer","write","_scrollbar","_viewLines","_viewZones","decorationsOverviewRuler","scrollDecoration","contentViewOverlays","addDynamicOverlay","marginViewOverlays","_glyphMarginWidgets","margin","getDomNode","appendChild","marginDomNode","_contentWidgets","_viewCursors","_overlayWidgets","rulers","blockOutline","minimap","overviewRulerData","getOverviewRulerLayoutInfo","parent","insertBefore","textArea","textAreaCover","overflowingContentWidgetsDomNode","_applyLayout","_pointerHandler","_register","_createPointerHandlerHelper","_computeGlyphMarginLaneCount","viewModel","glyphs","concat","getAllMarginDecorations","map","decoration","_a","_b","lane","options","glyphMargin","position","Left","range","getWidgets","widget","validateRange","preference","sort","a","b","compareRangesUsingStarts","leftDecRange","rightDecRange","compareRangesUsingEnds","Right","endLineNumber","startLineNumber","viewDomNode","linesContentDomNode","viewLinesDomNode","focusTextArea","focus","dispatchTextAreaEvent","event","dispatchEvent","getLastRenderData","lastViewCursorsRenderData","lastTextareaPosition","renderNow","render","shouldSuppressMouseDownOnViewZone","viewZoneId","shouldSuppressMouseDownOnWidget","widgetId","getPositionFromDOMInfo","spanNode","offset","_flushAccumulatedAndRenderNow","visibleRangeForPosition","lineNumber","column","getLineWidth","layoutInfo","get","setWidth","width","setHeight","height","focused","isFocused","theme","type","handleEvents","events","_scheduleRender","onConfigurationChanged","e","onCursorStateChanged","selections","onDecorationsChanged","affectsGlyphMargin","onFocusChanged","onThemeChanged","update","dispose","remove","removeEventHandler","viewPart","_store","isDisposed","rendering","_createCoordinatedRendering","EditorRenderingCoordinator","INSTANCE","scheduleCoordinatedRendering","window","getWindow","prepareRenderText","renderText","prepareRender","viewParts","ctx","safeInvokeNoArg","data","_getViewPartsToRender","result","resultLen","shouldRender","setGlyphMarginDecorationLaneCount","onRenderStart","isConnected","viewPartsToRender","partialViewportData","viewLayout","getLinesViewportData","setViewport","centeredLineNumber","viewportData","getWhitespaceViewportData","onBeforeRender","onDidRender","delegateVerticalScrollbarPointerDown","browserEvent","delegateScrollFromMouseWheelEvent","restoreState","scrollPosition","setScrollPosition","scrollTop","scrollLeft","visibleLinesStabilized","getOffsetForColumn","modelLineNumber","modelColumn","modelPosition","validatePosition","viewPosition","coordinatesConverter","convertModelPositionToViewPosition","visibleRange","left","getTargetAtClientPoint","clientX","clientY","mouseTarget","convertViewToModelMouseTarget","createOverviewRuler","cssClassName","change","callback","changeViewZones","now","everything","forceShouldRender","writeScreenReaderContent","reason","setAriaOptions","addContentWidget","widgetData","addWidget","layoutContentWidget","_c","_d","_e","_f","_g","_h","setWidgetPosition","secondaryPosition","positionAffinity","removeContentWidget","removeWidget","addOverlayWidget","layoutOverlayWidget","newPreference","removeOverlayWidget","addGlyphMarginWidget","layoutGlyphMarginWidget","removeGlyphMarginWidget","func","_coordinatedRenderings","_animationFrameRunners","Map","renderingIndex","indexOf","splice","_","disposable","clear","has","runner","delete","_onRenderScheduled","set","runAtThisOrScheduleAtNextAnimationFrame","coordinatedRenderings","slice","datas","len"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/browser/view.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../base/browser/dom.js';\nimport { Selection } from '../common/core/selection.js';\nimport { Range } from '../common/core/range.js';\nimport { createFastDomNode } from '../../base/browser/fastDomNode.js';\nimport { BugIndicatingError, onUnexpectedError } from '../../base/common/errors.js';\nimport { PointerHandler } from './controller/pointerHandler.js';\nimport { TextAreaHandler } from './controller/textAreaHandler.js';\nimport { ViewController } from './view/viewController.js';\nimport { ViewUserInputEvents } from './view/viewUserInputEvents.js';\nimport { ContentViewOverlays, MarginViewOverlays } from './view/viewOverlays.js';\nimport { PartFingerprints } from './view/viewPart.js';\nimport { ViewContentWidgets } from './viewParts/contentWidgets/contentWidgets.js';\nimport { CurrentLineHighlightOverlay, CurrentLineMarginHighlightOverlay } from './viewParts/currentLineHighlight/currentLineHighlight.js';\nimport { DecorationsOverlay } from './viewParts/decorations/decorations.js';\nimport { EditorScrollbar } from './viewParts/editorScrollbar/editorScrollbar.js';\nimport { IndentGuidesOverlay } from './viewParts/indentGuides/indentGuides.js';\nimport { LineNumbersOverlay } from './viewParts/lineNumbers/lineNumbers.js';\nimport { ViewLines } from './viewParts/lines/viewLines.js';\nimport { LinesDecorationsOverlay } from './viewParts/linesDecorations/linesDecorations.js';\nimport { Margin } from './viewParts/margin/margin.js';\nimport { MarginViewLineDecorationsOverlay } from './viewParts/marginDecorations/marginDecorations.js';\nimport { Minimap } from './viewParts/minimap/minimap.js';\nimport { ViewOverlayWidgets } from './viewParts/overlayWidgets/overlayWidgets.js';\nimport { DecorationsOverviewRuler } from './viewParts/overviewRuler/decorationsOverviewRuler.js';\nimport { OverviewRuler } from './viewParts/overviewRuler/overviewRuler.js';\nimport { Rulers } from './viewParts/rulers/rulers.js';\nimport { ScrollDecorationViewPart } from './viewParts/scrollDecoration/scrollDecoration.js';\nimport { SelectionsOverlay } from './viewParts/selections/selections.js';\nimport { ViewCursors } from './viewParts/viewCursors/viewCursors.js';\nimport { ViewZones } from './viewParts/viewZones/viewZones.js';\nimport { Position } from '../common/core/position.js';\nimport { RenderingContext } from './view/renderingContext.js';\nimport { ViewContext } from '../common/viewModel/viewContext.js';\nimport { ViewportData } from '../common/viewLayout/viewLinesViewportData.js';\nimport { ViewEventHandler } from '../common/viewEventHandler.js';\nimport { getThemeTypeSelector } from '../../platform/theme/common/themeService.js';\nimport { PointerHandlerLastRenderData } from './controller/mouseTarget.js';\nimport { BlockDecorations } from './viewParts/blockDecorations/blockDecorations.js';\nimport { inputLatency } from '../../base/browser/performance.js';\nimport { WhitespaceOverlay } from './viewParts/whitespace/whitespace.js';\nimport { GlyphMarginWidgets } from './viewParts/glyphMargin/glyphMargin.js';\nimport { GlyphMarginLane } from '../common/model.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nlet View = class View extends ViewEventHandler {\n    constructor(commandDelegate, configuration, colorTheme, model, userInputEvents, overflowWidgetsDomNode, _instantiationService) {\n        super();\n        this._instantiationService = _instantiationService;\n        // Actual mutable state\n        this._shouldRecomputeGlyphMarginLanes = false;\n        this._selections = [new Selection(1, 1, 1, 1)];\n        this._renderAnimationFrame = null;\n        const viewController = new ViewController(configuration, model, userInputEvents, commandDelegate);\n        // The view context is passed on to most classes (basically to reduce param. counts in ctors)\n        this._context = new ViewContext(configuration, colorTheme, model);\n        // Ensure the view is the first event handler in order to update the layout\n        this._context.addEventHandler(this);\n        this._viewParts = [];\n        // Keyboard handler\n        this._textAreaHandler = this._instantiationService.createInstance(TextAreaHandler, this._context, viewController, this._createTextAreaHandlerHelper());\n        this._viewParts.push(this._textAreaHandler);\n        // These two dom nodes must be constructed up front, since references are needed in the layout provider (scrolling & co.)\n        this._linesContent = createFastDomNode(document.createElement('div'));\n        this._linesContent.setClassName('lines-content' + ' monaco-editor-background');\n        this._linesContent.setPosition('absolute');\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName(this._getEditorClassName());\n        // Set role 'code' for better screen reader support https://github.com/microsoft/vscode/issues/93438\n        this.domNode.setAttribute('role', 'code');\n        this._overflowGuardContainer = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._overflowGuardContainer, 3 /* PartFingerprint.OverflowGuard */);\n        this._overflowGuardContainer.setClassName('overflow-guard');\n        this._scrollbar = new EditorScrollbar(this._context, this._linesContent, this.domNode, this._overflowGuardContainer);\n        this._viewParts.push(this._scrollbar);\n        // View Lines\n        this._viewLines = new ViewLines(this._context, this._linesContent);\n        // View Zones\n        this._viewZones = new ViewZones(this._context);\n        this._viewParts.push(this._viewZones);\n        // Decorations overview ruler\n        const decorationsOverviewRuler = new DecorationsOverviewRuler(this._context);\n        this._viewParts.push(decorationsOverviewRuler);\n        const scrollDecoration = new ScrollDecorationViewPart(this._context);\n        this._viewParts.push(scrollDecoration);\n        const contentViewOverlays = new ContentViewOverlays(this._context);\n        this._viewParts.push(contentViewOverlays);\n        contentViewOverlays.addDynamicOverlay(new CurrentLineHighlightOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new SelectionsOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new IndentGuidesOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new DecorationsOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new WhitespaceOverlay(this._context));\n        const marginViewOverlays = new MarginViewOverlays(this._context);\n        this._viewParts.push(marginViewOverlays);\n        marginViewOverlays.addDynamicOverlay(new CurrentLineMarginHighlightOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new MarginViewLineDecorationsOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new LinesDecorationsOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new LineNumbersOverlay(this._context));\n        // Glyph margin widgets\n        this._glyphMarginWidgets = new GlyphMarginWidgets(this._context);\n        this._viewParts.push(this._glyphMarginWidgets);\n        const margin = new Margin(this._context);\n        margin.getDomNode().appendChild(this._viewZones.marginDomNode);\n        margin.getDomNode().appendChild(marginViewOverlays.getDomNode());\n        margin.getDomNode().appendChild(this._glyphMarginWidgets.domNode);\n        this._viewParts.push(margin);\n        // Content widgets\n        this._contentWidgets = new ViewContentWidgets(this._context, this.domNode);\n        this._viewParts.push(this._contentWidgets);\n        this._viewCursors = new ViewCursors(this._context);\n        this._viewParts.push(this._viewCursors);\n        // Overlay widgets\n        this._overlayWidgets = new ViewOverlayWidgets(this._context);\n        this._viewParts.push(this._overlayWidgets);\n        const rulers = new Rulers(this._context);\n        this._viewParts.push(rulers);\n        const blockOutline = new BlockDecorations(this._context);\n        this._viewParts.push(blockOutline);\n        const minimap = new Minimap(this._context);\n        this._viewParts.push(minimap);\n        // -------------- Wire dom nodes up\n        if (decorationsOverviewRuler) {\n            const overviewRulerData = this._scrollbar.getOverviewRulerLayoutInfo();\n            overviewRulerData.parent.insertBefore(decorationsOverviewRuler.getDomNode(), overviewRulerData.insertBefore);\n        }\n        this._linesContent.appendChild(contentViewOverlays.getDomNode());\n        this._linesContent.appendChild(rulers.domNode);\n        this._linesContent.appendChild(this._viewZones.domNode);\n        this._linesContent.appendChild(this._viewLines.getDomNode());\n        this._linesContent.appendChild(this._contentWidgets.domNode);\n        this._linesContent.appendChild(this._viewCursors.getDomNode());\n        this._overflowGuardContainer.appendChild(margin.getDomNode());\n        this._overflowGuardContainer.appendChild(this._scrollbar.getDomNode());\n        this._overflowGuardContainer.appendChild(scrollDecoration.getDomNode());\n        this._overflowGuardContainer.appendChild(this._textAreaHandler.textArea);\n        this._overflowGuardContainer.appendChild(this._textAreaHandler.textAreaCover);\n        this._overflowGuardContainer.appendChild(this._overlayWidgets.getDomNode());\n        this._overflowGuardContainer.appendChild(minimap.getDomNode());\n        this._overflowGuardContainer.appendChild(blockOutline.domNode);\n        this.domNode.appendChild(this._overflowGuardContainer);\n        if (overflowWidgetsDomNode) {\n            overflowWidgetsDomNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode.domNode);\n        }\n        else {\n            this.domNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode);\n        }\n        this._applyLayout();\n        // Pointer handler\n        this._pointerHandler = this._register(new PointerHandler(this._context, viewController, this._createPointerHandlerHelper()));\n    }\n    _computeGlyphMarginLaneCount() {\n        const model = this._context.viewModel.model;\n        let glyphs = [];\n        // Add all margin decorations\n        glyphs = glyphs.concat(model.getAllMarginDecorations().map((decoration) => {\n            var _a, _b;\n            const lane = (_b = (_a = decoration.options.glyphMargin) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : GlyphMarginLane.Left;\n            return { range: decoration.range, lane };\n        }));\n        // Add all glyph margin widgets\n        glyphs = glyphs.concat(this._glyphMarginWidgets.getWidgets().map((widget) => {\n            const range = model.validateRange(widget.preference.range);\n            return { range, lane: widget.preference.lane };\n        }));\n        // Sorted by their start position\n        glyphs.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n        let leftDecRange = null;\n        let rightDecRange = null;\n        for (const decoration of glyphs) {\n            if (decoration.lane === GlyphMarginLane.Left && (!leftDecRange || Range.compareRangesUsingEnds(leftDecRange, decoration.range) < 0)) {\n                // assign only if the range of `decoration` ends after, which means it has a higher chance to overlap with the other lane\n                leftDecRange = decoration.range;\n            }\n            if (decoration.lane === GlyphMarginLane.Right && (!rightDecRange || Range.compareRangesUsingEnds(rightDecRange, decoration.range) < 0)) {\n                // assign only if the range of `decoration` ends after, which means it has a higher chance to overlap with the other lane\n                rightDecRange = decoration.range;\n            }\n            if (leftDecRange && rightDecRange) {\n                if (leftDecRange.endLineNumber < rightDecRange.startLineNumber) {\n                    // there's no chance for `leftDecRange` to ever intersect something going further\n                    leftDecRange = null;\n                    continue;\n                }\n                if (rightDecRange.endLineNumber < leftDecRange.startLineNumber) {\n                    // there's no chance for `rightDecRange` to ever intersect something going further\n                    rightDecRange = null;\n                    continue;\n                }\n                // leftDecRange and rightDecRange are intersecting or touching => we need two lanes\n                return 2;\n            }\n        }\n        return 1;\n    }\n    _createPointerHandlerHelper() {\n        return {\n            viewDomNode: this.domNode.domNode,\n            linesContentDomNode: this._linesContent.domNode,\n            viewLinesDomNode: this._viewLines.getDomNode().domNode,\n            focusTextArea: () => {\n                this.focus();\n            },\n            dispatchTextAreaEvent: (event) => {\n                this._textAreaHandler.textArea.domNode.dispatchEvent(event);\n            },\n            getLastRenderData: () => {\n                const lastViewCursorsRenderData = this._viewCursors.getLastRenderData() || [];\n                const lastTextareaPosition = this._textAreaHandler.getLastRenderData();\n                return new PointerHandlerLastRenderData(lastViewCursorsRenderData, lastTextareaPosition);\n            },\n            renderNow: () => {\n                this.render(true, false);\n            },\n            shouldSuppressMouseDownOnViewZone: (viewZoneId) => {\n                return this._viewZones.shouldSuppressMouseDownOnViewZone(viewZoneId);\n            },\n            shouldSuppressMouseDownOnWidget: (widgetId) => {\n                return this._contentWidgets.shouldSuppressMouseDownOnWidget(widgetId);\n            },\n            getPositionFromDOMInfo: (spanNode, offset) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.getPositionFromDOMInfo(spanNode, offset);\n            },\n            visibleRangeForPosition: (lineNumber, column) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.visibleRangeForPosition(new Position(lineNumber, column));\n            },\n            getLineWidth: (lineNumber) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.getLineWidth(lineNumber);\n            }\n        };\n    }\n    _createTextAreaHandlerHelper() {\n        return {\n            visibleRangeForPosition: (position) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.visibleRangeForPosition(position);\n            }\n        };\n    }\n    _applyLayout() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this.domNode.setWidth(layoutInfo.width);\n        this.domNode.setHeight(layoutInfo.height);\n        this._overflowGuardContainer.setWidth(layoutInfo.width);\n        this._overflowGuardContainer.setHeight(layoutInfo.height);\n        this._linesContent.setWidth(1000000);\n        this._linesContent.setHeight(1000000);\n    }\n    _getEditorClassName() {\n        const focused = this._textAreaHandler.isFocused() ? ' focused' : '';\n        return this._context.configuration.options.get(140 /* EditorOption.editorClassName */) + ' ' + getThemeTypeSelector(this._context.theme.type) + focused;\n    }\n    // --- begin event handlers\n    handleEvents(events) {\n        super.handleEvents(events);\n        this._scheduleRender();\n    }\n    onConfigurationChanged(e) {\n        this.domNode.setClassName(this._getEditorClassName());\n        this._applyLayout();\n        return false;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        return false;\n    }\n    onDecorationsChanged(e) {\n        if (e.affectsGlyphMargin) {\n            this._shouldRecomputeGlyphMarginLanes = true;\n        }\n        return false;\n    }\n    onFocusChanged(e) {\n        this.domNode.setClassName(this._getEditorClassName());\n        return false;\n    }\n    onThemeChanged(e) {\n        this._context.theme.update(e.theme);\n        this.domNode.setClassName(this._getEditorClassName());\n        return false;\n    }\n    // --- end event handlers\n    dispose() {\n        if (this._renderAnimationFrame !== null) {\n            this._renderAnimationFrame.dispose();\n            this._renderAnimationFrame = null;\n        }\n        this._contentWidgets.overflowingContentWidgetsDomNode.domNode.remove();\n        this._context.removeEventHandler(this);\n        this._viewLines.dispose();\n        // Destroy view parts\n        for (const viewPart of this._viewParts) {\n            viewPart.dispose();\n        }\n        super.dispose();\n    }\n    _scheduleRender() {\n        if (this._store.isDisposed) {\n            throw new BugIndicatingError();\n        }\n        if (this._renderAnimationFrame === null) {\n            const rendering = this._createCoordinatedRendering();\n            this._renderAnimationFrame = EditorRenderingCoordinator.INSTANCE.scheduleCoordinatedRendering({\n                window: dom.getWindow(this.domNode.domNode),\n                prepareRenderText: () => {\n                    if (this._store.isDisposed) {\n                        throw new BugIndicatingError();\n                    }\n                    try {\n                        return rendering.prepareRenderText();\n                    }\n                    finally {\n                        this._renderAnimationFrame = null;\n                    }\n                },\n                renderText: () => {\n                    if (this._store.isDisposed) {\n                        throw new BugIndicatingError();\n                    }\n                    return rendering.renderText();\n                },\n                prepareRender: (viewParts, ctx) => {\n                    if (this._store.isDisposed) {\n                        throw new BugIndicatingError();\n                    }\n                    return rendering.prepareRender(viewParts, ctx);\n                },\n                render: (viewParts, ctx) => {\n                    if (this._store.isDisposed) {\n                        throw new BugIndicatingError();\n                    }\n                    return rendering.render(viewParts, ctx);\n                }\n            });\n        }\n    }\n    _flushAccumulatedAndRenderNow() {\n        const rendering = this._createCoordinatedRendering();\n        safeInvokeNoArg(() => rendering.prepareRenderText());\n        const data = safeInvokeNoArg(() => rendering.renderText());\n        if (data) {\n            const [viewParts, ctx] = data;\n            safeInvokeNoArg(() => rendering.prepareRender(viewParts, ctx));\n            safeInvokeNoArg(() => rendering.render(viewParts, ctx));\n        }\n    }\n    _getViewPartsToRender() {\n        const result = [];\n        let resultLen = 0;\n        for (const viewPart of this._viewParts) {\n            if (viewPart.shouldRender()) {\n                result[resultLen++] = viewPart;\n            }\n        }\n        return result;\n    }\n    _createCoordinatedRendering() {\n        return {\n            prepareRenderText: () => {\n                if (this._shouldRecomputeGlyphMarginLanes) {\n                    this._shouldRecomputeGlyphMarginLanes = false;\n                    this._context.configuration.setGlyphMarginDecorationLaneCount(this._computeGlyphMarginLaneCount());\n                }\n                inputLatency.onRenderStart();\n            },\n            renderText: () => {\n                if (!this.domNode.domNode.isConnected) {\n                    return null;\n                }\n                let viewPartsToRender = this._getViewPartsToRender();\n                if (!this._viewLines.shouldRender() && viewPartsToRender.length === 0) {\n                    // Nothing to render\n                    return null;\n                }\n                const partialViewportData = this._context.viewLayout.getLinesViewportData();\n                this._context.viewModel.setViewport(partialViewportData.startLineNumber, partialViewportData.endLineNumber, partialViewportData.centeredLineNumber);\n                const viewportData = new ViewportData(this._selections, partialViewportData, this._context.viewLayout.getWhitespaceViewportData(), this._context.viewModel);\n                if (this._contentWidgets.shouldRender()) {\n                    // Give the content widgets a chance to set their max width before a possible synchronous layout\n                    this._contentWidgets.onBeforeRender(viewportData);\n                }\n                if (this._viewLines.shouldRender()) {\n                    this._viewLines.renderText(viewportData);\n                    this._viewLines.onDidRender();\n                    // Rendering of viewLines might cause scroll events to occur, so collect view parts to render again\n                    viewPartsToRender = this._getViewPartsToRender();\n                }\n                return [viewPartsToRender, new RenderingContext(this._context.viewLayout, viewportData, this._viewLines)];\n            },\n            prepareRender: (viewPartsToRender, ctx) => {\n                for (const viewPart of viewPartsToRender) {\n                    viewPart.prepareRender(ctx);\n                }\n            },\n            render: (viewPartsToRender, ctx) => {\n                for (const viewPart of viewPartsToRender) {\n                    viewPart.render(ctx);\n                    viewPart.onDidRender();\n                }\n            }\n        };\n    }\n    // --- BEGIN CodeEditor helpers\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        this._scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        this._scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n    }\n    restoreState(scrollPosition) {\n        this._context.viewModel.viewLayout.setScrollPosition({\n            scrollTop: scrollPosition.scrollTop,\n            scrollLeft: scrollPosition.scrollLeft\n        }, 1 /* ScrollType.Immediate */);\n        this._context.viewModel.visibleLinesStabilized();\n    }\n    getOffsetForColumn(modelLineNumber, modelColumn) {\n        const modelPosition = this._context.viewModel.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        this._flushAccumulatedAndRenderNow();\n        const visibleRange = this._viewLines.visibleRangeForPosition(new Position(viewPosition.lineNumber, viewPosition.column));\n        if (!visibleRange) {\n            return -1;\n        }\n        return visibleRange.left;\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        const mouseTarget = this._pointerHandler.getTargetAtClientPoint(clientX, clientY);\n        if (!mouseTarget) {\n            return null;\n        }\n        return ViewUserInputEvents.convertViewToModelMouseTarget(mouseTarget, this._context.viewModel.coordinatesConverter);\n    }\n    createOverviewRuler(cssClassName) {\n        return new OverviewRuler(this._context, cssClassName);\n    }\n    change(callback) {\n        this._viewZones.changeViewZones(callback);\n        this._scheduleRender();\n    }\n    render(now, everything) {\n        if (everything) {\n            // Force everything to render...\n            this._viewLines.forceShouldRender();\n            for (const viewPart of this._viewParts) {\n                viewPart.forceShouldRender();\n            }\n        }\n        if (now) {\n            this._flushAccumulatedAndRenderNow();\n        }\n        else {\n            this._scheduleRender();\n        }\n    }\n    writeScreenReaderContent(reason) {\n        this._textAreaHandler.writeScreenReaderContent(reason);\n    }\n    focus() {\n        this._textAreaHandler.focusTextArea();\n    }\n    isFocused() {\n        return this._textAreaHandler.isFocused();\n    }\n    setAriaOptions(options) {\n        this._textAreaHandler.setAriaOptions(options);\n    }\n    addContentWidget(widgetData) {\n        this._contentWidgets.addWidget(widgetData.widget);\n        this.layoutContentWidget(widgetData);\n        this._scheduleRender();\n    }\n    layoutContentWidget(widgetData) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this._contentWidgets.setWidgetPosition(widgetData.widget, (_b = (_a = widgetData.position) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : null, (_d = (_c = widgetData.position) === null || _c === void 0 ? void 0 : _c.secondaryPosition) !== null && _d !== void 0 ? _d : null, (_f = (_e = widgetData.position) === null || _e === void 0 ? void 0 : _e.preference) !== null && _f !== void 0 ? _f : null, (_h = (_g = widgetData.position) === null || _g === void 0 ? void 0 : _g.positionAffinity) !== null && _h !== void 0 ? _h : null);\n        this._scheduleRender();\n    }\n    removeContentWidget(widgetData) {\n        this._contentWidgets.removeWidget(widgetData.widget);\n        this._scheduleRender();\n    }\n    addOverlayWidget(widgetData) {\n        this._overlayWidgets.addWidget(widgetData.widget);\n        this.layoutOverlayWidget(widgetData);\n        this._scheduleRender();\n    }\n    layoutOverlayWidget(widgetData) {\n        const newPreference = widgetData.position ? widgetData.position.preference : null;\n        const shouldRender = this._overlayWidgets.setWidgetPosition(widgetData.widget, newPreference);\n        if (shouldRender) {\n            this._scheduleRender();\n        }\n    }\n    removeOverlayWidget(widgetData) {\n        this._overlayWidgets.removeWidget(widgetData.widget);\n        this._scheduleRender();\n    }\n    addGlyphMarginWidget(widgetData) {\n        this._glyphMarginWidgets.addWidget(widgetData.widget);\n        this._shouldRecomputeGlyphMarginLanes = true;\n        this._scheduleRender();\n    }\n    layoutGlyphMarginWidget(widgetData) {\n        const newPreference = widgetData.position;\n        const shouldRender = this._glyphMarginWidgets.setWidgetPosition(widgetData.widget, newPreference);\n        if (shouldRender) {\n            this._shouldRecomputeGlyphMarginLanes = true;\n            this._scheduleRender();\n        }\n    }\n    removeGlyphMarginWidget(widgetData) {\n        this._glyphMarginWidgets.removeWidget(widgetData.widget);\n        this._shouldRecomputeGlyphMarginLanes = true;\n        this._scheduleRender();\n    }\n};\nView = __decorate([\n    __param(6, IInstantiationService)\n], View);\nexport { View };\nfunction safeInvokeNoArg(func) {\n    try {\n        return func();\n    }\n    catch (e) {\n        onUnexpectedError(e);\n        return null;\n    }\n}\nclass EditorRenderingCoordinator {\n    constructor() {\n        this._coordinatedRenderings = [];\n        this._animationFrameRunners = new Map();\n    }\n    scheduleCoordinatedRendering(rendering) {\n        this._coordinatedRenderings.push(rendering);\n        this._scheduleRender(rendering.window);\n        return {\n            dispose: () => {\n                const renderingIndex = this._coordinatedRenderings.indexOf(rendering);\n                if (renderingIndex === -1) {\n                    return;\n                }\n                this._coordinatedRenderings.splice(renderingIndex, 1);\n                if (this._coordinatedRenderings.length === 0) {\n                    // There are no more renderings to coordinate => cancel animation frames\n                    for (const [_, disposable] of this._animationFrameRunners) {\n                        disposable.dispose();\n                    }\n                    this._animationFrameRunners.clear();\n                }\n            }\n        };\n    }\n    _scheduleRender(window) {\n        if (!this._animationFrameRunners.has(window)) {\n            const runner = () => {\n                this._animationFrameRunners.delete(window);\n                this._onRenderScheduled();\n            };\n            this._animationFrameRunners.set(window, dom.runAtThisOrScheduleAtNextAnimationFrame(window, runner, 100));\n        }\n    }\n    _onRenderScheduled() {\n        const coordinatedRenderings = this._coordinatedRenderings.slice(0);\n        this._coordinatedRenderings = [];\n        for (const rendering of coordinatedRenderings) {\n            safeInvokeNoArg(() => rendering.prepareRenderText());\n        }\n        const datas = [];\n        for (let i = 0, len = coordinatedRenderings.length; i < len; i++) {\n            const rendering = coordinatedRenderings[i];\n            datas[i] = safeInvokeNoArg(() => rendering.renderText());\n        }\n        for (let i = 0, len = coordinatedRenderings.length; i < len; i++) {\n            const rendering = coordinatedRenderings[i];\n            const data = datas[i];\n            if (!data) {\n                continue;\n            }\n            const [viewParts, ctx] = data;\n            safeInvokeNoArg(() => rendering.prepareRender(viewParts, ctx));\n        }\n        for (let i = 0, len = coordinatedRenderings.length; i < len; i++) {\n            const rendering = coordinatedRenderings[i];\n            const data = datas[i];\n            if (!data) {\n                continue;\n            }\n            const [viewParts, ctx] = data;\n            safeInvokeNoArg(() => rendering.render(viewParts, ctx));\n        }\n    }\n}\nEditorRenderingCoordinator.INSTANCE = new EditorRenderingCoordinator();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}