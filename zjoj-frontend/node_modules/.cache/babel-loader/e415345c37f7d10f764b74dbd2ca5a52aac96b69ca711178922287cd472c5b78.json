{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './scrollDecoration.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class ScrollDecorationViewPart extends ViewPart {\n  constructor(context) {\n    super(context);\n    this._scrollTop = 0;\n    this._width = 0;\n    this._updateWidth();\n    this._shouldShow = false;\n    const options = this._context.configuration.options;\n    const scrollbar = options.get(102 /* EditorOption.scrollbar */);\n    this._useShadows = scrollbar.useShadows;\n    this._domNode = createFastDomNode(document.createElement('div'));\n    this._domNode.setAttribute('role', 'presentation');\n    this._domNode.setAttribute('aria-hidden', 'true');\n  }\n  dispose() {\n    super.dispose();\n  }\n  _updateShouldShow() {\n    const newShouldShow = this._useShadows && this._scrollTop > 0;\n    if (this._shouldShow !== newShouldShow) {\n      this._shouldShow = newShouldShow;\n      return true;\n    }\n    return false;\n  }\n  getDomNode() {\n    return this._domNode;\n  }\n  _updateWidth() {\n    const options = this._context.configuration.options;\n    const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n    if (layoutInfo.minimap.renderMinimap === 0 || layoutInfo.minimap.minimapWidth > 0 && layoutInfo.minimap.minimapLeft === 0) {\n      this._width = layoutInfo.width;\n    } else {\n      this._width = layoutInfo.width - layoutInfo.verticalScrollbarWidth;\n    }\n  }\n  // --- begin event handlers\n  onConfigurationChanged(e) {\n    const options = this._context.configuration.options;\n    const scrollbar = options.get(102 /* EditorOption.scrollbar */);\n    this._useShadows = scrollbar.useShadows;\n    this._updateWidth();\n    this._updateShouldShow();\n    return true;\n  }\n  onScrollChanged(e) {\n    this._scrollTop = e.scrollTop;\n    return this._updateShouldShow();\n  }\n  // --- end event handlers\n  prepareRender(ctx) {\n    // Nothing to read\n  }\n  render(ctx) {\n    this._domNode.setWidth(this._width);\n    this._domNode.setClassName(this._shouldShow ? 'scroll-decoration' : '');\n  }\n}","map":{"version":3,"names":["createFastDomNode","ViewPart","ScrollDecorationViewPart","constructor","context","_scrollTop","_width","_updateWidth","_shouldShow","options","_context","configuration","scrollbar","get","_useShadows","useShadows","_domNode","document","createElement","setAttribute","dispose","_updateShouldShow","newShouldShow","getDomNode","layoutInfo","minimap","renderMinimap","minimapWidth","minimapLeft","width","verticalScrollbarWidth","onConfigurationChanged","e","onScrollChanged","scrollTop","prepareRender","ctx","render","setWidth","setClassName"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/scrollDecoration/scrollDecoration.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './scrollDecoration.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class ScrollDecorationViewPart extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._scrollTop = 0;\n        this._width = 0;\n        this._updateWidth();\n        this._shouldShow = false;\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(102 /* EditorOption.scrollbar */);\n        this._useShadows = scrollbar.useShadows;\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n    }\n    dispose() {\n        super.dispose();\n    }\n    _updateShouldShow() {\n        const newShouldShow = (this._useShadows && this._scrollTop > 0);\n        if (this._shouldShow !== newShouldShow) {\n            this._shouldShow = newShouldShow;\n            return true;\n        }\n        return false;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    _updateWidth() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        if (layoutInfo.minimap.renderMinimap === 0 || (layoutInfo.minimap.minimapWidth > 0 && layoutInfo.minimap.minimapLeft === 0)) {\n            this._width = layoutInfo.width;\n        }\n        else {\n            this._width = layoutInfo.width - layoutInfo.verticalScrollbarWidth;\n        }\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(102 /* EditorOption.scrollbar */);\n        this._useShadows = scrollbar.useShadows;\n        this._updateWidth();\n        this._updateShouldShow();\n        return true;\n    }\n    onScrollChanged(e) {\n        this._scrollTop = e.scrollTop;\n        return this._updateShouldShow();\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        this._domNode.setWidth(this._width);\n        this._domNode.setClassName(this._shouldShow ? 'scroll-decoration' : '');\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}