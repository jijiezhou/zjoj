{"ast":null,"code":"import \"core-js/modules/es.regexp.flags.js\";\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.45.0(5e5af013f8d295555a7210df0d5f2cea0bf5dd56)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/basic-languages/freemarker2/freemarker2.ts\nvar EMPTY_ELEMENTS = [\"assign\", \"flush\", \"ftl\", \"return\", \"global\", \"import\", \"include\", \"break\", \"continue\", \"local\", \"nested\", \"nt\", \"setting\", \"stop\", \"t\", \"lt\", \"rt\", \"fallback\"];\nvar BLOCK_ELEMENTS = [\"attempt\", \"autoesc\", \"autoEsc\", \"compress\", \"comment\", \"escape\", \"noescape\", \"function\", \"if\", \"list\", \"items\", \"sep\", \"macro\", \"noparse\", \"noParse\", \"noautoesc\", \"noAutoEsc\", \"outputformat\", \"switch\", \"visit\", \"recurse\"];\nvar TagSyntaxAngle = {\n  close: \">\",\n  id: \"angle\",\n  open: \"<\"\n};\nvar TagSyntaxBracket = {\n  close: \"\\\\]\",\n  id: \"bracket\",\n  open: \"\\\\[\"\n};\nvar TagSyntaxAuto = {\n  close: \"[>\\\\]]\",\n  id: \"auto\",\n  open: \"[<\\\\[]\"\n};\nvar InterpolationSyntaxDollar = {\n  close: \"\\\\}\",\n  id: \"dollar\",\n  open1: \"\\\\$\",\n  open2: \"\\\\{\"\n};\nvar InterpolationSyntaxBracket = {\n  close: \"\\\\]\",\n  id: \"bracket\",\n  open1: \"\\\\[\",\n  open2: \"=\"\n};\nfunction createLangConfiguration(ts) {\n  return {\n    brackets: [[\"<\", \">\"], [\"[\", \"]\"], [\"(\", \")\"], [\"{\", \"}\"]],\n    comments: {\n      blockComment: [`${ts.open}--`, `--${ts.close}`]\n    },\n    autoCloseBefore: \"\\n\\r\t }]),.:;=\",\n    autoClosingPairs: [{\n      open: \"{\",\n      close: \"}\"\n    }, {\n      open: \"[\",\n      close: \"]\"\n    }, {\n      open: \"(\",\n      close: \")\"\n    }, {\n      open: '\"',\n      close: '\"',\n      notIn: [\"string\"]\n    }, {\n      open: \"'\",\n      close: \"'\",\n      notIn: [\"string\"]\n    }],\n    surroundingPairs: [{\n      open: '\"',\n      close: '\"'\n    }, {\n      open: \"'\",\n      close: \"'\"\n    }, {\n      open: \"{\",\n      close: \"}\"\n    }, {\n      open: \"[\",\n      close: \"]\"\n    }, {\n      open: \"(\",\n      close: \")\"\n    }, {\n      open: \"<\",\n      close: \">\"\n    }],\n    folding: {\n      markers: {\n        start: new RegExp(`${ts.open}#(?:${BLOCK_ELEMENTS.join(\"|\")})([^/${ts.close}]*(?!/)${ts.close})[^${ts.open}]*$`),\n        end: new RegExp(`${ts.open}/#(?:${BLOCK_ELEMENTS.join(\"|\")})[\\\\r\\\\n\\\\t ]*>`)\n      }\n    },\n    onEnterRules: [{\n      beforeText: new RegExp(`${ts.open}#(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([a-zA-Z_]+)([^/${ts.close}]*(?!/)${ts.close})[^${ts.open}]*$`),\n      afterText: new RegExp(`^${ts.open}/#([a-zA-Z_]+)[\\\\r\\\\n\\\\t ]*${ts.close}$`),\n      action: {\n        indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n      }\n    }, {\n      beforeText: new RegExp(`${ts.open}#(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([a-zA-Z_]+)([^/${ts.close}]*(?!/)${ts.close})[^${ts.open}]*$`),\n      action: {\n        indentAction: monaco_editor_core_exports.languages.IndentAction.Indent\n      }\n    }]\n  };\n}\nfunction createLangConfigurationAuto() {\n  return {\n    brackets: [[\"<\", \">\"], [\"[\", \"]\"], [\"(\", \")\"], [\"{\", \"}\"]],\n    autoCloseBefore: \"\\n\\r\t }]),.:;=\",\n    autoClosingPairs: [{\n      open: \"{\",\n      close: \"}\"\n    }, {\n      open: \"[\",\n      close: \"]\"\n    }, {\n      open: \"(\",\n      close: \")\"\n    }, {\n      open: '\"',\n      close: '\"',\n      notIn: [\"string\"]\n    }, {\n      open: \"'\",\n      close: \"'\",\n      notIn: [\"string\"]\n    }],\n    surroundingPairs: [{\n      open: '\"',\n      close: '\"'\n    }, {\n      open: \"'\",\n      close: \"'\"\n    }, {\n      open: \"{\",\n      close: \"}\"\n    }, {\n      open: \"[\",\n      close: \"]\"\n    }, {\n      open: \"(\",\n      close: \")\"\n    }, {\n      open: \"<\",\n      close: \">\"\n    }],\n    folding: {\n      markers: {\n        start: new RegExp(`[<\\\\[]#(?:${BLOCK_ELEMENTS.join(\"|\")})([^/>\\\\]]*(?!/)[>\\\\]])[^<\\\\[]*$`),\n        end: new RegExp(`[<\\\\[]/#(?:${BLOCK_ELEMENTS.join(\"|\")})[\\\\r\\\\n\\\\t ]*>`)\n      }\n    },\n    onEnterRules: [{\n      beforeText: new RegExp(`[<\\\\[]#(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([a-zA-Z_]+)([^/>\\\\]]*(?!/)[>\\\\]])[^[<\\\\[]]*$`),\n      afterText: new RegExp(`^[<\\\\[]/#([a-zA-Z_]+)[\\\\r\\\\n\\\\t ]*[>\\\\]]$`),\n      action: {\n        indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n      }\n    }, {\n      beforeText: new RegExp(`[<\\\\[]#(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([a-zA-Z_]+)([^/>\\\\]]*(?!/)[>\\\\]])[^[<\\\\[]]*$`),\n      action: {\n        indentAction: monaco_editor_core_exports.languages.IndentAction.Indent\n      }\n    }]\n  };\n}\nfunction createMonarchLanguage(ts, is) {\n  const id = `_${ts.id}_${is.id}`;\n  const s = name => name.replace(/__id__/g, id);\n  const r = regexp => {\n    const source = regexp.source.replace(/__id__/g, id);\n    return new RegExp(source, regexp.flags);\n  };\n  return {\n    unicode: true,\n    includeLF: false,\n    start: s(\"default__id__\"),\n    ignoreCase: false,\n    defaultToken: \"invalid\",\n    tokenPostfix: `.freemarker2`,\n    brackets: [{\n      open: \"{\",\n      close: \"}\",\n      token: \"delimiter.curly\"\n    }, {\n      open: \"[\",\n      close: \"]\",\n      token: \"delimiter.square\"\n    }, {\n      open: \"(\",\n      close: \")\",\n      token: \"delimiter.parenthesis\"\n    }, {\n      open: \"<\",\n      close: \">\",\n      token: \"delimiter.angle\"\n    }],\n    [s(\"open__id__\")]: new RegExp(ts.open),\n    [s(\"close__id__\")]: new RegExp(ts.close),\n    [s(\"iOpen1__id__\")]: new RegExp(is.open1),\n    [s(\"iOpen2__id__\")]: new RegExp(is.open2),\n    [s(\"iClose__id__\")]: new RegExp(is.close),\n    [s(\"startTag__id__\")]: r(/(@open__id__)(#)/),\n    [s(\"endTag__id__\")]: r(/(@open__id__)(\\/#)/),\n    [s(\"startOrEndTag__id__\")]: r(/(@open__id__)(\\/?#)/),\n    [s(\"closeTag1__id__\")]: r(/((?:@blank)*)(@close__id__)/),\n    [s(\"closeTag2__id__\")]: r(/((?:@blank)*\\/?)(@close__id__)/),\n    blank: /[ \\t\\n\\r]/,\n    keywords: [\"false\", \"true\", \"in\", \"as\", \"using\"],\n    directiveStartCloseTag1: /attempt|recover|sep|auto[eE]sc|no(?:autoe|AutoE)sc|compress|default|no[eE]scape|comment|no[pP]arse/,\n    directiveStartCloseTag2: /else|break|continue|return|stop|flush|t|lt|rt|nt|nested|recurse|fallback|ftl/,\n    directiveStartBlank: /if|else[iI]f|list|for[eE]ach|switch|case|assign|global|local|include|import|function|macro|transform|visit|stop|return|call|setting|output[fF]ormat|nested|recurse|escape|ftl|items/,\n    directiveEndCloseTag1: /if|list|items|sep|recover|attempt|for[eE]ach|local|global|assign|function|macro|output[fF]ormat|auto[eE]sc|no(?:autoe|AutoE)sc|compress|transform|switch|escape|no[eE]scape/,\n    escapedChar: /\\\\(?:[ntrfbgla\\\\'\"\\{=]|(?:x[0-9A-Fa-f]{1,4}))/,\n    asciiDigit: /[0-9]/,\n    integer: /[0-9]+/,\n    nonEscapedIdStartChar: /[\\$@-Z_a-z\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u1FFF\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183-\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3006\\u3031-\\u3035\\u303B-\\u303C\\u3040-\\u318F\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3300-\\u337F\\u3400-\\u4DB5\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5-\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40-\\uFB41\\uFB43-\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n    escapedIdChar: /\\\\[\\-\\.:#]/,\n    idStartChar: /(?:@nonEscapedIdStartChar)|(?:@escapedIdChar)/,\n    id: /(?:@idStartChar)(?:(?:@idStartChar)|(?:@asciiDigit))*/,\n    specialHashKeys: /\\*\\*|\\*|false|true|in|as|using/,\n    namedSymbols: /&lt;=|&gt;=|\\\\lte|\\\\lt|&lt;|\\\\gte|\\\\gt|&gt;|&amp;&amp;|\\\\and|-&gt;|->|==|!=|\\+=|-=|\\*=|\\/=|%=|\\+\\+|--|<=|&&|\\|\\||:|\\.\\.\\.|\\.\\.\\*|\\.\\.<|\\.\\.!|\\?\\?|=|<|\\+|-|\\*|\\/|%|\\||\\.\\.|\\?|!|&|\\.|,|;/,\n    arrows: [\"->\", \"-&gt;\"],\n    delimiters: [\";\", \":\", \",\", \".\"],\n    stringOperators: [\"lte\", \"lt\", \"gte\", \"gt\"],\n    noParseTags: [\"noparse\", \"noParse\", \"comment\"],\n    tokenizer: {\n      [s(\"default__id__\")]: [{\n        include: s(\"@directive_token__id__\")\n      }, {\n        include: s(\"@interpolation_and_text_token__id__\")\n      }],\n      [s(\"fmExpression__id__.directive\")]: [{\n        include: s(\"@blank_and_expression_comment_token__id__\")\n      }, {\n        include: s(\"@directive_end_token__id__\")\n      }, {\n        include: s(\"@expression_token__id__\")\n      }],\n      [s(\"fmExpression__id__.interpolation\")]: [{\n        include: s(\"@blank_and_expression_comment_token__id__\")\n      }, {\n        include: s(\"@expression_token__id__\")\n      }, {\n        include: s(\"@greater_operators_token__id__\")\n      }],\n      [s(\"inParen__id__.plain\")]: [{\n        include: s(\"@blank_and_expression_comment_token__id__\")\n      }, {\n        include: s(\"@directive_end_token__id__\")\n      }, {\n        include: s(\"@expression_token__id__\")\n      }],\n      [s(\"inParen__id__.gt\")]: [{\n        include: s(\"@blank_and_expression_comment_token__id__\")\n      }, {\n        include: s(\"@expression_token__id__\")\n      }, {\n        include: s(\"@greater_operators_token__id__\")\n      }],\n      [s(\"noSpaceExpression__id__\")]: [{\n        include: s(\"@no_space_expression_end_token__id__\")\n      }, {\n        include: s(\"@directive_end_token__id__\")\n      }, {\n        include: s(\"@expression_token__id__\")\n      }],\n      [s(\"unifiedCall__id__\")]: [{\n        include: s(\"@unified_call_token__id__\")\n      }],\n      [s(\"singleString__id__\")]: [{\n        include: s(\"@string_single_token__id__\")\n      }],\n      [s(\"doubleString__id__\")]: [{\n        include: s(\"@string_double_token__id__\")\n      }],\n      [s(\"rawSingleString__id__\")]: [{\n        include: s(\"@string_single_raw_token__id__\")\n      }],\n      [s(\"rawDoubleString__id__\")]: [{\n        include: s(\"@string_double_raw_token__id__\")\n      }],\n      [s(\"expressionComment__id__\")]: [{\n        include: s(\"@expression_comment_token__id__\")\n      }],\n      [s(\"noParse__id__\")]: [{\n        include: s(\"@no_parse_token__id__\")\n      }],\n      [s(\"terseComment__id__\")]: [{\n        include: s(\"@terse_comment_token__id__\")\n      }],\n      [s(\"directive_token__id__\")]: [[r(/(?:@startTag__id__)(@directiveStartCloseTag1)(?:@closeTag1__id__)/), ts.id === \"auto\" ? {\n        cases: {\n          \"$1==<\": {\n            token: \"@rematch\",\n            switchTo: `@default_angle_${is.id}`\n          },\n          \"$1==[\": {\n            token: \"@rematch\",\n            switchTo: `@default_bracket_${is.id}`\n          }\n        }\n      } : [{\n        token: \"@brackets.directive\"\n      }, {\n        token: \"delimiter.directive\"\n      }, {\n        cases: {\n          \"@noParseTags\": {\n            token: \"tag\",\n            next: s(\"@noParse__id__.$3\")\n          },\n          \"@default\": {\n            token: \"tag\"\n          }\n        }\n      }, {\n        token: \"delimiter.directive\"\n      }, {\n        token: \"@brackets.directive\"\n      }]], [r(/(?:@startTag__id__)(@directiveStartCloseTag2)(?:@closeTag2__id__)/), ts.id === \"auto\" ? {\n        cases: {\n          \"$1==<\": {\n            token: \"@rematch\",\n            switchTo: `@default_angle_${is.id}`\n          },\n          \"$1==[\": {\n            token: \"@rematch\",\n            switchTo: `@default_bracket_${is.id}`\n          }\n        }\n      } : [{\n        token: \"@brackets.directive\"\n      }, {\n        token: \"delimiter.directive\"\n      }, {\n        token: \"tag\"\n      }, {\n        token: \"delimiter.directive\"\n      }, {\n        token: \"@brackets.directive\"\n      }]], [r(/(?:@startTag__id__)(@directiveStartBlank)(@blank)/), ts.id === \"auto\" ? {\n        cases: {\n          \"$1==<\": {\n            token: \"@rematch\",\n            switchTo: `@default_angle_${is.id}`\n          },\n          \"$1==[\": {\n            token: \"@rematch\",\n            switchTo: `@default_bracket_${is.id}`\n          }\n        }\n      } : [{\n        token: \"@brackets.directive\"\n      }, {\n        token: \"delimiter.directive\"\n      }, {\n        token: \"tag\"\n      }, {\n        token: \"\",\n        next: s(\"@fmExpression__id__.directive\")\n      }]], [r(/(?:@endTag__id__)(@directiveEndCloseTag1)(?:@closeTag1__id__)/), ts.id === \"auto\" ? {\n        cases: {\n          \"$1==<\": {\n            token: \"@rematch\",\n            switchTo: `@default_angle_${is.id}`\n          },\n          \"$1==[\": {\n            token: \"@rematch\",\n            switchTo: `@default_bracket_${is.id}`\n          }\n        }\n      } : [{\n        token: \"@brackets.directive\"\n      }, {\n        token: \"delimiter.directive\"\n      }, {\n        token: \"tag\"\n      }, {\n        token: \"delimiter.directive\"\n      }, {\n        token: \"@brackets.directive\"\n      }]], [r(/(@open__id__)(@)/), ts.id === \"auto\" ? {\n        cases: {\n          \"$1==<\": {\n            token: \"@rematch\",\n            switchTo: `@default_angle_${is.id}`\n          },\n          \"$1==[\": {\n            token: \"@rematch\",\n            switchTo: `@default_bracket_${is.id}`\n          }\n        }\n      } : [{\n        token: \"@brackets.directive\"\n      }, {\n        token: \"delimiter.directive\",\n        next: s(\"@unifiedCall__id__\")\n      }]], [r(/(@open__id__)(\\/@)((?:(?:@id)(?:\\.(?:@id))*)?)(?:@closeTag1__id__)/), [{\n        token: \"@brackets.directive\"\n      }, {\n        token: \"delimiter.directive\"\n      }, {\n        token: \"tag\"\n      }, {\n        token: \"delimiter.directive\"\n      }, {\n        token: \"@brackets.directive\"\n      }]], [r(/(@open__id__)#--/), ts.id === \"auto\" ? {\n        cases: {\n          \"$1==<\": {\n            token: \"@rematch\",\n            switchTo: `@default_angle_${is.id}`\n          },\n          \"$1==[\": {\n            token: \"@rematch\",\n            switchTo: `@default_bracket_${is.id}`\n          }\n        }\n      } : {\n        token: \"comment\",\n        next: s(\"@terseComment__id__\")\n      }], [r(/(?:@startOrEndTag__id__)([a-zA-Z_]+)/), ts.id === \"auto\" ? {\n        cases: {\n          \"$1==<\": {\n            token: \"@rematch\",\n            switchTo: `@default_angle_${is.id}`\n          },\n          \"$1==[\": {\n            token: \"@rematch\",\n            switchTo: `@default_bracket_${is.id}`\n          }\n        }\n      } : [{\n        token: \"@brackets.directive\"\n      }, {\n        token: \"delimiter.directive\"\n      }, {\n        token: \"tag.invalid\",\n        next: s(\"@fmExpression__id__.directive\")\n      }]]],\n      [s(\"interpolation_and_text_token__id__\")]: [[r(/(@iOpen1__id__)(@iOpen2__id__)/), [{\n        token: is.id === \"bracket\" ? \"@brackets.interpolation\" : \"delimiter.interpolation\"\n      }, {\n        token: is.id === \"bracket\" ? \"delimiter.interpolation\" : \"@brackets.interpolation\",\n        next: s(\"@fmExpression__id__.interpolation\")\n      }]], [/[\\$#<\\[\\{]|(?:@blank)+|[^\\$<#\\[\\{\\n\\r\\t ]+/, {\n        token: \"source\"\n      }]],\n      [s(\"string_single_token__id__\")]: [[/[^'\\\\]/, {\n        token: \"string\"\n      }], [/@escapedChar/, {\n        token: \"string.escape\"\n      }], [/'/, {\n        token: \"string\",\n        next: \"@pop\"\n      }]],\n      [s(\"string_double_token__id__\")]: [[/[^\"\\\\]/, {\n        token: \"string\"\n      }], [/@escapedChar/, {\n        token: \"string.escape\"\n      }], [/\"/, {\n        token: \"string\",\n        next: \"@pop\"\n      }]],\n      [s(\"string_single_raw_token__id__\")]: [[/[^']+/, {\n        token: \"string.raw\"\n      }], [/'/, {\n        token: \"string.raw\",\n        next: \"@pop\"\n      }]],\n      [s(\"string_double_raw_token__id__\")]: [[/[^\"]+/, {\n        token: \"string.raw\"\n      }], [/\"/, {\n        token: \"string.raw\",\n        next: \"@pop\"\n      }]],\n      [s(\"expression_token__id__\")]: [[/(r?)(['\"])/, {\n        cases: {\n          \"r'\": [{\n            token: \"keyword\"\n          }, {\n            token: \"string.raw\",\n            next: s(\"@rawSingleString__id__\")\n          }],\n          'r\"': [{\n            token: \"keyword\"\n          }, {\n            token: \"string.raw\",\n            next: s(\"@rawDoubleString__id__\")\n          }],\n          \"'\": [{\n            token: \"source\"\n          }, {\n            token: \"string\",\n            next: s(\"@singleString__id__\")\n          }],\n          '\"': [{\n            token: \"source\"\n          }, {\n            token: \"string\",\n            next: s(\"@doubleString__id__\")\n          }]\n        }\n      }], [/(?:@integer)(?:\\.(?:@integer))?/, {\n        cases: {\n          \"(?:@integer)\": {\n            token: \"number\"\n          },\n          \"@default\": {\n            token: \"number.float\"\n          }\n        }\n      }], [/(\\.)(@blank*)(@specialHashKeys)/, [{\n        token: \"delimiter\"\n      }, {\n        token: \"\"\n      }, {\n        token: \"identifier\"\n      }]], [/(?:@namedSymbols)/, {\n        cases: {\n          \"@arrows\": {\n            token: \"meta.arrow\"\n          },\n          \"@delimiters\": {\n            token: \"delimiter\"\n          },\n          \"@default\": {\n            token: \"operators\"\n          }\n        }\n      }], [/@id/, {\n        cases: {\n          \"@keywords\": {\n            token: \"keyword.$0\"\n          },\n          \"@stringOperators\": {\n            token: \"operators\"\n          },\n          \"@default\": {\n            token: \"identifier\"\n          }\n        }\n      }], [/[\\[\\]\\(\\)\\{\\}]/, {\n        cases: {\n          \"\\\\[\": {\n            cases: {\n              \"$S2==gt\": {\n                token: \"@brackets\",\n                next: s(\"@inParen__id__.gt\")\n              },\n              \"@default\": {\n                token: \"@brackets\",\n                next: s(\"@inParen__id__.plain\")\n              }\n            }\n          },\n          \"\\\\]\": {\n            cases: {\n              ...(is.id === \"bracket\" ? {\n                \"$S2==interpolation\": {\n                  token: \"@brackets.interpolation\",\n                  next: \"@popall\"\n                }\n              } : {}),\n              ...(ts.id === \"bracket\" ? {\n                \"$S2==directive\": {\n                  token: \"@brackets.directive\",\n                  next: \"@popall\"\n                }\n              } : {}),\n              [s(\"$S1==inParen__id__\")]: {\n                token: \"@brackets\",\n                next: \"@pop\"\n              },\n              \"@default\": {\n                token: \"@brackets\"\n              }\n            }\n          },\n          \"\\\\(\": {\n            token: \"@brackets\",\n            next: s(\"@inParen__id__.gt\")\n          },\n          \"\\\\)\": {\n            cases: {\n              [s(\"$S1==inParen__id__\")]: {\n                token: \"@brackets\",\n                next: \"@pop\"\n              },\n              \"@default\": {\n                token: \"@brackets\"\n              }\n            }\n          },\n          \"\\\\{\": {\n            cases: {\n              \"$S2==gt\": {\n                token: \"@brackets\",\n                next: s(\"@inParen__id__.gt\")\n              },\n              \"@default\": {\n                token: \"@brackets\",\n                next: s(\"@inParen__id__.plain\")\n              }\n            }\n          },\n          \"\\\\}\": {\n            cases: {\n              ...(is.id === \"bracket\" ? {} : {\n                \"$S2==interpolation\": {\n                  token: \"@brackets.interpolation\",\n                  next: \"@popall\"\n                }\n              }),\n              [s(\"$S1==inParen__id__\")]: {\n                token: \"@brackets\",\n                next: \"@pop\"\n              },\n              \"@default\": {\n                token: \"@brackets\"\n              }\n            }\n          }\n        }\n      }], [/\\$\\{/, {\n        token: \"delimiter.invalid\"\n      }]],\n      [s(\"blank_and_expression_comment_token__id__\")]: [[/(?:@blank)+/, {\n        token: \"\"\n      }], [/[<\\[][#!]--/, {\n        token: \"comment\",\n        next: s(\"@expressionComment__id__\")\n      }]],\n      [s(\"directive_end_token__id__\")]: [[/>/, ts.id === \"bracket\" ? {\n        token: \"operators\"\n      } : {\n        token: \"@brackets.directive\",\n        next: \"@popall\"\n      }], [r(/(\\/)(@close__id__)/), [{\n        token: \"delimiter.directive\"\n      }, {\n        token: \"@brackets.directive\",\n        next: \"@popall\"\n      }]]],\n      [s(\"greater_operators_token__id__\")]: [[/>/, {\n        token: \"operators\"\n      }], [/>=/, {\n        token: \"operators\"\n      }]],\n      [s(\"no_space_expression_end_token__id__\")]: [[/(?:@blank)+/, {\n        token: \"\",\n        switchTo: s(\"@fmExpression__id__.directive\")\n      }]],\n      [s(\"unified_call_token__id__\")]: [[/(@id)((?:@blank)+)/, [{\n        token: \"tag\"\n      }, {\n        token: \"\",\n        next: s(\"@fmExpression__id__.directive\")\n      }]], [r(/(@id)(\\/?)(@close__id__)/), [{\n        token: \"tag\"\n      }, {\n        token: \"delimiter.directive\"\n      }, {\n        token: \"@brackets.directive\",\n        next: \"@popall\"\n      }]], [/./, {\n        token: \"@rematch\",\n        next: s(\"@noSpaceExpression__id__\")\n      }]],\n      [s(\"no_parse_token__id__\")]: [[r(/(@open__id__)(\\/#?)([a-zA-Z]+)((?:@blank)*)(@close__id__)/), {\n        cases: {\n          \"$S2==$3\": [{\n            token: \"@brackets.directive\"\n          }, {\n            token: \"delimiter.directive\"\n          }, {\n            token: \"tag\"\n          }, {\n            token: \"\"\n          }, {\n            token: \"@brackets.directive\",\n            next: \"@popall\"\n          }],\n          \"$S2==comment\": [{\n            token: \"comment\"\n          }, {\n            token: \"comment\"\n          }, {\n            token: \"comment\"\n          }, {\n            token: \"comment\"\n          }, {\n            token: \"comment\"\n          }],\n          \"@default\": [{\n            token: \"source\"\n          }, {\n            token: \"source\"\n          }, {\n            token: \"source\"\n          }, {\n            token: \"source\"\n          }, {\n            token: \"source\"\n          }]\n        }\n      }], [/[^<\\[\\-]+|[<\\[\\-]/, {\n        cases: {\n          \"$S2==comment\": {\n            token: \"comment\"\n          },\n          \"@default\": {\n            token: \"source\"\n          }\n        }\n      }]],\n      [s(\"expression_comment_token__id__\")]: [[/--[>\\]]/, {\n        token: \"comment\",\n        next: \"@pop\"\n      }], [/[^\\->\\]]+|[>\\]\\-]/, {\n        token: \"comment\"\n      }]],\n      [s(\"terse_comment_token__id__\")]: [[r(/--(?:@close__id__)/), {\n        token: \"comment\",\n        next: \"@popall\"\n      }], [/[^<\\[\\-]+|[<\\[\\-]/, {\n        token: \"comment\"\n      }]]\n    }\n  };\n}\nfunction createMonarchLanguageAuto(is) {\n  const angle = createMonarchLanguage(TagSyntaxAngle, is);\n  const bracket = createMonarchLanguage(TagSyntaxBracket, is);\n  const auto = createMonarchLanguage(TagSyntaxAuto, is);\n  return {\n    ...angle,\n    ...bracket,\n    ...auto,\n    unicode: true,\n    includeLF: false,\n    start: `default_auto_${is.id}`,\n    ignoreCase: false,\n    defaultToken: \"invalid\",\n    tokenPostfix: `.freemarker2`,\n    brackets: [{\n      open: \"{\",\n      close: \"}\",\n      token: \"delimiter.curly\"\n    }, {\n      open: \"[\",\n      close: \"]\",\n      token: \"delimiter.square\"\n    }, {\n      open: \"(\",\n      close: \")\",\n      token: \"delimiter.parenthesis\"\n    }, {\n      open: \"<\",\n      close: \">\",\n      token: \"delimiter.angle\"\n    }],\n    tokenizer: {\n      ...angle.tokenizer,\n      ...bracket.tokenizer,\n      ...auto.tokenizer\n    }\n  };\n}\nvar TagAngleInterpolationDollar = {\n  conf: createLangConfiguration(TagSyntaxAngle),\n  language: createMonarchLanguage(TagSyntaxAngle, InterpolationSyntaxDollar)\n};\nvar TagBracketInterpolationDollar = {\n  conf: createLangConfiguration(TagSyntaxBracket),\n  language: createMonarchLanguage(TagSyntaxBracket, InterpolationSyntaxDollar)\n};\nvar TagAngleInterpolationBracket = {\n  conf: createLangConfiguration(TagSyntaxAngle),\n  language: createMonarchLanguage(TagSyntaxAngle, InterpolationSyntaxBracket)\n};\nvar TagBracketInterpolationBracket = {\n  conf: createLangConfiguration(TagSyntaxBracket),\n  language: createMonarchLanguage(TagSyntaxBracket, InterpolationSyntaxBracket)\n};\nvar TagAutoInterpolationDollar = {\n  conf: createLangConfigurationAuto(),\n  language: createMonarchLanguageAuto(InterpolationSyntaxDollar)\n};\nvar TagAutoInterpolationBracket = {\n  conf: createLangConfigurationAuto(),\n  language: createMonarchLanguageAuto(InterpolationSyntaxBracket)\n};\nexport { TagAngleInterpolationBracket, TagAngleInterpolationDollar, TagAutoInterpolationBracket, TagAutoInterpolationDollar, TagBracketInterpolationBracket, TagBracketInterpolationDollar };","map":{"version":3,"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__reExport","target","mod","secondTarget","monaco_editor_core_exports","monaco_editor_core_star","EMPTY_ELEMENTS","BLOCK_ELEMENTS","TagSyntaxAngle","close","id","open","TagSyntaxBracket","TagSyntaxAuto","InterpolationSyntaxDollar","open1","open2","InterpolationSyntaxBracket","createLangConfiguration","ts","brackets","comments","blockComment","autoCloseBefore","autoClosingPairs","notIn","surroundingPairs","folding","markers","start","RegExp","join","end","onEnterRules","beforeText","afterText","action","indentAction","languages","IndentAction","IndentOutdent","Indent","createLangConfigurationAuto","createMonarchLanguage","is","s","name","replace","r","regexp","source","flags","unicode","includeLF","ignoreCase","defaultToken","tokenPostfix","token","blank","keywords","directiveStartCloseTag1","directiveStartCloseTag2","directiveStartBlank","directiveEndCloseTag1","escapedChar","asciiDigit","integer","nonEscapedIdStartChar","escapedIdChar","idStartChar","specialHashKeys","namedSymbols","arrows","delimiters","stringOperators","noParseTags","tokenizer","include","cases","switchTo","next","createMonarchLanguageAuto","angle","bracket","auto","TagAngleInterpolationDollar","conf","language","TagBracketInterpolationDollar","TagAngleInterpolationBracket","TagBracketInterpolationBracket","TagAutoInterpolationDollar","TagAutoInterpolationBracket"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/basic-languages/freemarker2/freemarker2.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.45.0(5e5af013f8d295555a7210df0d5f2cea0bf5dd56)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/basic-languages/freemarker2/freemarker2.ts\nvar EMPTY_ELEMENTS = [\n  \"assign\",\n  \"flush\",\n  \"ftl\",\n  \"return\",\n  \"global\",\n  \"import\",\n  \"include\",\n  \"break\",\n  \"continue\",\n  \"local\",\n  \"nested\",\n  \"nt\",\n  \"setting\",\n  \"stop\",\n  \"t\",\n  \"lt\",\n  \"rt\",\n  \"fallback\"\n];\nvar BLOCK_ELEMENTS = [\n  \"attempt\",\n  \"autoesc\",\n  \"autoEsc\",\n  \"compress\",\n  \"comment\",\n  \"escape\",\n  \"noescape\",\n  \"function\",\n  \"if\",\n  \"list\",\n  \"items\",\n  \"sep\",\n  \"macro\",\n  \"noparse\",\n  \"noParse\",\n  \"noautoesc\",\n  \"noAutoEsc\",\n  \"outputformat\",\n  \"switch\",\n  \"visit\",\n  \"recurse\"\n];\nvar TagSyntaxAngle = {\n  close: \">\",\n  id: \"angle\",\n  open: \"<\"\n};\nvar TagSyntaxBracket = {\n  close: \"\\\\]\",\n  id: \"bracket\",\n  open: \"\\\\[\"\n};\nvar TagSyntaxAuto = {\n  close: \"[>\\\\]]\",\n  id: \"auto\",\n  open: \"[<\\\\[]\"\n};\nvar InterpolationSyntaxDollar = {\n  close: \"\\\\}\",\n  id: \"dollar\",\n  open1: \"\\\\$\",\n  open2: \"\\\\{\"\n};\nvar InterpolationSyntaxBracket = {\n  close: \"\\\\]\",\n  id: \"bracket\",\n  open1: \"\\\\[\",\n  open2: \"=\"\n};\nfunction createLangConfiguration(ts) {\n  return {\n    brackets: [\n      [\"<\", \">\"],\n      [\"[\", \"]\"],\n      [\"(\", \")\"],\n      [\"{\", \"}\"]\n    ],\n    comments: {\n      blockComment: [`${ts.open}--`, `--${ts.close}`]\n    },\n    autoCloseBefore: \"\\n\\r\t }]),.:;=\",\n    autoClosingPairs: [\n      { open: \"{\", close: \"}\" },\n      { open: \"[\", close: \"]\" },\n      { open: \"(\", close: \")\" },\n      { open: '\"', close: '\"', notIn: [\"string\"] },\n      { open: \"'\", close: \"'\", notIn: [\"string\"] }\n    ],\n    surroundingPairs: [\n      { open: '\"', close: '\"' },\n      { open: \"'\", close: \"'\" },\n      { open: \"{\", close: \"}\" },\n      { open: \"[\", close: \"]\" },\n      { open: \"(\", close: \")\" },\n      { open: \"<\", close: \">\" }\n    ],\n    folding: {\n      markers: {\n        start: new RegExp(`${ts.open}#(?:${BLOCK_ELEMENTS.join(\"|\")})([^/${ts.close}]*(?!/)${ts.close})[^${ts.open}]*$`),\n        end: new RegExp(`${ts.open}/#(?:${BLOCK_ELEMENTS.join(\"|\")})[\\\\r\\\\n\\\\t ]*>`)\n      }\n    },\n    onEnterRules: [\n      {\n        beforeText: new RegExp(`${ts.open}#(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([a-zA-Z_]+)([^/${ts.close}]*(?!/)${ts.close})[^${ts.open}]*$`),\n        afterText: new RegExp(`^${ts.open}/#([a-zA-Z_]+)[\\\\r\\\\n\\\\t ]*${ts.close}$`),\n        action: {\n          indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n        }\n      },\n      {\n        beforeText: new RegExp(`${ts.open}#(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([a-zA-Z_]+)([^/${ts.close}]*(?!/)${ts.close})[^${ts.open}]*$`),\n        action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\n      }\n    ]\n  };\n}\nfunction createLangConfigurationAuto() {\n  return {\n    brackets: [\n      [\"<\", \">\"],\n      [\"[\", \"]\"],\n      [\"(\", \")\"],\n      [\"{\", \"}\"]\n    ],\n    autoCloseBefore: \"\\n\\r\t }]),.:;=\",\n    autoClosingPairs: [\n      { open: \"{\", close: \"}\" },\n      { open: \"[\", close: \"]\" },\n      { open: \"(\", close: \")\" },\n      { open: '\"', close: '\"', notIn: [\"string\"] },\n      { open: \"'\", close: \"'\", notIn: [\"string\"] }\n    ],\n    surroundingPairs: [\n      { open: '\"', close: '\"' },\n      { open: \"'\", close: \"'\" },\n      { open: \"{\", close: \"}\" },\n      { open: \"[\", close: \"]\" },\n      { open: \"(\", close: \")\" },\n      { open: \"<\", close: \">\" }\n    ],\n    folding: {\n      markers: {\n        start: new RegExp(`[<\\\\[]#(?:${BLOCK_ELEMENTS.join(\"|\")})([^/>\\\\]]*(?!/)[>\\\\]])[^<\\\\[]*$`),\n        end: new RegExp(`[<\\\\[]/#(?:${BLOCK_ELEMENTS.join(\"|\")})[\\\\r\\\\n\\\\t ]*>`)\n      }\n    },\n    onEnterRules: [\n      {\n        beforeText: new RegExp(`[<\\\\[]#(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([a-zA-Z_]+)([^/>\\\\]]*(?!/)[>\\\\]])[^[<\\\\[]]*$`),\n        afterText: new RegExp(`^[<\\\\[]/#([a-zA-Z_]+)[\\\\r\\\\n\\\\t ]*[>\\\\]]$`),\n        action: {\n          indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n        }\n      },\n      {\n        beforeText: new RegExp(`[<\\\\[]#(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([a-zA-Z_]+)([^/>\\\\]]*(?!/)[>\\\\]])[^[<\\\\[]]*$`),\n        action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\n      }\n    ]\n  };\n}\nfunction createMonarchLanguage(ts, is) {\n  const id = `_${ts.id}_${is.id}`;\n  const s = (name) => name.replace(/__id__/g, id);\n  const r = (regexp) => {\n    const source = regexp.source.replace(/__id__/g, id);\n    return new RegExp(source, regexp.flags);\n  };\n  return {\n    unicode: true,\n    includeLF: false,\n    start: s(\"default__id__\"),\n    ignoreCase: false,\n    defaultToken: \"invalid\",\n    tokenPostfix: `.freemarker2`,\n    brackets: [\n      { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n      { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n      { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n      { open: \"<\", close: \">\", token: \"delimiter.angle\" }\n    ],\n    [s(\"open__id__\")]: new RegExp(ts.open),\n    [s(\"close__id__\")]: new RegExp(ts.close),\n    [s(\"iOpen1__id__\")]: new RegExp(is.open1),\n    [s(\"iOpen2__id__\")]: new RegExp(is.open2),\n    [s(\"iClose__id__\")]: new RegExp(is.close),\n    [s(\"startTag__id__\")]: r(/(@open__id__)(#)/),\n    [s(\"endTag__id__\")]: r(/(@open__id__)(\\/#)/),\n    [s(\"startOrEndTag__id__\")]: r(/(@open__id__)(\\/?#)/),\n    [s(\"closeTag1__id__\")]: r(/((?:@blank)*)(@close__id__)/),\n    [s(\"closeTag2__id__\")]: r(/((?:@blank)*\\/?)(@close__id__)/),\n    blank: /[ \\t\\n\\r]/,\n    keywords: [\"false\", \"true\", \"in\", \"as\", \"using\"],\n    directiveStartCloseTag1: /attempt|recover|sep|auto[eE]sc|no(?:autoe|AutoE)sc|compress|default|no[eE]scape|comment|no[pP]arse/,\n    directiveStartCloseTag2: /else|break|continue|return|stop|flush|t|lt|rt|nt|nested|recurse|fallback|ftl/,\n    directiveStartBlank: /if|else[iI]f|list|for[eE]ach|switch|case|assign|global|local|include|import|function|macro|transform|visit|stop|return|call|setting|output[fF]ormat|nested|recurse|escape|ftl|items/,\n    directiveEndCloseTag1: /if|list|items|sep|recover|attempt|for[eE]ach|local|global|assign|function|macro|output[fF]ormat|auto[eE]sc|no(?:autoe|AutoE)sc|compress|transform|switch|escape|no[eE]scape/,\n    escapedChar: /\\\\(?:[ntrfbgla\\\\'\"\\{=]|(?:x[0-9A-Fa-f]{1,4}))/,\n    asciiDigit: /[0-9]/,\n    integer: /[0-9]+/,\n    nonEscapedIdStartChar: /[\\$@-Z_a-z\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u1FFF\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183-\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3006\\u3031-\\u3035\\u303B-\\u303C\\u3040-\\u318F\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3300-\\u337F\\u3400-\\u4DB5\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5-\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40-\\uFB41\\uFB43-\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n    escapedIdChar: /\\\\[\\-\\.:#]/,\n    idStartChar: /(?:@nonEscapedIdStartChar)|(?:@escapedIdChar)/,\n    id: /(?:@idStartChar)(?:(?:@idStartChar)|(?:@asciiDigit))*/,\n    specialHashKeys: /\\*\\*|\\*|false|true|in|as|using/,\n    namedSymbols: /&lt;=|&gt;=|\\\\lte|\\\\lt|&lt;|\\\\gte|\\\\gt|&gt;|&amp;&amp;|\\\\and|-&gt;|->|==|!=|\\+=|-=|\\*=|\\/=|%=|\\+\\+|--|<=|&&|\\|\\||:|\\.\\.\\.|\\.\\.\\*|\\.\\.<|\\.\\.!|\\?\\?|=|<|\\+|-|\\*|\\/|%|\\||\\.\\.|\\?|!|&|\\.|,|;/,\n    arrows: [\"->\", \"-&gt;\"],\n    delimiters: [\";\", \":\", \",\", \".\"],\n    stringOperators: [\"lte\", \"lt\", \"gte\", \"gt\"],\n    noParseTags: [\"noparse\", \"noParse\", \"comment\"],\n    tokenizer: {\n      [s(\"default__id__\")]: [\n        { include: s(\"@directive_token__id__\") },\n        { include: s(\"@interpolation_and_text_token__id__\") }\n      ],\n      [s(\"fmExpression__id__.directive\")]: [\n        { include: s(\"@blank_and_expression_comment_token__id__\") },\n        { include: s(\"@directive_end_token__id__\") },\n        { include: s(\"@expression_token__id__\") }\n      ],\n      [s(\"fmExpression__id__.interpolation\")]: [\n        { include: s(\"@blank_and_expression_comment_token__id__\") },\n        { include: s(\"@expression_token__id__\") },\n        { include: s(\"@greater_operators_token__id__\") }\n      ],\n      [s(\"inParen__id__.plain\")]: [\n        { include: s(\"@blank_and_expression_comment_token__id__\") },\n        { include: s(\"@directive_end_token__id__\") },\n        { include: s(\"@expression_token__id__\") }\n      ],\n      [s(\"inParen__id__.gt\")]: [\n        { include: s(\"@blank_and_expression_comment_token__id__\") },\n        { include: s(\"@expression_token__id__\") },\n        { include: s(\"@greater_operators_token__id__\") }\n      ],\n      [s(\"noSpaceExpression__id__\")]: [\n        { include: s(\"@no_space_expression_end_token__id__\") },\n        { include: s(\"@directive_end_token__id__\") },\n        { include: s(\"@expression_token__id__\") }\n      ],\n      [s(\"unifiedCall__id__\")]: [{ include: s(\"@unified_call_token__id__\") }],\n      [s(\"singleString__id__\")]: [{ include: s(\"@string_single_token__id__\") }],\n      [s(\"doubleString__id__\")]: [{ include: s(\"@string_double_token__id__\") }],\n      [s(\"rawSingleString__id__\")]: [{ include: s(\"@string_single_raw_token__id__\") }],\n      [s(\"rawDoubleString__id__\")]: [{ include: s(\"@string_double_raw_token__id__\") }],\n      [s(\"expressionComment__id__\")]: [{ include: s(\"@expression_comment_token__id__\") }],\n      [s(\"noParse__id__\")]: [{ include: s(\"@no_parse_token__id__\") }],\n      [s(\"terseComment__id__\")]: [{ include: s(\"@terse_comment_token__id__\") }],\n      [s(\"directive_token__id__\")]: [\n        [\n          r(/(?:@startTag__id__)(@directiveStartCloseTag1)(?:@closeTag1__id__)/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\" },\n            {\n              cases: {\n                \"@noParseTags\": { token: \"tag\", next: s(\"@noParse__id__.$3\") },\n                \"@default\": { token: \"tag\" }\n              }\n            },\n            { token: \"delimiter.directive\" },\n            { token: \"@brackets.directive\" }\n          ]\n        ],\n        [\n          r(/(?:@startTag__id__)(@directiveStartCloseTag2)(?:@closeTag2__id__)/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\" },\n            { token: \"tag\" },\n            { token: \"delimiter.directive\" },\n            { token: \"@brackets.directive\" }\n          ]\n        ],\n        [\n          r(/(?:@startTag__id__)(@directiveStartBlank)(@blank)/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\" },\n            { token: \"tag\" },\n            { token: \"\", next: s(\"@fmExpression__id__.directive\") }\n          ]\n        ],\n        [\n          r(/(?:@endTag__id__)(@directiveEndCloseTag1)(?:@closeTag1__id__)/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\" },\n            { token: \"tag\" },\n            { token: \"delimiter.directive\" },\n            { token: \"@brackets.directive\" }\n          ]\n        ],\n        [\n          r(/(@open__id__)(@)/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\", next: s(\"@unifiedCall__id__\") }\n          ]\n        ],\n        [\n          r(/(@open__id__)(\\/@)((?:(?:@id)(?:\\.(?:@id))*)?)(?:@closeTag1__id__)/),\n          [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\" },\n            { token: \"tag\" },\n            { token: \"delimiter.directive\" },\n            { token: \"@brackets.directive\" }\n          ]\n        ],\n        [\n          r(/(@open__id__)#--/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : { token: \"comment\", next: s(\"@terseComment__id__\") }\n        ],\n        [\n          r(/(?:@startOrEndTag__id__)([a-zA-Z_]+)/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\" },\n            { token: \"tag.invalid\", next: s(\"@fmExpression__id__.directive\") }\n          ]\n        ]\n      ],\n      [s(\"interpolation_and_text_token__id__\")]: [\n        [\n          r(/(@iOpen1__id__)(@iOpen2__id__)/),\n          [\n            { token: is.id === \"bracket\" ? \"@brackets.interpolation\" : \"delimiter.interpolation\" },\n            {\n              token: is.id === \"bracket\" ? \"delimiter.interpolation\" : \"@brackets.interpolation\",\n              next: s(\"@fmExpression__id__.interpolation\")\n            }\n          ]\n        ],\n        [/[\\$#<\\[\\{]|(?:@blank)+|[^\\$<#\\[\\{\\n\\r\\t ]+/, { token: \"source\" }]\n      ],\n      [s(\"string_single_token__id__\")]: [\n        [/[^'\\\\]/, { token: \"string\" }],\n        [/@escapedChar/, { token: \"string.escape\" }],\n        [/'/, { token: \"string\", next: \"@pop\" }]\n      ],\n      [s(\"string_double_token__id__\")]: [\n        [/[^\"\\\\]/, { token: \"string\" }],\n        [/@escapedChar/, { token: \"string.escape\" }],\n        [/\"/, { token: \"string\", next: \"@pop\" }]\n      ],\n      [s(\"string_single_raw_token__id__\")]: [\n        [/[^']+/, { token: \"string.raw\" }],\n        [/'/, { token: \"string.raw\", next: \"@pop\" }]\n      ],\n      [s(\"string_double_raw_token__id__\")]: [\n        [/[^\"]+/, { token: \"string.raw\" }],\n        [/\"/, { token: \"string.raw\", next: \"@pop\" }]\n      ],\n      [s(\"expression_token__id__\")]: [\n        [\n          /(r?)(['\"])/,\n          {\n            cases: {\n              \"r'\": [\n                { token: \"keyword\" },\n                { token: \"string.raw\", next: s(\"@rawSingleString__id__\") }\n              ],\n              'r\"': [\n                { token: \"keyword\" },\n                { token: \"string.raw\", next: s(\"@rawDoubleString__id__\") }\n              ],\n              \"'\": [{ token: \"source\" }, { token: \"string\", next: s(\"@singleString__id__\") }],\n              '\"': [{ token: \"source\" }, { token: \"string\", next: s(\"@doubleString__id__\") }]\n            }\n          }\n        ],\n        [\n          /(?:@integer)(?:\\.(?:@integer))?/,\n          {\n            cases: {\n              \"(?:@integer)\": { token: \"number\" },\n              \"@default\": { token: \"number.float\" }\n            }\n          }\n        ],\n        [\n          /(\\.)(@blank*)(@specialHashKeys)/,\n          [{ token: \"delimiter\" }, { token: \"\" }, { token: \"identifier\" }]\n        ],\n        [\n          /(?:@namedSymbols)/,\n          {\n            cases: {\n              \"@arrows\": { token: \"meta.arrow\" },\n              \"@delimiters\": { token: \"delimiter\" },\n              \"@default\": { token: \"operators\" }\n            }\n          }\n        ],\n        [\n          /@id/,\n          {\n            cases: {\n              \"@keywords\": { token: \"keyword.$0\" },\n              \"@stringOperators\": { token: \"operators\" },\n              \"@default\": { token: \"identifier\" }\n            }\n          }\n        ],\n        [\n          /[\\[\\]\\(\\)\\{\\}]/,\n          {\n            cases: {\n              \"\\\\[\": {\n                cases: {\n                  \"$S2==gt\": { token: \"@brackets\", next: s(\"@inParen__id__.gt\") },\n                  \"@default\": { token: \"@brackets\", next: s(\"@inParen__id__.plain\") }\n                }\n              },\n              \"\\\\]\": {\n                cases: {\n                  ...is.id === \"bracket\" ? {\n                    \"$S2==interpolation\": { token: \"@brackets.interpolation\", next: \"@popall\" }\n                  } : {},\n                  ...ts.id === \"bracket\" ? {\n                    \"$S2==directive\": { token: \"@brackets.directive\", next: \"@popall\" }\n                  } : {},\n                  [s(\"$S1==inParen__id__\")]: { token: \"@brackets\", next: \"@pop\" },\n                  \"@default\": { token: \"@brackets\" }\n                }\n              },\n              \"\\\\(\": { token: \"@brackets\", next: s(\"@inParen__id__.gt\") },\n              \"\\\\)\": {\n                cases: {\n                  [s(\"$S1==inParen__id__\")]: { token: \"@brackets\", next: \"@pop\" },\n                  \"@default\": { token: \"@brackets\" }\n                }\n              },\n              \"\\\\{\": {\n                cases: {\n                  \"$S2==gt\": { token: \"@brackets\", next: s(\"@inParen__id__.gt\") },\n                  \"@default\": { token: \"@brackets\", next: s(\"@inParen__id__.plain\") }\n                }\n              },\n              \"\\\\}\": {\n                cases: {\n                  ...is.id === \"bracket\" ? {} : {\n                    \"$S2==interpolation\": { token: \"@brackets.interpolation\", next: \"@popall\" }\n                  },\n                  [s(\"$S1==inParen__id__\")]: { token: \"@brackets\", next: \"@pop\" },\n                  \"@default\": { token: \"@brackets\" }\n                }\n              }\n            }\n          }\n        ],\n        [/\\$\\{/, { token: \"delimiter.invalid\" }]\n      ],\n      [s(\"blank_and_expression_comment_token__id__\")]: [\n        [/(?:@blank)+/, { token: \"\" }],\n        [/[<\\[][#!]--/, { token: \"comment\", next: s(\"@expressionComment__id__\") }]\n      ],\n      [s(\"directive_end_token__id__\")]: [\n        [\n          />/,\n          ts.id === \"bracket\" ? { token: \"operators\" } : { token: \"@brackets.directive\", next: \"@popall\" }\n        ],\n        [\n          r(/(\\/)(@close__id__)/),\n          [{ token: \"delimiter.directive\" }, { token: \"@brackets.directive\", next: \"@popall\" }]\n        ]\n      ],\n      [s(\"greater_operators_token__id__\")]: [\n        [/>/, { token: \"operators\" }],\n        [/>=/, { token: \"operators\" }]\n      ],\n      [s(\"no_space_expression_end_token__id__\")]: [\n        [/(?:@blank)+/, { token: \"\", switchTo: s(\"@fmExpression__id__.directive\") }]\n      ],\n      [s(\"unified_call_token__id__\")]: [\n        [\n          /(@id)((?:@blank)+)/,\n          [{ token: \"tag\" }, { token: \"\", next: s(\"@fmExpression__id__.directive\") }]\n        ],\n        [\n          r(/(@id)(\\/?)(@close__id__)/),\n          [\n            { token: \"tag\" },\n            { token: \"delimiter.directive\" },\n            { token: \"@brackets.directive\", next: \"@popall\" }\n          ]\n        ],\n        [/./, { token: \"@rematch\", next: s(\"@noSpaceExpression__id__\") }]\n      ],\n      [s(\"no_parse_token__id__\")]: [\n        [\n          r(/(@open__id__)(\\/#?)([a-zA-Z]+)((?:@blank)*)(@close__id__)/),\n          {\n            cases: {\n              \"$S2==$3\": [\n                { token: \"@brackets.directive\" },\n                { token: \"delimiter.directive\" },\n                { token: \"tag\" },\n                { token: \"\" },\n                { token: \"@brackets.directive\", next: \"@popall\" }\n              ],\n              \"$S2==comment\": [\n                { token: \"comment\" },\n                { token: \"comment\" },\n                { token: \"comment\" },\n                { token: \"comment\" },\n                { token: \"comment\" }\n              ],\n              \"@default\": [\n                { token: \"source\" },\n                { token: \"source\" },\n                { token: \"source\" },\n                { token: \"source\" },\n                { token: \"source\" }\n              ]\n            }\n          }\n        ],\n        [\n          /[^<\\[\\-]+|[<\\[\\-]/,\n          {\n            cases: {\n              \"$S2==comment\": { token: \"comment\" },\n              \"@default\": { token: \"source\" }\n            }\n          }\n        ]\n      ],\n      [s(\"expression_comment_token__id__\")]: [\n        [\n          /--[>\\]]/,\n          {\n            token: \"comment\",\n            next: \"@pop\"\n          }\n        ],\n        [/[^\\->\\]]+|[>\\]\\-]/, { token: \"comment\" }]\n      ],\n      [s(\"terse_comment_token__id__\")]: [\n        [r(/--(?:@close__id__)/), { token: \"comment\", next: \"@popall\" }],\n        [/[^<\\[\\-]+|[<\\[\\-]/, { token: \"comment\" }]\n      ]\n    }\n  };\n}\nfunction createMonarchLanguageAuto(is) {\n  const angle = createMonarchLanguage(TagSyntaxAngle, is);\n  const bracket = createMonarchLanguage(TagSyntaxBracket, is);\n  const auto = createMonarchLanguage(TagSyntaxAuto, is);\n  return {\n    ...angle,\n    ...bracket,\n    ...auto,\n    unicode: true,\n    includeLF: false,\n    start: `default_auto_${is.id}`,\n    ignoreCase: false,\n    defaultToken: \"invalid\",\n    tokenPostfix: `.freemarker2`,\n    brackets: [\n      { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n      { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n      { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n      { open: \"<\", close: \">\", token: \"delimiter.angle\" }\n    ],\n    tokenizer: {\n      ...angle.tokenizer,\n      ...bracket.tokenizer,\n      ...auto.tokenizer\n    }\n  };\n}\nvar TagAngleInterpolationDollar = {\n  conf: createLangConfiguration(TagSyntaxAngle),\n  language: createMonarchLanguage(TagSyntaxAngle, InterpolationSyntaxDollar)\n};\nvar TagBracketInterpolationDollar = {\n  conf: createLangConfiguration(TagSyntaxBracket),\n  language: createMonarchLanguage(TagSyntaxBracket, InterpolationSyntaxDollar)\n};\nvar TagAngleInterpolationBracket = {\n  conf: createLangConfiguration(TagSyntaxAngle),\n  language: createMonarchLanguage(TagSyntaxAngle, InterpolationSyntaxBracket)\n};\nvar TagBracketInterpolationBracket = {\n  conf: createLangConfiguration(TagSyntaxBracket),\n  language: createMonarchLanguage(TagSyntaxBracket, InterpolationSyntaxBracket)\n};\nvar TagAutoInterpolationDollar = {\n  conf: createLangConfigurationAuto(),\n  language: createMonarchLanguageAuto(InterpolationSyntaxDollar)\n};\nvar TagAutoInterpolationBracket = {\n  conf: createLangConfigurationAuto(),\n  language: createMonarchLanguageAuto(InterpolationSyntaxBracket)\n};\nexport {\n  TagAngleInterpolationBracket,\n  TagAngleInterpolationDollar,\n  TagAutoInterpolationBracket,\n  TagAutoInterpolationDollar,\n  TagBracketInterpolationBracket,\n  TagBracketInterpolationDollar\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}