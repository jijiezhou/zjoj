{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { Action } from '../../../../base/common/actions.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport * as objects from '../../../../base/common/objects.js';\nimport './media/peekViewWidget.css';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/embeddedCodeEditorWidget.js';\nimport { ZoneWidget } from '../../zoneWidget/browser/zoneWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { createActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { activeContrastBorder, contrastBorder, editorForeground, editorInfoForeground, registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nexport const IPeekViewService = createDecorator('IPeekViewService');\nregisterSingleton(IPeekViewService, class {\n  constructor() {\n    this._widgets = new Map();\n  }\n  addExclusiveWidget(editor, widget) {\n    const existing = this._widgets.get(editor);\n    if (existing) {\n      existing.listener.dispose();\n      existing.widget.dispose();\n    }\n    const remove = () => {\n      const data = this._widgets.get(editor);\n      if (data && data.widget === widget) {\n        data.listener.dispose();\n        this._widgets.delete(editor);\n      }\n    };\n    this._widgets.set(editor, {\n      widget,\n      listener: widget.onDidClose(remove)\n    });\n  }\n}, 1 /* InstantiationType.Delayed */);\nexport var PeekContext;\n(function (PeekContext) {\n  PeekContext.inPeekEditor = new RawContextKey('inReferenceSearchEditor', true, nls.localize('inReferenceSearchEditor', \"Whether the current code editor is embedded inside peek\"));\n  PeekContext.notInPeekEditor = PeekContext.inPeekEditor.toNegated();\n})(PeekContext || (PeekContext = {}));\nlet PeekContextController = class PeekContextController {\n  constructor(editor, contextKeyService) {\n    if (editor instanceof EmbeddedCodeEditorWidget) {\n      PeekContext.inPeekEditor.bindTo(contextKeyService);\n    }\n  }\n  dispose() {}\n};\nPeekContextController.ID = 'editor.contrib.referenceController';\nPeekContextController = __decorate([__param(1, IContextKeyService)], PeekContextController);\nregisterEditorContribution(PeekContextController.ID, PeekContextController, 0 /* EditorContributionInstantiation.Eager */); // eager because it needs to define a context key\nexport function getOuterEditor(accessor) {\n  const editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n  if (editor instanceof EmbeddedCodeEditorWidget) {\n    return editor.getParentEditor();\n  }\n  return editor;\n}\nconst defaultOptions = {\n  headerBackgroundColor: Color.white,\n  primaryHeadingColor: Color.fromHex('#333333'),\n  secondaryHeadingColor: Color.fromHex('#6c6c6cb3')\n};\nlet PeekViewWidget = class PeekViewWidget extends ZoneWidget {\n  constructor(editor, options, instantiationService) {\n    super(editor, options);\n    this.instantiationService = instantiationService;\n    this._onDidClose = new Emitter();\n    this.onDidClose = this._onDidClose.event;\n    objects.mixin(this.options, defaultOptions, false);\n  }\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true; // prevent consumers who dispose on onDidClose from looping\n      super.dispose();\n      this._onDidClose.fire(this);\n    }\n  }\n  style(styles) {\n    const options = this.options;\n    if (styles.headerBackgroundColor) {\n      options.headerBackgroundColor = styles.headerBackgroundColor;\n    }\n    if (styles.primaryHeadingColor) {\n      options.primaryHeadingColor = styles.primaryHeadingColor;\n    }\n    if (styles.secondaryHeadingColor) {\n      options.secondaryHeadingColor = styles.secondaryHeadingColor;\n    }\n    super.style(styles);\n  }\n  _applyStyles() {\n    super._applyStyles();\n    const options = this.options;\n    if (this._headElement && options.headerBackgroundColor) {\n      this._headElement.style.backgroundColor = options.headerBackgroundColor.toString();\n    }\n    if (this._primaryHeading && options.primaryHeadingColor) {\n      this._primaryHeading.style.color = options.primaryHeadingColor.toString();\n    }\n    if (this._secondaryHeading && options.secondaryHeadingColor) {\n      this._secondaryHeading.style.color = options.secondaryHeadingColor.toString();\n    }\n    if (this._bodyElement && options.frameColor) {\n      this._bodyElement.style.borderColor = options.frameColor.toString();\n    }\n  }\n  _fillContainer(container) {\n    this.setCssClass('peekview-widget');\n    this._headElement = dom.$('.head');\n    this._bodyElement = dom.$('.body');\n    this._fillHead(this._headElement);\n    this._fillBody(this._bodyElement);\n    container.appendChild(this._headElement);\n    container.appendChild(this._bodyElement);\n  }\n  _fillHead(container, noCloseAction) {\n    this._titleElement = dom.$('.peekview-title');\n    if (this.options.supportOnTitleClick) {\n      this._titleElement.classList.add('clickable');\n      dom.addStandardDisposableListener(this._titleElement, 'click', event => this._onTitleClick(event));\n    }\n    dom.append(this._headElement, this._titleElement);\n    this._fillTitleIcon(this._titleElement);\n    this._primaryHeading = dom.$('span.filename');\n    this._secondaryHeading = dom.$('span.dirname');\n    this._metaHeading = dom.$('span.meta');\n    dom.append(this._titleElement, this._primaryHeading, this._secondaryHeading, this._metaHeading);\n    const actionsContainer = dom.$('.peekview-actions');\n    dom.append(this._headElement, actionsContainer);\n    const actionBarOptions = this._getActionBarOptions();\n    this._actionbarWidget = new ActionBar(actionsContainer, actionBarOptions);\n    this._disposables.add(this._actionbarWidget);\n    if (!noCloseAction) {\n      this._actionbarWidget.push(new Action('peekview.close', nls.localize('label.close', \"Close\"), ThemeIcon.asClassName(Codicon.close), true, () => {\n        this.dispose();\n        return Promise.resolve();\n      }), {\n        label: false,\n        icon: true\n      });\n    }\n  }\n  _fillTitleIcon(container) {}\n  _getActionBarOptions() {\n    return {\n      actionViewItemProvider: createActionViewItem.bind(undefined, this.instantiationService),\n      orientation: 0 /* ActionsOrientation.HORIZONTAL */\n    };\n  }\n  _onTitleClick(event) {\n    // implement me if supportOnTitleClick option is set\n  }\n  setTitle(primaryHeading, secondaryHeading) {\n    if (this._primaryHeading && this._secondaryHeading) {\n      this._primaryHeading.innerText = primaryHeading;\n      this._primaryHeading.setAttribute('title', primaryHeading);\n      if (secondaryHeading) {\n        this._secondaryHeading.innerText = secondaryHeading;\n      } else {\n        dom.clearNode(this._secondaryHeading);\n      }\n    }\n  }\n  setMetaTitle(value) {\n    if (this._metaHeading) {\n      if (value) {\n        this._metaHeading.innerText = value;\n        dom.show(this._metaHeading);\n      } else {\n        dom.hide(this._metaHeading);\n      }\n    }\n  }\n  _doLayout(heightInPixel, widthInPixel) {\n    if (!this._isShowing && heightInPixel < 0) {\n      // Looks like the view zone got folded away!\n      this.dispose();\n      return;\n    }\n    const headHeight = Math.ceil(this.editor.getOption(66 /* EditorOption.lineHeight */) * 1.2);\n    const bodyHeight = Math.round(heightInPixel - (headHeight + 2 /* the border-top/bottom width*/));\n    this._doLayoutHead(headHeight, widthInPixel);\n    this._doLayoutBody(bodyHeight, widthInPixel);\n  }\n  _doLayoutHead(heightInPixel, widthInPixel) {\n    if (this._headElement) {\n      this._headElement.style.height = `${heightInPixel}px`;\n      this._headElement.style.lineHeight = this._headElement.style.height;\n    }\n  }\n  _doLayoutBody(heightInPixel, widthInPixel) {\n    if (this._bodyElement) {\n      this._bodyElement.style.height = `${heightInPixel}px`;\n    }\n  }\n};\nPeekViewWidget = __decorate([__param(2, IInstantiationService)], PeekViewWidget);\nexport { PeekViewWidget };\nexport const peekViewTitleBackground = registerColor('peekViewTitle.background', {\n  dark: '#252526',\n  light: '#F3F3F3',\n  hcDark: Color.black,\n  hcLight: Color.white\n}, nls.localize('peekViewTitleBackground', 'Background color of the peek view title area.'));\nexport const peekViewTitleForeground = registerColor('peekViewTitleLabel.foreground', {\n  dark: Color.white,\n  light: Color.black,\n  hcDark: Color.white,\n  hcLight: editorForeground\n}, nls.localize('peekViewTitleForeground', 'Color of the peek view title.'));\nexport const peekViewTitleInfoForeground = registerColor('peekViewTitleDescription.foreground', {\n  dark: '#ccccccb3',\n  light: '#616161',\n  hcDark: '#FFFFFF99',\n  hcLight: '#292929'\n}, nls.localize('peekViewTitleInfoForeground', 'Color of the peek view title info.'));\nexport const peekViewBorder = registerColor('peekView.border', {\n  dark: editorInfoForeground,\n  light: editorInfoForeground,\n  hcDark: contrastBorder,\n  hcLight: contrastBorder\n}, nls.localize('peekViewBorder', 'Color of the peek view borders and arrow.'));\nexport const peekViewResultsBackground = registerColor('peekViewResult.background', {\n  dark: '#252526',\n  light: '#F3F3F3',\n  hcDark: Color.black,\n  hcLight: Color.white\n}, nls.localize('peekViewResultsBackground', 'Background color of the peek view result list.'));\nexport const peekViewResultsMatchForeground = registerColor('peekViewResult.lineForeground', {\n  dark: '#bbbbbb',\n  light: '#646465',\n  hcDark: Color.white,\n  hcLight: editorForeground\n}, nls.localize('peekViewResultsMatchForeground', 'Foreground color for line nodes in the peek view result list.'));\nexport const peekViewResultsFileForeground = registerColor('peekViewResult.fileForeground', {\n  dark: Color.white,\n  light: '#1E1E1E',\n  hcDark: Color.white,\n  hcLight: editorForeground\n}, nls.localize('peekViewResultsFileForeground', 'Foreground color for file nodes in the peek view result list.'));\nexport const peekViewResultsSelectionBackground = registerColor('peekViewResult.selectionBackground', {\n  dark: '#3399ff33',\n  light: '#3399ff33',\n  hcDark: null,\n  hcLight: null\n}, nls.localize('peekViewResultsSelectionBackground', 'Background color of the selected entry in the peek view result list.'));\nexport const peekViewResultsSelectionForeground = registerColor('peekViewResult.selectionForeground', {\n  dark: Color.white,\n  light: '#6C6C6C',\n  hcDark: Color.white,\n  hcLight: editorForeground\n}, nls.localize('peekViewResultsSelectionForeground', 'Foreground color of the selected entry in the peek view result list.'));\nexport const peekViewEditorBackground = registerColor('peekViewEditor.background', {\n  dark: '#001F33',\n  light: '#F2F8FC',\n  hcDark: Color.black,\n  hcLight: Color.white\n}, nls.localize('peekViewEditorBackground', 'Background color of the peek view editor.'));\nexport const peekViewEditorGutterBackground = registerColor('peekViewEditorGutter.background', {\n  dark: peekViewEditorBackground,\n  light: peekViewEditorBackground,\n  hcDark: peekViewEditorBackground,\n  hcLight: peekViewEditorBackground\n}, nls.localize('peekViewEditorGutterBackground', 'Background color of the gutter in the peek view editor.'));\nexport const peekViewEditorStickyScrollBackground = registerColor('peekViewEditorStickyScroll.background', {\n  dark: peekViewEditorBackground,\n  light: peekViewEditorBackground,\n  hcDark: peekViewEditorBackground,\n  hcLight: peekViewEditorBackground\n}, nls.localize('peekViewEditorStickScrollBackground', 'Background color of sticky scroll in the peek view editor.'));\nexport const peekViewResultsMatchHighlight = registerColor('peekViewResult.matchHighlightBackground', {\n  dark: '#ea5c004d',\n  light: '#ea5c004d',\n  hcDark: null,\n  hcLight: null\n}, nls.localize('peekViewResultsMatchHighlight', 'Match highlight color in the peek view result list.'));\nexport const peekViewEditorMatchHighlight = registerColor('peekViewEditor.matchHighlightBackground', {\n  dark: '#ff8f0099',\n  light: '#f5d802de',\n  hcDark: null,\n  hcLight: null\n}, nls.localize('peekViewEditorMatchHighlight', 'Match highlight color in the peek view editor.'));\nexport const peekViewEditorMatchHighlightBorder = registerColor('peekViewEditor.matchHighlightBorder', {\n  dark: null,\n  light: null,\n  hcDark: activeContrastBorder,\n  hcLight: activeContrastBorder\n}, nls.localize('peekViewEditorMatchHighlightBorder', 'Match highlight border in the peek view editor.'));","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","dom","ActionBar","Action","Codicon","ThemeIcon","Color","Emitter","objects","registerEditorContribution","ICodeEditorService","EmbeddedCodeEditorWidget","ZoneWidget","nls","createActionViewItem","IContextKeyService","RawContextKey","registerSingleton","createDecorator","IInstantiationService","activeContrastBorder","contrastBorder","editorForeground","editorInfoForeground","registerColor","IPeekViewService","constructor","_widgets","Map","addExclusiveWidget","editor","widget","existing","get","listener","dispose","remove","data","delete","set","onDidClose","PeekContext","inPeekEditor","localize","notInPeekEditor","toNegated","PeekContextController","contextKeyService","bindTo","ID","getOuterEditor","accessor","getFocusedCodeEditor","getParentEditor","defaultOptions","headerBackgroundColor","white","primaryHeadingColor","fromHex","secondaryHeadingColor","PeekViewWidget","options","instantiationService","_onDidClose","event","mixin","disposed","fire","style","styles","_applyStyles","_headElement","backgroundColor","toString","_primaryHeading","color","_secondaryHeading","_bodyElement","frameColor","borderColor","_fillContainer","container","setCssClass","$","_fillHead","_fillBody","appendChild","noCloseAction","_titleElement","supportOnTitleClick","classList","add","addStandardDisposableListener","_onTitleClick","append","_fillTitleIcon","_metaHeading","actionsContainer","actionBarOptions","_getActionBarOptions","_actionbarWidget","_disposables","push","asClassName","close","Promise","resolve","label","icon","actionViewItemProvider","bind","undefined","orientation","setTitle","primaryHeading","secondaryHeading","innerText","setAttribute","clearNode","setMetaTitle","value","show","hide","_doLayout","heightInPixel","widthInPixel","_isShowing","headHeight","Math","ceil","getOption","bodyHeight","round","_doLayoutHead","_doLayoutBody","height","lineHeight","peekViewTitleBackground","dark","light","hcDark","black","hcLight","peekViewTitleForeground","peekViewTitleInfoForeground","peekViewBorder","peekViewResultsBackground","peekViewResultsMatchForeground","peekViewResultsFileForeground","peekViewResultsSelectionBackground","peekViewResultsSelectionForeground","peekViewEditorBackground","peekViewEditorGutterBackground","peekViewEditorStickyScrollBackground","peekViewResultsMatchHighlight","peekViewEditorMatchHighlight","peekViewEditorMatchHighlightBorder"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/peekView/browser/peekView.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { Action } from '../../../../base/common/actions.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport * as objects from '../../../../base/common/objects.js';\nimport './media/peekViewWidget.css';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/embeddedCodeEditorWidget.js';\nimport { ZoneWidget } from '../../zoneWidget/browser/zoneWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { createActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { activeContrastBorder, contrastBorder, editorForeground, editorInfoForeground, registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nexport const IPeekViewService = createDecorator('IPeekViewService');\nregisterSingleton(IPeekViewService, class {\n    constructor() {\n        this._widgets = new Map();\n    }\n    addExclusiveWidget(editor, widget) {\n        const existing = this._widgets.get(editor);\n        if (existing) {\n            existing.listener.dispose();\n            existing.widget.dispose();\n        }\n        const remove = () => {\n            const data = this._widgets.get(editor);\n            if (data && data.widget === widget) {\n                data.listener.dispose();\n                this._widgets.delete(editor);\n            }\n        };\n        this._widgets.set(editor, { widget, listener: widget.onDidClose(remove) });\n    }\n}, 1 /* InstantiationType.Delayed */);\nexport var PeekContext;\n(function (PeekContext) {\n    PeekContext.inPeekEditor = new RawContextKey('inReferenceSearchEditor', true, nls.localize('inReferenceSearchEditor', \"Whether the current code editor is embedded inside peek\"));\n    PeekContext.notInPeekEditor = PeekContext.inPeekEditor.toNegated();\n})(PeekContext || (PeekContext = {}));\nlet PeekContextController = class PeekContextController {\n    constructor(editor, contextKeyService) {\n        if (editor instanceof EmbeddedCodeEditorWidget) {\n            PeekContext.inPeekEditor.bindTo(contextKeyService);\n        }\n    }\n    dispose() { }\n};\nPeekContextController.ID = 'editor.contrib.referenceController';\nPeekContextController = __decorate([\n    __param(1, IContextKeyService)\n], PeekContextController);\nregisterEditorContribution(PeekContextController.ID, PeekContextController, 0 /* EditorContributionInstantiation.Eager */); // eager because it needs to define a context key\nexport function getOuterEditor(accessor) {\n    const editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n    if (editor instanceof EmbeddedCodeEditorWidget) {\n        return editor.getParentEditor();\n    }\n    return editor;\n}\nconst defaultOptions = {\n    headerBackgroundColor: Color.white,\n    primaryHeadingColor: Color.fromHex('#333333'),\n    secondaryHeadingColor: Color.fromHex('#6c6c6cb3')\n};\nlet PeekViewWidget = class PeekViewWidget extends ZoneWidget {\n    constructor(editor, options, instantiationService) {\n        super(editor, options);\n        this.instantiationService = instantiationService;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        objects.mixin(this.options, defaultOptions, false);\n    }\n    dispose() {\n        if (!this.disposed) {\n            this.disposed = true; // prevent consumers who dispose on onDidClose from looping\n            super.dispose();\n            this._onDidClose.fire(this);\n        }\n    }\n    style(styles) {\n        const options = this.options;\n        if (styles.headerBackgroundColor) {\n            options.headerBackgroundColor = styles.headerBackgroundColor;\n        }\n        if (styles.primaryHeadingColor) {\n            options.primaryHeadingColor = styles.primaryHeadingColor;\n        }\n        if (styles.secondaryHeadingColor) {\n            options.secondaryHeadingColor = styles.secondaryHeadingColor;\n        }\n        super.style(styles);\n    }\n    _applyStyles() {\n        super._applyStyles();\n        const options = this.options;\n        if (this._headElement && options.headerBackgroundColor) {\n            this._headElement.style.backgroundColor = options.headerBackgroundColor.toString();\n        }\n        if (this._primaryHeading && options.primaryHeadingColor) {\n            this._primaryHeading.style.color = options.primaryHeadingColor.toString();\n        }\n        if (this._secondaryHeading && options.secondaryHeadingColor) {\n            this._secondaryHeading.style.color = options.secondaryHeadingColor.toString();\n        }\n        if (this._bodyElement && options.frameColor) {\n            this._bodyElement.style.borderColor = options.frameColor.toString();\n        }\n    }\n    _fillContainer(container) {\n        this.setCssClass('peekview-widget');\n        this._headElement = dom.$('.head');\n        this._bodyElement = dom.$('.body');\n        this._fillHead(this._headElement);\n        this._fillBody(this._bodyElement);\n        container.appendChild(this._headElement);\n        container.appendChild(this._bodyElement);\n    }\n    _fillHead(container, noCloseAction) {\n        this._titleElement = dom.$('.peekview-title');\n        if (this.options.supportOnTitleClick) {\n            this._titleElement.classList.add('clickable');\n            dom.addStandardDisposableListener(this._titleElement, 'click', event => this._onTitleClick(event));\n        }\n        dom.append(this._headElement, this._titleElement);\n        this._fillTitleIcon(this._titleElement);\n        this._primaryHeading = dom.$('span.filename');\n        this._secondaryHeading = dom.$('span.dirname');\n        this._metaHeading = dom.$('span.meta');\n        dom.append(this._titleElement, this._primaryHeading, this._secondaryHeading, this._metaHeading);\n        const actionsContainer = dom.$('.peekview-actions');\n        dom.append(this._headElement, actionsContainer);\n        const actionBarOptions = this._getActionBarOptions();\n        this._actionbarWidget = new ActionBar(actionsContainer, actionBarOptions);\n        this._disposables.add(this._actionbarWidget);\n        if (!noCloseAction) {\n            this._actionbarWidget.push(new Action('peekview.close', nls.localize('label.close', \"Close\"), ThemeIcon.asClassName(Codicon.close), true, () => {\n                this.dispose();\n                return Promise.resolve();\n            }), { label: false, icon: true });\n        }\n    }\n    _fillTitleIcon(container) {\n    }\n    _getActionBarOptions() {\n        return {\n            actionViewItemProvider: createActionViewItem.bind(undefined, this.instantiationService),\n            orientation: 0 /* ActionsOrientation.HORIZONTAL */\n        };\n    }\n    _onTitleClick(event) {\n        // implement me if supportOnTitleClick option is set\n    }\n    setTitle(primaryHeading, secondaryHeading) {\n        if (this._primaryHeading && this._secondaryHeading) {\n            this._primaryHeading.innerText = primaryHeading;\n            this._primaryHeading.setAttribute('title', primaryHeading);\n            if (secondaryHeading) {\n                this._secondaryHeading.innerText = secondaryHeading;\n            }\n            else {\n                dom.clearNode(this._secondaryHeading);\n            }\n        }\n    }\n    setMetaTitle(value) {\n        if (this._metaHeading) {\n            if (value) {\n                this._metaHeading.innerText = value;\n                dom.show(this._metaHeading);\n            }\n            else {\n                dom.hide(this._metaHeading);\n            }\n        }\n    }\n    _doLayout(heightInPixel, widthInPixel) {\n        if (!this._isShowing && heightInPixel < 0) {\n            // Looks like the view zone got folded away!\n            this.dispose();\n            return;\n        }\n        const headHeight = Math.ceil(this.editor.getOption(66 /* EditorOption.lineHeight */) * 1.2);\n        const bodyHeight = Math.round(heightInPixel - (headHeight + 2 /* the border-top/bottom width*/));\n        this._doLayoutHead(headHeight, widthInPixel);\n        this._doLayoutBody(bodyHeight, widthInPixel);\n    }\n    _doLayoutHead(heightInPixel, widthInPixel) {\n        if (this._headElement) {\n            this._headElement.style.height = `${heightInPixel}px`;\n            this._headElement.style.lineHeight = this._headElement.style.height;\n        }\n    }\n    _doLayoutBody(heightInPixel, widthInPixel) {\n        if (this._bodyElement) {\n            this._bodyElement.style.height = `${heightInPixel}px`;\n        }\n    }\n};\nPeekViewWidget = __decorate([\n    __param(2, IInstantiationService)\n], PeekViewWidget);\nexport { PeekViewWidget };\nexport const peekViewTitleBackground = registerColor('peekViewTitle.background', { dark: '#252526', light: '#F3F3F3', hcDark: Color.black, hcLight: Color.white }, nls.localize('peekViewTitleBackground', 'Background color of the peek view title area.'));\nexport const peekViewTitleForeground = registerColor('peekViewTitleLabel.foreground', { dark: Color.white, light: Color.black, hcDark: Color.white, hcLight: editorForeground }, nls.localize('peekViewTitleForeground', 'Color of the peek view title.'));\nexport const peekViewTitleInfoForeground = registerColor('peekViewTitleDescription.foreground', { dark: '#ccccccb3', light: '#616161', hcDark: '#FFFFFF99', hcLight: '#292929' }, nls.localize('peekViewTitleInfoForeground', 'Color of the peek view title info.'));\nexport const peekViewBorder = registerColor('peekView.border', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('peekViewBorder', 'Color of the peek view borders and arrow.'));\nexport const peekViewResultsBackground = registerColor('peekViewResult.background', { dark: '#252526', light: '#F3F3F3', hcDark: Color.black, hcLight: Color.white }, nls.localize('peekViewResultsBackground', 'Background color of the peek view result list.'));\nexport const peekViewResultsMatchForeground = registerColor('peekViewResult.lineForeground', { dark: '#bbbbbb', light: '#646465', hcDark: Color.white, hcLight: editorForeground }, nls.localize('peekViewResultsMatchForeground', 'Foreground color for line nodes in the peek view result list.'));\nexport const peekViewResultsFileForeground = registerColor('peekViewResult.fileForeground', { dark: Color.white, light: '#1E1E1E', hcDark: Color.white, hcLight: editorForeground }, nls.localize('peekViewResultsFileForeground', 'Foreground color for file nodes in the peek view result list.'));\nexport const peekViewResultsSelectionBackground = registerColor('peekViewResult.selectionBackground', { dark: '#3399ff33', light: '#3399ff33', hcDark: null, hcLight: null }, nls.localize('peekViewResultsSelectionBackground', 'Background color of the selected entry in the peek view result list.'));\nexport const peekViewResultsSelectionForeground = registerColor('peekViewResult.selectionForeground', { dark: Color.white, light: '#6C6C6C', hcDark: Color.white, hcLight: editorForeground }, nls.localize('peekViewResultsSelectionForeground', 'Foreground color of the selected entry in the peek view result list.'));\nexport const peekViewEditorBackground = registerColor('peekViewEditor.background', { dark: '#001F33', light: '#F2F8FC', hcDark: Color.black, hcLight: Color.white }, nls.localize('peekViewEditorBackground', 'Background color of the peek view editor.'));\nexport const peekViewEditorGutterBackground = registerColor('peekViewEditorGutter.background', { dark: peekViewEditorBackground, light: peekViewEditorBackground, hcDark: peekViewEditorBackground, hcLight: peekViewEditorBackground }, nls.localize('peekViewEditorGutterBackground', 'Background color of the gutter in the peek view editor.'));\nexport const peekViewEditorStickyScrollBackground = registerColor('peekViewEditorStickyScroll.background', { dark: peekViewEditorBackground, light: peekViewEditorBackground, hcDark: peekViewEditorBackground, hcLight: peekViewEditorBackground }, nls.localize('peekViewEditorStickScrollBackground', 'Background color of sticky scroll in the peek view editor.'));\nexport const peekViewResultsMatchHighlight = registerColor('peekViewResult.matchHighlightBackground', { dark: '#ea5c004d', light: '#ea5c004d', hcDark: null, hcLight: null }, nls.localize('peekViewResultsMatchHighlight', 'Match highlight color in the peek view result list.'));\nexport const peekViewEditorMatchHighlight = registerColor('peekViewEditor.matchHighlightBackground', { dark: '#ff8f0099', light: '#f5d802de', hcDark: null, hcLight: null }, nls.localize('peekViewEditorMatchHighlight', 'Match highlight color in the peek view editor.'));\nexport const peekViewEditorMatchHighlightBorder = registerColor('peekViewEditor.matchHighlightBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('peekViewEditorMatchHighlightBorder', 'Match highlight border in the peek view editor.'));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}