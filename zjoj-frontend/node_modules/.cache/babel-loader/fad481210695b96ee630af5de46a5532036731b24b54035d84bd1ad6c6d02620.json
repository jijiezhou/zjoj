{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../base/browser/dom.js';\nimport { GlobalPointerMoveMonitor } from '../../base/browser/globalPointerMoveMonitor.js';\nimport { StandardMouseEvent } from '../../base/browser/mouseEvent.js';\nimport { RunOnceScheduler } from '../../base/common/async.js';\nimport { Disposable, DisposableStore } from '../../base/common/lifecycle.js';\nimport { asCssVariable } from '../../platform/theme/common/colorRegistry.js';\n/**\n * Coordinates relative to the whole document (e.g. mouse event's pageX and pageY)\n */\nexport class PageCoordinates {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this._pageCoordinatesBrand = undefined;\n  }\n  toClientCoordinates(targetWindow) {\n    return new ClientCoordinates(this.x - targetWindow.scrollX, this.y - targetWindow.scrollY);\n  }\n}\n/**\n * Coordinates within the application's client area (i.e. origin is document's scroll position).\n *\n * For example, clicking in the top-left corner of the client area will\n * always result in a mouse event with a client.x value of 0, regardless\n * of whether the page is scrolled horizontally.\n */\nexport class ClientCoordinates {\n  constructor(clientX, clientY) {\n    this.clientX = clientX;\n    this.clientY = clientY;\n    this._clientCoordinatesBrand = undefined;\n  }\n  toPageCoordinates(targetWindow) {\n    return new PageCoordinates(this.clientX + targetWindow.scrollX, this.clientY + targetWindow.scrollY);\n  }\n}\n/**\n * The position of the editor in the page.\n */\nexport class EditorPagePosition {\n  constructor(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this._editorPagePositionBrand = undefined;\n  }\n}\n/**\n * Coordinates relative to the the (top;left) of the editor that can be used safely with other internal editor metrics.\n * **NOTE**: This position is obtained by taking page coordinates and transforming them relative to the\n * editor's (top;left) position in a way in which scale transformations are taken into account.\n * **NOTE**: These coordinates could be negative if the mouse position is outside the editor.\n */\nexport class CoordinatesRelativeToEditor {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this._positionRelativeToEditorBrand = undefined;\n  }\n}\nexport function createEditorPagePosition(editorViewDomNode) {\n  const editorPos = dom.getDomNodePagePosition(editorViewDomNode);\n  return new EditorPagePosition(editorPos.left, editorPos.top, editorPos.width, editorPos.height);\n}\nexport function createCoordinatesRelativeToEditor(editorViewDomNode, editorPagePosition, pos) {\n  // The editor's page position is read from the DOM using getBoundingClientRect().\n  //\n  // getBoundingClientRect() returns the actual dimensions, while offsetWidth and offsetHeight\n  // reflect the unscaled size. We can use this difference to detect a transform:scale()\n  // and we will apply the transformation in inverse to get mouse coordinates that make sense inside the editor.\n  //\n  // This could be expanded to cover rotation as well maybe by walking the DOM up from `editorViewDomNode`\n  // and computing the effective transformation matrix using getComputedStyle(element).transform.\n  //\n  const scaleX = editorPagePosition.width / editorViewDomNode.offsetWidth;\n  const scaleY = editorPagePosition.height / editorViewDomNode.offsetHeight;\n  // Adjust mouse offsets if editor appears to be scaled via transforms\n  const relativeX = (pos.x - editorPagePosition.x) / scaleX;\n  const relativeY = (pos.y - editorPagePosition.y) / scaleY;\n  return new CoordinatesRelativeToEditor(relativeX, relativeY);\n}\nexport class EditorMouseEvent extends StandardMouseEvent {\n  constructor(e, isFromPointerCapture, editorViewDomNode) {\n    super(dom.getWindow(editorViewDomNode), e);\n    this._editorMouseEventBrand = undefined;\n    this.isFromPointerCapture = isFromPointerCapture;\n    this.pos = new PageCoordinates(this.posx, this.posy);\n    this.editorPos = createEditorPagePosition(editorViewDomNode);\n    this.relativePos = createCoordinatesRelativeToEditor(editorViewDomNode, this.editorPos, this.pos);\n  }\n}\nexport class EditorMouseEventFactory {\n  constructor(editorViewDomNode) {\n    this._editorViewDomNode = editorViewDomNode;\n  }\n  _create(e) {\n    return new EditorMouseEvent(e, false, this._editorViewDomNode);\n  }\n  onContextMenu(target, callback) {\n    return dom.addDisposableListener(target, 'contextmenu', e => {\n      callback(this._create(e));\n    });\n  }\n  onMouseUp(target, callback) {\n    return dom.addDisposableListener(target, 'mouseup', e => {\n      callback(this._create(e));\n    });\n  }\n  onMouseDown(target, callback) {\n    return dom.addDisposableListener(target, dom.EventType.MOUSE_DOWN, e => {\n      callback(this._create(e));\n    });\n  }\n  onPointerDown(target, callback) {\n    return dom.addDisposableListener(target, dom.EventType.POINTER_DOWN, e => {\n      callback(this._create(e), e.pointerId);\n    });\n  }\n  onMouseLeave(target, callback) {\n    return dom.addDisposableListener(target, dom.EventType.MOUSE_LEAVE, e => {\n      callback(this._create(e));\n    });\n  }\n  onMouseMove(target, callback) {\n    return dom.addDisposableListener(target, 'mousemove', e => callback(this._create(e)));\n  }\n}\nexport class EditorPointerEventFactory {\n  constructor(editorViewDomNode) {\n    this._editorViewDomNode = editorViewDomNode;\n  }\n  _create(e) {\n    return new EditorMouseEvent(e, false, this._editorViewDomNode);\n  }\n  onPointerUp(target, callback) {\n    return dom.addDisposableListener(target, 'pointerup', e => {\n      callback(this._create(e));\n    });\n  }\n  onPointerDown(target, callback) {\n    return dom.addDisposableListener(target, dom.EventType.POINTER_DOWN, e => {\n      callback(this._create(e), e.pointerId);\n    });\n  }\n  onPointerLeave(target, callback) {\n    return dom.addDisposableListener(target, dom.EventType.POINTER_LEAVE, e => {\n      callback(this._create(e));\n    });\n  }\n  onPointerMove(target, callback) {\n    return dom.addDisposableListener(target, 'pointermove', e => callback(this._create(e)));\n  }\n}\nexport class GlobalEditorPointerMoveMonitor extends Disposable {\n  constructor(editorViewDomNode) {\n    super();\n    this._editorViewDomNode = editorViewDomNode;\n    this._globalPointerMoveMonitor = this._register(new GlobalPointerMoveMonitor());\n    this._keydownListener = null;\n  }\n  startMonitoring(initialElement, pointerId, initialButtons, pointerMoveCallback, onStopCallback) {\n    // Add a <<capture>> keydown event listener that will cancel the monitoring\n    // if something other than a modifier key is pressed\n    this._keydownListener = dom.addStandardDisposableListener(initialElement.ownerDocument, 'keydown', e => {\n      const chord = e.toKeyCodeChord();\n      if (chord.isModifierKey()) {\n        // Allow modifier keys\n        return;\n      }\n      this._globalPointerMoveMonitor.stopMonitoring(true, e.browserEvent);\n    }, true);\n    this._globalPointerMoveMonitor.startMonitoring(initialElement, pointerId, initialButtons, e => {\n      pointerMoveCallback(new EditorMouseEvent(e, true, this._editorViewDomNode));\n    }, e => {\n      this._keydownListener.dispose();\n      onStopCallback(e);\n    });\n  }\n  stopMonitoring() {\n    this._globalPointerMoveMonitor.stopMonitoring(true);\n  }\n}\n/**\n * A helper to create dynamic css rules, bound to a class name.\n * Rules are reused.\n * Reference counting and delayed garbage collection ensure that no rules leak.\n*/\nexport class DynamicCssRules {\n  constructor(_editor) {\n    this._editor = _editor;\n    this._instanceId = ++DynamicCssRules._idPool;\n    this._counter = 0;\n    this._rules = new Map();\n    // We delay garbage collection so that hanging rules can be reused.\n    this._garbageCollectionScheduler = new RunOnceScheduler(() => this.garbageCollect(), 1000);\n  }\n  createClassNameRef(options) {\n    const rule = this.getOrCreateRule(options);\n    rule.increaseRefCount();\n    return {\n      className: rule.className,\n      dispose: () => {\n        rule.decreaseRefCount();\n        this._garbageCollectionScheduler.schedule();\n      }\n    };\n  }\n  getOrCreateRule(properties) {\n    const key = this.computeUniqueKey(properties);\n    let existingRule = this._rules.get(key);\n    if (!existingRule) {\n      const counter = this._counter++;\n      existingRule = new RefCountedCssRule(key, `dyn-rule-${this._instanceId}-${counter}`, dom.isInShadowDOM(this._editor.getContainerDomNode()) ? this._editor.getContainerDomNode() : undefined, properties);\n      this._rules.set(key, existingRule);\n    }\n    return existingRule;\n  }\n  computeUniqueKey(properties) {\n    return JSON.stringify(properties);\n  }\n  garbageCollect() {\n    for (const rule of this._rules.values()) {\n      if (!rule.hasReferences()) {\n        this._rules.delete(rule.key);\n        rule.dispose();\n      }\n    }\n  }\n}\nDynamicCssRules._idPool = 0;\nclass RefCountedCssRule {\n  constructor(key, className, _containerElement, properties) {\n    this.key = key;\n    this.className = className;\n    this.properties = properties;\n    this._referenceCount = 0;\n    this._styleElementDisposables = new DisposableStore();\n    this._styleElement = dom.createStyleSheet(_containerElement, undefined, this._styleElementDisposables);\n    this._styleElement.textContent = this.getCssText(this.className, this.properties);\n  }\n  getCssText(className, properties) {\n    let str = `.${className} {`;\n    for (const prop in properties) {\n      const value = properties[prop];\n      let cssValue;\n      if (typeof value === 'object') {\n        cssValue = asCssVariable(value.id);\n      } else {\n        cssValue = value;\n      }\n      const cssPropName = camelToDashes(prop);\n      str += `\\n\\t${cssPropName}: ${cssValue};`;\n    }\n    str += `\\n}`;\n    return str;\n  }\n  dispose() {\n    this._styleElementDisposables.dispose();\n    this._styleElement = undefined;\n  }\n  increaseRefCount() {\n    this._referenceCount++;\n  }\n  decreaseRefCount() {\n    this._referenceCount--;\n  }\n  hasReferences() {\n    return this._referenceCount > 0;\n  }\n}\nfunction camelToDashes(str) {\n  return str.replace(/(^[A-Z])/, ([first]) => first.toLowerCase()).replace(/([A-Z])/g, ([letter]) => `-${letter.toLowerCase()}`);\n}","map":{"version":3,"names":["dom","GlobalPointerMoveMonitor","StandardMouseEvent","RunOnceScheduler","Disposable","DisposableStore","asCssVariable","PageCoordinates","constructor","x","y","_pageCoordinatesBrand","undefined","toClientCoordinates","targetWindow","ClientCoordinates","scrollX","scrollY","clientX","clientY","_clientCoordinatesBrand","toPageCoordinates","EditorPagePosition","width","height","_editorPagePositionBrand","CoordinatesRelativeToEditor","_positionRelativeToEditorBrand","createEditorPagePosition","editorViewDomNode","editorPos","getDomNodePagePosition","left","top","createCoordinatesRelativeToEditor","editorPagePosition","pos","scaleX","offsetWidth","scaleY","offsetHeight","relativeX","relativeY","EditorMouseEvent","e","isFromPointerCapture","getWindow","_editorMouseEventBrand","posx","posy","relativePos","EditorMouseEventFactory","_editorViewDomNode","_create","onContextMenu","target","callback","addDisposableListener","onMouseUp","onMouseDown","EventType","MOUSE_DOWN","onPointerDown","POINTER_DOWN","pointerId","onMouseLeave","MOUSE_LEAVE","onMouseMove","EditorPointerEventFactory","onPointerUp","onPointerLeave","POINTER_LEAVE","onPointerMove","GlobalEditorPointerMoveMonitor","_globalPointerMoveMonitor","_register","_keydownListener","startMonitoring","initialElement","initialButtons","pointerMoveCallback","onStopCallback","addStandardDisposableListener","ownerDocument","chord","toKeyCodeChord","isModifierKey","stopMonitoring","browserEvent","dispose","DynamicCssRules","_editor","_instanceId","_idPool","_counter","_rules","Map","_garbageCollectionScheduler","garbageCollect","createClassNameRef","options","rule","getOrCreateRule","increaseRefCount","className","decreaseRefCount","schedule","properties","key","computeUniqueKey","existingRule","get","counter","RefCountedCssRule","isInShadowDOM","getContainerDomNode","set","JSON","stringify","values","hasReferences","delete","_containerElement","_referenceCount","_styleElementDisposables","_styleElement","createStyleSheet","textContent","getCssText","str","prop","value","cssValue","id","cssPropName","camelToDashes","replace","first","toLowerCase","letter"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/browser/editorDom.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../base/browser/dom.js';\nimport { GlobalPointerMoveMonitor } from '../../base/browser/globalPointerMoveMonitor.js';\nimport { StandardMouseEvent } from '../../base/browser/mouseEvent.js';\nimport { RunOnceScheduler } from '../../base/common/async.js';\nimport { Disposable, DisposableStore } from '../../base/common/lifecycle.js';\nimport { asCssVariable } from '../../platform/theme/common/colorRegistry.js';\n/**\n * Coordinates relative to the whole document (e.g. mouse event's pageX and pageY)\n */\nexport class PageCoordinates {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this._pageCoordinatesBrand = undefined;\n    }\n    toClientCoordinates(targetWindow) {\n        return new ClientCoordinates(this.x - targetWindow.scrollX, this.y - targetWindow.scrollY);\n    }\n}\n/**\n * Coordinates within the application's client area (i.e. origin is document's scroll position).\n *\n * For example, clicking in the top-left corner of the client area will\n * always result in a mouse event with a client.x value of 0, regardless\n * of whether the page is scrolled horizontally.\n */\nexport class ClientCoordinates {\n    constructor(clientX, clientY) {\n        this.clientX = clientX;\n        this.clientY = clientY;\n        this._clientCoordinatesBrand = undefined;\n    }\n    toPageCoordinates(targetWindow) {\n        return new PageCoordinates(this.clientX + targetWindow.scrollX, this.clientY + targetWindow.scrollY);\n    }\n}\n/**\n * The position of the editor in the page.\n */\nexport class EditorPagePosition {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this._editorPagePositionBrand = undefined;\n    }\n}\n/**\n * Coordinates relative to the the (top;left) of the editor that can be used safely with other internal editor metrics.\n * **NOTE**: This position is obtained by taking page coordinates and transforming them relative to the\n * editor's (top;left) position in a way in which scale transformations are taken into account.\n * **NOTE**: These coordinates could be negative if the mouse position is outside the editor.\n */\nexport class CoordinatesRelativeToEditor {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this._positionRelativeToEditorBrand = undefined;\n    }\n}\nexport function createEditorPagePosition(editorViewDomNode) {\n    const editorPos = dom.getDomNodePagePosition(editorViewDomNode);\n    return new EditorPagePosition(editorPos.left, editorPos.top, editorPos.width, editorPos.height);\n}\nexport function createCoordinatesRelativeToEditor(editorViewDomNode, editorPagePosition, pos) {\n    // The editor's page position is read from the DOM using getBoundingClientRect().\n    //\n    // getBoundingClientRect() returns the actual dimensions, while offsetWidth and offsetHeight\n    // reflect the unscaled size. We can use this difference to detect a transform:scale()\n    // and we will apply the transformation in inverse to get mouse coordinates that make sense inside the editor.\n    //\n    // This could be expanded to cover rotation as well maybe by walking the DOM up from `editorViewDomNode`\n    // and computing the effective transformation matrix using getComputedStyle(element).transform.\n    //\n    const scaleX = editorPagePosition.width / editorViewDomNode.offsetWidth;\n    const scaleY = editorPagePosition.height / editorViewDomNode.offsetHeight;\n    // Adjust mouse offsets if editor appears to be scaled via transforms\n    const relativeX = (pos.x - editorPagePosition.x) / scaleX;\n    const relativeY = (pos.y - editorPagePosition.y) / scaleY;\n    return new CoordinatesRelativeToEditor(relativeX, relativeY);\n}\nexport class EditorMouseEvent extends StandardMouseEvent {\n    constructor(e, isFromPointerCapture, editorViewDomNode) {\n        super(dom.getWindow(editorViewDomNode), e);\n        this._editorMouseEventBrand = undefined;\n        this.isFromPointerCapture = isFromPointerCapture;\n        this.pos = new PageCoordinates(this.posx, this.posy);\n        this.editorPos = createEditorPagePosition(editorViewDomNode);\n        this.relativePos = createCoordinatesRelativeToEditor(editorViewDomNode, this.editorPos, this.pos);\n    }\n}\nexport class EditorMouseEventFactory {\n    constructor(editorViewDomNode) {\n        this._editorViewDomNode = editorViewDomNode;\n    }\n    _create(e) {\n        return new EditorMouseEvent(e, false, this._editorViewDomNode);\n    }\n    onContextMenu(target, callback) {\n        return dom.addDisposableListener(target, 'contextmenu', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseUp(target, callback) {\n        return dom.addDisposableListener(target, 'mouseup', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.MOUSE_DOWN, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_DOWN, (e) => {\n            callback(this._create(e), e.pointerId);\n        });\n    }\n    onMouseLeave(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.MOUSE_LEAVE, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseMove(target, callback) {\n        return dom.addDisposableListener(target, 'mousemove', (e) => callback(this._create(e)));\n    }\n}\nexport class EditorPointerEventFactory {\n    constructor(editorViewDomNode) {\n        this._editorViewDomNode = editorViewDomNode;\n    }\n    _create(e) {\n        return new EditorMouseEvent(e, false, this._editorViewDomNode);\n    }\n    onPointerUp(target, callback) {\n        return dom.addDisposableListener(target, 'pointerup', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_DOWN, (e) => {\n            callback(this._create(e), e.pointerId);\n        });\n    }\n    onPointerLeave(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_LEAVE, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerMove(target, callback) {\n        return dom.addDisposableListener(target, 'pointermove', (e) => callback(this._create(e)));\n    }\n}\nexport class GlobalEditorPointerMoveMonitor extends Disposable {\n    constructor(editorViewDomNode) {\n        super();\n        this._editorViewDomNode = editorViewDomNode;\n        this._globalPointerMoveMonitor = this._register(new GlobalPointerMoveMonitor());\n        this._keydownListener = null;\n    }\n    startMonitoring(initialElement, pointerId, initialButtons, pointerMoveCallback, onStopCallback) {\n        // Add a <<capture>> keydown event listener that will cancel the monitoring\n        // if something other than a modifier key is pressed\n        this._keydownListener = dom.addStandardDisposableListener(initialElement.ownerDocument, 'keydown', (e) => {\n            const chord = e.toKeyCodeChord();\n            if (chord.isModifierKey()) {\n                // Allow modifier keys\n                return;\n            }\n            this._globalPointerMoveMonitor.stopMonitoring(true, e.browserEvent);\n        }, true);\n        this._globalPointerMoveMonitor.startMonitoring(initialElement, pointerId, initialButtons, (e) => {\n            pointerMoveCallback(new EditorMouseEvent(e, true, this._editorViewDomNode));\n        }, (e) => {\n            this._keydownListener.dispose();\n            onStopCallback(e);\n        });\n    }\n    stopMonitoring() {\n        this._globalPointerMoveMonitor.stopMonitoring(true);\n    }\n}\n/**\n * A helper to create dynamic css rules, bound to a class name.\n * Rules are reused.\n * Reference counting and delayed garbage collection ensure that no rules leak.\n*/\nexport class DynamicCssRules {\n    constructor(_editor) {\n        this._editor = _editor;\n        this._instanceId = ++DynamicCssRules._idPool;\n        this._counter = 0;\n        this._rules = new Map();\n        // We delay garbage collection so that hanging rules can be reused.\n        this._garbageCollectionScheduler = new RunOnceScheduler(() => this.garbageCollect(), 1000);\n    }\n    createClassNameRef(options) {\n        const rule = this.getOrCreateRule(options);\n        rule.increaseRefCount();\n        return {\n            className: rule.className,\n            dispose: () => {\n                rule.decreaseRefCount();\n                this._garbageCollectionScheduler.schedule();\n            }\n        };\n    }\n    getOrCreateRule(properties) {\n        const key = this.computeUniqueKey(properties);\n        let existingRule = this._rules.get(key);\n        if (!existingRule) {\n            const counter = this._counter++;\n            existingRule = new RefCountedCssRule(key, `dyn-rule-${this._instanceId}-${counter}`, dom.isInShadowDOM(this._editor.getContainerDomNode())\n                ? this._editor.getContainerDomNode()\n                : undefined, properties);\n            this._rules.set(key, existingRule);\n        }\n        return existingRule;\n    }\n    computeUniqueKey(properties) {\n        return JSON.stringify(properties);\n    }\n    garbageCollect() {\n        for (const rule of this._rules.values()) {\n            if (!rule.hasReferences()) {\n                this._rules.delete(rule.key);\n                rule.dispose();\n            }\n        }\n    }\n}\nDynamicCssRules._idPool = 0;\nclass RefCountedCssRule {\n    constructor(key, className, _containerElement, properties) {\n        this.key = key;\n        this.className = className;\n        this.properties = properties;\n        this._referenceCount = 0;\n        this._styleElementDisposables = new DisposableStore();\n        this._styleElement = dom.createStyleSheet(_containerElement, undefined, this._styleElementDisposables);\n        this._styleElement.textContent = this.getCssText(this.className, this.properties);\n    }\n    getCssText(className, properties) {\n        let str = `.${className} {`;\n        for (const prop in properties) {\n            const value = properties[prop];\n            let cssValue;\n            if (typeof value === 'object') {\n                cssValue = asCssVariable(value.id);\n            }\n            else {\n                cssValue = value;\n            }\n            const cssPropName = camelToDashes(prop);\n            str += `\\n\\t${cssPropName}: ${cssValue};`;\n        }\n        str += `\\n}`;\n        return str;\n    }\n    dispose() {\n        this._styleElementDisposables.dispose();\n        this._styleElement = undefined;\n    }\n    increaseRefCount() {\n        this._referenceCount++;\n    }\n    decreaseRefCount() {\n        this._referenceCount--;\n    }\n    hasReferences() {\n        return this._referenceCount > 0;\n    }\n}\nfunction camelToDashes(str) {\n    return str.replace(/(^[A-Z])/, ([first]) => first.toLowerCase())\n        .replace(/([A-Z])/g, ([letter]) => `-${letter.toLowerCase()}`);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}