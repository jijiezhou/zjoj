{"ast":null,"code":"import { toRefs, computed, reactive, ref, watch } from \"vue\";\nimport { getDayjsValue, getNow, methods } from \"../../_utils/date.js\";\nimport usePanelSpan from \"./use-panel-span.js\";\nfunction useHeaderValue(props) {\n  const {\n    mode,\n    value,\n    defaultValue,\n    selectedValue,\n    format,\n    onChange\n  } = toRefs(props);\n  const computedMode = computed(() => (mode == null ? void 0 : mode.value) || \"date\");\n  const {\n    span,\n    superSpan\n  } = usePanelSpan(reactive({\n    mode: computedMode\n  }));\n  const isSame = (current, target) => {\n    const unit = computedMode.value === \"date\" || computedMode.value === \"week\" ? \"M\" : \"y\";\n    return current.isSame(target, unit);\n  };\n  const computedValue = computed(() => getDayjsValue(value == null ? void 0 : value.value, format.value));\n  const computedDefaultValue = computed(() => getDayjsValue(defaultValue == null ? void 0 : defaultValue.value, format.value));\n  const localValue = ref(computedDefaultValue.value || getNow());\n  const headerValue = computed(() => computedValue.value || localValue.value);\n  const setLocalValue = newVal => {\n    if (!newVal) return;\n    localValue.value = newVal;\n  };\n  const setHeaderValue = (newVal, emitChange = true) => {\n    var _a;\n    if (!newVal) return;\n    if (emitChange && !isSame(headerValue.value, newVal)) {\n      (_a = onChange == null ? void 0 : onChange.value) == null ? void 0 : _a.call(onChange, newVal);\n    }\n    setLocalValue(newVal);\n  };\n  if (selectedValue == null ? void 0 : selectedValue.value) {\n    setLocalValue(selectedValue.value);\n  }\n  watch(() => selectedValue == null ? void 0 : selectedValue.value, newVal => {\n    setHeaderValue(newVal);\n  });\n  function getDefaultLocalValue() {\n    return (selectedValue == null ? void 0 : selectedValue.value) || computedDefaultValue.value || getNow();\n  }\n  function resetHeaderValue(emitChange = true) {\n    const defaultLocalValue = getDefaultLocalValue();\n    if (emitChange) {\n      setHeaderValue(defaultLocalValue);\n    } else {\n      setLocalValue(defaultLocalValue);\n    }\n  }\n  const showSingleBtn = computed(() => span.value !== superSpan.value);\n  const headerOperations = computed(() => ({\n    onSuperPrev: () => {\n      setHeaderValue(methods.subtract(headerValue.value, superSpan.value, \"M\"));\n    },\n    onPrev: showSingleBtn.value ? () => {\n      setHeaderValue(methods.subtract(headerValue.value, span.value, \"M\"));\n    } : void 0,\n    onNext: showSingleBtn.value ? () => {\n      setHeaderValue(methods.add(headerValue.value, span.value, \"M\"));\n    } : void 0,\n    onSuperNext: () => {\n      setHeaderValue(methods.add(headerValue.value, superSpan.value, \"M\"));\n    }\n  }));\n  return {\n    headerValue,\n    setHeaderValue,\n    headerOperations,\n    resetHeaderValue,\n    getDefaultLocalValue\n  };\n}\nexport { useHeaderValue as default };","map":{"version":3,"names":["toRefs","computed","reactive","ref","watch","getDayjsValue","getNow","methods","usePanelSpan","useHeaderValue","props","mode","value","defaultValue","selectedValue","format","onChange","computedMode","span","superSpan","isSame","current","target","unit","computedValue","computedDefaultValue","localValue","headerValue","setLocalValue","newVal","setHeaderValue","emitChange","_a","call","getDefaultLocalValue","resetHeaderValue","defaultLocalValue","showSingleBtn","headerOperations","onSuperPrev","subtract","onPrev","onNext","add","onSuperNext","default"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/@arco-design/web-vue/es/date-picker/hooks/use-header-value.js"],"sourcesContent":["import { toRefs, computed, reactive, ref, watch } from \"vue\";\nimport { getDayjsValue, getNow, methods } from \"../../_utils/date.js\";\nimport usePanelSpan from \"./use-panel-span.js\";\nfunction useHeaderValue(props) {\n  const { mode, value, defaultValue, selectedValue, format, onChange } = toRefs(props);\n  const computedMode = computed(() => (mode == null ? void 0 : mode.value) || \"date\");\n  const { span, superSpan } = usePanelSpan(reactive({\n    mode: computedMode\n  }));\n  const isSame = (current, target) => {\n    const unit = computedMode.value === \"date\" || computedMode.value === \"week\" ? \"M\" : \"y\";\n    return current.isSame(target, unit);\n  };\n  const computedValue = computed(() => getDayjsValue(value == null ? void 0 : value.value, format.value));\n  const computedDefaultValue = computed(() => getDayjsValue(defaultValue == null ? void 0 : defaultValue.value, format.value));\n  const localValue = ref(computedDefaultValue.value || getNow());\n  const headerValue = computed(() => computedValue.value || localValue.value);\n  const setLocalValue = (newVal) => {\n    if (!newVal)\n      return;\n    localValue.value = newVal;\n  };\n  const setHeaderValue = (newVal, emitChange = true) => {\n    var _a;\n    if (!newVal)\n      return;\n    if (emitChange && !isSame(headerValue.value, newVal)) {\n      (_a = onChange == null ? void 0 : onChange.value) == null ? void 0 : _a.call(onChange, newVal);\n    }\n    setLocalValue(newVal);\n  };\n  if (selectedValue == null ? void 0 : selectedValue.value) {\n    setLocalValue(selectedValue.value);\n  }\n  watch(() => selectedValue == null ? void 0 : selectedValue.value, (newVal) => {\n    setHeaderValue(newVal);\n  });\n  function getDefaultLocalValue() {\n    return (selectedValue == null ? void 0 : selectedValue.value) || computedDefaultValue.value || getNow();\n  }\n  function resetHeaderValue(emitChange = true) {\n    const defaultLocalValue = getDefaultLocalValue();\n    if (emitChange) {\n      setHeaderValue(defaultLocalValue);\n    } else {\n      setLocalValue(defaultLocalValue);\n    }\n  }\n  const showSingleBtn = computed(() => span.value !== superSpan.value);\n  const headerOperations = computed(() => ({\n    onSuperPrev: () => {\n      setHeaderValue(methods.subtract(headerValue.value, superSpan.value, \"M\"));\n    },\n    onPrev: showSingleBtn.value ? () => {\n      setHeaderValue(methods.subtract(headerValue.value, span.value, \"M\"));\n    } : void 0,\n    onNext: showSingleBtn.value ? () => {\n      setHeaderValue(methods.add(headerValue.value, span.value, \"M\"));\n    } : void 0,\n    onSuperNext: () => {\n      setHeaderValue(methods.add(headerValue.value, superSpan.value, \"M\"));\n    }\n  }));\n  return {\n    headerValue,\n    setHeaderValue,\n    headerOperations,\n    resetHeaderValue,\n    getDefaultLocalValue\n  };\n}\nexport { useHeaderValue as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}