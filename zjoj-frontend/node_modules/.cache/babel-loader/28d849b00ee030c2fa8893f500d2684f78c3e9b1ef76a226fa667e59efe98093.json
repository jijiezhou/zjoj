{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorCommand } from '../../../browser/editorExtensions.js';\nimport { WordPartOperations } from '../../../common/cursor/cursorWordOperations.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { DeleteWordCommand, MoveWordCommand } from '../../wordOperations/browser/wordOperations.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nexport class DeleteWordPartLeft extends DeleteWordCommand {\n  constructor() {\n    super({\n      whitespaceHeuristics: true,\n      wordNavigationType: 0 /* WordNavigationType.WordStart */,\n      id: 'deleteWordPartLeft',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 1 /* KeyCode.Backspace */\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  _delete(ctx, wordNavigationType) {\n    const r = WordPartOperations.deleteWordPartLeft(ctx);\n    if (r) {\n      return r;\n    }\n    return new Range(1, 1, 1, 1);\n  }\n}\nexport class DeleteWordPartRight extends DeleteWordCommand {\n  constructor() {\n    super({\n      whitespaceHeuristics: true,\n      wordNavigationType: 2 /* WordNavigationType.WordEnd */,\n      id: 'deleteWordPartRight',\n      precondition: EditorContextKeys.writable,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 20 /* KeyCode.Delete */\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  _delete(ctx, wordNavigationType) {\n    const r = WordPartOperations.deleteWordPartRight(ctx);\n    if (r) {\n      return r;\n    }\n    const lineCount = ctx.model.getLineCount();\n    const maxColumn = ctx.model.getLineMaxColumn(lineCount);\n    return new Range(lineCount, maxColumn, lineCount, maxColumn);\n  }\n}\nexport class WordPartLeftCommand extends MoveWordCommand {\n  _move(wordSeparators, model, position, wordNavigationType) {\n    return WordPartOperations.moveWordPartLeft(wordSeparators, model, position);\n  }\n}\nexport class CursorWordPartLeft extends WordPartLeftCommand {\n  constructor() {\n    super({\n      inSelectionMode: false,\n      wordNavigationType: 0 /* WordNavigationType.WordStart */,\n      id: 'cursorWordPartLeft',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 15 /* KeyCode.LeftArrow */\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n}\n// Register previous id for compatibility purposes\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeft', 'cursorWordPartLeft');\nexport class CursorWordPartLeftSelect extends WordPartLeftCommand {\n  constructor() {\n    super({\n      inSelectionMode: true,\n      wordNavigationType: 0 /* WordNavigationType.WordStart */,\n      id: 'cursorWordPartLeftSelect',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n}\n// Register previous id for compatibility purposes\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeftSelect', 'cursorWordPartLeftSelect');\nexport class WordPartRightCommand extends MoveWordCommand {\n  _move(wordSeparators, model, position, wordNavigationType) {\n    return WordPartOperations.moveWordPartRight(wordSeparators, model, position);\n  }\n}\nexport class CursorWordPartRight extends WordPartRightCommand {\n  constructor() {\n    super({\n      inSelectionMode: false,\n      wordNavigationType: 2 /* WordNavigationType.WordEnd */,\n      id: 'cursorWordPartRight',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 17 /* KeyCode.RightArrow */\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n}\nexport class CursorWordPartRightSelect extends WordPartRightCommand {\n  constructor() {\n    super({\n      inSelectionMode: true,\n      wordNavigationType: 2 /* WordNavigationType.WordEnd */,\n      id: 'cursorWordPartRightSelect',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 0,\n        mac: {\n          primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n}\nregisterEditorCommand(new DeleteWordPartLeft());\nregisterEditorCommand(new DeleteWordPartRight());\nregisterEditorCommand(new CursorWordPartLeft());\nregisterEditorCommand(new CursorWordPartLeftSelect());\nregisterEditorCommand(new CursorWordPartRight());\nregisterEditorCommand(new CursorWordPartRightSelect());","map":{"version":3,"names":["registerEditorCommand","WordPartOperations","Range","EditorContextKeys","DeleteWordCommand","MoveWordCommand","CommandsRegistry","DeleteWordPartLeft","constructor","whitespaceHeuristics","wordNavigationType","id","precondition","writable","kbOpts","kbExpr","textInputFocus","primary","mac","weight","_delete","ctx","r","deleteWordPartLeft","DeleteWordPartRight","deleteWordPartRight","lineCount","model","getLineCount","maxColumn","getLineMaxColumn","WordPartLeftCommand","_move","wordSeparators","position","moveWordPartLeft","CursorWordPartLeft","inSelectionMode","undefined","registerCommandAlias","CursorWordPartLeftSelect","WordPartRightCommand","moveWordPartRight","CursorWordPartRight","CursorWordPartRightSelect"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/wordPartOperations/browser/wordPartOperations.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorCommand } from '../../../browser/editorExtensions.js';\nimport { WordPartOperations } from '../../../common/cursor/cursorWordOperations.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { DeleteWordCommand, MoveWordCommand } from '../../wordOperations/browser/wordOperations.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nexport class DeleteWordPartLeft extends DeleteWordCommand {\n    constructor() {\n        super({\n            whitespaceHeuristics: true,\n            wordNavigationType: 0 /* WordNavigationType.WordStart */,\n            id: 'deleteWordPartLeft',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 1 /* KeyCode.Backspace */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _delete(ctx, wordNavigationType) {\n        const r = WordPartOperations.deleteWordPartLeft(ctx);\n        if (r) {\n            return r;\n        }\n        return new Range(1, 1, 1, 1);\n    }\n}\nexport class DeleteWordPartRight extends DeleteWordCommand {\n    constructor() {\n        super({\n            whitespaceHeuristics: true,\n            wordNavigationType: 2 /* WordNavigationType.WordEnd */,\n            id: 'deleteWordPartRight',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 20 /* KeyCode.Delete */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _delete(ctx, wordNavigationType) {\n        const r = WordPartOperations.deleteWordPartRight(ctx);\n        if (r) {\n            return r;\n        }\n        const lineCount = ctx.model.getLineCount();\n        const maxColumn = ctx.model.getLineMaxColumn(lineCount);\n        return new Range(lineCount, maxColumn, lineCount, maxColumn);\n    }\n}\nexport class WordPartLeftCommand extends MoveWordCommand {\n    _move(wordSeparators, model, position, wordNavigationType) {\n        return WordPartOperations.moveWordPartLeft(wordSeparators, model, position);\n    }\n}\nexport class CursorWordPartLeft extends WordPartLeftCommand {\n    constructor() {\n        super({\n            inSelectionMode: false,\n            wordNavigationType: 0 /* WordNavigationType.WordStart */,\n            id: 'cursorWordPartLeft',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 15 /* KeyCode.LeftArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n}\n// Register previous id for compatibility purposes\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeft', 'cursorWordPartLeft');\nexport class CursorWordPartLeftSelect extends WordPartLeftCommand {\n    constructor() {\n        super({\n            inSelectionMode: true,\n            wordNavigationType: 0 /* WordNavigationType.WordStart */,\n            id: 'cursorWordPartLeftSelect',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n}\n// Register previous id for compatibility purposes\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeftSelect', 'cursorWordPartLeftSelect');\nexport class WordPartRightCommand extends MoveWordCommand {\n    _move(wordSeparators, model, position, wordNavigationType) {\n        return WordPartOperations.moveWordPartRight(wordSeparators, model, position);\n    }\n}\nexport class CursorWordPartRight extends WordPartRightCommand {\n    constructor() {\n        super({\n            inSelectionMode: false,\n            wordNavigationType: 2 /* WordNavigationType.WordEnd */,\n            id: 'cursorWordPartRight',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 17 /* KeyCode.RightArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n}\nexport class CursorWordPartRightSelect extends WordPartRightCommand {\n    constructor() {\n        super({\n            inSelectionMode: true,\n            wordNavigationType: 2 /* WordNavigationType.WordEnd */,\n            id: 'cursorWordPartRightSelect',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n}\nregisterEditorCommand(new DeleteWordPartLeft());\nregisterEditorCommand(new DeleteWordPartRight());\nregisterEditorCommand(new CursorWordPartLeft());\nregisterEditorCommand(new CursorWordPartLeftSelect());\nregisterEditorCommand(new CursorWordPartRight());\nregisterEditorCommand(new CursorWordPartRightSelect());\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}