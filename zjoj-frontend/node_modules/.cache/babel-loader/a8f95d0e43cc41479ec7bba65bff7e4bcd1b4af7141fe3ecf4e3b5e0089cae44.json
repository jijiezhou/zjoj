{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class DragAndDropCommand {\n  constructor(selection, targetPosition, copy) {\n    this.selection = selection;\n    this.targetPosition = targetPosition;\n    this.copy = copy;\n    this.targetSelection = null;\n  }\n  getEditOperations(model, builder) {\n    const text = model.getValueInRange(this.selection);\n    if (!this.copy) {\n      builder.addEditOperation(this.selection, null);\n    }\n    builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\n    if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\n    )) {\n      this.targetSelection = this.selection;\n      return;\n    }\n    if (this.copy) {\n      this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column + this.selection.endColumn - this.selection.startColumn : this.selection.endColumn);\n      return;\n    }\n    if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\n      // Drag the selection downwards\n      this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column + this.selection.endColumn - this.selection.startColumn : this.selection.endColumn);\n      return;\n    }\n    if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\n      // Drag the selection upwards\n      this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column + this.selection.endColumn - this.selection.startColumn : this.selection.endColumn);\n      return;\n    }\n    // The target position is at the same line as the selection's end position.\n    if (this.selection.endColumn <= this.targetPosition.column) {\n      // The target position is after the selection's end position\n      this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column - this.selection.endColumn + this.selection.startColumn : this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column : this.selection.endColumn);\n    } else {\n      // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\n      this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\n    }\n  }\n  computeCursorState(model, helper) {\n    return this.targetSelection;\n  }\n}","map":{"version":3,"names":["Range","Selection","DragAndDropCommand","constructor","selection","targetPosition","copy","targetSelection","getEditOperations","model","builder","text","getValueInRange","addEditOperation","lineNumber","column","containsPosition","getEndPosition","equals","getStartPosition","endLineNumber","startLineNumber","endColumn","startColumn","computeCursorState","helper"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dragAndDropCommand.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class DragAndDropCommand {\n    constructor(selection, targetPosition, copy) {\n        this.selection = selection;\n        this.targetPosition = targetPosition;\n        this.copy = copy;\n        this.targetSelection = null;\n    }\n    getEditOperations(model, builder) {\n        const text = model.getValueInRange(this.selection);\n        if (!this.copy) {\n            builder.addEditOperation(this.selection, null);\n        }\n        builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\n        if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\n        )) {\n            this.targetSelection = this.selection;\n            return;\n        }\n        if (this.copy) {\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\n            // Drag the selection downwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\n            // Drag the selection upwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        // The target position is at the same line as the selection's end position.\n        if (this.selection.endColumn <= this.targetPosition.column) {\n            // The target position is after the selection's end position\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn :\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column :\n                this.selection.endColumn);\n        }\n        else {\n            // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\n        }\n    }\n    computeCursorState(model, helper) {\n        return this.targetSelection;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}