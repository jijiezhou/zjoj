{"ast":null,"code":"/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Content} Content\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').State} State\n */\n\nimport { html, svg } from 'property-information';\nimport { htmlVoidElements } from 'html-void-elements';\nimport { handle } from './handle/index.js';\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Node | Array<Content>} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {string}\n *   Serialized HTML.\n */\n// eslint-disable-next-line complexity\nexport function toHtml(tree, options) {\n  const options_ = options || {};\n  const quote = options_.quote || '\"';\n  const alternative = quote === '\"' ? \"'\" : '\"';\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`');\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences: options_.characterReferences || options_.entities || {},\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  };\n  return state.one(Array.isArray(tree) ? {\n    type: 'root',\n    children: tree\n  } : tree, undefined, undefined);\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Node} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this);\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parent | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = [];\n  const children = parent && parent.children || [];\n  let index = -1;\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent);\n  }\n  return results.join('');\n}","map":{"version":3,"names":["html","svg","htmlVoidElements","handle","toHtml","tree","options","options_","quote","alternative","Error","state","one","all","settings","omitOptionalTags","allowParseErrors","allowDangerousCharacters","quoteSmart","preferUnquoted","tightAttributes","upperDoctype","tightDoctype","bogusComments","tightCommaSeparatedLists","tightSelfClosing","collapseEmptyAttributes","allowDangerousHtml","voids","characterReferences","entities","closeSelfClosing","closeEmptyElements","schema","space","Array","isArray","type","children","undefined","node","index","parent","results","length","join"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/hast-util-to-html/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Content} Content\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').State} State\n */\n\nimport {html, svg} from 'property-information'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {handle} from './handle/index.js'\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Node | Array<Content>} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {string}\n *   Serialized HTML.\n */\n// eslint-disable-next-line complexity\nexport function toHtml(tree, options) {\n  const options_ = options || {}\n  const quote = options_.quote || '\"'\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || options_.entities || {},\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  }\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Node} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parent | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = []\n  const children = (parent && parent.children) || []\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent)\n  }\n\n  return results.join('')\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,IAAI,EAAEC,GAAG,QAAO,sBAAsB;AAC9C,SAAQC,gBAAgB,QAAO,oBAAoB;AACnD,SAAQC,MAAM,QAAO,mBAAmB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CAACC,IAAI,EAAEC,OAAO,EAAE;EACpC,MAAMC,QAAQ,GAAGD,OAAO,IAAI,CAAC,CAAC;EAC9B,MAAME,KAAK,GAAGD,QAAQ,CAACC,KAAK,IAAI,GAAG;EACnC,MAAMC,WAAW,GAAGD,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG;EAE7C,IAAIA,KAAK,KAAK,GAAG,IAAIA,KAAK,KAAK,GAAG,EAAE;IAClC,MAAM,IAAIE,KAAK,CAAC,iBAAiB,GAAGF,KAAK,GAAG,yBAAyB,CAAC;EACxE;;EAEA;EACA,MAAMG,KAAK,GAAG;IACZC,GAAG;IACHC,GAAG;IACHC,QAAQ,EAAE;MACRC,gBAAgB,EAAER,QAAQ,CAACQ,gBAAgB,IAAI,KAAK;MACpDC,gBAAgB,EAAET,QAAQ,CAACS,gBAAgB,IAAI,KAAK;MACpDC,wBAAwB,EAAEV,QAAQ,CAACU,wBAAwB,IAAI,KAAK;MACpEC,UAAU,EAAEX,QAAQ,CAACW,UAAU,IAAI,KAAK;MACxCC,cAAc,EAAEZ,QAAQ,CAACY,cAAc,IAAI,KAAK;MAChDC,eAAe,EAAEb,QAAQ,CAACa,eAAe,IAAI,KAAK;MAClDC,YAAY,EAAEd,QAAQ,CAACc,YAAY,IAAI,KAAK;MAC5CC,YAAY,EAAEf,QAAQ,CAACe,YAAY,IAAI,KAAK;MAC5CC,aAAa,EAAEhB,QAAQ,CAACgB,aAAa,IAAI,KAAK;MAC9CC,wBAAwB,EAAEjB,QAAQ,CAACiB,wBAAwB,IAAI,KAAK;MACpEC,gBAAgB,EAAElB,QAAQ,CAACkB,gBAAgB,IAAI,KAAK;MACpDC,uBAAuB,EAAEnB,QAAQ,CAACmB,uBAAuB,IAAI,KAAK;MAClEC,kBAAkB,EAAEpB,QAAQ,CAACoB,kBAAkB,IAAI,KAAK;MACxDC,KAAK,EAAErB,QAAQ,CAACqB,KAAK,IAAI1B,gBAAgB;MACzC2B,mBAAmB,EACjBtB,QAAQ,CAACsB,mBAAmB,IAAItB,QAAQ,CAACuB,QAAQ,IAAI,CAAC,CAAC;MACzDC,gBAAgB,EAAExB,QAAQ,CAACwB,gBAAgB,IAAI,KAAK;MACpDC,kBAAkB,EAAEzB,QAAQ,CAACyB,kBAAkB,IAAI;IACrD,CAAC;IACDC,MAAM,EAAE1B,QAAQ,CAAC2B,KAAK,KAAK,KAAK,GAAGjC,GAAG,GAAGD,IAAI;IAC7CQ,KAAK;IACLC;EACF,CAAC;EAED,OAAOE,KAAK,CAACC,GAAG,CACduB,KAAK,CAACC,OAAO,CAAC/B,IAAI,CAAC,GAAG;IAACgC,IAAI,EAAE,MAAM;IAAEC,QAAQ,EAAEjC;EAAI,CAAC,GAAGA,IAAI,EAC3DkC,SAAS,EACTA,SACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS3B,GAAGA,CAAC4B,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAE;EAChC,OAAOvC,MAAM,CAACqC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAE,IAAI,CAAC;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAAS7B,GAAGA,CAAC6B,MAAM,EAAE;EAC1B;EACA,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAML,QAAQ,GAAII,MAAM,IAAIA,MAAM,CAACJ,QAAQ,IAAK,EAAE;EAClD,IAAIG,KAAK,GAAG,CAAC,CAAC;EAEd,OAAO,EAAEA,KAAK,GAAGH,QAAQ,CAACM,MAAM,EAAE;IAChCD,OAAO,CAACF,KAAK,CAAC,GAAG,IAAI,CAAC7B,GAAG,CAAC0B,QAAQ,CAACG,KAAK,CAAC,EAAEA,KAAK,EAAEC,MAAM,CAAC;EAC3D;EAEA,OAAOC,OAAO,CAACE,IAAI,CAAC,EAAE,CAAC;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}