{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SelectedSuggestionInfo } from '../../../common/languages.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../snippet/browser/snippetSession.js';\nimport { SuggestController } from '../../suggest/browser/suggestController.js';\nimport { observableValue, transaction } from '../../../../base/common/observable.js';\nimport { SingleTextEdit } from './singleTextEdit.js';\nimport { compareBy, numberComparator } from '../../../../base/common/arrays.js';\nimport { findFirstMaxBy } from '../../../../base/common/arraysFind.js';\nexport class SuggestWidgetAdaptor extends Disposable {\n  get selectedItem() {\n    return this._selectedItem;\n  }\n  constructor(editor, suggestControllerPreselector, checkModelVersion, onWillAccept) {\n    super();\n    this.editor = editor;\n    this.suggestControllerPreselector = suggestControllerPreselector;\n    this.checkModelVersion = checkModelVersion;\n    this.onWillAccept = onWillAccept;\n    this.isSuggestWidgetVisible = false;\n    this.isShiftKeyPressed = false;\n    this._isActive = false;\n    this._currentSuggestItemInfo = undefined;\n    this._selectedItem = observableValue(this, undefined);\n    // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n    this._register(editor.onKeyDown(e => {\n      if (e.shiftKey && !this.isShiftKeyPressed) {\n        this.isShiftKeyPressed = true;\n        this.update(this._isActive);\n      }\n    }));\n    this._register(editor.onKeyUp(e => {\n      if (e.shiftKey && this.isShiftKeyPressed) {\n        this.isShiftKeyPressed = false;\n        this.update(this._isActive);\n      }\n    }));\n    const suggestController = SuggestController.get(this.editor);\n    if (suggestController) {\n      this._register(suggestController.registerSelector({\n        priority: 100,\n        select: (model, pos, suggestItems) => {\n          var _a;\n          transaction(tx => this.checkModelVersion(tx));\n          const textModel = this.editor.getModel();\n          if (!textModel) {\n            // Should not happen\n            return -1;\n          }\n          const itemToPreselect = (_a = this.suggestControllerPreselector()) === null || _a === void 0 ? void 0 : _a.removeCommonPrefix(textModel);\n          if (!itemToPreselect) {\n            return -1;\n          }\n          const position = Position.lift(pos);\n          const candidates = suggestItems.map((suggestItem, index) => {\n            const suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, textModel, position, suggestItem, this.isShiftKeyPressed);\n            const suggestItemTextEdit = suggestItemInfo.toSingleTextEdit().removeCommonPrefix(textModel);\n            const valid = itemToPreselect.augments(suggestItemTextEdit);\n            return {\n              index,\n              valid,\n              prefixLength: suggestItemTextEdit.text.length,\n              suggestItem\n            };\n          }).filter(item => item && item.valid && item.prefixLength > 0);\n          const result = findFirstMaxBy(candidates, compareBy(s => s.prefixLength, numberComparator));\n          return result ? result.index : -1;\n        }\n      }));\n      let isBoundToSuggestWidget = false;\n      const bindToSuggestWidget = () => {\n        if (isBoundToSuggestWidget) {\n          return;\n        }\n        isBoundToSuggestWidget = true;\n        this._register(suggestController.widget.value.onDidShow(() => {\n          this.isSuggestWidgetVisible = true;\n          this.update(true);\n        }));\n        this._register(suggestController.widget.value.onDidHide(() => {\n          this.isSuggestWidgetVisible = false;\n          this.update(false);\n        }));\n        this._register(suggestController.widget.value.onDidFocus(() => {\n          this.isSuggestWidgetVisible = true;\n          this.update(true);\n        }));\n      };\n      this._register(Event.once(suggestController.model.onDidTrigger)(e => {\n        bindToSuggestWidget();\n      }));\n      this._register(suggestController.onWillInsertSuggestItem(e => {\n        const position = this.editor.getPosition();\n        const model = this.editor.getModel();\n        if (!position || !model) {\n          return undefined;\n        }\n        const suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, model, position, e.item, this.isShiftKeyPressed);\n        this.onWillAccept(suggestItemInfo);\n      }));\n    }\n    this.update(this._isActive);\n  }\n  update(newActive) {\n    const newInlineCompletion = this.getSuggestItemInfo();\n    if (this._isActive !== newActive || !suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n      this._isActive = newActive;\n      this._currentSuggestItemInfo = newInlineCompletion;\n      transaction(tx => {\n        /** @description Update state from suggest widget */\n        this.checkModelVersion(tx);\n        this._selectedItem.set(this._isActive ? this._currentSuggestItemInfo : undefined, tx);\n      });\n    }\n  }\n  getSuggestItemInfo() {\n    const suggestController = SuggestController.get(this.editor);\n    if (!suggestController || !this.isSuggestWidgetVisible) {\n      return undefined;\n    }\n    const focusedItem = suggestController.widget.value.getFocusedItem();\n    const position = this.editor.getPosition();\n    const model = this.editor.getModel();\n    if (!focusedItem || !position || !model) {\n      return undefined;\n    }\n    return SuggestItemInfo.fromSuggestion(suggestController, model, position, focusedItem.item, this.isShiftKeyPressed);\n  }\n  stopForceRenderingAbove() {\n    const suggestController = SuggestController.get(this.editor);\n    suggestController === null || suggestController === void 0 ? void 0 : suggestController.stopForceRenderingAbove();\n  }\n  forceRenderingAbove() {\n    const suggestController = SuggestController.get(this.editor);\n    suggestController === null || suggestController === void 0 ? void 0 : suggestController.forceRenderingAbove();\n  }\n}\nexport class SuggestItemInfo {\n  static fromSuggestion(suggestController, model, position, item, toggleMode) {\n    let {\n      insertText\n    } = item.completion;\n    let isSnippetText = false;\n    if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */) {\n      const snippet = new SnippetParser().parse(insertText);\n      if (snippet.children.length < 100) {\n        // Adjust whitespace is expensive.\n        SnippetSession.adjustWhitespace(model, position, true, snippet);\n      }\n      insertText = snippet.toString();\n      isSnippetText = true;\n    }\n    const info = suggestController.getOverwriteInfo(item, toggleMode);\n    return new SuggestItemInfo(Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))), insertText, item.completion.kind, isSnippetText);\n  }\n  constructor(range, insertText, completionItemKind, isSnippetText) {\n    this.range = range;\n    this.insertText = insertText;\n    this.completionItemKind = completionItemKind;\n    this.isSnippetText = isSnippetText;\n  }\n  equals(other) {\n    return this.range.equalsRange(other.range) && this.insertText === other.insertText && this.completionItemKind === other.completionItemKind && this.isSnippetText === other.isSnippetText;\n  }\n  toSelectedSuggestionInfo() {\n    return new SelectedSuggestionInfo(this.range, this.insertText, this.completionItemKind, this.isSnippetText);\n  }\n  toSingleTextEdit() {\n    return new SingleTextEdit(this.range, this.insertText);\n  }\n}\nfunction suggestItemInfoEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!a || !b) {\n    return false;\n  }\n  return a.equals(b);\n}","map":{"version":3,"names":["Event","Disposable","Position","Range","SelectedSuggestionInfo","SnippetParser","SnippetSession","SuggestController","observableValue","transaction","SingleTextEdit","compareBy","numberComparator","findFirstMaxBy","SuggestWidgetAdaptor","selectedItem","_selectedItem","constructor","editor","suggestControllerPreselector","checkModelVersion","onWillAccept","isSuggestWidgetVisible","isShiftKeyPressed","_isActive","_currentSuggestItemInfo","undefined","_register","onKeyDown","e","shiftKey","update","onKeyUp","suggestController","get","registerSelector","priority","select","model","pos","suggestItems","_a","tx","textModel","getModel","itemToPreselect","removeCommonPrefix","position","lift","candidates","map","suggestItem","index","suggestItemInfo","SuggestItemInfo","fromSuggestion","suggestItemTextEdit","toSingleTextEdit","valid","augments","prefixLength","text","length","filter","item","result","s","isBoundToSuggestWidget","bindToSuggestWidget","widget","value","onDidShow","onDidHide","onDidFocus","once","onDidTrigger","onWillInsertSuggestItem","getPosition","newActive","newInlineCompletion","getSuggestItemInfo","suggestItemInfoEquals","set","focusedItem","getFocusedItem","stopForceRenderingAbove","forceRenderingAbove","toggleMode","insertText","completion","isSnippetText","insertTextRules","snippet","parse","children","adjustWhitespace","toString","info","getOverwriteInfo","fromPositions","delta","overwriteBefore","Math","max","overwriteAfter","kind","range","completionItemKind","equals","other","equalsRange","toSelectedSuggestionInfo","a","b"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetInlineCompletionProvider.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SelectedSuggestionInfo } from '../../../common/languages.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../snippet/browser/snippetSession.js';\nimport { SuggestController } from '../../suggest/browser/suggestController.js';\nimport { observableValue, transaction } from '../../../../base/common/observable.js';\nimport { SingleTextEdit } from './singleTextEdit.js';\nimport { compareBy, numberComparator } from '../../../../base/common/arrays.js';\nimport { findFirstMaxBy } from '../../../../base/common/arraysFind.js';\nexport class SuggestWidgetAdaptor extends Disposable {\n    get selectedItem() {\n        return this._selectedItem;\n    }\n    constructor(editor, suggestControllerPreselector, checkModelVersion, onWillAccept) {\n        super();\n        this.editor = editor;\n        this.suggestControllerPreselector = suggestControllerPreselector;\n        this.checkModelVersion = checkModelVersion;\n        this.onWillAccept = onWillAccept;\n        this.isSuggestWidgetVisible = false;\n        this.isShiftKeyPressed = false;\n        this._isActive = false;\n        this._currentSuggestItemInfo = undefined;\n        this._selectedItem = observableValue(this, undefined);\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n        this._register(editor.onKeyDown(e => {\n            if (e.shiftKey && !this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = true;\n                this.update(this._isActive);\n            }\n        }));\n        this._register(editor.onKeyUp(e => {\n            if (e.shiftKey && this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = false;\n                this.update(this._isActive);\n            }\n        }));\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            this._register(suggestController.registerSelector({\n                priority: 100,\n                select: (model, pos, suggestItems) => {\n                    var _a;\n                    transaction(tx => this.checkModelVersion(tx));\n                    const textModel = this.editor.getModel();\n                    if (!textModel) {\n                        // Should not happen\n                        return -1;\n                    }\n                    const itemToPreselect = (_a = this.suggestControllerPreselector()) === null || _a === void 0 ? void 0 : _a.removeCommonPrefix(textModel);\n                    if (!itemToPreselect) {\n                        return -1;\n                    }\n                    const position = Position.lift(pos);\n                    const candidates = suggestItems\n                        .map((suggestItem, index) => {\n                        const suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, textModel, position, suggestItem, this.isShiftKeyPressed);\n                        const suggestItemTextEdit = suggestItemInfo.toSingleTextEdit().removeCommonPrefix(textModel);\n                        const valid = itemToPreselect.augments(suggestItemTextEdit);\n                        return { index, valid, prefixLength: suggestItemTextEdit.text.length, suggestItem };\n                    })\n                        .filter(item => item && item.valid && item.prefixLength > 0);\n                    const result = findFirstMaxBy(candidates, compareBy(s => s.prefixLength, numberComparator));\n                    return result ? result.index : -1;\n                }\n            }));\n            let isBoundToSuggestWidget = false;\n            const bindToSuggestWidget = () => {\n                if (isBoundToSuggestWidget) {\n                    return;\n                }\n                isBoundToSuggestWidget = true;\n                this._register(suggestController.widget.value.onDidShow(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n                this._register(suggestController.widget.value.onDidHide(() => {\n                    this.isSuggestWidgetVisible = false;\n                    this.update(false);\n                }));\n                this._register(suggestController.widget.value.onDidFocus(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n            };\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\n                bindToSuggestWidget();\n            }));\n            this._register(suggestController.onWillInsertSuggestItem(e => {\n                const position = this.editor.getPosition();\n                const model = this.editor.getModel();\n                if (!position || !model) {\n                    return undefined;\n                }\n                const suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, model, position, e.item, this.isShiftKeyPressed);\n                this.onWillAccept(suggestItemInfo);\n            }));\n        }\n        this.update(this._isActive);\n    }\n    update(newActive) {\n        const newInlineCompletion = this.getSuggestItemInfo();\n        if (this._isActive !== newActive || !suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n            this._isActive = newActive;\n            this._currentSuggestItemInfo = newInlineCompletion;\n            transaction(tx => {\n                /** @description Update state from suggest widget */\n                this.checkModelVersion(tx);\n                this._selectedItem.set(this._isActive ? this._currentSuggestItemInfo : undefined, tx);\n            });\n        }\n    }\n    getSuggestItemInfo() {\n        const suggestController = SuggestController.get(this.editor);\n        if (!suggestController || !this.isSuggestWidgetVisible) {\n            return undefined;\n        }\n        const focusedItem = suggestController.widget.value.getFocusedItem();\n        const position = this.editor.getPosition();\n        const model = this.editor.getModel();\n        if (!focusedItem || !position || !model) {\n            return undefined;\n        }\n        return SuggestItemInfo.fromSuggestion(suggestController, model, position, focusedItem.item, this.isShiftKeyPressed);\n    }\n    stopForceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.stopForceRenderingAbove();\n    }\n    forceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.forceRenderingAbove();\n    }\n}\nexport class SuggestItemInfo {\n    static fromSuggestion(suggestController, model, position, item, toggleMode) {\n        let { insertText } = item.completion;\n        let isSnippetText = false;\n        if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */) {\n            const snippet = new SnippetParser().parse(insertText);\n            if (snippet.children.length < 100) {\n                // Adjust whitespace is expensive.\n                SnippetSession.adjustWhitespace(model, position, true, snippet);\n            }\n            insertText = snippet.toString();\n            isSnippetText = true;\n        }\n        const info = suggestController.getOverwriteInfo(item, toggleMode);\n        return new SuggestItemInfo(Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))), insertText, item.completion.kind, isSnippetText);\n    }\n    constructor(range, insertText, completionItemKind, isSnippetText) {\n        this.range = range;\n        this.insertText = insertText;\n        this.completionItemKind = completionItemKind;\n        this.isSnippetText = isSnippetText;\n    }\n    equals(other) {\n        return this.range.equalsRange(other.range)\n            && this.insertText === other.insertText\n            && this.completionItemKind === other.completionItemKind\n            && this.isSnippetText === other.isSnippetText;\n    }\n    toSelectedSuggestionInfo() {\n        return new SelectedSuggestionInfo(this.range, this.insertText, this.completionItemKind, this.isSnippetText);\n    }\n    toSingleTextEdit() {\n        return new SingleTextEdit(this.range, this.insertText);\n    }\n}\nfunction suggestItemInfoEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.equals(b);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}