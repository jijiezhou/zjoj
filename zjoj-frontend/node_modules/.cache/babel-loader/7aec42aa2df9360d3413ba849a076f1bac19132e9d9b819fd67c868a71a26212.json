{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { $, addDisposableListener } from '../../../../base/browser/dom.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, derivedWithStore, observableFromEvent, observableValue } from '../../../../base/common/observable.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { diffDeleteDecoration, diffRemoveIcon } from './decorations.js';\nimport { DiffMapping } from './diffEditorViewModel.js';\nimport { InlineDiffDeletedCodeMargin } from './inlineDiffDeletedCodeMargin.js';\nimport { LineSource, RenderOptions, renderLines } from './renderLines.js';\nimport { animatedObservable, joinCombine } from './utils.js';\nimport { LineRange } from '../../../common/core/lineRange.js';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineDecoration } from '../../../common/viewModel.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\n/**\n * Ensures both editors have the same height by aligning unchanged lines.\n * In inline view mode, inserts viewzones to show deleted code from the original text model in the modified code editor.\n * Synchronizes scrolling.\n *\n * Make sure to add the view zones!\n */\nlet ViewZoneManager = class ViewZoneManager extends Disposable {\n  constructor(_targetWindow, _editors, _diffModel, _options, _diffEditorWidget, _canIgnoreViewZoneUpdateEvent, _origViewZonesToIgnore, _modViewZonesToIgnore, _clipboardService, _contextMenuService) {\n    super();\n    this._targetWindow = _targetWindow;\n    this._editors = _editors;\n    this._diffModel = _diffModel;\n    this._options = _options;\n    this._diffEditorWidget = _diffEditorWidget;\n    this._canIgnoreViewZoneUpdateEvent = _canIgnoreViewZoneUpdateEvent;\n    this._origViewZonesToIgnore = _origViewZonesToIgnore;\n    this._modViewZonesToIgnore = _modViewZonesToIgnore;\n    this._clipboardService = _clipboardService;\n    this._contextMenuService = _contextMenuService;\n    this._originalTopPadding = observableValue(this, 0);\n    this._originalScrollOffset = observableValue(this, 0);\n    this._originalScrollOffsetAnimated = animatedObservable(this._targetWindow, this._originalScrollOffset, this._store);\n    this._modifiedTopPadding = observableValue(this, 0);\n    this._modifiedScrollOffset = observableValue(this, 0);\n    this._modifiedScrollOffsetAnimated = animatedObservable(this._targetWindow, this._modifiedScrollOffset, this._store);\n    const state = observableValue('invalidateAlignmentsState', 0);\n    const updateImmediately = this._register(new RunOnceScheduler(() => {\n      state.set(state.get() + 1, undefined);\n    }, 0));\n    this._register(this._editors.original.onDidChangeViewZones(_args => {\n      if (!this._canIgnoreViewZoneUpdateEvent()) {\n        updateImmediately.schedule();\n      }\n    }));\n    this._register(this._editors.modified.onDidChangeViewZones(_args => {\n      if (!this._canIgnoreViewZoneUpdateEvent()) {\n        updateImmediately.schedule();\n      }\n    }));\n    this._register(this._editors.original.onDidChangeConfiguration(args => {\n      if (args.hasChanged(144 /* EditorOption.wrappingInfo */) || args.hasChanged(66 /* EditorOption.lineHeight */)) {\n        updateImmediately.schedule();\n      }\n    }));\n    this._register(this._editors.modified.onDidChangeConfiguration(args => {\n      if (args.hasChanged(144 /* EditorOption.wrappingInfo */) || args.hasChanged(66 /* EditorOption.lineHeight */)) {\n        updateImmediately.schedule();\n      }\n    }));\n    const originalModelTokenizationCompleted = this._diffModel.map(m => m ? observableFromEvent(m.model.original.onDidChangeTokens, () => m.model.original.tokenization.backgroundTokenizationState === 2 /* BackgroundTokenizationState.Completed */) : undefined).map((m, reader) => m === null || m === void 0 ? void 0 : m.read(reader));\n    const alignments = derived(reader => {\n      /** @description alignments */\n      const diffModel = this._diffModel.read(reader);\n      const diff = diffModel === null || diffModel === void 0 ? void 0 : diffModel.diff.read(reader);\n      if (!diffModel || !diff) {\n        return null;\n      }\n      state.read(reader);\n      const renderSideBySide = this._options.renderSideBySide.read(reader);\n      const innerHunkAlignment = renderSideBySide;\n      return computeRangeAlignment(this._editors.original, this._editors.modified, diff.mappings, this._origViewZonesToIgnore, this._modViewZonesToIgnore, innerHunkAlignment);\n    });\n    const alignmentsSyncedMovedText = derived(reader => {\n      var _a;\n      /** @description alignmentsSyncedMovedText */\n      const syncedMovedText = (_a = this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.movedTextToCompare.read(reader);\n      if (!syncedMovedText) {\n        return null;\n      }\n      state.read(reader);\n      const mappings = syncedMovedText.changes.map(c => new DiffMapping(c));\n      // TODO dont include alignments outside syncedMovedText\n      return computeRangeAlignment(this._editors.original, this._editors.modified, mappings, this._origViewZonesToIgnore, this._modViewZonesToIgnore, true);\n    });\n    function createFakeLinesDiv() {\n      const r = document.createElement('div');\n      r.className = 'diagonal-fill';\n      return r;\n    }\n    const alignmentViewZonesDisposables = this._register(new DisposableStore());\n    this.viewZones = derivedWithStore(this, (reader, store) => {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n      alignmentViewZonesDisposables.clear();\n      const alignmentsVal = alignments.read(reader) || [];\n      const origViewZones = [];\n      const modViewZones = [];\n      const modifiedTopPaddingVal = this._modifiedTopPadding.read(reader);\n      if (modifiedTopPaddingVal > 0) {\n        modViewZones.push({\n          afterLineNumber: 0,\n          domNode: document.createElement('div'),\n          heightInPx: modifiedTopPaddingVal,\n          showInHiddenAreas: true,\n          suppressMouseDown: true\n        });\n      }\n      const originalTopPaddingVal = this._originalTopPadding.read(reader);\n      if (originalTopPaddingVal > 0) {\n        origViewZones.push({\n          afterLineNumber: 0,\n          domNode: document.createElement('div'),\n          heightInPx: originalTopPaddingVal,\n          showInHiddenAreas: true,\n          suppressMouseDown: true\n        });\n      }\n      const renderSideBySide = this._options.renderSideBySide.read(reader);\n      const deletedCodeLineBreaksComputer = !renderSideBySide ? (_a = this._editors.modified._getViewModel()) === null || _a === void 0 ? void 0 : _a.createLineBreaksComputer() : undefined;\n      if (deletedCodeLineBreaksComputer) {\n        for (const a of alignmentsVal) {\n          if (a.diff) {\n            for (let i = a.originalRange.startLineNumber; i < a.originalRange.endLineNumberExclusive; i++) {\n              deletedCodeLineBreaksComputer === null || deletedCodeLineBreaksComputer === void 0 ? void 0 : deletedCodeLineBreaksComputer.addRequest(this._editors.original.getModel().getLineContent(i), null, null);\n            }\n          }\n        }\n      }\n      const lineBreakData = (_b = deletedCodeLineBreaksComputer === null || deletedCodeLineBreaksComputer === void 0 ? void 0 : deletedCodeLineBreaksComputer.finalize()) !== null && _b !== void 0 ? _b : [];\n      let lineBreakDataIdx = 0;\n      const modLineHeight = this._editors.modified.getOption(66 /* EditorOption.lineHeight */);\n      const syncedMovedText = (_c = this._diffModel.read(reader)) === null || _c === void 0 ? void 0 : _c.movedTextToCompare.read(reader);\n      const mightContainNonBasicASCII = (_e = (_d = this._editors.original.getModel()) === null || _d === void 0 ? void 0 : _d.mightContainNonBasicASCII()) !== null && _e !== void 0 ? _e : false;\n      const mightContainRTL = (_g = (_f = this._editors.original.getModel()) === null || _f === void 0 ? void 0 : _f.mightContainRTL()) !== null && _g !== void 0 ? _g : false;\n      const renderOptions = RenderOptions.fromEditor(this._editors.modified);\n      for (const a of alignmentsVal) {\n        if (a.diff && !renderSideBySide) {\n          if (!a.originalRange.isEmpty) {\n            originalModelTokenizationCompleted.read(reader); // Update view-zones once tokenization completes\n            const deletedCodeDomNode = document.createElement('div');\n            deletedCodeDomNode.classList.add('view-lines', 'line-delete', 'monaco-mouse-cursor-text');\n            const source = new LineSource(a.originalRange.mapToLineArray(l => this._editors.original.getModel().tokenization.getLineTokens(l)), a.originalRange.mapToLineArray(_ => lineBreakData[lineBreakDataIdx++]), mightContainNonBasicASCII, mightContainRTL);\n            const decorations = [];\n            for (const i of a.diff.innerChanges || []) {\n              decorations.push(new InlineDecoration(i.originalRange.delta(-(a.diff.original.startLineNumber - 1)), diffDeleteDecoration.className, 0 /* InlineDecorationType.Regular */));\n            }\n            const result = renderLines(source, renderOptions, decorations, deletedCodeDomNode);\n            const marginDomNode = document.createElement('div');\n            marginDomNode.className = 'inline-deleted-margin-view-zone';\n            applyFontInfo(marginDomNode, renderOptions.fontInfo);\n            if (this._options.renderIndicators.read(reader)) {\n              for (let i = 0; i < result.heightInLines; i++) {\n                const marginElement = document.createElement('div');\n                marginElement.className = `delete-sign ${ThemeIcon.asClassName(diffRemoveIcon)}`;\n                marginElement.setAttribute('style', `position:absolute;top:${i * modLineHeight}px;width:${renderOptions.lineDecorationsWidth}px;height:${modLineHeight}px;right:0;`);\n                marginDomNode.appendChild(marginElement);\n              }\n            }\n            let zoneId = undefined;\n            alignmentViewZonesDisposables.add(new InlineDiffDeletedCodeMargin(() => assertIsDefined(zoneId), marginDomNode, this._editors.modified, a.diff, this._diffEditorWidget, result.viewLineCounts, this._editors.original.getModel(), this._contextMenuService, this._clipboardService));\n            for (let i = 0; i < result.viewLineCounts.length; i++) {\n              const count = result.viewLineCounts[i];\n              // Account for wrapped lines in the (collapsed) original editor (which doesn't wrap lines).\n              if (count > 1) {\n                origViewZones.push({\n                  afterLineNumber: a.originalRange.startLineNumber + i,\n                  domNode: createFakeLinesDiv(),\n                  heightInPx: (count - 1) * modLineHeight,\n                  showInHiddenAreas: true,\n                  suppressMouseDown: true\n                });\n              }\n            }\n            modViewZones.push({\n              afterLineNumber: a.modifiedRange.startLineNumber - 1,\n              domNode: deletedCodeDomNode,\n              heightInPx: result.heightInLines * modLineHeight,\n              minWidthInPx: result.minWidthInPx,\n              marginDomNode,\n              setZoneId(id) {\n                zoneId = id;\n              },\n              showInHiddenAreas: true,\n              suppressMouseDown: true\n            });\n          }\n          const marginDomNode = document.createElement('div');\n          marginDomNode.className = 'gutter-delete';\n          origViewZones.push({\n            afterLineNumber: a.originalRange.endLineNumberExclusive - 1,\n            domNode: createFakeLinesDiv(),\n            heightInPx: a.modifiedHeightInPx,\n            marginDomNode,\n            showInHiddenAreas: true,\n            suppressMouseDown: true\n          });\n        } else {\n          const delta = a.modifiedHeightInPx - a.originalHeightInPx;\n          if (delta > 0) {\n            if (syncedMovedText === null || syncedMovedText === void 0 ? void 0 : syncedMovedText.lineRangeMapping.original.delta(-1).deltaLength(2).contains(a.originalRange.endLineNumberExclusive - 1)) {\n              continue;\n            }\n            origViewZones.push({\n              afterLineNumber: a.originalRange.endLineNumberExclusive - 1,\n              domNode: createFakeLinesDiv(),\n              heightInPx: delta,\n              showInHiddenAreas: true,\n              suppressMouseDown: true\n            });\n          } else {\n            if (syncedMovedText === null || syncedMovedText === void 0 ? void 0 : syncedMovedText.lineRangeMapping.modified.delta(-1).deltaLength(2).contains(a.modifiedRange.endLineNumberExclusive - 1)) {\n              continue;\n            }\n            function createViewZoneMarginArrow() {\n              const arrow = document.createElement('div');\n              arrow.className = 'arrow-revert-change ' + ThemeIcon.asClassName(Codicon.arrowRight);\n              store.add(addDisposableListener(arrow, 'mousedown', e => e.stopPropagation()));\n              store.add(addDisposableListener(arrow, 'click', e => {\n                e.stopPropagation();\n                _diffEditorWidget.revert(a.diff);\n              }));\n              return $('div', {}, arrow);\n            }\n            let marginDomNode = undefined;\n            if (a.diff && a.diff.modified.isEmpty && this._options.shouldRenderRevertArrows.read(reader)) {\n              marginDomNode = createViewZoneMarginArrow();\n            }\n            modViewZones.push({\n              afterLineNumber: a.modifiedRange.endLineNumberExclusive - 1,\n              domNode: createFakeLinesDiv(),\n              heightInPx: -delta,\n              marginDomNode,\n              showInHiddenAreas: true,\n              suppressMouseDown: true\n            });\n          }\n        }\n      }\n      for (const a of (_h = alignmentsSyncedMovedText.read(reader)) !== null && _h !== void 0 ? _h : []) {\n        if (!(syncedMovedText === null || syncedMovedText === void 0 ? void 0 : syncedMovedText.lineRangeMapping.original.intersect(a.originalRange)) || !(syncedMovedText === null || syncedMovedText === void 0 ? void 0 : syncedMovedText.lineRangeMapping.modified.intersect(a.modifiedRange))) {\n          // ignore unrelated alignments outside the synced moved text\n          continue;\n        }\n        const delta = a.modifiedHeightInPx - a.originalHeightInPx;\n        if (delta > 0) {\n          origViewZones.push({\n            afterLineNumber: a.originalRange.endLineNumberExclusive - 1,\n            domNode: createFakeLinesDiv(),\n            heightInPx: delta,\n            showInHiddenAreas: true,\n            suppressMouseDown: true\n          });\n        } else {\n          modViewZones.push({\n            afterLineNumber: a.modifiedRange.endLineNumberExclusive - 1,\n            domNode: createFakeLinesDiv(),\n            heightInPx: -delta,\n            showInHiddenAreas: true,\n            suppressMouseDown: true\n          });\n        }\n      }\n      return {\n        orig: origViewZones,\n        mod: modViewZones\n      };\n    });\n    let ignoreChange = false;\n    this._register(this._editors.original.onDidScrollChange(e => {\n      if (e.scrollLeftChanged && !ignoreChange) {\n        ignoreChange = true;\n        this._editors.modified.setScrollLeft(e.scrollLeft);\n        ignoreChange = false;\n      }\n    }));\n    this._register(this._editors.modified.onDidScrollChange(e => {\n      if (e.scrollLeftChanged && !ignoreChange) {\n        ignoreChange = true;\n        this._editors.original.setScrollLeft(e.scrollLeft);\n        ignoreChange = false;\n      }\n    }));\n    this._originalScrollTop = observableFromEvent(this._editors.original.onDidScrollChange, () => /** @description original.getScrollTop */this._editors.original.getScrollTop());\n    this._modifiedScrollTop = observableFromEvent(this._editors.modified.onDidScrollChange, () => /** @description modified.getScrollTop */this._editors.modified.getScrollTop());\n    // origExtraHeight + origOffset - origScrollTop = modExtraHeight + modOffset - modScrollTop\n    // origScrollTop = origExtraHeight + origOffset - modExtraHeight - modOffset + modScrollTop\n    // modScrollTop = modExtraHeight + modOffset - origExtraHeight - origOffset + origScrollTop\n    // origOffset - modOffset = heightOfLines(1..Y) - heightOfLines(1..X)\n    // origScrollTop >= 0, modScrollTop >= 0\n    this._register(autorun(reader => {\n      /** @description update scroll modified */\n      const newScrollTopModified = this._originalScrollTop.read(reader) - (this._originalScrollOffsetAnimated.get() - this._modifiedScrollOffsetAnimated.read(reader)) - (this._originalTopPadding.get() - this._modifiedTopPadding.read(reader));\n      if (newScrollTopModified !== this._editors.modified.getScrollTop()) {\n        this._editors.modified.setScrollTop(newScrollTopModified, 1 /* ScrollType.Immediate */);\n      }\n    }));\n    this._register(autorun(reader => {\n      /** @description update scroll original */\n      const newScrollTopOriginal = this._modifiedScrollTop.read(reader) - (this._modifiedScrollOffsetAnimated.get() - this._originalScrollOffsetAnimated.read(reader)) - (this._modifiedTopPadding.get() - this._originalTopPadding.read(reader));\n      if (newScrollTopOriginal !== this._editors.original.getScrollTop()) {\n        this._editors.original.setScrollTop(newScrollTopOriginal, 1 /* ScrollType.Immediate */);\n      }\n    }));\n    this._register(autorun(reader => {\n      var _a;\n      /** @description update editor top offsets */\n      const m = (_a = this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.movedTextToCompare.read(reader);\n      let deltaOrigToMod = 0;\n      if (m) {\n        const trueTopOriginal = this._editors.original.getTopForLineNumber(m.lineRangeMapping.original.startLineNumber, true) - this._originalTopPadding.get();\n        const trueTopModified = this._editors.modified.getTopForLineNumber(m.lineRangeMapping.modified.startLineNumber, true) - this._modifiedTopPadding.get();\n        deltaOrigToMod = trueTopModified - trueTopOriginal;\n      }\n      if (deltaOrigToMod > 0) {\n        this._modifiedTopPadding.set(0, undefined);\n        this._originalTopPadding.set(deltaOrigToMod, undefined);\n      } else if (deltaOrigToMod < 0) {\n        this._modifiedTopPadding.set(-deltaOrigToMod, undefined);\n        this._originalTopPadding.set(0, undefined);\n      } else {\n        setTimeout(() => {\n          this._modifiedTopPadding.set(0, undefined);\n          this._originalTopPadding.set(0, undefined);\n        }, 400);\n      }\n      if (this._editors.modified.hasTextFocus()) {\n        this._originalScrollOffset.set(this._modifiedScrollOffset.get() - deltaOrigToMod, undefined, true);\n      } else {\n        this._modifiedScrollOffset.set(this._originalScrollOffset.get() + deltaOrigToMod, undefined, true);\n      }\n    }));\n  }\n};\nViewZoneManager = __decorate([__param(8, IClipboardService), __param(9, IContextMenuService)], ViewZoneManager);\nexport { ViewZoneManager };\nfunction computeRangeAlignment(originalEditor, modifiedEditor, diffs, originalEditorAlignmentViewZones, modifiedEditorAlignmentViewZones, innerHunkAlignment) {\n  const originalLineHeightOverrides = new ArrayQueue(getAdditionalLineHeights(originalEditor, originalEditorAlignmentViewZones));\n  const modifiedLineHeightOverrides = new ArrayQueue(getAdditionalLineHeights(modifiedEditor, modifiedEditorAlignmentViewZones));\n  const origLineHeight = originalEditor.getOption(66 /* EditorOption.lineHeight */);\n  const modLineHeight = modifiedEditor.getOption(66 /* EditorOption.lineHeight */);\n  const result = [];\n  let lastOriginalLineNumber = 0;\n  let lastModifiedLineNumber = 0;\n  function handleAlignmentsOutsideOfDiffs(untilOriginalLineNumberExclusive, untilModifiedLineNumberExclusive) {\n    while (true) {\n      let origNext = originalLineHeightOverrides.peek();\n      let modNext = modifiedLineHeightOverrides.peek();\n      if (origNext && origNext.lineNumber >= untilOriginalLineNumberExclusive) {\n        origNext = undefined;\n      }\n      if (modNext && modNext.lineNumber >= untilModifiedLineNumberExclusive) {\n        modNext = undefined;\n      }\n      if (!origNext && !modNext) {\n        break;\n      }\n      const distOrig = origNext ? origNext.lineNumber - lastOriginalLineNumber : Number.MAX_VALUE;\n      const distNext = modNext ? modNext.lineNumber - lastModifiedLineNumber : Number.MAX_VALUE;\n      if (distOrig < distNext) {\n        originalLineHeightOverrides.dequeue();\n        modNext = {\n          lineNumber: origNext.lineNumber - lastOriginalLineNumber + lastModifiedLineNumber,\n          heightInPx: 0\n        };\n      } else if (distOrig > distNext) {\n        modifiedLineHeightOverrides.dequeue();\n        origNext = {\n          lineNumber: modNext.lineNumber - lastModifiedLineNumber + lastOriginalLineNumber,\n          heightInPx: 0\n        };\n      } else {\n        originalLineHeightOverrides.dequeue();\n        modifiedLineHeightOverrides.dequeue();\n      }\n      result.push({\n        originalRange: LineRange.ofLength(origNext.lineNumber, 1),\n        modifiedRange: LineRange.ofLength(modNext.lineNumber, 1),\n        originalHeightInPx: origLineHeight + origNext.heightInPx,\n        modifiedHeightInPx: modLineHeight + modNext.heightInPx,\n        diff: undefined\n      });\n    }\n  }\n  for (const m of diffs) {\n    const c = m.lineRangeMapping;\n    handleAlignmentsOutsideOfDiffs(c.original.startLineNumber, c.modified.startLineNumber);\n    let first = true;\n    let lastModLineNumber = c.modified.startLineNumber;\n    let lastOrigLineNumber = c.original.startLineNumber;\n    function emitAlignment(origLineNumberExclusive, modLineNumberExclusive) {\n      var _a, _b, _c, _d;\n      if (origLineNumberExclusive < lastOrigLineNumber || modLineNumberExclusive < lastModLineNumber) {\n        return;\n      }\n      if (first) {\n        first = false;\n      } else if (origLineNumberExclusive === lastOrigLineNumber || modLineNumberExclusive === lastModLineNumber) {\n        return;\n      }\n      const originalRange = new LineRange(lastOrigLineNumber, origLineNumberExclusive);\n      const modifiedRange = new LineRange(lastModLineNumber, modLineNumberExclusive);\n      if (originalRange.isEmpty && modifiedRange.isEmpty) {\n        return;\n      }\n      const originalAdditionalHeight = (_b = (_a = originalLineHeightOverrides.takeWhile(v => v.lineNumber < origLineNumberExclusive)) === null || _a === void 0 ? void 0 : _a.reduce((p, c) => p + c.heightInPx, 0)) !== null && _b !== void 0 ? _b : 0;\n      const modifiedAdditionalHeight = (_d = (_c = modifiedLineHeightOverrides.takeWhile(v => v.lineNumber < modLineNumberExclusive)) === null || _c === void 0 ? void 0 : _c.reduce((p, c) => p + c.heightInPx, 0)) !== null && _d !== void 0 ? _d : 0;\n      result.push({\n        originalRange,\n        modifiedRange,\n        originalHeightInPx: originalRange.length * origLineHeight + originalAdditionalHeight,\n        modifiedHeightInPx: modifiedRange.length * modLineHeight + modifiedAdditionalHeight,\n        diff: m.lineRangeMapping\n      });\n      lastOrigLineNumber = origLineNumberExclusive;\n      lastModLineNumber = modLineNumberExclusive;\n    }\n    if (innerHunkAlignment) {\n      for (const i of c.innerChanges || []) {\n        if (i.originalRange.startColumn > 1 && i.modifiedRange.startColumn > 1) {\n          // There is some unmodified text on this line before the diff\n          emitAlignment(i.originalRange.startLineNumber, i.modifiedRange.startLineNumber);\n        }\n        if (i.originalRange.endColumn < originalEditor.getModel().getLineMaxColumn(i.originalRange.endLineNumber)) {\n          // // There is some unmodified text on this line after the diff\n          emitAlignment(i.originalRange.endLineNumber, i.modifiedRange.endLineNumber);\n        }\n      }\n    }\n    emitAlignment(c.original.endLineNumberExclusive, c.modified.endLineNumberExclusive);\n    lastOriginalLineNumber = c.original.endLineNumberExclusive;\n    lastModifiedLineNumber = c.modified.endLineNumberExclusive;\n  }\n  handleAlignmentsOutsideOfDiffs(Number.MAX_VALUE, Number.MAX_VALUE);\n  return result;\n}\nfunction getAdditionalLineHeights(editor, viewZonesToIgnore) {\n  const viewZoneHeights = [];\n  const wrappingZoneHeights = [];\n  const hasWrapping = editor.getOption(144 /* EditorOption.wrappingInfo */).wrappingColumn !== -1;\n  const coordinatesConverter = editor._getViewModel().coordinatesConverter;\n  const editorLineHeight = editor.getOption(66 /* EditorOption.lineHeight */);\n  if (hasWrapping) {\n    for (let i = 1; i <= editor.getModel().getLineCount(); i++) {\n      const lineCount = coordinatesConverter.getModelLineViewLineCount(i);\n      if (lineCount > 1) {\n        wrappingZoneHeights.push({\n          lineNumber: i,\n          heightInPx: editorLineHeight * (lineCount - 1)\n        });\n      }\n    }\n  }\n  for (const w of editor.getWhitespaces()) {\n    if (viewZonesToIgnore.has(w.id)) {\n      continue;\n    }\n    const modelLineNumber = w.afterLineNumber === 0 ? 0 : coordinatesConverter.convertViewPositionToModelPosition(new Position(w.afterLineNumber, 1)).lineNumber;\n    viewZoneHeights.push({\n      lineNumber: modelLineNumber,\n      heightInPx: w.height\n    });\n  }\n  const result = joinCombine(viewZoneHeights, wrappingZoneHeights, v => v.lineNumber, (v1, v2) => ({\n    lineNumber: v1.lineNumber,\n    heightInPx: v1.heightInPx + v2.heightInPx\n  }));\n  return result;\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","$","addDisposableListener","ArrayQueue","RunOnceScheduler","Codicon","Disposable","DisposableStore","autorun","derived","derivedWithStore","observableFromEvent","observableValue","ThemeIcon","assertIsDefined","applyFontInfo","diffDeleteDecoration","diffRemoveIcon","DiffMapping","InlineDiffDeletedCodeMargin","LineSource","RenderOptions","renderLines","animatedObservable","joinCombine","LineRange","Position","InlineDecoration","IClipboardService","IContextMenuService","ViewZoneManager","constructor","_targetWindow","_editors","_diffModel","_options","_diffEditorWidget","_canIgnoreViewZoneUpdateEvent","_origViewZonesToIgnore","_modViewZonesToIgnore","_clipboardService","_contextMenuService","_originalTopPadding","_originalScrollOffset","_originalScrollOffsetAnimated","_store","_modifiedTopPadding","_modifiedScrollOffset","_modifiedScrollOffsetAnimated","state","updateImmediately","_register","set","get","undefined","original","onDidChangeViewZones","_args","schedule","modified","onDidChangeConfiguration","args","hasChanged","originalModelTokenizationCompleted","map","m","model","onDidChangeTokens","tokenization","backgroundTokenizationState","reader","read","alignments","diffModel","diff","renderSideBySide","innerHunkAlignment","computeRangeAlignment","mappings","alignmentsSyncedMovedText","_a","syncedMovedText","movedTextToCompare","changes","createFakeLinesDiv","document","createElement","className","alignmentViewZonesDisposables","viewZones","store","_b","_c","_d","_e","_f","_g","_h","clear","alignmentsVal","origViewZones","modViewZones","modifiedTopPaddingVal","push","afterLineNumber","domNode","heightInPx","showInHiddenAreas","suppressMouseDown","originalTopPaddingVal","deletedCodeLineBreaksComputer","_getViewModel","createLineBreaksComputer","a","originalRange","startLineNumber","endLineNumberExclusive","addRequest","getModel","getLineContent","lineBreakData","finalize","lineBreakDataIdx","modLineHeight","getOption","mightContainNonBasicASCII","mightContainRTL","renderOptions","fromEditor","isEmpty","deletedCodeDomNode","classList","add","source","mapToLineArray","l","getLineTokens","_","decorations","innerChanges","delta","result","marginDomNode","fontInfo","renderIndicators","heightInLines","marginElement","asClassName","setAttribute","lineDecorationsWidth","appendChild","zoneId","viewLineCounts","count","modifiedRange","minWidthInPx","setZoneId","id","modifiedHeightInPx","originalHeightInPx","lineRangeMapping","deltaLength","contains","createViewZoneMarginArrow","arrow","arrowRight","e","stopPropagation","revert","shouldRenderRevertArrows","intersect","orig","mod","ignoreChange","onDidScrollChange","scrollLeftChanged","setScrollLeft","scrollLeft","_originalScrollTop","getScrollTop","_modifiedScrollTop","newScrollTopModified","setScrollTop","newScrollTopOriginal","deltaOrigToMod","trueTopOriginal","getTopForLineNumber","trueTopModified","setTimeout","hasTextFocus","originalEditor","modifiedEditor","diffs","originalEditorAlignmentViewZones","modifiedEditorAlignmentViewZones","originalLineHeightOverrides","getAdditionalLineHeights","modifiedLineHeightOverrides","origLineHeight","lastOriginalLineNumber","lastModifiedLineNumber","handleAlignmentsOutsideOfDiffs","untilOriginalLineNumberExclusive","untilModifiedLineNumberExclusive","origNext","peek","modNext","lineNumber","distOrig","Number","MAX_VALUE","distNext","dequeue","ofLength","first","lastModLineNumber","lastOrigLineNumber","emitAlignment","origLineNumberExclusive","modLineNumberExclusive","originalAdditionalHeight","takeWhile","v","reduce","p","modifiedAdditionalHeight","startColumn","endColumn","getLineMaxColumn","endLineNumber","editor","viewZonesToIgnore","viewZoneHeights","wrappingZoneHeights","hasWrapping","wrappingColumn","coordinatesConverter","editorLineHeight","getLineCount","lineCount","getModelLineViewLineCount","w","getWhitespaces","has","modelLineNumber","convertViewPositionToModelPosition","height","v1","v2"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/lineAlignment.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { $, addDisposableListener } from '../../../../base/browser/dom.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, derivedWithStore, observableFromEvent, observableValue } from '../../../../base/common/observable.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { diffDeleteDecoration, diffRemoveIcon } from './decorations.js';\nimport { DiffMapping } from './diffEditorViewModel.js';\nimport { InlineDiffDeletedCodeMargin } from './inlineDiffDeletedCodeMargin.js';\nimport { LineSource, RenderOptions, renderLines } from './renderLines.js';\nimport { animatedObservable, joinCombine } from './utils.js';\nimport { LineRange } from '../../../common/core/lineRange.js';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineDecoration } from '../../../common/viewModel.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\n/**\n * Ensures both editors have the same height by aligning unchanged lines.\n * In inline view mode, inserts viewzones to show deleted code from the original text model in the modified code editor.\n * Synchronizes scrolling.\n *\n * Make sure to add the view zones!\n */\nlet ViewZoneManager = class ViewZoneManager extends Disposable {\n    constructor(_targetWindow, _editors, _diffModel, _options, _diffEditorWidget, _canIgnoreViewZoneUpdateEvent, _origViewZonesToIgnore, _modViewZonesToIgnore, _clipboardService, _contextMenuService) {\n        super();\n        this._targetWindow = _targetWindow;\n        this._editors = _editors;\n        this._diffModel = _diffModel;\n        this._options = _options;\n        this._diffEditorWidget = _diffEditorWidget;\n        this._canIgnoreViewZoneUpdateEvent = _canIgnoreViewZoneUpdateEvent;\n        this._origViewZonesToIgnore = _origViewZonesToIgnore;\n        this._modViewZonesToIgnore = _modViewZonesToIgnore;\n        this._clipboardService = _clipboardService;\n        this._contextMenuService = _contextMenuService;\n        this._originalTopPadding = observableValue(this, 0);\n        this._originalScrollOffset = observableValue(this, 0);\n        this._originalScrollOffsetAnimated = animatedObservable(this._targetWindow, this._originalScrollOffset, this._store);\n        this._modifiedTopPadding = observableValue(this, 0);\n        this._modifiedScrollOffset = observableValue(this, 0);\n        this._modifiedScrollOffsetAnimated = animatedObservable(this._targetWindow, this._modifiedScrollOffset, this._store);\n        const state = observableValue('invalidateAlignmentsState', 0);\n        const updateImmediately = this._register(new RunOnceScheduler(() => {\n            state.set(state.get() + 1, undefined);\n        }, 0));\n        this._register(this._editors.original.onDidChangeViewZones((_args) => { if (!this._canIgnoreViewZoneUpdateEvent()) {\n            updateImmediately.schedule();\n        } }));\n        this._register(this._editors.modified.onDidChangeViewZones((_args) => { if (!this._canIgnoreViewZoneUpdateEvent()) {\n            updateImmediately.schedule();\n        } }));\n        this._register(this._editors.original.onDidChangeConfiguration((args) => {\n            if (args.hasChanged(144 /* EditorOption.wrappingInfo */) || args.hasChanged(66 /* EditorOption.lineHeight */)) {\n                updateImmediately.schedule();\n            }\n        }));\n        this._register(this._editors.modified.onDidChangeConfiguration((args) => {\n            if (args.hasChanged(144 /* EditorOption.wrappingInfo */) || args.hasChanged(66 /* EditorOption.lineHeight */)) {\n                updateImmediately.schedule();\n            }\n        }));\n        const originalModelTokenizationCompleted = this._diffModel.map(m => m ? observableFromEvent(m.model.original.onDidChangeTokens, () => m.model.original.tokenization.backgroundTokenizationState === 2 /* BackgroundTokenizationState.Completed */) : undefined).map((m, reader) => m === null || m === void 0 ? void 0 : m.read(reader));\n        const alignments = derived((reader) => {\n            /** @description alignments */\n            const diffModel = this._diffModel.read(reader);\n            const diff = diffModel === null || diffModel === void 0 ? void 0 : diffModel.diff.read(reader);\n            if (!diffModel || !diff) {\n                return null;\n            }\n            state.read(reader);\n            const renderSideBySide = this._options.renderSideBySide.read(reader);\n            const innerHunkAlignment = renderSideBySide;\n            return computeRangeAlignment(this._editors.original, this._editors.modified, diff.mappings, this._origViewZonesToIgnore, this._modViewZonesToIgnore, innerHunkAlignment);\n        });\n        const alignmentsSyncedMovedText = derived((reader) => {\n            var _a;\n            /** @description alignmentsSyncedMovedText */\n            const syncedMovedText = (_a = this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.movedTextToCompare.read(reader);\n            if (!syncedMovedText) {\n                return null;\n            }\n            state.read(reader);\n            const mappings = syncedMovedText.changes.map(c => new DiffMapping(c));\n            // TODO dont include alignments outside syncedMovedText\n            return computeRangeAlignment(this._editors.original, this._editors.modified, mappings, this._origViewZonesToIgnore, this._modViewZonesToIgnore, true);\n        });\n        function createFakeLinesDiv() {\n            const r = document.createElement('div');\n            r.className = 'diagonal-fill';\n            return r;\n        }\n        const alignmentViewZonesDisposables = this._register(new DisposableStore());\n        this.viewZones = derivedWithStore(this, (reader, store) => {\n            var _a, _b, _c, _d, _e, _f, _g, _h;\n            alignmentViewZonesDisposables.clear();\n            const alignmentsVal = alignments.read(reader) || [];\n            const origViewZones = [];\n            const modViewZones = [];\n            const modifiedTopPaddingVal = this._modifiedTopPadding.read(reader);\n            if (modifiedTopPaddingVal > 0) {\n                modViewZones.push({\n                    afterLineNumber: 0,\n                    domNode: document.createElement('div'),\n                    heightInPx: modifiedTopPaddingVal,\n                    showInHiddenAreas: true,\n                    suppressMouseDown: true,\n                });\n            }\n            const originalTopPaddingVal = this._originalTopPadding.read(reader);\n            if (originalTopPaddingVal > 0) {\n                origViewZones.push({\n                    afterLineNumber: 0,\n                    domNode: document.createElement('div'),\n                    heightInPx: originalTopPaddingVal,\n                    showInHiddenAreas: true,\n                    suppressMouseDown: true,\n                });\n            }\n            const renderSideBySide = this._options.renderSideBySide.read(reader);\n            const deletedCodeLineBreaksComputer = !renderSideBySide ? (_a = this._editors.modified._getViewModel()) === null || _a === void 0 ? void 0 : _a.createLineBreaksComputer() : undefined;\n            if (deletedCodeLineBreaksComputer) {\n                for (const a of alignmentsVal) {\n                    if (a.diff) {\n                        for (let i = a.originalRange.startLineNumber; i < a.originalRange.endLineNumberExclusive; i++) {\n                            deletedCodeLineBreaksComputer === null || deletedCodeLineBreaksComputer === void 0 ? void 0 : deletedCodeLineBreaksComputer.addRequest(this._editors.original.getModel().getLineContent(i), null, null);\n                        }\n                    }\n                }\n            }\n            const lineBreakData = (_b = deletedCodeLineBreaksComputer === null || deletedCodeLineBreaksComputer === void 0 ? void 0 : deletedCodeLineBreaksComputer.finalize()) !== null && _b !== void 0 ? _b : [];\n            let lineBreakDataIdx = 0;\n            const modLineHeight = this._editors.modified.getOption(66 /* EditorOption.lineHeight */);\n            const syncedMovedText = (_c = this._diffModel.read(reader)) === null || _c === void 0 ? void 0 : _c.movedTextToCompare.read(reader);\n            const mightContainNonBasicASCII = (_e = (_d = this._editors.original.getModel()) === null || _d === void 0 ? void 0 : _d.mightContainNonBasicASCII()) !== null && _e !== void 0 ? _e : false;\n            const mightContainRTL = (_g = (_f = this._editors.original.getModel()) === null || _f === void 0 ? void 0 : _f.mightContainRTL()) !== null && _g !== void 0 ? _g : false;\n            const renderOptions = RenderOptions.fromEditor(this._editors.modified);\n            for (const a of alignmentsVal) {\n                if (a.diff && !renderSideBySide) {\n                    if (!a.originalRange.isEmpty) {\n                        originalModelTokenizationCompleted.read(reader); // Update view-zones once tokenization completes\n                        const deletedCodeDomNode = document.createElement('div');\n                        deletedCodeDomNode.classList.add('view-lines', 'line-delete', 'monaco-mouse-cursor-text');\n                        const source = new LineSource(a.originalRange.mapToLineArray(l => this._editors.original.getModel().tokenization.getLineTokens(l)), a.originalRange.mapToLineArray(_ => lineBreakData[lineBreakDataIdx++]), mightContainNonBasicASCII, mightContainRTL);\n                        const decorations = [];\n                        for (const i of a.diff.innerChanges || []) {\n                            decorations.push(new InlineDecoration(i.originalRange.delta(-(a.diff.original.startLineNumber - 1)), diffDeleteDecoration.className, 0 /* InlineDecorationType.Regular */));\n                        }\n                        const result = renderLines(source, renderOptions, decorations, deletedCodeDomNode);\n                        const marginDomNode = document.createElement('div');\n                        marginDomNode.className = 'inline-deleted-margin-view-zone';\n                        applyFontInfo(marginDomNode, renderOptions.fontInfo);\n                        if (this._options.renderIndicators.read(reader)) {\n                            for (let i = 0; i < result.heightInLines; i++) {\n                                const marginElement = document.createElement('div');\n                                marginElement.className = `delete-sign ${ThemeIcon.asClassName(diffRemoveIcon)}`;\n                                marginElement.setAttribute('style', `position:absolute;top:${i * modLineHeight}px;width:${renderOptions.lineDecorationsWidth}px;height:${modLineHeight}px;right:0;`);\n                                marginDomNode.appendChild(marginElement);\n                            }\n                        }\n                        let zoneId = undefined;\n                        alignmentViewZonesDisposables.add(new InlineDiffDeletedCodeMargin(() => assertIsDefined(zoneId), marginDomNode, this._editors.modified, a.diff, this._diffEditorWidget, result.viewLineCounts, this._editors.original.getModel(), this._contextMenuService, this._clipboardService));\n                        for (let i = 0; i < result.viewLineCounts.length; i++) {\n                            const count = result.viewLineCounts[i];\n                            // Account for wrapped lines in the (collapsed) original editor (which doesn't wrap lines).\n                            if (count > 1) {\n                                origViewZones.push({\n                                    afterLineNumber: a.originalRange.startLineNumber + i,\n                                    domNode: createFakeLinesDiv(),\n                                    heightInPx: (count - 1) * modLineHeight,\n                                    showInHiddenAreas: true,\n                                    suppressMouseDown: true,\n                                });\n                            }\n                        }\n                        modViewZones.push({\n                            afterLineNumber: a.modifiedRange.startLineNumber - 1,\n                            domNode: deletedCodeDomNode,\n                            heightInPx: result.heightInLines * modLineHeight,\n                            minWidthInPx: result.minWidthInPx,\n                            marginDomNode,\n                            setZoneId(id) { zoneId = id; },\n                            showInHiddenAreas: true,\n                            suppressMouseDown: true,\n                        });\n                    }\n                    const marginDomNode = document.createElement('div');\n                    marginDomNode.className = 'gutter-delete';\n                    origViewZones.push({\n                        afterLineNumber: a.originalRange.endLineNumberExclusive - 1,\n                        domNode: createFakeLinesDiv(),\n                        heightInPx: a.modifiedHeightInPx,\n                        marginDomNode,\n                        showInHiddenAreas: true,\n                        suppressMouseDown: true,\n                    });\n                }\n                else {\n                    const delta = a.modifiedHeightInPx - a.originalHeightInPx;\n                    if (delta > 0) {\n                        if (syncedMovedText === null || syncedMovedText === void 0 ? void 0 : syncedMovedText.lineRangeMapping.original.delta(-1).deltaLength(2).contains(a.originalRange.endLineNumberExclusive - 1)) {\n                            continue;\n                        }\n                        origViewZones.push({\n                            afterLineNumber: a.originalRange.endLineNumberExclusive - 1,\n                            domNode: createFakeLinesDiv(),\n                            heightInPx: delta,\n                            showInHiddenAreas: true,\n                            suppressMouseDown: true,\n                        });\n                    }\n                    else {\n                        if (syncedMovedText === null || syncedMovedText === void 0 ? void 0 : syncedMovedText.lineRangeMapping.modified.delta(-1).deltaLength(2).contains(a.modifiedRange.endLineNumberExclusive - 1)) {\n                            continue;\n                        }\n                        function createViewZoneMarginArrow() {\n                            const arrow = document.createElement('div');\n                            arrow.className = 'arrow-revert-change ' + ThemeIcon.asClassName(Codicon.arrowRight);\n                            store.add(addDisposableListener(arrow, 'mousedown', e => e.stopPropagation()));\n                            store.add(addDisposableListener(arrow, 'click', e => {\n                                e.stopPropagation();\n                                _diffEditorWidget.revert(a.diff);\n                            }));\n                            return $('div', {}, arrow);\n                        }\n                        let marginDomNode = undefined;\n                        if (a.diff && a.diff.modified.isEmpty && this._options.shouldRenderRevertArrows.read(reader)) {\n                            marginDomNode = createViewZoneMarginArrow();\n                        }\n                        modViewZones.push({\n                            afterLineNumber: a.modifiedRange.endLineNumberExclusive - 1,\n                            domNode: createFakeLinesDiv(),\n                            heightInPx: -delta,\n                            marginDomNode,\n                            showInHiddenAreas: true,\n                            suppressMouseDown: true,\n                        });\n                    }\n                }\n            }\n            for (const a of (_h = alignmentsSyncedMovedText.read(reader)) !== null && _h !== void 0 ? _h : []) {\n                if (!(syncedMovedText === null || syncedMovedText === void 0 ? void 0 : syncedMovedText.lineRangeMapping.original.intersect(a.originalRange))\n                    || !(syncedMovedText === null || syncedMovedText === void 0 ? void 0 : syncedMovedText.lineRangeMapping.modified.intersect(a.modifiedRange))) {\n                    // ignore unrelated alignments outside the synced moved text\n                    continue;\n                }\n                const delta = a.modifiedHeightInPx - a.originalHeightInPx;\n                if (delta > 0) {\n                    origViewZones.push({\n                        afterLineNumber: a.originalRange.endLineNumberExclusive - 1,\n                        domNode: createFakeLinesDiv(),\n                        heightInPx: delta,\n                        showInHiddenAreas: true,\n                        suppressMouseDown: true,\n                    });\n                }\n                else {\n                    modViewZones.push({\n                        afterLineNumber: a.modifiedRange.endLineNumberExclusive - 1,\n                        domNode: createFakeLinesDiv(),\n                        heightInPx: -delta,\n                        showInHiddenAreas: true,\n                        suppressMouseDown: true,\n                    });\n                }\n            }\n            return { orig: origViewZones, mod: modViewZones };\n        });\n        let ignoreChange = false;\n        this._register(this._editors.original.onDidScrollChange(e => {\n            if (e.scrollLeftChanged && !ignoreChange) {\n                ignoreChange = true;\n                this._editors.modified.setScrollLeft(e.scrollLeft);\n                ignoreChange = false;\n            }\n        }));\n        this._register(this._editors.modified.onDidScrollChange(e => {\n            if (e.scrollLeftChanged && !ignoreChange) {\n                ignoreChange = true;\n                this._editors.original.setScrollLeft(e.scrollLeft);\n                ignoreChange = false;\n            }\n        }));\n        this._originalScrollTop = observableFromEvent(this._editors.original.onDidScrollChange, () => /** @description original.getScrollTop */ this._editors.original.getScrollTop());\n        this._modifiedScrollTop = observableFromEvent(this._editors.modified.onDidScrollChange, () => /** @description modified.getScrollTop */ this._editors.modified.getScrollTop());\n        // origExtraHeight + origOffset - origScrollTop = modExtraHeight + modOffset - modScrollTop\n        // origScrollTop = origExtraHeight + origOffset - modExtraHeight - modOffset + modScrollTop\n        // modScrollTop = modExtraHeight + modOffset - origExtraHeight - origOffset + origScrollTop\n        // origOffset - modOffset = heightOfLines(1..Y) - heightOfLines(1..X)\n        // origScrollTop >= 0, modScrollTop >= 0\n        this._register(autorun(reader => {\n            /** @description update scroll modified */\n            const newScrollTopModified = this._originalScrollTop.read(reader)\n                - (this._originalScrollOffsetAnimated.get() - this._modifiedScrollOffsetAnimated.read(reader))\n                - (this._originalTopPadding.get() - this._modifiedTopPadding.read(reader));\n            if (newScrollTopModified !== this._editors.modified.getScrollTop()) {\n                this._editors.modified.setScrollTop(newScrollTopModified, 1 /* ScrollType.Immediate */);\n            }\n        }));\n        this._register(autorun(reader => {\n            /** @description update scroll original */\n            const newScrollTopOriginal = this._modifiedScrollTop.read(reader)\n                - (this._modifiedScrollOffsetAnimated.get() - this._originalScrollOffsetAnimated.read(reader))\n                - (this._modifiedTopPadding.get() - this._originalTopPadding.read(reader));\n            if (newScrollTopOriginal !== this._editors.original.getScrollTop()) {\n                this._editors.original.setScrollTop(newScrollTopOriginal, 1 /* ScrollType.Immediate */);\n            }\n        }));\n        this._register(autorun(reader => {\n            var _a;\n            /** @description update editor top offsets */\n            const m = (_a = this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.movedTextToCompare.read(reader);\n            let deltaOrigToMod = 0;\n            if (m) {\n                const trueTopOriginal = this._editors.original.getTopForLineNumber(m.lineRangeMapping.original.startLineNumber, true) - this._originalTopPadding.get();\n                const trueTopModified = this._editors.modified.getTopForLineNumber(m.lineRangeMapping.modified.startLineNumber, true) - this._modifiedTopPadding.get();\n                deltaOrigToMod = trueTopModified - trueTopOriginal;\n            }\n            if (deltaOrigToMod > 0) {\n                this._modifiedTopPadding.set(0, undefined);\n                this._originalTopPadding.set(deltaOrigToMod, undefined);\n            }\n            else if (deltaOrigToMod < 0) {\n                this._modifiedTopPadding.set(-deltaOrigToMod, undefined);\n                this._originalTopPadding.set(0, undefined);\n            }\n            else {\n                setTimeout(() => {\n                    this._modifiedTopPadding.set(0, undefined);\n                    this._originalTopPadding.set(0, undefined);\n                }, 400);\n            }\n            if (this._editors.modified.hasTextFocus()) {\n                this._originalScrollOffset.set(this._modifiedScrollOffset.get() - deltaOrigToMod, undefined, true);\n            }\n            else {\n                this._modifiedScrollOffset.set(this._originalScrollOffset.get() + deltaOrigToMod, undefined, true);\n            }\n        }));\n    }\n};\nViewZoneManager = __decorate([\n    __param(8, IClipboardService),\n    __param(9, IContextMenuService)\n], ViewZoneManager);\nexport { ViewZoneManager };\nfunction computeRangeAlignment(originalEditor, modifiedEditor, diffs, originalEditorAlignmentViewZones, modifiedEditorAlignmentViewZones, innerHunkAlignment) {\n    const originalLineHeightOverrides = new ArrayQueue(getAdditionalLineHeights(originalEditor, originalEditorAlignmentViewZones));\n    const modifiedLineHeightOverrides = new ArrayQueue(getAdditionalLineHeights(modifiedEditor, modifiedEditorAlignmentViewZones));\n    const origLineHeight = originalEditor.getOption(66 /* EditorOption.lineHeight */);\n    const modLineHeight = modifiedEditor.getOption(66 /* EditorOption.lineHeight */);\n    const result = [];\n    let lastOriginalLineNumber = 0;\n    let lastModifiedLineNumber = 0;\n    function handleAlignmentsOutsideOfDiffs(untilOriginalLineNumberExclusive, untilModifiedLineNumberExclusive) {\n        while (true) {\n            let origNext = originalLineHeightOverrides.peek();\n            let modNext = modifiedLineHeightOverrides.peek();\n            if (origNext && origNext.lineNumber >= untilOriginalLineNumberExclusive) {\n                origNext = undefined;\n            }\n            if (modNext && modNext.lineNumber >= untilModifiedLineNumberExclusive) {\n                modNext = undefined;\n            }\n            if (!origNext && !modNext) {\n                break;\n            }\n            const distOrig = origNext ? origNext.lineNumber - lastOriginalLineNumber : Number.MAX_VALUE;\n            const distNext = modNext ? modNext.lineNumber - lastModifiedLineNumber : Number.MAX_VALUE;\n            if (distOrig < distNext) {\n                originalLineHeightOverrides.dequeue();\n                modNext = {\n                    lineNumber: origNext.lineNumber - lastOriginalLineNumber + lastModifiedLineNumber,\n                    heightInPx: 0,\n                };\n            }\n            else if (distOrig > distNext) {\n                modifiedLineHeightOverrides.dequeue();\n                origNext = {\n                    lineNumber: modNext.lineNumber - lastModifiedLineNumber + lastOriginalLineNumber,\n                    heightInPx: 0,\n                };\n            }\n            else {\n                originalLineHeightOverrides.dequeue();\n                modifiedLineHeightOverrides.dequeue();\n            }\n            result.push({\n                originalRange: LineRange.ofLength(origNext.lineNumber, 1),\n                modifiedRange: LineRange.ofLength(modNext.lineNumber, 1),\n                originalHeightInPx: origLineHeight + origNext.heightInPx,\n                modifiedHeightInPx: modLineHeight + modNext.heightInPx,\n                diff: undefined,\n            });\n        }\n    }\n    for (const m of diffs) {\n        const c = m.lineRangeMapping;\n        handleAlignmentsOutsideOfDiffs(c.original.startLineNumber, c.modified.startLineNumber);\n        let first = true;\n        let lastModLineNumber = c.modified.startLineNumber;\n        let lastOrigLineNumber = c.original.startLineNumber;\n        function emitAlignment(origLineNumberExclusive, modLineNumberExclusive) {\n            var _a, _b, _c, _d;\n            if (origLineNumberExclusive < lastOrigLineNumber || modLineNumberExclusive < lastModLineNumber) {\n                return;\n            }\n            if (first) {\n                first = false;\n            }\n            else if (origLineNumberExclusive === lastOrigLineNumber || modLineNumberExclusive === lastModLineNumber) {\n                return;\n            }\n            const originalRange = new LineRange(lastOrigLineNumber, origLineNumberExclusive);\n            const modifiedRange = new LineRange(lastModLineNumber, modLineNumberExclusive);\n            if (originalRange.isEmpty && modifiedRange.isEmpty) {\n                return;\n            }\n            const originalAdditionalHeight = (_b = (_a = originalLineHeightOverrides\n                .takeWhile(v => v.lineNumber < origLineNumberExclusive)) === null || _a === void 0 ? void 0 : _a.reduce((p, c) => p + c.heightInPx, 0)) !== null && _b !== void 0 ? _b : 0;\n            const modifiedAdditionalHeight = (_d = (_c = modifiedLineHeightOverrides\n                .takeWhile(v => v.lineNumber < modLineNumberExclusive)) === null || _c === void 0 ? void 0 : _c.reduce((p, c) => p + c.heightInPx, 0)) !== null && _d !== void 0 ? _d : 0;\n            result.push({\n                originalRange,\n                modifiedRange,\n                originalHeightInPx: originalRange.length * origLineHeight + originalAdditionalHeight,\n                modifiedHeightInPx: modifiedRange.length * modLineHeight + modifiedAdditionalHeight,\n                diff: m.lineRangeMapping,\n            });\n            lastOrigLineNumber = origLineNumberExclusive;\n            lastModLineNumber = modLineNumberExclusive;\n        }\n        if (innerHunkAlignment) {\n            for (const i of c.innerChanges || []) {\n                if (i.originalRange.startColumn > 1 && i.modifiedRange.startColumn > 1) {\n                    // There is some unmodified text on this line before the diff\n                    emitAlignment(i.originalRange.startLineNumber, i.modifiedRange.startLineNumber);\n                }\n                if (i.originalRange.endColumn < originalEditor.getModel().getLineMaxColumn(i.originalRange.endLineNumber)) {\n                    // // There is some unmodified text on this line after the diff\n                    emitAlignment(i.originalRange.endLineNumber, i.modifiedRange.endLineNumber);\n                }\n            }\n        }\n        emitAlignment(c.original.endLineNumberExclusive, c.modified.endLineNumberExclusive);\n        lastOriginalLineNumber = c.original.endLineNumberExclusive;\n        lastModifiedLineNumber = c.modified.endLineNumberExclusive;\n    }\n    handleAlignmentsOutsideOfDiffs(Number.MAX_VALUE, Number.MAX_VALUE);\n    return result;\n}\nfunction getAdditionalLineHeights(editor, viewZonesToIgnore) {\n    const viewZoneHeights = [];\n    const wrappingZoneHeights = [];\n    const hasWrapping = editor.getOption(144 /* EditorOption.wrappingInfo */).wrappingColumn !== -1;\n    const coordinatesConverter = editor._getViewModel().coordinatesConverter;\n    const editorLineHeight = editor.getOption(66 /* EditorOption.lineHeight */);\n    if (hasWrapping) {\n        for (let i = 1; i <= editor.getModel().getLineCount(); i++) {\n            const lineCount = coordinatesConverter.getModelLineViewLineCount(i);\n            if (lineCount > 1) {\n                wrappingZoneHeights.push({ lineNumber: i, heightInPx: editorLineHeight * (lineCount - 1) });\n            }\n        }\n    }\n    for (const w of editor.getWhitespaces()) {\n        if (viewZonesToIgnore.has(w.id)) {\n            continue;\n        }\n        const modelLineNumber = w.afterLineNumber === 0 ? 0 : coordinatesConverter.convertViewPositionToModelPosition(new Position(w.afterLineNumber, 1)).lineNumber;\n        viewZoneHeights.push({ lineNumber: modelLineNumber, heightInPx: w.height });\n    }\n    const result = joinCombine(viewZoneHeights, wrappingZoneHeights, v => v.lineNumber, (v1, v2) => ({ lineNumber: v1.lineNumber, heightInPx: v1.heightInPx + v2.heightInPx }));\n    return result;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}