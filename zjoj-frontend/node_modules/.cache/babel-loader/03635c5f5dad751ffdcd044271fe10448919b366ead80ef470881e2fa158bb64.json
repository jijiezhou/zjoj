{"ast":null,"code":"import { toRefs, computed, watch } from \"vue\";\nimport { getDayjsValue } from \"../../_utils/date.js\";\nimport { isUndefined, isArray } from \"../../_utils/is.js\";\nimport useState from \"../../_hooks/use-state.js\";\nfunction useTimeState(props) {\n  const {\n    modelValue,\n    defaultValue,\n    format,\n    isRange\n  } = toRefs(props);\n  function getLocalEmptyValue() {\n    return isRange.value ? [] : void 0;\n  }\n  function normalizeValue(time) {\n    if (isUndefined(time)) {\n      return void 0;\n    }\n    if (isRange.value) {\n      return isArray(time) ? time : [time, void 0];\n    }\n    return time;\n  }\n  const computedModelValue = computed(() => {\n    const time = normalizeValue(modelValue.value);\n    return getDayjsValue(time, format.value);\n  });\n  const computedDefaultValue = computed(() => {\n    const time = normalizeValue(defaultValue.value);\n    return getDayjsValue(time, format.value);\n  });\n  const [localValue, setLocalValue] = useState(!isUndefined(computedModelValue.value) ? computedModelValue.value : !isUndefined(computedDefaultValue.value) ? computedDefaultValue.value : getLocalEmptyValue());\n  watch(computedModelValue, () => {\n    if (isUndefined(computedModelValue.value)) {\n      setLocalValue(getLocalEmptyValue());\n    }\n  });\n  const computedValue = computed(() => computedModelValue.value || localValue.value);\n  const [panelValue, setPanelValue] = useState(computedValue.value);\n  watch([computedValue], () => {\n    setPanelValue(computedValue.value);\n  });\n  const [inputValue, setInputValue] = useState();\n  watch([panelValue], () => {\n    setInputValue(void 0);\n  });\n  return {\n    computedValue,\n    panelValue,\n    inputValue,\n    setValue: setLocalValue,\n    setPanelValue,\n    setInputValue\n  };\n}\nexport { useTimeState as default };","map":{"version":3,"names":["toRefs","computed","watch","getDayjsValue","isUndefined","isArray","useState","useTimeState","props","modelValue","defaultValue","format","isRange","getLocalEmptyValue","value","normalizeValue","time","computedModelValue","computedDefaultValue","localValue","setLocalValue","computedValue","panelValue","setPanelValue","inputValue","setInputValue","setValue","default"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/@arco-design/web-vue/es/time-picker/hooks/use-time-state.js"],"sourcesContent":["import { toRefs, computed, watch } from \"vue\";\nimport { getDayjsValue } from \"../../_utils/date.js\";\nimport { isUndefined, isArray } from \"../../_utils/is.js\";\nimport useState from \"../../_hooks/use-state.js\";\nfunction useTimeState(props) {\n  const { modelValue, defaultValue, format, isRange } = toRefs(props);\n  function getLocalEmptyValue() {\n    return isRange.value ? [] : void 0;\n  }\n  function normalizeValue(time) {\n    if (isUndefined(time)) {\n      return void 0;\n    }\n    if (isRange.value) {\n      return isArray(time) ? time : [time, void 0];\n    }\n    return time;\n  }\n  const computedModelValue = computed(() => {\n    const time = normalizeValue(modelValue.value);\n    return getDayjsValue(time, format.value);\n  });\n  const computedDefaultValue = computed(() => {\n    const time = normalizeValue(defaultValue.value);\n    return getDayjsValue(time, format.value);\n  });\n  const [localValue, setLocalValue] = useState(!isUndefined(computedModelValue.value) ? computedModelValue.value : !isUndefined(computedDefaultValue.value) ? computedDefaultValue.value : getLocalEmptyValue());\n  watch(computedModelValue, () => {\n    if (isUndefined(computedModelValue.value)) {\n      setLocalValue(getLocalEmptyValue());\n    }\n  });\n  const computedValue = computed(() => computedModelValue.value || localValue.value);\n  const [panelValue, setPanelValue] = useState(computedValue.value);\n  watch([computedValue], () => {\n    setPanelValue(computedValue.value);\n  });\n  const [inputValue, setInputValue] = useState();\n  watch([panelValue], () => {\n    setInputValue(void 0);\n  });\n  return {\n    computedValue,\n    panelValue,\n    inputValue,\n    setValue: setLocalValue,\n    setPanelValue,\n    setInputValue\n  };\n}\nexport { useTimeState as default };\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,KAAK;AAC7C,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,WAAW,EAAEC,OAAO,QAAQ,oBAAoB;AACzD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,SAASC,YAAYA,CAACC,KAAK,EAAE;EAC3B,MAAM;IAAEC,UAAU;IAAEC,YAAY;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGZ,MAAM,CAACQ,KAAK,CAAC;EACnE,SAASK,kBAAkBA,CAAA,EAAG;IAC5B,OAAOD,OAAO,CAACE,KAAK,GAAG,EAAE,GAAG,KAAK,CAAC;EACpC;EACA,SAASC,cAAcA,CAACC,IAAI,EAAE;IAC5B,IAAIZ,WAAW,CAACY,IAAI,CAAC,EAAE;MACrB,OAAO,KAAK,CAAC;IACf;IACA,IAAIJ,OAAO,CAACE,KAAK,EAAE;MACjB,OAAOT,OAAO,CAACW,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,EAAE,KAAK,CAAC,CAAC;IAC9C;IACA,OAAOA,IAAI;EACb;EACA,MAAMC,kBAAkB,GAAGhB,QAAQ,CAAC,MAAM;IACxC,MAAMe,IAAI,GAAGD,cAAc,CAACN,UAAU,CAACK,KAAK,CAAC;IAC7C,OAAOX,aAAa,CAACa,IAAI,EAAEL,MAAM,CAACG,KAAK,CAAC;EAC1C,CAAC,CAAC;EACF,MAAMI,oBAAoB,GAAGjB,QAAQ,CAAC,MAAM;IAC1C,MAAMe,IAAI,GAAGD,cAAc,CAACL,YAAY,CAACI,KAAK,CAAC;IAC/C,OAAOX,aAAa,CAACa,IAAI,EAAEL,MAAM,CAACG,KAAK,CAAC;EAC1C,CAAC,CAAC;EACF,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,CAACF,WAAW,CAACa,kBAAkB,CAACH,KAAK,CAAC,GAAGG,kBAAkB,CAACH,KAAK,GAAG,CAACV,WAAW,CAACc,oBAAoB,CAACJ,KAAK,CAAC,GAAGI,oBAAoB,CAACJ,KAAK,GAAGD,kBAAkB,CAAC,CAAC,CAAC;EAC9MX,KAAK,CAACe,kBAAkB,EAAE,MAAM;IAC9B,IAAIb,WAAW,CAACa,kBAAkB,CAACH,KAAK,CAAC,EAAE;MACzCM,aAAa,CAACP,kBAAkB,CAAC,CAAC,CAAC;IACrC;EACF,CAAC,CAAC;EACF,MAAMQ,aAAa,GAAGpB,QAAQ,CAAC,MAAMgB,kBAAkB,CAACH,KAAK,IAAIK,UAAU,CAACL,KAAK,CAAC;EAClF,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAACe,aAAa,CAACP,KAAK,CAAC;EACjEZ,KAAK,CAAC,CAACmB,aAAa,CAAC,EAAE,MAAM;IAC3BE,aAAa,CAACF,aAAa,CAACP,KAAK,CAAC;EACpC,CAAC,CAAC;EACF,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,CAAC;EAC9CJ,KAAK,CAAC,CAACoB,UAAU,CAAC,EAAE,MAAM;IACxBG,aAAa,CAAC,KAAK,CAAC,CAAC;EACvB,CAAC,CAAC;EACF,OAAO;IACLJ,aAAa;IACbC,UAAU;IACVE,UAAU;IACVE,QAAQ,EAAEN,aAAa;IACvBG,aAAa;IACbE;EACF,CAAC;AACH;AACA,SAASlB,YAAY,IAAIoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}