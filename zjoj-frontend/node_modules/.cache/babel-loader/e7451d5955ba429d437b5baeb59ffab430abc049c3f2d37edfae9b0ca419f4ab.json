{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorOptions } from './common/config/editorOptions.js';\nimport { createMonacoBaseAPI } from './common/services/editorBaseApi.js';\nimport { createMonacoEditorAPI } from './standalone/browser/standaloneEditor.js';\nimport { createMonacoLanguagesAPI } from './standalone/browser/standaloneLanguages.js';\nimport { FormattingConflicts } from './contrib/format/browser/format.js';\n// Set defaults for standalone editor\nEditorOptions.wrappingIndent.defaultValue = 0 /* WrappingIndent.None */;\nEditorOptions.glyphMargin.defaultValue = false;\nEditorOptions.autoIndent.defaultValue = 3 /* EditorAutoIndentStrategy.Advanced */;\nEditorOptions.overviewRulerLanes.defaultValue = 2;\n// We need to register a formatter selector which simply picks the first available formatter.\n// See https://github.com/microsoft/monaco-editor/issues/2327\nFormattingConflicts.setFormatterSelector((formatter, document, mode) => Promise.resolve(formatter[0]));\nconst api = createMonacoBaseAPI();\napi.editor = createMonacoEditorAPI();\napi.languages = createMonacoLanguagesAPI();\nexport const CancellationTokenSource = api.CancellationTokenSource;\nexport const Emitter = api.Emitter;\nexport const KeyCode = api.KeyCode;\nexport const KeyMod = api.KeyMod;\nexport const Position = api.Position;\nexport const Range = api.Range;\nexport const Selection = api.Selection;\nexport const SelectionDirection = api.SelectionDirection;\nexport const MarkerSeverity = api.MarkerSeverity;\nexport const MarkerTag = api.MarkerTag;\nexport const Uri = api.Uri;\nexport const Token = api.Token;\nexport const editor = api.editor;\nexport const languages = api.languages;\nconst monacoEnvironment = globalThis.MonacoEnvironment;\nif ((monacoEnvironment === null || monacoEnvironment === void 0 ? void 0 : monacoEnvironment.globalAPI) || typeof define === 'function' && define.amd) {\n  globalThis.monaco = api;\n}\nif (typeof globalThis.require !== 'undefined' && typeof globalThis.require.config === 'function') {\n  globalThis.require.config({\n    ignoreDuplicateModules: ['vscode-languageserver-types', 'vscode-languageserver-types/main', 'vscode-languageserver-textdocument', 'vscode-languageserver-textdocument/main', 'vscode-nls', 'vscode-nls/vscode-nls', 'jsonc-parser', 'jsonc-parser/main', 'vscode-uri', 'vscode-uri/index', 'vs/basic-languages/typescript/typescript']\n  });\n}","map":{"version":3,"names":["EditorOptions","createMonacoBaseAPI","createMonacoEditorAPI","createMonacoLanguagesAPI","FormattingConflicts","wrappingIndent","defaultValue","glyphMargin","autoIndent","overviewRulerLanes","setFormatterSelector","formatter","document","mode","Promise","resolve","api","editor","languages","CancellationTokenSource","Emitter","KeyCode","KeyMod","Position","Range","Selection","SelectionDirection","MarkerSeverity","MarkerTag","Uri","Token","monacoEnvironment","globalThis","MonacoEnvironment","globalAPI","define","amd","monaco","require","config","ignoreDuplicateModules"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/editor.api.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorOptions } from './common/config/editorOptions.js';\nimport { createMonacoBaseAPI } from './common/services/editorBaseApi.js';\nimport { createMonacoEditorAPI } from './standalone/browser/standaloneEditor.js';\nimport { createMonacoLanguagesAPI } from './standalone/browser/standaloneLanguages.js';\nimport { FormattingConflicts } from './contrib/format/browser/format.js';\n// Set defaults for standalone editor\nEditorOptions.wrappingIndent.defaultValue = 0 /* WrappingIndent.None */;\nEditorOptions.glyphMargin.defaultValue = false;\nEditorOptions.autoIndent.defaultValue = 3 /* EditorAutoIndentStrategy.Advanced */;\nEditorOptions.overviewRulerLanes.defaultValue = 2;\n// We need to register a formatter selector which simply picks the first available formatter.\n// See https://github.com/microsoft/monaco-editor/issues/2327\nFormattingConflicts.setFormatterSelector((formatter, document, mode) => Promise.resolve(formatter[0]));\nconst api = createMonacoBaseAPI();\napi.editor = createMonacoEditorAPI();\napi.languages = createMonacoLanguagesAPI();\nexport const CancellationTokenSource = api.CancellationTokenSource;\nexport const Emitter = api.Emitter;\nexport const KeyCode = api.KeyCode;\nexport const KeyMod = api.KeyMod;\nexport const Position = api.Position;\nexport const Range = api.Range;\nexport const Selection = api.Selection;\nexport const SelectionDirection = api.SelectionDirection;\nexport const MarkerSeverity = api.MarkerSeverity;\nexport const MarkerTag = api.MarkerTag;\nexport const Uri = api.Uri;\nexport const Token = api.Token;\nexport const editor = api.editor;\nexport const languages = api.languages;\nconst monacoEnvironment = globalThis.MonacoEnvironment;\nif ((monacoEnvironment === null || monacoEnvironment === void 0 ? void 0 : monacoEnvironment.globalAPI) || (typeof define === 'function' && define.amd)) {\n    globalThis.monaco = api;\n}\nif (typeof globalThis.require !== 'undefined' && typeof globalThis.require.config === 'function') {\n    globalThis.require.config({\n        ignoreDuplicateModules: [\n            'vscode-languageserver-types',\n            'vscode-languageserver-types/main',\n            'vscode-languageserver-textdocument',\n            'vscode-languageserver-textdocument/main',\n            'vscode-nls',\n            'vscode-nls/vscode-nls',\n            'jsonc-parser',\n            'jsonc-parser/main',\n            'vscode-uri',\n            'vscode-uri/index',\n            'vs/basic-languages/typescript/typescript'\n        ]\n    });\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,kCAAkC;AAChE,SAASC,mBAAmB,QAAQ,oCAAoC;AACxE,SAASC,qBAAqB,QAAQ,0CAA0C;AAChF,SAASC,wBAAwB,QAAQ,6CAA6C;AACtF,SAASC,mBAAmB,QAAQ,oCAAoC;AACxE;AACAJ,aAAa,CAACK,cAAc,CAACC,YAAY,GAAG,CAAC,CAAC;AAC9CN,aAAa,CAACO,WAAW,CAACD,YAAY,GAAG,KAAK;AAC9CN,aAAa,CAACQ,UAAU,CAACF,YAAY,GAAG,CAAC,CAAC;AAC1CN,aAAa,CAACS,kBAAkB,CAACH,YAAY,GAAG,CAAC;AACjD;AACA;AACAF,mBAAmB,CAACM,oBAAoB,CAAC,CAACC,SAAS,EAAEC,QAAQ,EAAEC,IAAI,KAAKC,OAAO,CAACC,OAAO,CAACJ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AACtG,MAAMK,GAAG,GAAGf,mBAAmB,CAAC,CAAC;AACjCe,GAAG,CAACC,MAAM,GAAGf,qBAAqB,CAAC,CAAC;AACpCc,GAAG,CAACE,SAAS,GAAGf,wBAAwB,CAAC,CAAC;AAC1C,OAAO,MAAMgB,uBAAuB,GAAGH,GAAG,CAACG,uBAAuB;AAClE,OAAO,MAAMC,OAAO,GAAGJ,GAAG,CAACI,OAAO;AAClC,OAAO,MAAMC,OAAO,GAAGL,GAAG,CAACK,OAAO;AAClC,OAAO,MAAMC,MAAM,GAAGN,GAAG,CAACM,MAAM;AAChC,OAAO,MAAMC,QAAQ,GAAGP,GAAG,CAACO,QAAQ;AACpC,OAAO,MAAMC,KAAK,GAAGR,GAAG,CAACQ,KAAK;AAC9B,OAAO,MAAMC,SAAS,GAAGT,GAAG,CAACS,SAAS;AACtC,OAAO,MAAMC,kBAAkB,GAAGV,GAAG,CAACU,kBAAkB;AACxD,OAAO,MAAMC,cAAc,GAAGX,GAAG,CAACW,cAAc;AAChD,OAAO,MAAMC,SAAS,GAAGZ,GAAG,CAACY,SAAS;AACtC,OAAO,MAAMC,GAAG,GAAGb,GAAG,CAACa,GAAG;AAC1B,OAAO,MAAMC,KAAK,GAAGd,GAAG,CAACc,KAAK;AAC9B,OAAO,MAAMb,MAAM,GAAGD,GAAG,CAACC,MAAM;AAChC,OAAO,MAAMC,SAAS,GAAGF,GAAG,CAACE,SAAS;AACtC,MAAMa,iBAAiB,GAAGC,UAAU,CAACC,iBAAiB;AACtD,IAAI,CAACF,iBAAiB,KAAK,IAAI,IAAIA,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACG,SAAS,KAAM,OAAOC,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACC,GAAI,EAAE;EACrJJ,UAAU,CAACK,MAAM,GAAGrB,GAAG;AAC3B;AACA,IAAI,OAAOgB,UAAU,CAACM,OAAO,KAAK,WAAW,IAAI,OAAON,UAAU,CAACM,OAAO,CAACC,MAAM,KAAK,UAAU,EAAE;EAC9FP,UAAU,CAACM,OAAO,CAACC,MAAM,CAAC;IACtBC,sBAAsB,EAAE,CACpB,6BAA6B,EAC7B,kCAAkC,EAClC,oCAAoC,EACpC,yCAAyC,EACzC,YAAY,EACZ,uBAAuB,EACvB,cAAc,EACd,mBAAmB,EACnB,YAAY,EACZ,kBAAkB,EAClB,0CAA0C;EAElD,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}