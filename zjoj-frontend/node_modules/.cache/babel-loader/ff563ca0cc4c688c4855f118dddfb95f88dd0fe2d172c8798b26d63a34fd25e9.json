{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MATCHES_LIMIT } from './findModel.js';\nfunction effectiveOptionValue(override, value) {\n  if (override === 1 /* FindOptionOverride.True */) {\n    return true;\n  }\n  if (override === 2 /* FindOptionOverride.False */) {\n    return false;\n  }\n  return value;\n}\nexport class FindReplaceState extends Disposable {\n  get searchString() {\n    return this._searchString;\n  }\n  get replaceString() {\n    return this._replaceString;\n  }\n  get isRevealed() {\n    return this._isRevealed;\n  }\n  get isReplaceRevealed() {\n    return this._isReplaceRevealed;\n  }\n  get isRegex() {\n    return effectiveOptionValue(this._isRegexOverride, this._isRegex);\n  }\n  get wholeWord() {\n    return effectiveOptionValue(this._wholeWordOverride, this._wholeWord);\n  }\n  get matchCase() {\n    return effectiveOptionValue(this._matchCaseOverride, this._matchCase);\n  }\n  get preserveCase() {\n    return effectiveOptionValue(this._preserveCaseOverride, this._preserveCase);\n  }\n  get actualIsRegex() {\n    return this._isRegex;\n  }\n  get actualWholeWord() {\n    return this._wholeWord;\n  }\n  get actualMatchCase() {\n    return this._matchCase;\n  }\n  get actualPreserveCase() {\n    return this._preserveCase;\n  }\n  get searchScope() {\n    return this._searchScope;\n  }\n  get matchesPosition() {\n    return this._matchesPosition;\n  }\n  get matchesCount() {\n    return this._matchesCount;\n  }\n  get currentMatch() {\n    return this._currentMatch;\n  }\n  constructor() {\n    super();\n    this._onFindReplaceStateChange = this._register(new Emitter());\n    this.onFindReplaceStateChange = this._onFindReplaceStateChange.event;\n    this._searchString = '';\n    this._replaceString = '';\n    this._isRevealed = false;\n    this._isReplaceRevealed = false;\n    this._isRegex = false;\n    this._isRegexOverride = 0 /* FindOptionOverride.NotSet */;\n    this._wholeWord = false;\n    this._wholeWordOverride = 0 /* FindOptionOverride.NotSet */;\n    this._matchCase = false;\n    this._matchCaseOverride = 0 /* FindOptionOverride.NotSet */;\n    this._preserveCase = false;\n    this._preserveCaseOverride = 0 /* FindOptionOverride.NotSet */;\n    this._searchScope = null;\n    this._matchesPosition = 0;\n    this._matchesCount = 0;\n    this._currentMatch = null;\n    this._loop = true;\n    this._isSearching = false;\n    this._filters = null;\n  }\n  changeMatchInfo(matchesPosition, matchesCount, currentMatch) {\n    const changeEvent = {\n      moveCursor: false,\n      updateHistory: false,\n      searchString: false,\n      replaceString: false,\n      isRevealed: false,\n      isReplaceRevealed: false,\n      isRegex: false,\n      wholeWord: false,\n      matchCase: false,\n      preserveCase: false,\n      searchScope: false,\n      matchesPosition: false,\n      matchesCount: false,\n      currentMatch: false,\n      loop: false,\n      isSearching: false,\n      filters: false\n    };\n    let somethingChanged = false;\n    if (matchesCount === 0) {\n      matchesPosition = 0;\n    }\n    if (matchesPosition > matchesCount) {\n      matchesPosition = matchesCount;\n    }\n    if (this._matchesPosition !== matchesPosition) {\n      this._matchesPosition = matchesPosition;\n      changeEvent.matchesPosition = true;\n      somethingChanged = true;\n    }\n    if (this._matchesCount !== matchesCount) {\n      this._matchesCount = matchesCount;\n      changeEvent.matchesCount = true;\n      somethingChanged = true;\n    }\n    if (typeof currentMatch !== 'undefined') {\n      if (!Range.equalsRange(this._currentMatch, currentMatch)) {\n        this._currentMatch = currentMatch;\n        changeEvent.currentMatch = true;\n        somethingChanged = true;\n      }\n    }\n    if (somethingChanged) {\n      this._onFindReplaceStateChange.fire(changeEvent);\n    }\n  }\n  change(newState, moveCursor, updateHistory = true) {\n    var _a;\n    const changeEvent = {\n      moveCursor: moveCursor,\n      updateHistory: updateHistory,\n      searchString: false,\n      replaceString: false,\n      isRevealed: false,\n      isReplaceRevealed: false,\n      isRegex: false,\n      wholeWord: false,\n      matchCase: false,\n      preserveCase: false,\n      searchScope: false,\n      matchesPosition: false,\n      matchesCount: false,\n      currentMatch: false,\n      loop: false,\n      isSearching: false,\n      filters: false\n    };\n    let somethingChanged = false;\n    const oldEffectiveIsRegex = this.isRegex;\n    const oldEffectiveWholeWords = this.wholeWord;\n    const oldEffectiveMatchCase = this.matchCase;\n    const oldEffectivePreserveCase = this.preserveCase;\n    if (typeof newState.searchString !== 'undefined') {\n      if (this._searchString !== newState.searchString) {\n        this._searchString = newState.searchString;\n        changeEvent.searchString = true;\n        somethingChanged = true;\n      }\n    }\n    if (typeof newState.replaceString !== 'undefined') {\n      if (this._replaceString !== newState.replaceString) {\n        this._replaceString = newState.replaceString;\n        changeEvent.replaceString = true;\n        somethingChanged = true;\n      }\n    }\n    if (typeof newState.isRevealed !== 'undefined') {\n      if (this._isRevealed !== newState.isRevealed) {\n        this._isRevealed = newState.isRevealed;\n        changeEvent.isRevealed = true;\n        somethingChanged = true;\n      }\n    }\n    if (typeof newState.isReplaceRevealed !== 'undefined') {\n      if (this._isReplaceRevealed !== newState.isReplaceRevealed) {\n        this._isReplaceRevealed = newState.isReplaceRevealed;\n        changeEvent.isReplaceRevealed = true;\n        somethingChanged = true;\n      }\n    }\n    if (typeof newState.isRegex !== 'undefined') {\n      this._isRegex = newState.isRegex;\n    }\n    if (typeof newState.wholeWord !== 'undefined') {\n      this._wholeWord = newState.wholeWord;\n    }\n    if (typeof newState.matchCase !== 'undefined') {\n      this._matchCase = newState.matchCase;\n    }\n    if (typeof newState.preserveCase !== 'undefined') {\n      this._preserveCase = newState.preserveCase;\n    }\n    if (typeof newState.searchScope !== 'undefined') {\n      if (!((_a = newState.searchScope) === null || _a === void 0 ? void 0 : _a.every(newSearchScope => {\n        var _a;\n        return (_a = this._searchScope) === null || _a === void 0 ? void 0 : _a.some(existingSearchScope => {\n          return !Range.equalsRange(existingSearchScope, newSearchScope);\n        });\n      }))) {\n        this._searchScope = newState.searchScope;\n        changeEvent.searchScope = true;\n        somethingChanged = true;\n      }\n    }\n    if (typeof newState.loop !== 'undefined') {\n      if (this._loop !== newState.loop) {\n        this._loop = newState.loop;\n        changeEvent.loop = true;\n        somethingChanged = true;\n      }\n    }\n    if (typeof newState.isSearching !== 'undefined') {\n      if (this._isSearching !== newState.isSearching) {\n        this._isSearching = newState.isSearching;\n        changeEvent.isSearching = true;\n        somethingChanged = true;\n      }\n    }\n    if (typeof newState.filters !== 'undefined') {\n      if (this._filters) {\n        this._filters.update(newState.filters);\n      } else {\n        this._filters = newState.filters;\n      }\n      changeEvent.filters = true;\n      somethingChanged = true;\n    }\n    // Overrides get set when they explicitly come in and get reset anytime something else changes\n    this._isRegexOverride = typeof newState.isRegexOverride !== 'undefined' ? newState.isRegexOverride : 0 /* FindOptionOverride.NotSet */;\n    this._wholeWordOverride = typeof newState.wholeWordOverride !== 'undefined' ? newState.wholeWordOverride : 0 /* FindOptionOverride.NotSet */;\n    this._matchCaseOverride = typeof newState.matchCaseOverride !== 'undefined' ? newState.matchCaseOverride : 0 /* FindOptionOverride.NotSet */;\n    this._preserveCaseOverride = typeof newState.preserveCaseOverride !== 'undefined' ? newState.preserveCaseOverride : 0 /* FindOptionOverride.NotSet */;\n    if (oldEffectiveIsRegex !== this.isRegex) {\n      somethingChanged = true;\n      changeEvent.isRegex = true;\n    }\n    if (oldEffectiveWholeWords !== this.wholeWord) {\n      somethingChanged = true;\n      changeEvent.wholeWord = true;\n    }\n    if (oldEffectiveMatchCase !== this.matchCase) {\n      somethingChanged = true;\n      changeEvent.matchCase = true;\n    }\n    if (oldEffectivePreserveCase !== this.preserveCase) {\n      somethingChanged = true;\n      changeEvent.preserveCase = true;\n    }\n    if (somethingChanged) {\n      this._onFindReplaceStateChange.fire(changeEvent);\n    }\n  }\n  canNavigateBack() {\n    return this.canNavigateInLoop() || this.matchesPosition !== 1;\n  }\n  canNavigateForward() {\n    return this.canNavigateInLoop() || this.matchesPosition < this.matchesCount;\n  }\n  canNavigateInLoop() {\n    return this._loop || this.matchesCount >= MATCHES_LIMIT;\n  }\n}","map":{"version":3,"names":["Emitter","Disposable","Range","MATCHES_LIMIT","effectiveOptionValue","override","value","FindReplaceState","searchString","_searchString","replaceString","_replaceString","isRevealed","_isRevealed","isReplaceRevealed","_isReplaceRevealed","isRegex","_isRegexOverride","_isRegex","wholeWord","_wholeWordOverride","_wholeWord","matchCase","_matchCaseOverride","_matchCase","preserveCase","_preserveCaseOverride","_preserveCase","actualIsRegex","actualWholeWord","actualMatchCase","actualPreserveCase","searchScope","_searchScope","matchesPosition","_matchesPosition","matchesCount","_matchesCount","currentMatch","_currentMatch","constructor","_onFindReplaceStateChange","_register","onFindReplaceStateChange","event","_loop","_isSearching","_filters","changeMatchInfo","changeEvent","moveCursor","updateHistory","loop","isSearching","filters","somethingChanged","equalsRange","fire","change","newState","_a","oldEffectiveIsRegex","oldEffectiveWholeWords","oldEffectiveMatchCase","oldEffectivePreserveCase","every","newSearchScope","some","existingSearchScope","update","isRegexOverride","wholeWordOverride","matchCaseOverride","preserveCaseOverride","canNavigateBack","canNavigateInLoop","canNavigateForward"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findState.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MATCHES_LIMIT } from './findModel.js';\nfunction effectiveOptionValue(override, value) {\n    if (override === 1 /* FindOptionOverride.True */) {\n        return true;\n    }\n    if (override === 2 /* FindOptionOverride.False */) {\n        return false;\n    }\n    return value;\n}\nexport class FindReplaceState extends Disposable {\n    get searchString() { return this._searchString; }\n    get replaceString() { return this._replaceString; }\n    get isRevealed() { return this._isRevealed; }\n    get isReplaceRevealed() { return this._isReplaceRevealed; }\n    get isRegex() { return effectiveOptionValue(this._isRegexOverride, this._isRegex); }\n    get wholeWord() { return effectiveOptionValue(this._wholeWordOverride, this._wholeWord); }\n    get matchCase() { return effectiveOptionValue(this._matchCaseOverride, this._matchCase); }\n    get preserveCase() { return effectiveOptionValue(this._preserveCaseOverride, this._preserveCase); }\n    get actualIsRegex() { return this._isRegex; }\n    get actualWholeWord() { return this._wholeWord; }\n    get actualMatchCase() { return this._matchCase; }\n    get actualPreserveCase() { return this._preserveCase; }\n    get searchScope() { return this._searchScope; }\n    get matchesPosition() { return this._matchesPosition; }\n    get matchesCount() { return this._matchesCount; }\n    get currentMatch() { return this._currentMatch; }\n    constructor() {\n        super();\n        this._onFindReplaceStateChange = this._register(new Emitter());\n        this.onFindReplaceStateChange = this._onFindReplaceStateChange.event;\n        this._searchString = '';\n        this._replaceString = '';\n        this._isRevealed = false;\n        this._isReplaceRevealed = false;\n        this._isRegex = false;\n        this._isRegexOverride = 0 /* FindOptionOverride.NotSet */;\n        this._wholeWord = false;\n        this._wholeWordOverride = 0 /* FindOptionOverride.NotSet */;\n        this._matchCase = false;\n        this._matchCaseOverride = 0 /* FindOptionOverride.NotSet */;\n        this._preserveCase = false;\n        this._preserveCaseOverride = 0 /* FindOptionOverride.NotSet */;\n        this._searchScope = null;\n        this._matchesPosition = 0;\n        this._matchesCount = 0;\n        this._currentMatch = null;\n        this._loop = true;\n        this._isSearching = false;\n        this._filters = null;\n    }\n    changeMatchInfo(matchesPosition, matchesCount, currentMatch) {\n        const changeEvent = {\n            moveCursor: false,\n            updateHistory: false,\n            searchString: false,\n            replaceString: false,\n            isRevealed: false,\n            isReplaceRevealed: false,\n            isRegex: false,\n            wholeWord: false,\n            matchCase: false,\n            preserveCase: false,\n            searchScope: false,\n            matchesPosition: false,\n            matchesCount: false,\n            currentMatch: false,\n            loop: false,\n            isSearching: false,\n            filters: false\n        };\n        let somethingChanged = false;\n        if (matchesCount === 0) {\n            matchesPosition = 0;\n        }\n        if (matchesPosition > matchesCount) {\n            matchesPosition = matchesCount;\n        }\n        if (this._matchesPosition !== matchesPosition) {\n            this._matchesPosition = matchesPosition;\n            changeEvent.matchesPosition = true;\n            somethingChanged = true;\n        }\n        if (this._matchesCount !== matchesCount) {\n            this._matchesCount = matchesCount;\n            changeEvent.matchesCount = true;\n            somethingChanged = true;\n        }\n        if (typeof currentMatch !== 'undefined') {\n            if (!Range.equalsRange(this._currentMatch, currentMatch)) {\n                this._currentMatch = currentMatch;\n                changeEvent.currentMatch = true;\n                somethingChanged = true;\n            }\n        }\n        if (somethingChanged) {\n            this._onFindReplaceStateChange.fire(changeEvent);\n        }\n    }\n    change(newState, moveCursor, updateHistory = true) {\n        var _a;\n        const changeEvent = {\n            moveCursor: moveCursor,\n            updateHistory: updateHistory,\n            searchString: false,\n            replaceString: false,\n            isRevealed: false,\n            isReplaceRevealed: false,\n            isRegex: false,\n            wholeWord: false,\n            matchCase: false,\n            preserveCase: false,\n            searchScope: false,\n            matchesPosition: false,\n            matchesCount: false,\n            currentMatch: false,\n            loop: false,\n            isSearching: false,\n            filters: false\n        };\n        let somethingChanged = false;\n        const oldEffectiveIsRegex = this.isRegex;\n        const oldEffectiveWholeWords = this.wholeWord;\n        const oldEffectiveMatchCase = this.matchCase;\n        const oldEffectivePreserveCase = this.preserveCase;\n        if (typeof newState.searchString !== 'undefined') {\n            if (this._searchString !== newState.searchString) {\n                this._searchString = newState.searchString;\n                changeEvent.searchString = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.replaceString !== 'undefined') {\n            if (this._replaceString !== newState.replaceString) {\n                this._replaceString = newState.replaceString;\n                changeEvent.replaceString = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isRevealed !== 'undefined') {\n            if (this._isRevealed !== newState.isRevealed) {\n                this._isRevealed = newState.isRevealed;\n                changeEvent.isRevealed = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isReplaceRevealed !== 'undefined') {\n            if (this._isReplaceRevealed !== newState.isReplaceRevealed) {\n                this._isReplaceRevealed = newState.isReplaceRevealed;\n                changeEvent.isReplaceRevealed = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isRegex !== 'undefined') {\n            this._isRegex = newState.isRegex;\n        }\n        if (typeof newState.wholeWord !== 'undefined') {\n            this._wholeWord = newState.wholeWord;\n        }\n        if (typeof newState.matchCase !== 'undefined') {\n            this._matchCase = newState.matchCase;\n        }\n        if (typeof newState.preserveCase !== 'undefined') {\n            this._preserveCase = newState.preserveCase;\n        }\n        if (typeof newState.searchScope !== 'undefined') {\n            if (!((_a = newState.searchScope) === null || _a === void 0 ? void 0 : _a.every((newSearchScope) => {\n                var _a;\n                return (_a = this._searchScope) === null || _a === void 0 ? void 0 : _a.some(existingSearchScope => {\n                    return !Range.equalsRange(existingSearchScope, newSearchScope);\n                });\n            }))) {\n                this._searchScope = newState.searchScope;\n                changeEvent.searchScope = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.loop !== 'undefined') {\n            if (this._loop !== newState.loop) {\n                this._loop = newState.loop;\n                changeEvent.loop = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isSearching !== 'undefined') {\n            if (this._isSearching !== newState.isSearching) {\n                this._isSearching = newState.isSearching;\n                changeEvent.isSearching = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.filters !== 'undefined') {\n            if (this._filters) {\n                this._filters.update(newState.filters);\n            }\n            else {\n                this._filters = newState.filters;\n            }\n            changeEvent.filters = true;\n            somethingChanged = true;\n        }\n        // Overrides get set when they explicitly come in and get reset anytime something else changes\n        this._isRegexOverride = (typeof newState.isRegexOverride !== 'undefined' ? newState.isRegexOverride : 0 /* FindOptionOverride.NotSet */);\n        this._wholeWordOverride = (typeof newState.wholeWordOverride !== 'undefined' ? newState.wholeWordOverride : 0 /* FindOptionOverride.NotSet */);\n        this._matchCaseOverride = (typeof newState.matchCaseOverride !== 'undefined' ? newState.matchCaseOverride : 0 /* FindOptionOverride.NotSet */);\n        this._preserveCaseOverride = (typeof newState.preserveCaseOverride !== 'undefined' ? newState.preserveCaseOverride : 0 /* FindOptionOverride.NotSet */);\n        if (oldEffectiveIsRegex !== this.isRegex) {\n            somethingChanged = true;\n            changeEvent.isRegex = true;\n        }\n        if (oldEffectiveWholeWords !== this.wholeWord) {\n            somethingChanged = true;\n            changeEvent.wholeWord = true;\n        }\n        if (oldEffectiveMatchCase !== this.matchCase) {\n            somethingChanged = true;\n            changeEvent.matchCase = true;\n        }\n        if (oldEffectivePreserveCase !== this.preserveCase) {\n            somethingChanged = true;\n            changeEvent.preserveCase = true;\n        }\n        if (somethingChanged) {\n            this._onFindReplaceStateChange.fire(changeEvent);\n        }\n    }\n    canNavigateBack() {\n        return this.canNavigateInLoop() || (this.matchesPosition !== 1);\n    }\n    canNavigateForward() {\n        return this.canNavigateInLoop() || (this.matchesPosition < this.matchesCount);\n    }\n    canNavigateInLoop() {\n        return this._loop || (this.matchesCount >= MATCHES_LIMIT);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}