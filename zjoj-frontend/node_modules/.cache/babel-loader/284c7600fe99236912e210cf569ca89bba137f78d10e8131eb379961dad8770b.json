{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class MoveCaretCommand {\n  constructor(selection, isMovingLeft) {\n    this._selection = selection;\n    this._isMovingLeft = isMovingLeft;\n  }\n  getEditOperations(model, builder) {\n    if (this._selection.startLineNumber !== this._selection.endLineNumber || this._selection.isEmpty()) {\n      return;\n    }\n    const lineNumber = this._selection.startLineNumber;\n    const startColumn = this._selection.startColumn;\n    const endColumn = this._selection.endColumn;\n    if (this._isMovingLeft && startColumn === 1) {\n      return;\n    }\n    if (!this._isMovingLeft && endColumn === model.getLineMaxColumn(lineNumber)) {\n      return;\n    }\n    if (this._isMovingLeft) {\n      const rangeBefore = new Range(lineNumber, startColumn - 1, lineNumber, startColumn);\n      const charBefore = model.getValueInRange(rangeBefore);\n      builder.addEditOperation(rangeBefore, null);\n      builder.addEditOperation(new Range(lineNumber, endColumn, lineNumber, endColumn), charBefore);\n    } else {\n      const rangeAfter = new Range(lineNumber, endColumn, lineNumber, endColumn + 1);\n      const charAfter = model.getValueInRange(rangeAfter);\n      builder.addEditOperation(rangeAfter, null);\n      builder.addEditOperation(new Range(lineNumber, startColumn, lineNumber, startColumn), charAfter);\n    }\n  }\n  computeCursorState(model, helper) {\n    if (this._isMovingLeft) {\n      return new Selection(this._selection.startLineNumber, this._selection.startColumn - 1, this._selection.endLineNumber, this._selection.endColumn - 1);\n    } else {\n      return new Selection(this._selection.startLineNumber, this._selection.startColumn + 1, this._selection.endLineNumber, this._selection.endColumn + 1);\n    }\n  }\n}","map":{"version":3,"names":["Range","Selection","MoveCaretCommand","constructor","selection","isMovingLeft","_selection","_isMovingLeft","getEditOperations","model","builder","startLineNumber","endLineNumber","isEmpty","lineNumber","startColumn","endColumn","getLineMaxColumn","rangeBefore","charBefore","getValueInRange","addEditOperation","rangeAfter","charAfter","computeCursorState","helper"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/caretOperations/browser/moveCaretCommand.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class MoveCaretCommand {\n    constructor(selection, isMovingLeft) {\n        this._selection = selection;\n        this._isMovingLeft = isMovingLeft;\n    }\n    getEditOperations(model, builder) {\n        if (this._selection.startLineNumber !== this._selection.endLineNumber || this._selection.isEmpty()) {\n            return;\n        }\n        const lineNumber = this._selection.startLineNumber;\n        const startColumn = this._selection.startColumn;\n        const endColumn = this._selection.endColumn;\n        if (this._isMovingLeft && startColumn === 1) {\n            return;\n        }\n        if (!this._isMovingLeft && endColumn === model.getLineMaxColumn(lineNumber)) {\n            return;\n        }\n        if (this._isMovingLeft) {\n            const rangeBefore = new Range(lineNumber, startColumn - 1, lineNumber, startColumn);\n            const charBefore = model.getValueInRange(rangeBefore);\n            builder.addEditOperation(rangeBefore, null);\n            builder.addEditOperation(new Range(lineNumber, endColumn, lineNumber, endColumn), charBefore);\n        }\n        else {\n            const rangeAfter = new Range(lineNumber, endColumn, lineNumber, endColumn + 1);\n            const charAfter = model.getValueInRange(rangeAfter);\n            builder.addEditOperation(rangeAfter, null);\n            builder.addEditOperation(new Range(lineNumber, startColumn, lineNumber, startColumn), charAfter);\n        }\n    }\n    computeCursorState(model, helper) {\n        if (this._isMovingLeft) {\n            return new Selection(this._selection.startLineNumber, this._selection.startColumn - 1, this._selection.endLineNumber, this._selection.endColumn - 1);\n        }\n        else {\n            return new Selection(this._selection.startLineNumber, this._selection.startColumn + 1, this._selection.endLineNumber, this._selection.endColumn + 1);\n        }\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,KAAK,QAAQ,+BAA+B;AACrD,SAASC,SAAS,QAAQ,mCAAmC;AAC7D,OAAO,MAAMC,gBAAgB,CAAC;EAC1BC,WAAWA,CAACC,SAAS,EAAEC,YAAY,EAAE;IACjC,IAAI,CAACC,UAAU,GAAGF,SAAS;IAC3B,IAAI,CAACG,aAAa,GAAGF,YAAY;EACrC;EACAG,iBAAiBA,CAACC,KAAK,EAAEC,OAAO,EAAE;IAC9B,IAAI,IAAI,CAACJ,UAAU,CAACK,eAAe,KAAK,IAAI,CAACL,UAAU,CAACM,aAAa,IAAI,IAAI,CAACN,UAAU,CAACO,OAAO,CAAC,CAAC,EAAE;MAChG;IACJ;IACA,MAAMC,UAAU,GAAG,IAAI,CAACR,UAAU,CAACK,eAAe;IAClD,MAAMI,WAAW,GAAG,IAAI,CAACT,UAAU,CAACS,WAAW;IAC/C,MAAMC,SAAS,GAAG,IAAI,CAACV,UAAU,CAACU,SAAS;IAC3C,IAAI,IAAI,CAACT,aAAa,IAAIQ,WAAW,KAAK,CAAC,EAAE;MACzC;IACJ;IACA,IAAI,CAAC,IAAI,CAACR,aAAa,IAAIS,SAAS,KAAKP,KAAK,CAACQ,gBAAgB,CAACH,UAAU,CAAC,EAAE;MACzE;IACJ;IACA,IAAI,IAAI,CAACP,aAAa,EAAE;MACpB,MAAMW,WAAW,GAAG,IAAIlB,KAAK,CAACc,UAAU,EAAEC,WAAW,GAAG,CAAC,EAAED,UAAU,EAAEC,WAAW,CAAC;MACnF,MAAMI,UAAU,GAAGV,KAAK,CAACW,eAAe,CAACF,WAAW,CAAC;MACrDR,OAAO,CAACW,gBAAgB,CAACH,WAAW,EAAE,IAAI,CAAC;MAC3CR,OAAO,CAACW,gBAAgB,CAAC,IAAIrB,KAAK,CAACc,UAAU,EAAEE,SAAS,EAAEF,UAAU,EAAEE,SAAS,CAAC,EAAEG,UAAU,CAAC;IACjG,CAAC,MACI;MACD,MAAMG,UAAU,GAAG,IAAItB,KAAK,CAACc,UAAU,EAAEE,SAAS,EAAEF,UAAU,EAAEE,SAAS,GAAG,CAAC,CAAC;MAC9E,MAAMO,SAAS,GAAGd,KAAK,CAACW,eAAe,CAACE,UAAU,CAAC;MACnDZ,OAAO,CAACW,gBAAgB,CAACC,UAAU,EAAE,IAAI,CAAC;MAC1CZ,OAAO,CAACW,gBAAgB,CAAC,IAAIrB,KAAK,CAACc,UAAU,EAAEC,WAAW,EAAED,UAAU,EAAEC,WAAW,CAAC,EAAEQ,SAAS,CAAC;IACpG;EACJ;EACAC,kBAAkBA,CAACf,KAAK,EAAEgB,MAAM,EAAE;IAC9B,IAAI,IAAI,CAAClB,aAAa,EAAE;MACpB,OAAO,IAAIN,SAAS,CAAC,IAAI,CAACK,UAAU,CAACK,eAAe,EAAE,IAAI,CAACL,UAAU,CAACS,WAAW,GAAG,CAAC,EAAE,IAAI,CAACT,UAAU,CAACM,aAAa,EAAE,IAAI,CAACN,UAAU,CAACU,SAAS,GAAG,CAAC,CAAC;IACxJ,CAAC,MACI;MACD,OAAO,IAAIf,SAAS,CAAC,IAAI,CAACK,UAAU,CAACK,eAAe,EAAE,IAAI,CAACL,UAAU,CAACS,WAAW,GAAG,CAAC,EAAE,IAAI,CAACT,UAAU,CAACM,aAAa,EAAE,IAAI,CAACN,UAAU,CAACU,SAAS,GAAG,CAAC,CAAC;IACxJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}