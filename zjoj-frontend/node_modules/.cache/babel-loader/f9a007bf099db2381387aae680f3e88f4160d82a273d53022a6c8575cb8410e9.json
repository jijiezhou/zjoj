{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.45.0(5e5af013f8d295555a7210df0d5f2cea0bf5dd56)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/perl/perl.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".perl\",\n  brackets: [{\n    token: \"delimiter.bracket\",\n    open: \"{\",\n    close: \"}\"\n  }, {\n    token: \"delimiter.parenthesis\",\n    open: \"(\",\n    close: \")\"\n  }, {\n    token: \"delimiter.square\",\n    open: \"[\",\n    close: \"]\"\n  }],\n  keywords: [\"__DATA__\", \"else\", \"lock\", \"__END__\", \"elsif\", \"lt\", \"__FILE__\", \"eq\", \"__LINE__\", \"exp\", \"ne\", \"sub\", \"__PACKAGE__\", \"for\", \"no\", \"and\", \"foreach\", \"or\", \"unless\", \"cmp\", \"ge\", \"package\", \"until\", \"continue\", \"gt\", \"while\", \"CORE\", \"if\", \"xor\", \"do\", \"le\", \"__DIE__\", \"__WARN__\"],\n  builtinFunctions: [\"-A\", \"END\", \"length\", \"setpgrp\", \"-B\", \"endgrent\", \"link\", \"setpriority\", \"-b\", \"endhostent\", \"listen\", \"setprotoent\", \"-C\", \"endnetent\", \"local\", \"setpwent\", \"-c\", \"endprotoent\", \"localtime\", \"setservent\", \"-d\", \"endpwent\", \"log\", \"setsockopt\", \"-e\", \"endservent\", \"lstat\", \"shift\", \"-f\", \"eof\", \"map\", \"shmctl\", \"-g\", \"eval\", \"mkdir\", \"shmget\", \"-k\", \"exec\", \"msgctl\", \"shmread\", \"-l\", \"exists\", \"msgget\", \"shmwrite\", \"-M\", \"exit\", \"msgrcv\", \"shutdown\", \"-O\", \"fcntl\", \"msgsnd\", \"sin\", \"-o\", \"fileno\", \"my\", \"sleep\", \"-p\", \"flock\", \"next\", \"socket\", \"-r\", \"fork\", \"not\", \"socketpair\", \"-R\", \"format\", \"oct\", \"sort\", \"-S\", \"formline\", \"open\", \"splice\", \"-s\", \"getc\", \"opendir\", \"split\", \"-T\", \"getgrent\", \"ord\", \"sprintf\", \"-t\", \"getgrgid\", \"our\", \"sqrt\", \"-u\", \"getgrnam\", \"pack\", \"srand\", \"-w\", \"gethostbyaddr\", \"pipe\", \"stat\", \"-W\", \"gethostbyname\", \"pop\", \"state\", \"-X\", \"gethostent\", \"pos\", \"study\", \"-x\", \"getlogin\", \"print\", \"substr\", \"-z\", \"getnetbyaddr\", \"printf\", \"symlink\", \"abs\", \"getnetbyname\", \"prototype\", \"syscall\", \"accept\", \"getnetent\", \"push\", \"sysopen\", \"alarm\", \"getpeername\", \"quotemeta\", \"sysread\", \"atan2\", \"getpgrp\", \"rand\", \"sysseek\", \"AUTOLOAD\", \"getppid\", \"read\", \"system\", \"BEGIN\", \"getpriority\", \"readdir\", \"syswrite\", \"bind\", \"getprotobyname\", \"readline\", \"tell\", \"binmode\", \"getprotobynumber\", \"readlink\", \"telldir\", \"bless\", \"getprotoent\", \"readpipe\", \"tie\", \"break\", \"getpwent\", \"recv\", \"tied\", \"caller\", \"getpwnam\", \"redo\", \"time\", \"chdir\", \"getpwuid\", \"ref\", \"times\", \"CHECK\", \"getservbyname\", \"rename\", \"truncate\", \"chmod\", \"getservbyport\", \"require\", \"uc\", \"chomp\", \"getservent\", \"reset\", \"ucfirst\", \"chop\", \"getsockname\", \"return\", \"umask\", \"chown\", \"getsockopt\", \"reverse\", \"undef\", \"chr\", \"glob\", \"rewinddir\", \"UNITCHECK\", \"chroot\", \"gmtime\", \"rindex\", \"unlink\", \"close\", \"goto\", \"rmdir\", \"unpack\", \"closedir\", \"grep\", \"say\", \"unshift\", \"connect\", \"hex\", \"scalar\", \"untie\", \"cos\", \"index\", \"seek\", \"use\", \"crypt\", \"INIT\", \"seekdir\", \"utime\", \"dbmclose\", \"int\", \"select\", \"values\", \"dbmopen\", \"ioctl\", \"semctl\", \"vec\", \"defined\", \"join\", \"semget\", \"wait\", \"delete\", \"keys\", \"semop\", \"waitpid\", \"DESTROY\", \"kill\", \"send\", \"wantarray\", \"die\", \"last\", \"setgrent\", \"warn\", \"dump\", \"lc\", \"sethostent\", \"write\", \"each\", \"lcfirst\", \"setnetent\"],\n  builtinFileHandlers: [\"ARGV\", \"STDERR\", \"STDOUT\", \"ARGVOUT\", \"STDIN\", \"ENV\"],\n  builtinVariables: [\"$!\", \"$^RE_TRIE_MAXBUF\", \"$LAST_REGEXP_CODE_RESULT\", '$\"', \"$^S\", \"$LIST_SEPARATOR\", \"$#\", \"$^T\", \"$MATCH\", \"$$\", \"$^TAINT\", \"$MULTILINE_MATCHING\", \"$%\", \"$^UNICODE\", \"$NR\", \"$&\", \"$^UTF8LOCALE\", \"$OFMT\", \"$'\", \"$^V\", \"$OFS\", \"$(\", \"$^W\", \"$ORS\", \"$)\", \"$^WARNING_BITS\", \"$OS_ERROR\", \"$*\", \"$^WIDE_SYSTEM_CALLS\", \"$OSNAME\", \"$+\", \"$^X\", \"$OUTPUT_AUTO_FLUSH\", \"$,\", \"$_\", \"$OUTPUT_FIELD_SEPARATOR\", \"$-\", \"$`\", \"$OUTPUT_RECORD_SEPARATOR\", \"$.\", \"$a\", \"$PERL_VERSION\", \"$/\", \"$ACCUMULATOR\", \"$PERLDB\", \"$0\", \"$ARG\", \"$PID\", \"$:\", \"$ARGV\", \"$POSTMATCH\", \"$;\", \"$b\", \"$PREMATCH\", \"$<\", \"$BASETIME\", \"$PROCESS_ID\", \"$=\", \"$CHILD_ERROR\", \"$PROGRAM_NAME\", \"$>\", \"$COMPILING\", \"$REAL_GROUP_ID\", \"$?\", \"$DEBUGGING\", \"$REAL_USER_ID\", \"$@\", \"$EFFECTIVE_GROUP_ID\", \"$RS\", \"$[\", \"$EFFECTIVE_USER_ID\", \"$SUBSCRIPT_SEPARATOR\", \"$\\\\\", \"$EGID\", \"$SUBSEP\", \"$]\", \"$ERRNO\", \"$SYSTEM_FD_MAX\", \"$^\", \"$EUID\", \"$UID\", \"$^A\", \"$EVAL_ERROR\", \"$WARNING\", \"$^C\", \"$EXCEPTIONS_BEING_CAUGHT\", \"$|\", \"$^CHILD_ERROR_NATIVE\", \"$EXECUTABLE_NAME\", \"$~\", \"$^D\", \"$EXTENDED_OS_ERROR\", \"%!\", \"$^E\", \"$FORMAT_FORMFEED\", \"%^H\", \"$^ENCODING\", \"$FORMAT_LINE_BREAK_CHARACTERS\", \"%ENV\", \"$^F\", \"$FORMAT_LINES_LEFT\", \"%INC\", \"$^H\", \"$FORMAT_LINES_PER_PAGE\", \"%OVERLOAD\", \"$^I\", \"$FORMAT_NAME\", \"%SIG\", \"$^L\", \"$FORMAT_PAGE_NUMBER\", \"@+\", \"$^M\", \"$FORMAT_TOP_NAME\", \"@-\", \"$^N\", \"$GID\", \"@_\", \"$^O\", \"$INPLACE_EDIT\", \"@ARGV\", \"$^OPEN\", \"$INPUT_LINE_NUMBER\", \"@INC\", \"$^P\", \"$INPUT_RECORD_SEPARATOR\", \"@LAST_MATCH_START\", \"$^R\", \"$LAST_MATCH_END\", \"$^RE_DEBUG_FLAGS\", \"$LAST_PAREN_MATCH\"],\n  symbols: /[:+\\-\\^*$&%@=<>!?|\\/~\\.]/,\n  quoteLikeOps: [\"qr\", \"m\", \"s\", \"q\", \"qq\", \"qx\", \"qw\", \"tr\", \"y\"],\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [{\n      include: \"@whitespace\"\n    }, [/[a-zA-Z\\-_][\\w\\-_]*/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@builtinFunctions\": \"type.identifier\",\n        \"@builtinFileHandlers\": \"variable.predefined\",\n        \"@quoteLikeOps\": {\n          token: \"@rematch\",\n          next: \"quotedConstructs\"\n        },\n        \"@default\": \"\"\n      }\n    }], [/[\\$@%][*@#?\\+\\-\\$!\\w\\\\\\^><~:;\\.]+/, {\n      cases: {\n        \"@builtinVariables\": \"variable.predefined\",\n        \"@default\": \"variable\"\n      }\n    }], {\n      include: \"@strings\"\n    }, {\n      include: \"@dblStrings\"\n    }, {\n      include: \"@perldoc\"\n    }, {\n      include: \"@heredoc\"\n    }, [/[{}\\[\\]()]/, \"@brackets\"], [/[\\/](?:(?:\\[(?:\\\\]|[^\\]])+\\])|(?:\\\\\\/|[^\\]\\/]))*[\\/]\\w*\\s*(?=[).,;]|$)/, \"regexp\"], [/@symbols/, \"operators\"], {\n      include: \"@numbers\"\n    }, [/[,;]/, \"delimiter\"]],\n    whitespace: [[/\\s+/, \"white\"], [/(^#!.*$)/, \"metatag\"], [/(^#.*$)/, \"comment\"]],\n    numbers: [[/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"], [/\\d+/, \"number\"]],\n    strings: [[/'/, \"string\", \"@stringBody\"]],\n    stringBody: [[/'/, \"string\", \"@popall\"], [/\\\\'/, \"string.escape\"], [/./, \"string\"]],\n    dblStrings: [[/\"/, \"string\", \"@dblStringBody\"]],\n    dblStringBody: [[/\"/, \"string\", \"@popall\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], {\n      include: \"@variables\"\n    }, [/./, \"string\"]],\n    quotedConstructs: [[/(q|qw|tr|y)\\s*\\(/, {\n      token: \"string.delim\",\n      switchTo: \"@qstring.(.)\"\n    }], [/(q|qw|tr|y)\\s*\\[/, {\n      token: \"string.delim\",\n      switchTo: \"@qstring.[.]\"\n    }], [/(q|qw|tr|y)\\s*\\{/, {\n      token: \"string.delim\",\n      switchTo: \"@qstring.{.}\"\n    }], [/(q|qw|tr|y)\\s*</, {\n      token: \"string.delim\",\n      switchTo: \"@qstring.<.>\"\n    }], [/(q|qw|tr|y)#/, {\n      token: \"string.delim\",\n      switchTo: \"@qstring.#.#\"\n    }], [/(q|qw|tr|y)\\s*([^A-Za-z0-9#\\s])/, {\n      token: \"string.delim\",\n      switchTo: \"@qstring.$2.$2\"\n    }], [/(q|qw|tr|y)\\s+(\\w)/, {\n      token: \"string.delim\",\n      switchTo: \"@qstring.$2.$2\"\n    }], [/(qr|m|s)\\s*\\(/, {\n      token: \"regexp.delim\",\n      switchTo: \"@qregexp.(.)\"\n    }], [/(qr|m|s)\\s*\\[/, {\n      token: \"regexp.delim\",\n      switchTo: \"@qregexp.[.]\"\n    }], [/(qr|m|s)\\s*\\{/, {\n      token: \"regexp.delim\",\n      switchTo: \"@qregexp.{.}\"\n    }], [/(qr|m|s)\\s*</, {\n      token: \"regexp.delim\",\n      switchTo: \"@qregexp.<.>\"\n    }], [/(qr|m|s)#/, {\n      token: \"regexp.delim\",\n      switchTo: \"@qregexp.#.#\"\n    }], [/(qr|m|s)\\s*([^A-Za-z0-9_#\\s])/, {\n      token: \"regexp.delim\",\n      switchTo: \"@qregexp.$2.$2\"\n    }], [/(qr|m|s)\\s+(\\w)/, {\n      token: \"regexp.delim\",\n      switchTo: \"@qregexp.$2.$2\"\n    }], [/(qq|qx)\\s*\\(/, {\n      token: \"string.delim\",\n      switchTo: \"@qqstring.(.)\"\n    }], [/(qq|qx)\\s*\\[/, {\n      token: \"string.delim\",\n      switchTo: \"@qqstring.[.]\"\n    }], [/(qq|qx)\\s*\\{/, {\n      token: \"string.delim\",\n      switchTo: \"@qqstring.{.}\"\n    }], [/(qq|qx)\\s*</, {\n      token: \"string.delim\",\n      switchTo: \"@qqstring.<.>\"\n    }], [/(qq|qx)#/, {\n      token: \"string.delim\",\n      switchTo: \"@qqstring.#.#\"\n    }], [/(qq|qx)\\s*([^A-Za-z0-9#\\s])/, {\n      token: \"string.delim\",\n      switchTo: \"@qqstring.$2.$2\"\n    }], [/(qq|qx)\\s+(\\w)/, {\n      token: \"string.delim\",\n      switchTo: \"@qqstring.$2.$2\"\n    }]],\n    qstring: [[/\\\\./, \"string.escape\"], [/./, {\n      cases: {\n        \"$#==$S3\": {\n          token: \"string.delim\",\n          next: \"@pop\"\n        },\n        \"$#==$S2\": {\n          token: \"string.delim\",\n          next: \"@push\"\n        },\n        \"@default\": \"string\"\n      }\n    }]],\n    qregexp: [{\n      include: \"@variables\"\n    }, [/\\\\./, \"regexp.escape\"], [/./, {\n      cases: {\n        \"$#==$S3\": {\n          token: \"regexp.delim\",\n          next: \"@regexpModifiers\"\n        },\n        \"$#==$S2\": {\n          token: \"regexp.delim\",\n          next: \"@push\"\n        },\n        \"@default\": \"regexp\"\n      }\n    }]],\n    regexpModifiers: [[/[msixpodualngcer]+/, {\n      token: \"regexp.modifier\",\n      next: \"@popall\"\n    }]],\n    qqstring: [{\n      include: \"@variables\"\n    }, {\n      include: \"@qstring\"\n    }],\n    heredoc: [[/<<\\s*['\"`]?([\\w\\-]+)['\"`]?/, {\n      token: \"string.heredoc.delimiter\",\n      next: \"@heredocBody.$1\"\n    }]],\n    heredocBody: [[/^([\\w\\-]+)$/, {\n      cases: {\n        \"$1==$S2\": [{\n          token: \"string.heredoc.delimiter\",\n          next: \"@popall\"\n        }],\n        \"@default\": \"string.heredoc\"\n      }\n    }], [/./, \"string.heredoc\"]],\n    perldoc: [[/^=\\w/, \"comment.doc\", \"@perldocBody\"]],\n    perldocBody: [[/^=cut\\b/, \"type.identifier\", \"@popall\"], [/./, \"comment.doc\"]],\n    variables: [[/\\$\\w+/, \"variable\"], [/@\\w+/, \"variable\"], [/%\\w+/, \"variable\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","token","keywords","builtinFunctions","builtinFileHandlers","builtinVariables","symbols","quoteLikeOps","escapes","tokenizer","root","include","cases","next","whitespace","numbers","strings","stringBody","dblStrings","dblStringBody","quotedConstructs","switchTo","qstring","qregexp","regexpModifiers","qqstring","heredoc","heredocBody","perldoc","perldocBody","variables"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/basic-languages/perl/perl.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.45.0(5e5af013f8d295555a7210df0d5f2cea0bf5dd56)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/perl/perl.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"`\", close: \"`\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"`\", close: \"`\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".perl\",\n  brackets: [\n    { token: \"delimiter.bracket\", open: \"{\", close: \"}\" },\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" },\n    { token: \"delimiter.square\", open: \"[\", close: \"]\" }\n  ],\n  keywords: [\n    \"__DATA__\",\n    \"else\",\n    \"lock\",\n    \"__END__\",\n    \"elsif\",\n    \"lt\",\n    \"__FILE__\",\n    \"eq\",\n    \"__LINE__\",\n    \"exp\",\n    \"ne\",\n    \"sub\",\n    \"__PACKAGE__\",\n    \"for\",\n    \"no\",\n    \"and\",\n    \"foreach\",\n    \"or\",\n    \"unless\",\n    \"cmp\",\n    \"ge\",\n    \"package\",\n    \"until\",\n    \"continue\",\n    \"gt\",\n    \"while\",\n    \"CORE\",\n    \"if\",\n    \"xor\",\n    \"do\",\n    \"le\",\n    \"__DIE__\",\n    \"__WARN__\"\n  ],\n  builtinFunctions: [\n    \"-A\",\n    \"END\",\n    \"length\",\n    \"setpgrp\",\n    \"-B\",\n    \"endgrent\",\n    \"link\",\n    \"setpriority\",\n    \"-b\",\n    \"endhostent\",\n    \"listen\",\n    \"setprotoent\",\n    \"-C\",\n    \"endnetent\",\n    \"local\",\n    \"setpwent\",\n    \"-c\",\n    \"endprotoent\",\n    \"localtime\",\n    \"setservent\",\n    \"-d\",\n    \"endpwent\",\n    \"log\",\n    \"setsockopt\",\n    \"-e\",\n    \"endservent\",\n    \"lstat\",\n    \"shift\",\n    \"-f\",\n    \"eof\",\n    \"map\",\n    \"shmctl\",\n    \"-g\",\n    \"eval\",\n    \"mkdir\",\n    \"shmget\",\n    \"-k\",\n    \"exec\",\n    \"msgctl\",\n    \"shmread\",\n    \"-l\",\n    \"exists\",\n    \"msgget\",\n    \"shmwrite\",\n    \"-M\",\n    \"exit\",\n    \"msgrcv\",\n    \"shutdown\",\n    \"-O\",\n    \"fcntl\",\n    \"msgsnd\",\n    \"sin\",\n    \"-o\",\n    \"fileno\",\n    \"my\",\n    \"sleep\",\n    \"-p\",\n    \"flock\",\n    \"next\",\n    \"socket\",\n    \"-r\",\n    \"fork\",\n    \"not\",\n    \"socketpair\",\n    \"-R\",\n    \"format\",\n    \"oct\",\n    \"sort\",\n    \"-S\",\n    \"formline\",\n    \"open\",\n    \"splice\",\n    \"-s\",\n    \"getc\",\n    \"opendir\",\n    \"split\",\n    \"-T\",\n    \"getgrent\",\n    \"ord\",\n    \"sprintf\",\n    \"-t\",\n    \"getgrgid\",\n    \"our\",\n    \"sqrt\",\n    \"-u\",\n    \"getgrnam\",\n    \"pack\",\n    \"srand\",\n    \"-w\",\n    \"gethostbyaddr\",\n    \"pipe\",\n    \"stat\",\n    \"-W\",\n    \"gethostbyname\",\n    \"pop\",\n    \"state\",\n    \"-X\",\n    \"gethostent\",\n    \"pos\",\n    \"study\",\n    \"-x\",\n    \"getlogin\",\n    \"print\",\n    \"substr\",\n    \"-z\",\n    \"getnetbyaddr\",\n    \"printf\",\n    \"symlink\",\n    \"abs\",\n    \"getnetbyname\",\n    \"prototype\",\n    \"syscall\",\n    \"accept\",\n    \"getnetent\",\n    \"push\",\n    \"sysopen\",\n    \"alarm\",\n    \"getpeername\",\n    \"quotemeta\",\n    \"sysread\",\n    \"atan2\",\n    \"getpgrp\",\n    \"rand\",\n    \"sysseek\",\n    \"AUTOLOAD\",\n    \"getppid\",\n    \"read\",\n    \"system\",\n    \"BEGIN\",\n    \"getpriority\",\n    \"readdir\",\n    \"syswrite\",\n    \"bind\",\n    \"getprotobyname\",\n    \"readline\",\n    \"tell\",\n    \"binmode\",\n    \"getprotobynumber\",\n    \"readlink\",\n    \"telldir\",\n    \"bless\",\n    \"getprotoent\",\n    \"readpipe\",\n    \"tie\",\n    \"break\",\n    \"getpwent\",\n    \"recv\",\n    \"tied\",\n    \"caller\",\n    \"getpwnam\",\n    \"redo\",\n    \"time\",\n    \"chdir\",\n    \"getpwuid\",\n    \"ref\",\n    \"times\",\n    \"CHECK\",\n    \"getservbyname\",\n    \"rename\",\n    \"truncate\",\n    \"chmod\",\n    \"getservbyport\",\n    \"require\",\n    \"uc\",\n    \"chomp\",\n    \"getservent\",\n    \"reset\",\n    \"ucfirst\",\n    \"chop\",\n    \"getsockname\",\n    \"return\",\n    \"umask\",\n    \"chown\",\n    \"getsockopt\",\n    \"reverse\",\n    \"undef\",\n    \"chr\",\n    \"glob\",\n    \"rewinddir\",\n    \"UNITCHECK\",\n    \"chroot\",\n    \"gmtime\",\n    \"rindex\",\n    \"unlink\",\n    \"close\",\n    \"goto\",\n    \"rmdir\",\n    \"unpack\",\n    \"closedir\",\n    \"grep\",\n    \"say\",\n    \"unshift\",\n    \"connect\",\n    \"hex\",\n    \"scalar\",\n    \"untie\",\n    \"cos\",\n    \"index\",\n    \"seek\",\n    \"use\",\n    \"crypt\",\n    \"INIT\",\n    \"seekdir\",\n    \"utime\",\n    \"dbmclose\",\n    \"int\",\n    \"select\",\n    \"values\",\n    \"dbmopen\",\n    \"ioctl\",\n    \"semctl\",\n    \"vec\",\n    \"defined\",\n    \"join\",\n    \"semget\",\n    \"wait\",\n    \"delete\",\n    \"keys\",\n    \"semop\",\n    \"waitpid\",\n    \"DESTROY\",\n    \"kill\",\n    \"send\",\n    \"wantarray\",\n    \"die\",\n    \"last\",\n    \"setgrent\",\n    \"warn\",\n    \"dump\",\n    \"lc\",\n    \"sethostent\",\n    \"write\",\n    \"each\",\n    \"lcfirst\",\n    \"setnetent\"\n  ],\n  builtinFileHandlers: [\"ARGV\", \"STDERR\", \"STDOUT\", \"ARGVOUT\", \"STDIN\", \"ENV\"],\n  builtinVariables: [\n    \"$!\",\n    \"$^RE_TRIE_MAXBUF\",\n    \"$LAST_REGEXP_CODE_RESULT\",\n    '$\"',\n    \"$^S\",\n    \"$LIST_SEPARATOR\",\n    \"$#\",\n    \"$^T\",\n    \"$MATCH\",\n    \"$$\",\n    \"$^TAINT\",\n    \"$MULTILINE_MATCHING\",\n    \"$%\",\n    \"$^UNICODE\",\n    \"$NR\",\n    \"$&\",\n    \"$^UTF8LOCALE\",\n    \"$OFMT\",\n    \"$'\",\n    \"$^V\",\n    \"$OFS\",\n    \"$(\",\n    \"$^W\",\n    \"$ORS\",\n    \"$)\",\n    \"$^WARNING_BITS\",\n    \"$OS_ERROR\",\n    \"$*\",\n    \"$^WIDE_SYSTEM_CALLS\",\n    \"$OSNAME\",\n    \"$+\",\n    \"$^X\",\n    \"$OUTPUT_AUTO_FLUSH\",\n    \"$,\",\n    \"$_\",\n    \"$OUTPUT_FIELD_SEPARATOR\",\n    \"$-\",\n    \"$`\",\n    \"$OUTPUT_RECORD_SEPARATOR\",\n    \"$.\",\n    \"$a\",\n    \"$PERL_VERSION\",\n    \"$/\",\n    \"$ACCUMULATOR\",\n    \"$PERLDB\",\n    \"$0\",\n    \"$ARG\",\n    \"$PID\",\n    \"$:\",\n    \"$ARGV\",\n    \"$POSTMATCH\",\n    \"$;\",\n    \"$b\",\n    \"$PREMATCH\",\n    \"$<\",\n    \"$BASETIME\",\n    \"$PROCESS_ID\",\n    \"$=\",\n    \"$CHILD_ERROR\",\n    \"$PROGRAM_NAME\",\n    \"$>\",\n    \"$COMPILING\",\n    \"$REAL_GROUP_ID\",\n    \"$?\",\n    \"$DEBUGGING\",\n    \"$REAL_USER_ID\",\n    \"$@\",\n    \"$EFFECTIVE_GROUP_ID\",\n    \"$RS\",\n    \"$[\",\n    \"$EFFECTIVE_USER_ID\",\n    \"$SUBSCRIPT_SEPARATOR\",\n    \"$\\\\\",\n    \"$EGID\",\n    \"$SUBSEP\",\n    \"$]\",\n    \"$ERRNO\",\n    \"$SYSTEM_FD_MAX\",\n    \"$^\",\n    \"$EUID\",\n    \"$UID\",\n    \"$^A\",\n    \"$EVAL_ERROR\",\n    \"$WARNING\",\n    \"$^C\",\n    \"$EXCEPTIONS_BEING_CAUGHT\",\n    \"$|\",\n    \"$^CHILD_ERROR_NATIVE\",\n    \"$EXECUTABLE_NAME\",\n    \"$~\",\n    \"$^D\",\n    \"$EXTENDED_OS_ERROR\",\n    \"%!\",\n    \"$^E\",\n    \"$FORMAT_FORMFEED\",\n    \"%^H\",\n    \"$^ENCODING\",\n    \"$FORMAT_LINE_BREAK_CHARACTERS\",\n    \"%ENV\",\n    \"$^F\",\n    \"$FORMAT_LINES_LEFT\",\n    \"%INC\",\n    \"$^H\",\n    \"$FORMAT_LINES_PER_PAGE\",\n    \"%OVERLOAD\",\n    \"$^I\",\n    \"$FORMAT_NAME\",\n    \"%SIG\",\n    \"$^L\",\n    \"$FORMAT_PAGE_NUMBER\",\n    \"@+\",\n    \"$^M\",\n    \"$FORMAT_TOP_NAME\",\n    \"@-\",\n    \"$^N\",\n    \"$GID\",\n    \"@_\",\n    \"$^O\",\n    \"$INPLACE_EDIT\",\n    \"@ARGV\",\n    \"$^OPEN\",\n    \"$INPUT_LINE_NUMBER\",\n    \"@INC\",\n    \"$^P\",\n    \"$INPUT_RECORD_SEPARATOR\",\n    \"@LAST_MATCH_START\",\n    \"$^R\",\n    \"$LAST_MATCH_END\",\n    \"$^RE_DEBUG_FLAGS\",\n    \"$LAST_PAREN_MATCH\"\n  ],\n  symbols: /[:+\\-\\^*$&%@=<>!?|\\/~\\.]/,\n  quoteLikeOps: [\"qr\", \"m\", \"s\", \"q\", \"qq\", \"qx\", \"qw\", \"tr\", \"y\"],\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      [\n        /[a-zA-Z\\-_][\\w\\-_]*/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@builtinFunctions\": \"type.identifier\",\n            \"@builtinFileHandlers\": \"variable.predefined\",\n            \"@quoteLikeOps\": {\n              token: \"@rematch\",\n              next: \"quotedConstructs\"\n            },\n            \"@default\": \"\"\n          }\n        }\n      ],\n      [\n        /[\\$@%][*@#?\\+\\-\\$!\\w\\\\\\^><~:;\\.]+/,\n        {\n          cases: {\n            \"@builtinVariables\": \"variable.predefined\",\n            \"@default\": \"variable\"\n          }\n        }\n      ],\n      { include: \"@strings\" },\n      { include: \"@dblStrings\" },\n      { include: \"@perldoc\" },\n      { include: \"@heredoc\" },\n      [/[{}\\[\\]()]/, \"@brackets\"],\n      [/[\\/](?:(?:\\[(?:\\\\]|[^\\]])+\\])|(?:\\\\\\/|[^\\]\\/]))*[\\/]\\w*\\s*(?=[).,;]|$)/, \"regexp\"],\n      [/@symbols/, \"operators\"],\n      { include: \"@numbers\" },\n      [/[,;]/, \"delimiter\"]\n    ],\n    whitespace: [\n      [/\\s+/, \"white\"],\n      [/(^#!.*$)/, \"metatag\"],\n      [/(^#.*$)/, \"comment\"]\n    ],\n    numbers: [\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"],\n      [/\\d+/, \"number\"]\n    ],\n    strings: [[/'/, \"string\", \"@stringBody\"]],\n    stringBody: [\n      [/'/, \"string\", \"@popall\"],\n      [/\\\\'/, \"string.escape\"],\n      [/./, \"string\"]\n    ],\n    dblStrings: [[/\"/, \"string\", \"@dblStringBody\"]],\n    dblStringBody: [\n      [/\"/, \"string\", \"@popall\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      { include: \"@variables\" },\n      [/./, \"string\"]\n    ],\n    quotedConstructs: [\n      [/(q|qw|tr|y)\\s*\\(/, { token: \"string.delim\", switchTo: \"@qstring.(.)\" }],\n      [/(q|qw|tr|y)\\s*\\[/, { token: \"string.delim\", switchTo: \"@qstring.[.]\" }],\n      [/(q|qw|tr|y)\\s*\\{/, { token: \"string.delim\", switchTo: \"@qstring.{.}\" }],\n      [/(q|qw|tr|y)\\s*</, { token: \"string.delim\", switchTo: \"@qstring.<.>\" }],\n      [/(q|qw|tr|y)#/, { token: \"string.delim\", switchTo: \"@qstring.#.#\" }],\n      [/(q|qw|tr|y)\\s*([^A-Za-z0-9#\\s])/, { token: \"string.delim\", switchTo: \"@qstring.$2.$2\" }],\n      [/(q|qw|tr|y)\\s+(\\w)/, { token: \"string.delim\", switchTo: \"@qstring.$2.$2\" }],\n      [/(qr|m|s)\\s*\\(/, { token: \"regexp.delim\", switchTo: \"@qregexp.(.)\" }],\n      [/(qr|m|s)\\s*\\[/, { token: \"regexp.delim\", switchTo: \"@qregexp.[.]\" }],\n      [/(qr|m|s)\\s*\\{/, { token: \"regexp.delim\", switchTo: \"@qregexp.{.}\" }],\n      [/(qr|m|s)\\s*</, { token: \"regexp.delim\", switchTo: \"@qregexp.<.>\" }],\n      [/(qr|m|s)#/, { token: \"regexp.delim\", switchTo: \"@qregexp.#.#\" }],\n      [/(qr|m|s)\\s*([^A-Za-z0-9_#\\s])/, { token: \"regexp.delim\", switchTo: \"@qregexp.$2.$2\" }],\n      [/(qr|m|s)\\s+(\\w)/, { token: \"regexp.delim\", switchTo: \"@qregexp.$2.$2\" }],\n      [/(qq|qx)\\s*\\(/, { token: \"string.delim\", switchTo: \"@qqstring.(.)\" }],\n      [/(qq|qx)\\s*\\[/, { token: \"string.delim\", switchTo: \"@qqstring.[.]\" }],\n      [/(qq|qx)\\s*\\{/, { token: \"string.delim\", switchTo: \"@qqstring.{.}\" }],\n      [/(qq|qx)\\s*</, { token: \"string.delim\", switchTo: \"@qqstring.<.>\" }],\n      [/(qq|qx)#/, { token: \"string.delim\", switchTo: \"@qqstring.#.#\" }],\n      [/(qq|qx)\\s*([^A-Za-z0-9#\\s])/, { token: \"string.delim\", switchTo: \"@qqstring.$2.$2\" }],\n      [/(qq|qx)\\s+(\\w)/, { token: \"string.delim\", switchTo: \"@qqstring.$2.$2\" }]\n    ],\n    qstring: [\n      [/\\\\./, \"string.escape\"],\n      [\n        /./,\n        {\n          cases: {\n            \"$#==$S3\": { token: \"string.delim\", next: \"@pop\" },\n            \"$#==$S2\": { token: \"string.delim\", next: \"@push\" },\n            \"@default\": \"string\"\n          }\n        }\n      ]\n    ],\n    qregexp: [\n      { include: \"@variables\" },\n      [/\\\\./, \"regexp.escape\"],\n      [\n        /./,\n        {\n          cases: {\n            \"$#==$S3\": {\n              token: \"regexp.delim\",\n              next: \"@regexpModifiers\"\n            },\n            \"$#==$S2\": { token: \"regexp.delim\", next: \"@push\" },\n            \"@default\": \"regexp\"\n          }\n        }\n      ]\n    ],\n    regexpModifiers: [[/[msixpodualngcer]+/, { token: \"regexp.modifier\", next: \"@popall\" }]],\n    qqstring: [{ include: \"@variables\" }, { include: \"@qstring\" }],\n    heredoc: [\n      [/<<\\s*['\"`]?([\\w\\-]+)['\"`]?/, { token: \"string.heredoc.delimiter\", next: \"@heredocBody.$1\" }]\n    ],\n    heredocBody: [\n      [\n        /^([\\w\\-]+)$/,\n        {\n          cases: {\n            \"$1==$S2\": [\n              {\n                token: \"string.heredoc.delimiter\",\n                next: \"@popall\"\n              }\n            ],\n            \"@default\": \"string.heredoc\"\n          }\n        }\n      ],\n      [/./, \"string.heredoc\"]\n    ],\n    perldoc: [[/^=\\w/, \"comment.doc\", \"@perldocBody\"]],\n    perldocBody: [\n      [/^=cut\\b/, \"type.identifier\", \"@popall\"],\n      [/./, \"comment.doc\"]\n    ],\n    variables: [\n      [/\\$\\w+/, \"variable\"],\n      [/@\\w+/, \"variable\"],\n      [/%\\w+/, \"variable\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}