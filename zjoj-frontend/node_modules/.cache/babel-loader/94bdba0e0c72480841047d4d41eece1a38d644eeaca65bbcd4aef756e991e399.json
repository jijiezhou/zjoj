{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { getHover } from './getHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nconst $ = dom.$;\nexport class MarkdownHover {\n  constructor(owner, range, contents, isBeforeContent, ordinal) {\n    this.owner = owner;\n    this.range = range;\n    this.contents = contents;\n    this.isBeforeContent = isBeforeContent;\n    this.ordinal = ordinal;\n  }\n  isValidForHoverAnchor(anchor) {\n    return anchor.type === 1 /* HoverAnchorType.Range */ && this.range.startColumn <= anchor.range.startColumn && this.range.endColumn >= anchor.range.endColumn;\n  }\n}\nlet MarkdownHoverParticipant = class MarkdownHoverParticipant {\n  constructor(_editor, _languageService, _openerService, _configurationService, _languageFeaturesService) {\n    this._editor = _editor;\n    this._languageService = _languageService;\n    this._openerService = _openerService;\n    this._configurationService = _configurationService;\n    this._languageFeaturesService = _languageFeaturesService;\n    this.hoverOrdinal = 3;\n  }\n  createLoadingMessage(anchor) {\n    return new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))], false, 2000);\n  }\n  computeSync(anchor, lineDecorations) {\n    if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n      return [];\n    }\n    const model = this._editor.getModel();\n    const lineNumber = anchor.range.startLineNumber;\n    const maxColumn = model.getLineMaxColumn(lineNumber);\n    const result = [];\n    let index = 1000;\n    const lineLength = model.getLineLength(lineNumber);\n    const languageId = model.getLanguageIdAtPosition(anchor.range.startLineNumber, anchor.range.startColumn);\n    const stopRenderingLineAfter = this._editor.getOption(116 /* EditorOption.stopRenderingLineAfter */);\n    const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength', {\n      overrideIdentifier: languageId\n    });\n    let stopRenderingMessage = false;\n    if (stopRenderingLineAfter >= 0 && lineLength > stopRenderingLineAfter && anchor.range.startColumn >= stopRenderingLineAfter) {\n      stopRenderingMessage = true;\n      result.push(new MarkdownHover(this, anchor.range, [{\n        value: nls.localize('stopped rendering', \"Rendering paused for long line for performance reasons. This can be configured via `editor.stopRenderingLineAfter`.\")\n      }], false, index++));\n    }\n    if (!stopRenderingMessage && typeof maxTokenizationLineLength === 'number' && lineLength >= maxTokenizationLineLength) {\n      result.push(new MarkdownHover(this, anchor.range, [{\n        value: nls.localize('too many characters', \"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.\")\n      }], false, index++));\n    }\n    let isBeforeContent = false;\n    for (const d of lineDecorations) {\n      const startColumn = d.range.startLineNumber === lineNumber ? d.range.startColumn : 1;\n      const endColumn = d.range.endLineNumber === lineNumber ? d.range.endColumn : maxColumn;\n      const hoverMessage = d.options.hoverMessage;\n      if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n        continue;\n      }\n      if (d.options.beforeContentClassName) {\n        isBeforeContent = true;\n      }\n      const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n      result.push(new MarkdownHover(this, range, asArray(hoverMessage), isBeforeContent, index++));\n    }\n    return result;\n  }\n  computeAsync(anchor, lineDecorations, token) {\n    if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n      return AsyncIterableObject.EMPTY;\n    }\n    const model = this._editor.getModel();\n    if (!this._languageFeaturesService.hoverProvider.has(model)) {\n      return AsyncIterableObject.EMPTY;\n    }\n    const position = new Position(anchor.range.startLineNumber, anchor.range.startColumn);\n    return getHover(this._languageFeaturesService.hoverProvider, model, position, token).filter(item => !isEmptyMarkdownString(item.hover.contents)).map(item => {\n      const rng = item.hover.range ? Range.lift(item.hover.range) : anchor.range;\n      return new MarkdownHover(this, rng, item.hover.contents, false, item.ordinal);\n    });\n  }\n  renderHoverParts(context, hoverParts) {\n    return renderMarkdownHovers(context, hoverParts, this._editor, this._languageService, this._openerService);\n  }\n};\nMarkdownHoverParticipant = __decorate([__param(1, ILanguageService), __param(2, IOpenerService), __param(3, IConfigurationService), __param(4, ILanguageFeaturesService)], MarkdownHoverParticipant);\nexport { MarkdownHoverParticipant };\nexport function renderMarkdownHovers(context, hoverParts, editor, languageService, openerService) {\n  // Sort hover parts to keep them stable since they might come in async, out-of-order\n  hoverParts.sort((a, b) => a.ordinal - b.ordinal);\n  const disposables = new DisposableStore();\n  for (const hoverPart of hoverParts) {\n    for (const contents of hoverPart.contents) {\n      if (isEmptyMarkdownString(contents)) {\n        continue;\n      }\n      const markdownHoverElement = $('div.hover-row.markdown-hover');\n      const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n      const renderer = disposables.add(new MarkdownRenderer({\n        editor\n      }, languageService, openerService));\n      disposables.add(renderer.onDidRenderAsync(() => {\n        hoverContentsElement.className = 'hover-contents code-hover-contents';\n        context.onContentsChanged();\n      }));\n      const renderedContents = disposables.add(renderer.render(contents));\n      hoverContentsElement.appendChild(renderedContents.element);\n      context.fragment.appendChild(markdownHoverElement);\n    }\n  }\n  return disposables;\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","dom","asArray","AsyncIterableObject","isEmptyMarkdownString","MarkdownString","DisposableStore","MarkdownRenderer","Position","Range","ILanguageService","getHover","nls","IConfigurationService","IOpenerService","ILanguageFeaturesService","$","MarkdownHover","constructor","owner","range","contents","isBeforeContent","ordinal","isValidForHoverAnchor","anchor","type","startColumn","endColumn","MarkdownHoverParticipant","_editor","_languageService","_openerService","_configurationService","_languageFeaturesService","hoverOrdinal","createLoadingMessage","appendText","localize","computeSync","lineDecorations","hasModel","model","getModel","lineNumber","startLineNumber","maxColumn","getLineMaxColumn","result","index","lineLength","getLineLength","languageId","getLanguageIdAtPosition","stopRenderingLineAfter","getOption","maxTokenizationLineLength","getValue","overrideIdentifier","stopRenderingMessage","push","value","endLineNumber","hoverMessage","options","beforeContentClassName","computeAsync","token","EMPTY","hoverProvider","has","position","filter","item","hover","map","rng","lift","renderHoverParts","context","hoverParts","renderMarkdownHovers","editor","languageService","openerService","sort","a","b","disposables","hoverPart","markdownHoverElement","hoverContentsElement","append","renderer","add","onDidRenderAsync","className","onContentsChanged","renderedContents","render","appendChild","element","fragment"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markdownHoverParticipant.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { getHover } from './getHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nconst $ = dom.$;\nexport class MarkdownHover {\n    constructor(owner, range, contents, isBeforeContent, ordinal) {\n        this.owner = owner;\n        this.range = range;\n        this.contents = contents;\n        this.isBeforeContent = isBeforeContent;\n        this.ordinal = ordinal;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nlet MarkdownHoverParticipant = class MarkdownHoverParticipant {\n    constructor(_editor, _languageService, _openerService, _configurationService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this._configurationService = _configurationService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 3;\n    }\n    createLoadingMessage(anchor) {\n        return new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))], false, 2000);\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        let index = 1000;\n        const lineLength = model.getLineLength(lineNumber);\n        const languageId = model.getLanguageIdAtPosition(anchor.range.startLineNumber, anchor.range.startColumn);\n        const stopRenderingLineAfter = this._editor.getOption(116 /* EditorOption.stopRenderingLineAfter */);\n        const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength', {\n            overrideIdentifier: languageId\n        });\n        let stopRenderingMessage = false;\n        if (stopRenderingLineAfter >= 0 && lineLength > stopRenderingLineAfter && anchor.range.startColumn >= stopRenderingLineAfter) {\n            stopRenderingMessage = true;\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('stopped rendering', \"Rendering paused for long line for performance reasons. This can be configured via `editor.stopRenderingLineAfter`.\")\n                }], false, index++));\n        }\n        if (!stopRenderingMessage && typeof maxTokenizationLineLength === 'number' && lineLength >= maxTokenizationLineLength) {\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('too many characters', \"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.\")\n                }], false, index++));\n        }\n        let isBeforeContent = false;\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const hoverMessage = d.options.hoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            if (d.options.beforeContentClassName) {\n                isBeforeContent = true;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkdownHover(this, range, asArray(hoverMessage), isBeforeContent, index++));\n        }\n        return result;\n    }\n    computeAsync(anchor, lineDecorations, token) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const model = this._editor.getModel();\n        if (!this._languageFeaturesService.hoverProvider.has(model)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const position = new Position(anchor.range.startLineNumber, anchor.range.startColumn);\n        return getHover(this._languageFeaturesService.hoverProvider, model, position, token)\n            .filter(item => !isEmptyMarkdownString(item.hover.contents))\n            .map(item => {\n            const rng = item.hover.range ? Range.lift(item.hover.range) : anchor.range;\n            return new MarkdownHover(this, rng, item.hover.contents, false, item.ordinal);\n        });\n    }\n    renderHoverParts(context, hoverParts) {\n        return renderMarkdownHovers(context, hoverParts, this._editor, this._languageService, this._openerService);\n    }\n};\nMarkdownHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ILanguageFeaturesService)\n], MarkdownHoverParticipant);\nexport { MarkdownHoverParticipant };\nexport function renderMarkdownHovers(context, hoverParts, editor, languageService, openerService) {\n    // Sort hover parts to keep them stable since they might come in async, out-of-order\n    hoverParts.sort((a, b) => a.ordinal - b.ordinal);\n    const disposables = new DisposableStore();\n    for (const hoverPart of hoverParts) {\n        for (const contents of hoverPart.contents) {\n            if (isEmptyMarkdownString(contents)) {\n                continue;\n            }\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderer = disposables.add(new MarkdownRenderer({ editor }, languageService, openerService));\n            disposables.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const renderedContents = disposables.add(renderer.render(contents));\n            hoverContentsElement.appendChild(renderedContents.element);\n            context.fragment.appendChild(markdownHoverElement);\n        }\n    }\n    return disposables;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}