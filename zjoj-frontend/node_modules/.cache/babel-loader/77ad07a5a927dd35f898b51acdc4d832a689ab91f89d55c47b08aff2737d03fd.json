{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { Sizing, SplitView } from '../../../../../base/browser/ui/splitview/splitview.js';\nimport { Color } from '../../../../../base/common/color.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { DisposableStore, dispose } from '../../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport { basenameOrAuthority, dirname } from '../../../../../base/common/resources.js';\nimport './referencesWidget.css';\nimport { EmbeddedCodeEditorWidget } from '../../../../browser/widget/embeddedCodeEditorWidget.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { ModelDecorationOptions, TextModel } from '../../../../common/model/textModel.js';\nimport { ILanguageConfigurationService } from '../../../../common/languages/languageConfigurationRegistry.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../../../../common/languages/modesRegistry.js';\nimport { ILanguageService } from '../../../../common/languages/language.js';\nimport { ITextModelService } from '../../../../common/services/resolverService.js';\nimport { AccessibilityProvider, DataSource, Delegate, FileReferencesRenderer, IdentityProvider, OneReferenceRenderer, StringRepresentationProvider } from './referencesTree.js';\nimport * as peekView from '../../../peekView/browser/peekView.js';\nimport * as nls from '../../../../../nls.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { WorkbenchAsyncDataTree } from '../../../../../platform/list/browser/listService.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { IUndoRedoService } from '../../../../../platform/undoRedo/common/undoRedo.js';\nimport { FileReferences, OneReference } from '../referencesModel.js';\nclass DecorationsManager {\n  constructor(_editor, _model) {\n    this._editor = _editor;\n    this._model = _model;\n    this._decorations = new Map();\n    this._decorationIgnoreSet = new Set();\n    this._callOnDispose = new DisposableStore();\n    this._callOnModelChange = new DisposableStore();\n    this._callOnDispose.add(this._editor.onDidChangeModel(() => this._onModelChanged()));\n    this._onModelChanged();\n  }\n  dispose() {\n    this._callOnModelChange.dispose();\n    this._callOnDispose.dispose();\n    this.removeDecorations();\n  }\n  _onModelChanged() {\n    this._callOnModelChange.clear();\n    const model = this._editor.getModel();\n    if (!model) {\n      return;\n    }\n    for (const ref of this._model.references) {\n      if (ref.uri.toString() === model.uri.toString()) {\n        this._addDecorations(ref.parent);\n        return;\n      }\n    }\n  }\n  _addDecorations(reference) {\n    if (!this._editor.hasModel()) {\n      return;\n    }\n    this._callOnModelChange.add(this._editor.getModel().onDidChangeDecorations(() => this._onDecorationChanged()));\n    const newDecorations = [];\n    const newDecorationsActualIndex = [];\n    for (let i = 0, len = reference.children.length; i < len; i++) {\n      const oneReference = reference.children[i];\n      if (this._decorationIgnoreSet.has(oneReference.id)) {\n        continue;\n      }\n      if (oneReference.uri.toString() !== this._editor.getModel().uri.toString()) {\n        continue;\n      }\n      newDecorations.push({\n        range: oneReference.range,\n        options: DecorationsManager.DecorationOptions\n      });\n      newDecorationsActualIndex.push(i);\n    }\n    this._editor.changeDecorations(changeAccessor => {\n      const decorations = changeAccessor.deltaDecorations([], newDecorations);\n      for (let i = 0; i < decorations.length; i++) {\n        this._decorations.set(decorations[i], reference.children[newDecorationsActualIndex[i]]);\n      }\n    });\n  }\n  _onDecorationChanged() {\n    const toRemove = [];\n    const model = this._editor.getModel();\n    if (!model) {\n      return;\n    }\n    for (const [decorationId, reference] of this._decorations) {\n      const newRange = model.getDecorationRange(decorationId);\n      if (!newRange) {\n        continue;\n      }\n      let ignore = false;\n      if (Range.equalsRange(newRange, reference.range)) {\n        continue;\n      }\n      if (Range.spansMultipleLines(newRange)) {\n        ignore = true;\n      } else {\n        const lineLength = reference.range.endColumn - reference.range.startColumn;\n        const newLineLength = newRange.endColumn - newRange.startColumn;\n        if (lineLength !== newLineLength) {\n          ignore = true;\n        }\n      }\n      if (ignore) {\n        this._decorationIgnoreSet.add(reference.id);\n        toRemove.push(decorationId);\n      } else {\n        reference.range = newRange;\n      }\n    }\n    for (let i = 0, len = toRemove.length; i < len; i++) {\n      this._decorations.delete(toRemove[i]);\n    }\n    this._editor.removeDecorations(toRemove);\n  }\n  removeDecorations() {\n    this._editor.removeDecorations([...this._decorations.keys()]);\n    this._decorations.clear();\n  }\n}\nDecorationsManager.DecorationOptions = ModelDecorationOptions.register({\n  description: 'reference-decoration',\n  stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n  className: 'reference-decoration'\n});\nexport class LayoutData {\n  constructor() {\n    this.ratio = 0.7;\n    this.heightInLines = 18;\n  }\n  static fromJSON(raw) {\n    let ratio;\n    let heightInLines;\n    try {\n      const data = JSON.parse(raw);\n      ratio = data.ratio;\n      heightInLines = data.heightInLines;\n    } catch (_a) {\n      //\n    }\n    return {\n      ratio: ratio || 0.7,\n      heightInLines: heightInLines || 18\n    };\n  }\n}\nclass ReferencesTree extends WorkbenchAsyncDataTree {}\n/**\n * ZoneWidget that is shown inside the editor\n */\nlet ReferenceWidget = class ReferenceWidget extends peekView.PeekViewWidget {\n  constructor(editor, _defaultTreeKeyboardSupport, layoutData, themeService, _textModelResolverService, _instantiationService, _peekViewService, _uriLabel, _undoRedoService, _keybindingService, _languageService, _languageConfigurationService) {\n    super(editor, {\n      showFrame: false,\n      showArrow: true,\n      isResizeable: true,\n      isAccessible: true,\n      supportOnTitleClick: true\n    }, _instantiationService);\n    this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\n    this.layoutData = layoutData;\n    this._textModelResolverService = _textModelResolverService;\n    this._instantiationService = _instantiationService;\n    this._peekViewService = _peekViewService;\n    this._uriLabel = _uriLabel;\n    this._undoRedoService = _undoRedoService;\n    this._keybindingService = _keybindingService;\n    this._languageService = _languageService;\n    this._languageConfigurationService = _languageConfigurationService;\n    this._disposeOnNewModel = new DisposableStore();\n    this._callOnDispose = new DisposableStore();\n    this._onDidSelectReference = new Emitter();\n    this.onDidSelectReference = this._onDidSelectReference.event;\n    this._dim = new dom.Dimension(0, 0);\n    this._applyTheme(themeService.getColorTheme());\n    this._callOnDispose.add(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\n    this._peekViewService.addExclusiveWidget(editor, this);\n    this.create();\n  }\n  dispose() {\n    this.setModel(undefined);\n    this._callOnDispose.dispose();\n    this._disposeOnNewModel.dispose();\n    dispose(this._preview);\n    dispose(this._previewNotAvailableMessage);\n    dispose(this._tree);\n    dispose(this._previewModelReference);\n    this._splitView.dispose();\n    super.dispose();\n  }\n  _applyTheme(theme) {\n    const borderColor = theme.getColor(peekView.peekViewBorder) || Color.transparent;\n    this.style({\n      arrowColor: borderColor,\n      frameColor: borderColor,\n      headerBackgroundColor: theme.getColor(peekView.peekViewTitleBackground) || Color.transparent,\n      primaryHeadingColor: theme.getColor(peekView.peekViewTitleForeground),\n      secondaryHeadingColor: theme.getColor(peekView.peekViewTitleInfoForeground)\n    });\n  }\n  show(where) {\n    super.show(where, this.layoutData.heightInLines || 18);\n  }\n  focusOnReferenceTree() {\n    this._tree.domFocus();\n  }\n  focusOnPreviewEditor() {\n    this._preview.focus();\n  }\n  isPreviewEditorFocused() {\n    return this._preview.hasTextFocus();\n  }\n  _onTitleClick(e) {\n    if (this._preview && this._preview.getModel()) {\n      this._onDidSelectReference.fire({\n        element: this._getFocusedReference(),\n        kind: e.ctrlKey || e.metaKey || e.altKey ? 'side' : 'open',\n        source: 'title'\n      });\n    }\n  }\n  _fillBody(containerElement) {\n    this.setCssClass('reference-zone-widget');\n    // message pane\n    this._messageContainer = dom.append(containerElement, dom.$('div.messages'));\n    dom.hide(this._messageContainer);\n    this._splitView = new SplitView(containerElement, {\n      orientation: 1 /* Orientation.HORIZONTAL */\n    });\n    // editor\n    this._previewContainer = dom.append(containerElement, dom.$('div.preview.inline'));\n    const options = {\n      scrollBeyondLastLine: false,\n      scrollbar: {\n        verticalScrollbarSize: 14,\n        horizontal: 'auto',\n        useShadows: true,\n        verticalHasArrows: false,\n        horizontalHasArrows: false,\n        alwaysConsumeMouseWheel: true\n      },\n      overviewRulerLanes: 2,\n      fixedOverflowWidgets: true,\n      minimap: {\n        enabled: false\n      }\n    };\n    this._preview = this._instantiationService.createInstance(EmbeddedCodeEditorWidget, this._previewContainer, options, {}, this.editor);\n    dom.hide(this._previewContainer);\n    this._previewNotAvailableMessage = new TextModel(nls.localize('missingPreviewMessage', \"no preview available\"), PLAINTEXT_LANGUAGE_ID, TextModel.DEFAULT_CREATION_OPTIONS, null, this._undoRedoService, this._languageService, this._languageConfigurationService);\n    // tree\n    this._treeContainer = dom.append(containerElement, dom.$('div.ref-tree.inline'));\n    const treeOptions = {\n      keyboardSupport: this._defaultTreeKeyboardSupport,\n      accessibilityProvider: new AccessibilityProvider(),\n      keyboardNavigationLabelProvider: this._instantiationService.createInstance(StringRepresentationProvider),\n      identityProvider: new IdentityProvider(),\n      openOnSingleClick: true,\n      selectionNavigation: true,\n      overrideStyles: {\n        listBackground: peekView.peekViewResultsBackground\n      }\n    };\n    if (this._defaultTreeKeyboardSupport) {\n      // the tree will consume `Escape` and prevent the widget from closing\n      this._callOnDispose.add(dom.addStandardDisposableListener(this._treeContainer, 'keydown', e => {\n        if (e.equals(9 /* KeyCode.Escape */)) {\n          this._keybindingService.dispatchEvent(e, e.target);\n          e.stopPropagation();\n        }\n      }, true));\n    }\n    this._tree = this._instantiationService.createInstance(ReferencesTree, 'ReferencesWidget', this._treeContainer, new Delegate(), [this._instantiationService.createInstance(FileReferencesRenderer), this._instantiationService.createInstance(OneReferenceRenderer)], this._instantiationService.createInstance(DataSource), treeOptions);\n    // split stuff\n    this._splitView.addView({\n      onDidChange: Event.None,\n      element: this._previewContainer,\n      minimumSize: 200,\n      maximumSize: Number.MAX_VALUE,\n      layout: width => {\n        this._preview.layout({\n          height: this._dim.height,\n          width\n        });\n      }\n    }, Sizing.Distribute);\n    this._splitView.addView({\n      onDidChange: Event.None,\n      element: this._treeContainer,\n      minimumSize: 100,\n      maximumSize: Number.MAX_VALUE,\n      layout: width => {\n        this._treeContainer.style.height = `${this._dim.height}px`;\n        this._treeContainer.style.width = `${width}px`;\n        this._tree.layout(this._dim.height, width);\n      }\n    }, Sizing.Distribute);\n    this._disposables.add(this._splitView.onDidSashChange(() => {\n      if (this._dim.width) {\n        this.layoutData.ratio = this._splitView.getViewSize(0) / this._dim.width;\n      }\n    }, undefined));\n    // listen on selection and focus\n    const onEvent = (element, kind) => {\n      if (element instanceof OneReference) {\n        if (kind === 'show') {\n          this._revealReference(element, false);\n        }\n        this._onDidSelectReference.fire({\n          element,\n          kind,\n          source: 'tree'\n        });\n      }\n    };\n    this._tree.onDidOpen(e => {\n      if (e.sideBySide) {\n        onEvent(e.element, 'side');\n      } else if (e.editorOptions.pinned) {\n        onEvent(e.element, 'goto');\n      } else {\n        onEvent(e.element, 'show');\n      }\n    });\n    dom.hide(this._treeContainer);\n  }\n  _onWidth(width) {\n    if (this._dim) {\n      this._doLayoutBody(this._dim.height, width);\n    }\n  }\n  _doLayoutBody(heightInPixel, widthInPixel) {\n    super._doLayoutBody(heightInPixel, widthInPixel);\n    this._dim = new dom.Dimension(widthInPixel, heightInPixel);\n    this.layoutData.heightInLines = this._viewZone ? this._viewZone.heightInLines : this.layoutData.heightInLines;\n    this._splitView.layout(widthInPixel);\n    this._splitView.resizeView(0, widthInPixel * this.layoutData.ratio);\n  }\n  setSelection(selection) {\n    return this._revealReference(selection, true).then(() => {\n      if (!this._model) {\n        // disposed\n        return;\n      }\n      // show in tree\n      this._tree.setSelection([selection]);\n      this._tree.setFocus([selection]);\n    });\n  }\n  setModel(newModel) {\n    // clean up\n    this._disposeOnNewModel.clear();\n    this._model = newModel;\n    if (this._model) {\n      return this._onNewModel();\n    }\n    return Promise.resolve();\n  }\n  _onNewModel() {\n    if (!this._model) {\n      return Promise.resolve(undefined);\n    }\n    if (this._model.isEmpty) {\n      this.setTitle('');\n      this._messageContainer.innerText = nls.localize('noResults', \"No results\");\n      dom.show(this._messageContainer);\n      return Promise.resolve(undefined);\n    }\n    dom.hide(this._messageContainer);\n    this._decorationsManager = new DecorationsManager(this._preview, this._model);\n    this._disposeOnNewModel.add(this._decorationsManager);\n    // listen on model changes\n    this._disposeOnNewModel.add(this._model.onDidChangeReferenceRange(reference => this._tree.rerender(reference)));\n    // listen on editor\n    this._disposeOnNewModel.add(this._preview.onMouseDown(e => {\n      const {\n        event,\n        target\n      } = e;\n      if (event.detail !== 2) {\n        return;\n      }\n      const element = this._getFocusedReference();\n      if (!element) {\n        return;\n      }\n      this._onDidSelectReference.fire({\n        element: {\n          uri: element.uri,\n          range: target.range\n        },\n        kind: event.ctrlKey || event.metaKey || event.altKey ? 'side' : 'open',\n        source: 'editor'\n      });\n    }));\n    // make sure things are rendered\n    this.container.classList.add('results-loaded');\n    dom.show(this._treeContainer);\n    dom.show(this._previewContainer);\n    this._splitView.layout(this._dim.width);\n    this.focusOnReferenceTree();\n    // pick input and a reference to begin with\n    return this._tree.setInput(this._model.groups.length === 1 ? this._model.groups[0] : this._model);\n  }\n  _getFocusedReference() {\n    const [element] = this._tree.getFocus();\n    if (element instanceof OneReference) {\n      return element;\n    } else if (element instanceof FileReferences) {\n      if (element.children.length > 0) {\n        return element.children[0];\n      }\n    }\n    return undefined;\n  }\n  async revealReference(reference) {\n    await this._revealReference(reference, false);\n    this._onDidSelectReference.fire({\n      element: reference,\n      kind: 'goto',\n      source: 'tree'\n    });\n  }\n  async _revealReference(reference, revealParent) {\n    // check if there is anything to do...\n    if (this._revealedReference === reference) {\n      return;\n    }\n    this._revealedReference = reference;\n    // Update widget header\n    if (reference.uri.scheme !== Schemas.inMemory) {\n      this.setTitle(basenameOrAuthority(reference.uri), this._uriLabel.getUriLabel(dirname(reference.uri)));\n    } else {\n      this.setTitle(nls.localize('peekView.alternateTitle', \"References\"));\n    }\n    const promise = this._textModelResolverService.createModelReference(reference.uri);\n    if (this._tree.getInput() === reference.parent) {\n      this._tree.reveal(reference);\n    } else {\n      if (revealParent) {\n        this._tree.reveal(reference.parent);\n      }\n      await this._tree.expand(reference.parent);\n      this._tree.reveal(reference);\n    }\n    const ref = await promise;\n    if (!this._model) {\n      // disposed\n      ref.dispose();\n      return;\n    }\n    dispose(this._previewModelReference);\n    // show in editor\n    const model = ref.object;\n    if (model) {\n      const scrollType = this._preview.getModel() === model.textEditorModel ? 0 /* ScrollType.Smooth */ : 1 /* ScrollType.Immediate */;\n      const sel = Range.lift(reference.range).collapseToStart();\n      this._previewModelReference = ref;\n      this._preview.setModel(model.textEditorModel);\n      this._preview.setSelection(sel);\n      this._preview.revealRangeInCenter(sel, scrollType);\n    } else {\n      this._preview.setModel(this._previewNotAvailableMessage);\n      ref.dispose();\n    }\n  }\n};\nReferenceWidget = __decorate([__param(3, IThemeService), __param(4, ITextModelService), __param(5, IInstantiationService), __param(6, peekView.IPeekViewService), __param(7, ILabelService), __param(8, IUndoRedoService), __param(9, IKeybindingService), __param(10, ILanguageService), __param(11, ILanguageConfigurationService)], ReferenceWidget);\nexport { ReferenceWidget };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","dom","Sizing","SplitView","Color","Emitter","Event","DisposableStore","dispose","Schemas","basenameOrAuthority","dirname","EmbeddedCodeEditorWidget","Range","ModelDecorationOptions","TextModel","ILanguageConfigurationService","PLAINTEXT_LANGUAGE_ID","ILanguageService","ITextModelService","AccessibilityProvider","DataSource","Delegate","FileReferencesRenderer","IdentityProvider","OneReferenceRenderer","StringRepresentationProvider","peekView","nls","IInstantiationService","IKeybindingService","ILabelService","WorkbenchAsyncDataTree","IThemeService","IUndoRedoService","FileReferences","OneReference","DecorationsManager","constructor","_editor","_model","_decorations","Map","_decorationIgnoreSet","Set","_callOnDispose","_callOnModelChange","add","onDidChangeModel","_onModelChanged","removeDecorations","clear","model","getModel","ref","references","uri","toString","_addDecorations","parent","reference","hasModel","onDidChangeDecorations","_onDecorationChanged","newDecorations","newDecorationsActualIndex","len","children","oneReference","has","id","push","range","options","DecorationOptions","changeDecorations","changeAccessor","decorations","deltaDecorations","set","toRemove","decorationId","newRange","getDecorationRange","ignore","equalsRange","spansMultipleLines","lineLength","endColumn","startColumn","newLineLength","delete","keys","register","description","stickiness","className","LayoutData","ratio","heightInLines","fromJSON","raw","data","JSON","parse","_a","ReferencesTree","ReferenceWidget","PeekViewWidget","editor","_defaultTreeKeyboardSupport","layoutData","themeService","_textModelResolverService","_instantiationService","_peekViewService","_uriLabel","_undoRedoService","_keybindingService","_languageService","_languageConfigurationService","showFrame","showArrow","isResizeable","isAccessible","supportOnTitleClick","_disposeOnNewModel","_onDidSelectReference","onDidSelectReference","event","_dim","Dimension","_applyTheme","getColorTheme","onDidColorThemeChange","bind","addExclusiveWidget","create","setModel","undefined","_preview","_previewNotAvailableMessage","_tree","_previewModelReference","_splitView","theme","borderColor","getColor","peekViewBorder","transparent","style","arrowColor","frameColor","headerBackgroundColor","peekViewTitleBackground","primaryHeadingColor","peekViewTitleForeground","secondaryHeadingColor","peekViewTitleInfoForeground","show","where","focusOnReferenceTree","domFocus","focusOnPreviewEditor","focus","isPreviewEditorFocused","hasTextFocus","_onTitleClick","e","fire","element","_getFocusedReference","kind","ctrlKey","metaKey","altKey","source","_fillBody","containerElement","setCssClass","_messageContainer","append","$","hide","orientation","_previewContainer","scrollBeyondLastLine","scrollbar","verticalScrollbarSize","horizontal","useShadows","verticalHasArrows","horizontalHasArrows","alwaysConsumeMouseWheel","overviewRulerLanes","fixedOverflowWidgets","minimap","enabled","createInstance","localize","DEFAULT_CREATION_OPTIONS","_treeContainer","treeOptions","keyboardSupport","accessibilityProvider","keyboardNavigationLabelProvider","identityProvider","openOnSingleClick","selectionNavigation","overrideStyles","listBackground","peekViewResultsBackground","addStandardDisposableListener","equals","dispatchEvent","stopPropagation","addView","onDidChange","None","minimumSize","maximumSize","Number","MAX_VALUE","layout","width","height","Distribute","_disposables","onDidSashChange","getViewSize","onEvent","_revealReference","onDidOpen","sideBySide","editorOptions","pinned","_onWidth","_doLayoutBody","heightInPixel","widthInPixel","_viewZone","resizeView","setSelection","selection","then","setFocus","newModel","_onNewModel","Promise","resolve","isEmpty","setTitle","innerText","_decorationsManager","onDidChangeReferenceRange","rerender","onMouseDown","detail","container","classList","setInput","groups","getFocus","revealReference","revealParent","_revealedReference","scheme","inMemory","getUriLabel","promise","createModelReference","getInput","reveal","expand","object","scrollType","textEditorModel","sel","lift","collapseToStart","revealRangeInCenter","IPeekViewService"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/peek/referencesWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { Sizing, SplitView } from '../../../../../base/browser/ui/splitview/splitview.js';\nimport { Color } from '../../../../../base/common/color.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { DisposableStore, dispose } from '../../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport { basenameOrAuthority, dirname } from '../../../../../base/common/resources.js';\nimport './referencesWidget.css';\nimport { EmbeddedCodeEditorWidget } from '../../../../browser/widget/embeddedCodeEditorWidget.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { ModelDecorationOptions, TextModel } from '../../../../common/model/textModel.js';\nimport { ILanguageConfigurationService } from '../../../../common/languages/languageConfigurationRegistry.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../../../../common/languages/modesRegistry.js';\nimport { ILanguageService } from '../../../../common/languages/language.js';\nimport { ITextModelService } from '../../../../common/services/resolverService.js';\nimport { AccessibilityProvider, DataSource, Delegate, FileReferencesRenderer, IdentityProvider, OneReferenceRenderer, StringRepresentationProvider } from './referencesTree.js';\nimport * as peekView from '../../../peekView/browser/peekView.js';\nimport * as nls from '../../../../../nls.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { WorkbenchAsyncDataTree } from '../../../../../platform/list/browser/listService.js';\nimport { IThemeService } from '../../../../../platform/theme/common/themeService.js';\nimport { IUndoRedoService } from '../../../../../platform/undoRedo/common/undoRedo.js';\nimport { FileReferences, OneReference } from '../referencesModel.js';\nclass DecorationsManager {\n    constructor(_editor, _model) {\n        this._editor = _editor;\n        this._model = _model;\n        this._decorations = new Map();\n        this._decorationIgnoreSet = new Set();\n        this._callOnDispose = new DisposableStore();\n        this._callOnModelChange = new DisposableStore();\n        this._callOnDispose.add(this._editor.onDidChangeModel(() => this._onModelChanged()));\n        this._onModelChanged();\n    }\n    dispose() {\n        this._callOnModelChange.dispose();\n        this._callOnDispose.dispose();\n        this.removeDecorations();\n    }\n    _onModelChanged() {\n        this._callOnModelChange.clear();\n        const model = this._editor.getModel();\n        if (!model) {\n            return;\n        }\n        for (const ref of this._model.references) {\n            if (ref.uri.toString() === model.uri.toString()) {\n                this._addDecorations(ref.parent);\n                return;\n            }\n        }\n    }\n    _addDecorations(reference) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        this._callOnModelChange.add(this._editor.getModel().onDidChangeDecorations(() => this._onDecorationChanged()));\n        const newDecorations = [];\n        const newDecorationsActualIndex = [];\n        for (let i = 0, len = reference.children.length; i < len; i++) {\n            const oneReference = reference.children[i];\n            if (this._decorationIgnoreSet.has(oneReference.id)) {\n                continue;\n            }\n            if (oneReference.uri.toString() !== this._editor.getModel().uri.toString()) {\n                continue;\n            }\n            newDecorations.push({\n                range: oneReference.range,\n                options: DecorationsManager.DecorationOptions\n            });\n            newDecorationsActualIndex.push(i);\n        }\n        this._editor.changeDecorations((changeAccessor) => {\n            const decorations = changeAccessor.deltaDecorations([], newDecorations);\n            for (let i = 0; i < decorations.length; i++) {\n                this._decorations.set(decorations[i], reference.children[newDecorationsActualIndex[i]]);\n            }\n        });\n    }\n    _onDecorationChanged() {\n        const toRemove = [];\n        const model = this._editor.getModel();\n        if (!model) {\n            return;\n        }\n        for (const [decorationId, reference] of this._decorations) {\n            const newRange = model.getDecorationRange(decorationId);\n            if (!newRange) {\n                continue;\n            }\n            let ignore = false;\n            if (Range.equalsRange(newRange, reference.range)) {\n                continue;\n            }\n            if (Range.spansMultipleLines(newRange)) {\n                ignore = true;\n            }\n            else {\n                const lineLength = reference.range.endColumn - reference.range.startColumn;\n                const newLineLength = newRange.endColumn - newRange.startColumn;\n                if (lineLength !== newLineLength) {\n                    ignore = true;\n                }\n            }\n            if (ignore) {\n                this._decorationIgnoreSet.add(reference.id);\n                toRemove.push(decorationId);\n            }\n            else {\n                reference.range = newRange;\n            }\n        }\n        for (let i = 0, len = toRemove.length; i < len; i++) {\n            this._decorations.delete(toRemove[i]);\n        }\n        this._editor.removeDecorations(toRemove);\n    }\n    removeDecorations() {\n        this._editor.removeDecorations([...this._decorations.keys()]);\n        this._decorations.clear();\n    }\n}\nDecorationsManager.DecorationOptions = ModelDecorationOptions.register({\n    description: 'reference-decoration',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'reference-decoration'\n});\nexport class LayoutData {\n    constructor() {\n        this.ratio = 0.7;\n        this.heightInLines = 18;\n    }\n    static fromJSON(raw) {\n        let ratio;\n        let heightInLines;\n        try {\n            const data = JSON.parse(raw);\n            ratio = data.ratio;\n            heightInLines = data.heightInLines;\n        }\n        catch (_a) {\n            //\n        }\n        return {\n            ratio: ratio || 0.7,\n            heightInLines: heightInLines || 18\n        };\n    }\n}\nclass ReferencesTree extends WorkbenchAsyncDataTree {\n}\n/**\n * ZoneWidget that is shown inside the editor\n */\nlet ReferenceWidget = class ReferenceWidget extends peekView.PeekViewWidget {\n    constructor(editor, _defaultTreeKeyboardSupport, layoutData, themeService, _textModelResolverService, _instantiationService, _peekViewService, _uriLabel, _undoRedoService, _keybindingService, _languageService, _languageConfigurationService) {\n        super(editor, { showFrame: false, showArrow: true, isResizeable: true, isAccessible: true, supportOnTitleClick: true }, _instantiationService);\n        this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\n        this.layoutData = layoutData;\n        this._textModelResolverService = _textModelResolverService;\n        this._instantiationService = _instantiationService;\n        this._peekViewService = _peekViewService;\n        this._uriLabel = _uriLabel;\n        this._undoRedoService = _undoRedoService;\n        this._keybindingService = _keybindingService;\n        this._languageService = _languageService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._disposeOnNewModel = new DisposableStore();\n        this._callOnDispose = new DisposableStore();\n        this._onDidSelectReference = new Emitter();\n        this.onDidSelectReference = this._onDidSelectReference.event;\n        this._dim = new dom.Dimension(0, 0);\n        this._applyTheme(themeService.getColorTheme());\n        this._callOnDispose.add(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\n        this._peekViewService.addExclusiveWidget(editor, this);\n        this.create();\n    }\n    dispose() {\n        this.setModel(undefined);\n        this._callOnDispose.dispose();\n        this._disposeOnNewModel.dispose();\n        dispose(this._preview);\n        dispose(this._previewNotAvailableMessage);\n        dispose(this._tree);\n        dispose(this._previewModelReference);\n        this._splitView.dispose();\n        super.dispose();\n    }\n    _applyTheme(theme) {\n        const borderColor = theme.getColor(peekView.peekViewBorder) || Color.transparent;\n        this.style({\n            arrowColor: borderColor,\n            frameColor: borderColor,\n            headerBackgroundColor: theme.getColor(peekView.peekViewTitleBackground) || Color.transparent,\n            primaryHeadingColor: theme.getColor(peekView.peekViewTitleForeground),\n            secondaryHeadingColor: theme.getColor(peekView.peekViewTitleInfoForeground)\n        });\n    }\n    show(where) {\n        super.show(where, this.layoutData.heightInLines || 18);\n    }\n    focusOnReferenceTree() {\n        this._tree.domFocus();\n    }\n    focusOnPreviewEditor() {\n        this._preview.focus();\n    }\n    isPreviewEditorFocused() {\n        return this._preview.hasTextFocus();\n    }\n    _onTitleClick(e) {\n        if (this._preview && this._preview.getModel()) {\n            this._onDidSelectReference.fire({\n                element: this._getFocusedReference(),\n                kind: e.ctrlKey || e.metaKey || e.altKey ? 'side' : 'open',\n                source: 'title'\n            });\n        }\n    }\n    _fillBody(containerElement) {\n        this.setCssClass('reference-zone-widget');\n        // message pane\n        this._messageContainer = dom.append(containerElement, dom.$('div.messages'));\n        dom.hide(this._messageContainer);\n        this._splitView = new SplitView(containerElement, { orientation: 1 /* Orientation.HORIZONTAL */ });\n        // editor\n        this._previewContainer = dom.append(containerElement, dom.$('div.preview.inline'));\n        const options = {\n            scrollBeyondLastLine: false,\n            scrollbar: {\n                verticalScrollbarSize: 14,\n                horizontal: 'auto',\n                useShadows: true,\n                verticalHasArrows: false,\n                horizontalHasArrows: false,\n                alwaysConsumeMouseWheel: true\n            },\n            overviewRulerLanes: 2,\n            fixedOverflowWidgets: true,\n            minimap: {\n                enabled: false\n            }\n        };\n        this._preview = this._instantiationService.createInstance(EmbeddedCodeEditorWidget, this._previewContainer, options, {}, this.editor);\n        dom.hide(this._previewContainer);\n        this._previewNotAvailableMessage = new TextModel(nls.localize('missingPreviewMessage', \"no preview available\"), PLAINTEXT_LANGUAGE_ID, TextModel.DEFAULT_CREATION_OPTIONS, null, this._undoRedoService, this._languageService, this._languageConfigurationService);\n        // tree\n        this._treeContainer = dom.append(containerElement, dom.$('div.ref-tree.inline'));\n        const treeOptions = {\n            keyboardSupport: this._defaultTreeKeyboardSupport,\n            accessibilityProvider: new AccessibilityProvider(),\n            keyboardNavigationLabelProvider: this._instantiationService.createInstance(StringRepresentationProvider),\n            identityProvider: new IdentityProvider(),\n            openOnSingleClick: true,\n            selectionNavigation: true,\n            overrideStyles: {\n                listBackground: peekView.peekViewResultsBackground\n            }\n        };\n        if (this._defaultTreeKeyboardSupport) {\n            // the tree will consume `Escape` and prevent the widget from closing\n            this._callOnDispose.add(dom.addStandardDisposableListener(this._treeContainer, 'keydown', (e) => {\n                if (e.equals(9 /* KeyCode.Escape */)) {\n                    this._keybindingService.dispatchEvent(e, e.target);\n                    e.stopPropagation();\n                }\n            }, true));\n        }\n        this._tree = this._instantiationService.createInstance(ReferencesTree, 'ReferencesWidget', this._treeContainer, new Delegate(), [\n            this._instantiationService.createInstance(FileReferencesRenderer),\n            this._instantiationService.createInstance(OneReferenceRenderer),\n        ], this._instantiationService.createInstance(DataSource), treeOptions);\n        // split stuff\n        this._splitView.addView({\n            onDidChange: Event.None,\n            element: this._previewContainer,\n            minimumSize: 200,\n            maximumSize: Number.MAX_VALUE,\n            layout: (width) => {\n                this._preview.layout({ height: this._dim.height, width });\n            }\n        }, Sizing.Distribute);\n        this._splitView.addView({\n            onDidChange: Event.None,\n            element: this._treeContainer,\n            minimumSize: 100,\n            maximumSize: Number.MAX_VALUE,\n            layout: (width) => {\n                this._treeContainer.style.height = `${this._dim.height}px`;\n                this._treeContainer.style.width = `${width}px`;\n                this._tree.layout(this._dim.height, width);\n            }\n        }, Sizing.Distribute);\n        this._disposables.add(this._splitView.onDidSashChange(() => {\n            if (this._dim.width) {\n                this.layoutData.ratio = this._splitView.getViewSize(0) / this._dim.width;\n            }\n        }, undefined));\n        // listen on selection and focus\n        const onEvent = (element, kind) => {\n            if (element instanceof OneReference) {\n                if (kind === 'show') {\n                    this._revealReference(element, false);\n                }\n                this._onDidSelectReference.fire({ element, kind, source: 'tree' });\n            }\n        };\n        this._tree.onDidOpen(e => {\n            if (e.sideBySide) {\n                onEvent(e.element, 'side');\n            }\n            else if (e.editorOptions.pinned) {\n                onEvent(e.element, 'goto');\n            }\n            else {\n                onEvent(e.element, 'show');\n            }\n        });\n        dom.hide(this._treeContainer);\n    }\n    _onWidth(width) {\n        if (this._dim) {\n            this._doLayoutBody(this._dim.height, width);\n        }\n    }\n    _doLayoutBody(heightInPixel, widthInPixel) {\n        super._doLayoutBody(heightInPixel, widthInPixel);\n        this._dim = new dom.Dimension(widthInPixel, heightInPixel);\n        this.layoutData.heightInLines = this._viewZone ? this._viewZone.heightInLines : this.layoutData.heightInLines;\n        this._splitView.layout(widthInPixel);\n        this._splitView.resizeView(0, widthInPixel * this.layoutData.ratio);\n    }\n    setSelection(selection) {\n        return this._revealReference(selection, true).then(() => {\n            if (!this._model) {\n                // disposed\n                return;\n            }\n            // show in tree\n            this._tree.setSelection([selection]);\n            this._tree.setFocus([selection]);\n        });\n    }\n    setModel(newModel) {\n        // clean up\n        this._disposeOnNewModel.clear();\n        this._model = newModel;\n        if (this._model) {\n            return this._onNewModel();\n        }\n        return Promise.resolve();\n    }\n    _onNewModel() {\n        if (!this._model) {\n            return Promise.resolve(undefined);\n        }\n        if (this._model.isEmpty) {\n            this.setTitle('');\n            this._messageContainer.innerText = nls.localize('noResults', \"No results\");\n            dom.show(this._messageContainer);\n            return Promise.resolve(undefined);\n        }\n        dom.hide(this._messageContainer);\n        this._decorationsManager = new DecorationsManager(this._preview, this._model);\n        this._disposeOnNewModel.add(this._decorationsManager);\n        // listen on model changes\n        this._disposeOnNewModel.add(this._model.onDidChangeReferenceRange(reference => this._tree.rerender(reference)));\n        // listen on editor\n        this._disposeOnNewModel.add(this._preview.onMouseDown(e => {\n            const { event, target } = e;\n            if (event.detail !== 2) {\n                return;\n            }\n            const element = this._getFocusedReference();\n            if (!element) {\n                return;\n            }\n            this._onDidSelectReference.fire({\n                element: { uri: element.uri, range: target.range },\n                kind: (event.ctrlKey || event.metaKey || event.altKey) ? 'side' : 'open',\n                source: 'editor'\n            });\n        }));\n        // make sure things are rendered\n        this.container.classList.add('results-loaded');\n        dom.show(this._treeContainer);\n        dom.show(this._previewContainer);\n        this._splitView.layout(this._dim.width);\n        this.focusOnReferenceTree();\n        // pick input and a reference to begin with\n        return this._tree.setInput(this._model.groups.length === 1 ? this._model.groups[0] : this._model);\n    }\n    _getFocusedReference() {\n        const [element] = this._tree.getFocus();\n        if (element instanceof OneReference) {\n            return element;\n        }\n        else if (element instanceof FileReferences) {\n            if (element.children.length > 0) {\n                return element.children[0];\n            }\n        }\n        return undefined;\n    }\n    async revealReference(reference) {\n        await this._revealReference(reference, false);\n        this._onDidSelectReference.fire({ element: reference, kind: 'goto', source: 'tree' });\n    }\n    async _revealReference(reference, revealParent) {\n        // check if there is anything to do...\n        if (this._revealedReference === reference) {\n            return;\n        }\n        this._revealedReference = reference;\n        // Update widget header\n        if (reference.uri.scheme !== Schemas.inMemory) {\n            this.setTitle(basenameOrAuthority(reference.uri), this._uriLabel.getUriLabel(dirname(reference.uri)));\n        }\n        else {\n            this.setTitle(nls.localize('peekView.alternateTitle', \"References\"));\n        }\n        const promise = this._textModelResolverService.createModelReference(reference.uri);\n        if (this._tree.getInput() === reference.parent) {\n            this._tree.reveal(reference);\n        }\n        else {\n            if (revealParent) {\n                this._tree.reveal(reference.parent);\n            }\n            await this._tree.expand(reference.parent);\n            this._tree.reveal(reference);\n        }\n        const ref = await promise;\n        if (!this._model) {\n            // disposed\n            ref.dispose();\n            return;\n        }\n        dispose(this._previewModelReference);\n        // show in editor\n        const model = ref.object;\n        if (model) {\n            const scrollType = this._preview.getModel() === model.textEditorModel ? 0 /* ScrollType.Smooth */ : 1 /* ScrollType.Immediate */;\n            const sel = Range.lift(reference.range).collapseToStart();\n            this._previewModelReference = ref;\n            this._preview.setModel(model.textEditorModel);\n            this._preview.setSelection(sel);\n            this._preview.revealRangeInCenter(sel, scrollType);\n        }\n        else {\n            this._preview.setModel(this._previewNotAvailableMessage);\n            ref.dispose();\n        }\n    }\n};\nReferenceWidget = __decorate([\n    __param(3, IThemeService),\n    __param(4, ITextModelService),\n    __param(5, IInstantiationService),\n    __param(6, peekView.IPeekViewService),\n    __param(7, ILabelService),\n    __param(8, IUndoRedoService),\n    __param(9, IKeybindingService),\n    __param(10, ILanguageService),\n    __param(11, ILanguageConfigurationService)\n], ReferenceWidget);\nexport { ReferenceWidget };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA,IAAIA,UAAU,GAAI,IAAI,IAAI,IAAI,CAACA,UAAU,IAAK,UAAUC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAE;EACnF,IAAIC,CAAC,GAAGC,SAAS,CAACC,MAAM;IAAEC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGH,MAAM,GAAGE,IAAI,KAAK,IAAI,GAAGA,IAAI,GAAGK,MAAM,CAACC,wBAAwB,CAACR,MAAM,EAAEC,GAAG,CAAC,GAAGC,IAAI;IAAEO,CAAC;EAC5H,IAAI,OAAOC,OAAO,KAAK,QAAQ,IAAI,OAAOA,OAAO,CAACC,QAAQ,KAAK,UAAU,EAAEL,CAAC,GAAGI,OAAO,CAACC,QAAQ,CAACZ,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,CAAC,CAAC,KAC1H,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAM,GAAG,CAAC,EAAEO,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE,IAAIH,CAAC,GAAGV,UAAU,CAACa,CAAC,CAAC,EAAEN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAC,GAAGM,CAAC,CAACH,CAAC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGM,CAAC,CAACT,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,GAAGG,CAAC,CAACT,MAAM,EAAEC,GAAG,CAAC,KAAKK,CAAC;EACjJ,OAAOH,CAAC,GAAG,CAAC,IAAIG,CAAC,IAAIC,MAAM,CAACM,cAAc,CAACb,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,EAAEA,CAAC;AACjE,CAAC;AACD,IAAIQ,OAAO,GAAI,IAAI,IAAI,IAAI,CAACA,OAAO,IAAK,UAAUC,UAAU,EAAEC,SAAS,EAAE;EACrE,OAAO,UAAUhB,MAAM,EAAEC,GAAG,EAAE;IAAEe,SAAS,CAAChB,MAAM,EAAEC,GAAG,EAAEc,UAAU,CAAC;EAAE,CAAC;AACzE,CAAC;AACD,OAAO,KAAKE,GAAG,MAAM,oCAAoC;AACzD,SAASC,MAAM,EAAEC,SAAS,QAAQ,uDAAuD;AACzF,SAASC,KAAK,QAAQ,qCAAqC;AAC3D,SAASC,OAAO,EAAEC,KAAK,QAAQ,qCAAqC;AACpE,SAASC,eAAe,EAAEC,OAAO,QAAQ,yCAAyC;AAClF,SAASC,OAAO,QAAQ,uCAAuC;AAC/D,SAASC,mBAAmB,EAAEC,OAAO,QAAQ,yCAAyC;AACtF,OAAO,wBAAwB;AAC/B,SAASC,wBAAwB,QAAQ,wDAAwD;AACjG,SAASC,KAAK,QAAQ,kCAAkC;AACxD,SAASC,sBAAsB,EAAEC,SAAS,QAAQ,uCAAuC;AACzF,SAASC,6BAA6B,QAAQ,+DAA+D;AAC7G,SAASC,qBAAqB,QAAQ,+CAA+C;AACrF,SAASC,gBAAgB,QAAQ,0CAA0C;AAC3E,SAASC,iBAAiB,QAAQ,gDAAgD;AAClF,SAASC,qBAAqB,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,sBAAsB,EAAEC,gBAAgB,EAAEC,oBAAoB,EAAEC,4BAA4B,QAAQ,qBAAqB;AAC/K,OAAO,KAAKC,QAAQ,MAAM,uCAAuC;AACjE,OAAO,KAAKC,GAAG,MAAM,uBAAuB;AAC5C,SAASC,qBAAqB,QAAQ,+DAA+D;AACrG,SAASC,kBAAkB,QAAQ,yDAAyD;AAC5F,SAASC,aAAa,QAAQ,+CAA+C;AAC7E,SAASC,sBAAsB,QAAQ,qDAAqD;AAC5F,SAASC,aAAa,QAAQ,sDAAsD;AACpF,SAASC,gBAAgB,QAAQ,qDAAqD;AACtF,SAASC,cAAc,EAAEC,YAAY,QAAQ,uBAAuB;AACpE,MAAMC,kBAAkB,CAAC;EACrBC,WAAWA,CAACC,OAAO,EAAEC,MAAM,EAAE;IACzB,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC7B,IAAI,CAACC,oBAAoB,GAAG,IAAIC,GAAG,CAAC,CAAC;IACrC,IAAI,CAACC,cAAc,GAAG,IAAItC,eAAe,CAAC,CAAC;IAC3C,IAAI,CAACuC,kBAAkB,GAAG,IAAIvC,eAAe,CAAC,CAAC;IAC/C,IAAI,CAACsC,cAAc,CAACE,GAAG,CAAC,IAAI,CAACR,OAAO,CAACS,gBAAgB,CAAC,MAAM,IAAI,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC;IACpF,IAAI,CAACA,eAAe,CAAC,CAAC;EAC1B;EACAzC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACsC,kBAAkB,CAACtC,OAAO,CAAC,CAAC;IACjC,IAAI,CAACqC,cAAc,CAACrC,OAAO,CAAC,CAAC;IAC7B,IAAI,CAAC0C,iBAAiB,CAAC,CAAC;EAC5B;EACAD,eAAeA,CAAA,EAAG;IACd,IAAI,CAACH,kBAAkB,CAACK,KAAK,CAAC,CAAC;IAC/B,MAAMC,KAAK,GAAG,IAAI,CAACb,OAAO,CAACc,QAAQ,CAAC,CAAC;IACrC,IAAI,CAACD,KAAK,EAAE;MACR;IACJ;IACA,KAAK,MAAME,GAAG,IAAI,IAAI,CAACd,MAAM,CAACe,UAAU,EAAE;MACtC,IAAID,GAAG,CAACE,GAAG,CAACC,QAAQ,CAAC,CAAC,KAAKL,KAAK,CAACI,GAAG,CAACC,QAAQ,CAAC,CAAC,EAAE;QAC7C,IAAI,CAACC,eAAe,CAACJ,GAAG,CAACK,MAAM,CAAC;QAChC;MACJ;IACJ;EACJ;EACAD,eAAeA,CAACE,SAAS,EAAE;IACvB,IAAI,CAAC,IAAI,CAACrB,OAAO,CAACsB,QAAQ,CAAC,CAAC,EAAE;MAC1B;IACJ;IACA,IAAI,CAACf,kBAAkB,CAACC,GAAG,CAAC,IAAI,CAACR,OAAO,CAACc,QAAQ,CAAC,CAAC,CAACS,sBAAsB,CAAC,MAAM,IAAI,CAACC,oBAAoB,CAAC,CAAC,CAAC,CAAC;IAC9G,MAAMC,cAAc,GAAG,EAAE;IACzB,MAAMC,yBAAyB,GAAG,EAAE;IACpC,KAAK,IAAIrE,CAAC,GAAG,CAAC,EAAEsE,GAAG,GAAGN,SAAS,CAACO,QAAQ,CAAC9E,MAAM,EAAEO,CAAC,GAAGsE,GAAG,EAAEtE,CAAC,EAAE,EAAE;MAC3D,MAAMwE,YAAY,GAAGR,SAAS,CAACO,QAAQ,CAACvE,CAAC,CAAC;MAC1C,IAAI,IAAI,CAAC+C,oBAAoB,CAAC0B,GAAG,CAACD,YAAY,CAACE,EAAE,CAAC,EAAE;QAChD;MACJ;MACA,IAAIF,YAAY,CAACZ,GAAG,CAACC,QAAQ,CAAC,CAAC,KAAK,IAAI,CAAClB,OAAO,CAACc,QAAQ,CAAC,CAAC,CAACG,GAAG,CAACC,QAAQ,CAAC,CAAC,EAAE;QACxE;MACJ;MACAO,cAAc,CAACO,IAAI,CAAC;QAChBC,KAAK,EAAEJ,YAAY,CAACI,KAAK;QACzBC,OAAO,EAAEpC,kBAAkB,CAACqC;MAChC,CAAC,CAAC;MACFT,yBAAyB,CAACM,IAAI,CAAC3E,CAAC,CAAC;IACrC;IACA,IAAI,CAAC2C,OAAO,CAACoC,iBAAiB,CAAEC,cAAc,IAAK;MAC/C,MAAMC,WAAW,GAAGD,cAAc,CAACE,gBAAgB,CAAC,EAAE,EAAEd,cAAc,CAAC;MACvE,KAAK,IAAIpE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiF,WAAW,CAACxF,MAAM,EAAEO,CAAC,EAAE,EAAE;QACzC,IAAI,CAAC6C,YAAY,CAACsC,GAAG,CAACF,WAAW,CAACjF,CAAC,CAAC,EAAEgE,SAAS,CAACO,QAAQ,CAACF,yBAAyB,CAACrE,CAAC,CAAC,CAAC,CAAC;MAC3F;IACJ,CAAC,CAAC;EACN;EACAmE,oBAAoBA,CAAA,EAAG;IACnB,MAAMiB,QAAQ,GAAG,EAAE;IACnB,MAAM5B,KAAK,GAAG,IAAI,CAACb,OAAO,CAACc,QAAQ,CAAC,CAAC;IACrC,IAAI,CAACD,KAAK,EAAE;MACR;IACJ;IACA,KAAK,MAAM,CAAC6B,YAAY,EAAErB,SAAS,CAAC,IAAI,IAAI,CAACnB,YAAY,EAAE;MACvD,MAAMyC,QAAQ,GAAG9B,KAAK,CAAC+B,kBAAkB,CAACF,YAAY,CAAC;MACvD,IAAI,CAACC,QAAQ,EAAE;QACX;MACJ;MACA,IAAIE,MAAM,GAAG,KAAK;MAClB,IAAIvE,KAAK,CAACwE,WAAW,CAACH,QAAQ,EAAEtB,SAAS,CAACY,KAAK,CAAC,EAAE;QAC9C;MACJ;MACA,IAAI3D,KAAK,CAACyE,kBAAkB,CAACJ,QAAQ,CAAC,EAAE;QACpCE,MAAM,GAAG,IAAI;MACjB,CAAC,MACI;QACD,MAAMG,UAAU,GAAG3B,SAAS,CAACY,KAAK,CAACgB,SAAS,GAAG5B,SAAS,CAACY,KAAK,CAACiB,WAAW;QAC1E,MAAMC,aAAa,GAAGR,QAAQ,CAACM,SAAS,GAAGN,QAAQ,CAACO,WAAW;QAC/D,IAAIF,UAAU,KAAKG,aAAa,EAAE;UAC9BN,MAAM,GAAG,IAAI;QACjB;MACJ;MACA,IAAIA,MAAM,EAAE;QACR,IAAI,CAACzC,oBAAoB,CAACI,GAAG,CAACa,SAAS,CAACU,EAAE,CAAC;QAC3CU,QAAQ,CAACT,IAAI,CAACU,YAAY,CAAC;MAC/B,CAAC,MACI;QACDrB,SAAS,CAACY,KAAK,GAAGU,QAAQ;MAC9B;IACJ;IACA,KAAK,IAAItF,CAAC,GAAG,CAAC,EAAEsE,GAAG,GAAGc,QAAQ,CAAC3F,MAAM,EAAEO,CAAC,GAAGsE,GAAG,EAAEtE,CAAC,EAAE,EAAE;MACjD,IAAI,CAAC6C,YAAY,CAACkD,MAAM,CAACX,QAAQ,CAACpF,CAAC,CAAC,CAAC;IACzC;IACA,IAAI,CAAC2C,OAAO,CAACW,iBAAiB,CAAC8B,QAAQ,CAAC;EAC5C;EACA9B,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACX,OAAO,CAACW,iBAAiB,CAAC,CAAC,GAAG,IAAI,CAACT,YAAY,CAACmD,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7D,IAAI,CAACnD,YAAY,CAACU,KAAK,CAAC,CAAC;EAC7B;AACJ;AACAd,kBAAkB,CAACqC,iBAAiB,GAAG5D,sBAAsB,CAAC+E,QAAQ,CAAC;EACnEC,WAAW,EAAE,sBAAsB;EACnCC,UAAU,EAAE,CAAC,CAAC;EACdC,SAAS,EAAE;AACf,CAAC,CAAC;AACF,OAAO,MAAMC,UAAU,CAAC;EACpB3D,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC4D,KAAK,GAAG,GAAG;IAChB,IAAI,CAACC,aAAa,GAAG,EAAE;EAC3B;EACA,OAAOC,QAAQA,CAACC,GAAG,EAAE;IACjB,IAAIH,KAAK;IACT,IAAIC,aAAa;IACjB,IAAI;MACA,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,GAAG,CAAC;MAC5BH,KAAK,GAAGI,IAAI,CAACJ,KAAK;MAClBC,aAAa,GAAGG,IAAI,CAACH,aAAa;IACtC,CAAC,CACD,OAAOM,EAAE,EAAE;MACP;IAAA;IAEJ,OAAO;MACHP,KAAK,EAAEA,KAAK,IAAI,GAAG;MACnBC,aAAa,EAAEA,aAAa,IAAI;IACpC,CAAC;EACL;AACJ;AACA,MAAMO,cAAc,SAAS1E,sBAAsB,CAAC;AAEpD;AACA;AACA;AACA,IAAI2E,eAAe,GAAG,MAAMA,eAAe,SAAShF,QAAQ,CAACiF,cAAc,CAAC;EACxEtE,WAAWA,CAACuE,MAAM,EAAEC,2BAA2B,EAAEC,UAAU,EAAEC,YAAY,EAAEC,yBAAyB,EAAEC,qBAAqB,EAAEC,gBAAgB,EAAEC,SAAS,EAAEC,gBAAgB,EAAEC,kBAAkB,EAAEC,gBAAgB,EAAEC,6BAA6B,EAAE;IAC7O,KAAK,CAACX,MAAM,EAAE;MAAEY,SAAS,EAAE,KAAK;MAAEC,SAAS,EAAE,IAAI;MAAEC,YAAY,EAAE,IAAI;MAAEC,YAAY,EAAE,IAAI;MAAEC,mBAAmB,EAAE;IAAK,CAAC,EAAEX,qBAAqB,CAAC;IAC9I,IAAI,CAACJ,2BAA2B,GAAGA,2BAA2B;IAC9D,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACE,yBAAyB,GAAGA,yBAAyB;IAC1D,IAAI,CAACC,qBAAqB,GAAGA,qBAAqB;IAClD,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAACC,6BAA6B,GAAGA,6BAA6B;IAClE,IAAI,CAACM,kBAAkB,GAAG,IAAIvH,eAAe,CAAC,CAAC;IAC/C,IAAI,CAACsC,cAAc,GAAG,IAAItC,eAAe,CAAC,CAAC;IAC3C,IAAI,CAACwH,qBAAqB,GAAG,IAAI1H,OAAO,CAAC,CAAC;IAC1C,IAAI,CAAC2H,oBAAoB,GAAG,IAAI,CAACD,qBAAqB,CAACE,KAAK;IAC5D,IAAI,CAACC,IAAI,GAAG,IAAIjI,GAAG,CAACkI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;IACnC,IAAI,CAACC,WAAW,CAACpB,YAAY,CAACqB,aAAa,CAAC,CAAC,CAAC;IAC9C,IAAI,CAACxF,cAAc,CAACE,GAAG,CAACiE,YAAY,CAACsB,qBAAqB,CAAC,IAAI,CAACF,WAAW,CAACG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACxF,IAAI,CAACpB,gBAAgB,CAACqB,kBAAkB,CAAC3B,MAAM,EAAE,IAAI,CAAC;IACtD,IAAI,CAAC4B,MAAM,CAAC,CAAC;EACjB;EACAjI,OAAOA,CAAA,EAAG;IACN,IAAI,CAACkI,QAAQ,CAACC,SAAS,CAAC;IACxB,IAAI,CAAC9F,cAAc,CAACrC,OAAO,CAAC,CAAC;IAC7B,IAAI,CAACsH,kBAAkB,CAACtH,OAAO,CAAC,CAAC;IACjCA,OAAO,CAAC,IAAI,CAACoI,QAAQ,CAAC;IACtBpI,OAAO,CAAC,IAAI,CAACqI,2BAA2B,CAAC;IACzCrI,OAAO,CAAC,IAAI,CAACsI,KAAK,CAAC;IACnBtI,OAAO,CAAC,IAAI,CAACuI,sBAAsB,CAAC;IACpC,IAAI,CAACC,UAAU,CAACxI,OAAO,CAAC,CAAC;IACzB,KAAK,CAACA,OAAO,CAAC,CAAC;EACnB;EACA4H,WAAWA,CAACa,KAAK,EAAE;IACf,MAAMC,WAAW,GAAGD,KAAK,CAACE,QAAQ,CAACxH,QAAQ,CAACyH,cAAc,CAAC,IAAIhJ,KAAK,CAACiJ,WAAW;IAChF,IAAI,CAACC,KAAK,CAAC;MACPC,UAAU,EAAEL,WAAW;MACvBM,UAAU,EAAEN,WAAW;MACvBO,qBAAqB,EAAER,KAAK,CAACE,QAAQ,CAACxH,QAAQ,CAAC+H,uBAAuB,CAAC,IAAItJ,KAAK,CAACiJ,WAAW;MAC5FM,mBAAmB,EAAEV,KAAK,CAACE,QAAQ,CAACxH,QAAQ,CAACiI,uBAAuB,CAAC;MACrEC,qBAAqB,EAAEZ,KAAK,CAACE,QAAQ,CAACxH,QAAQ,CAACmI,2BAA2B;IAC9E,CAAC,CAAC;EACN;EACAC,IAAIA,CAACC,KAAK,EAAE;IACR,KAAK,CAACD,IAAI,CAACC,KAAK,EAAE,IAAI,CAACjD,UAAU,CAACZ,aAAa,IAAI,EAAE,CAAC;EAC1D;EACA8D,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAACnB,KAAK,CAACoB,QAAQ,CAAC,CAAC;EACzB;EACAC,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAACvB,QAAQ,CAACwB,KAAK,CAAC,CAAC;EACzB;EACAC,sBAAsBA,CAAA,EAAG;IACrB,OAAO,IAAI,CAACzB,QAAQ,CAAC0B,YAAY,CAAC,CAAC;EACvC;EACAC,aAAaA,CAACC,CAAC,EAAE;IACb,IAAI,IAAI,CAAC5B,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACvF,QAAQ,CAAC,CAAC,EAAE;MAC3C,IAAI,CAAC0E,qBAAqB,CAAC0C,IAAI,CAAC;QAC5BC,OAAO,EAAE,IAAI,CAACC,oBAAoB,CAAC,CAAC;QACpCC,IAAI,EAAEJ,CAAC,CAACK,OAAO,IAAIL,CAAC,CAACM,OAAO,IAAIN,CAAC,CAACO,MAAM,GAAG,MAAM,GAAG,MAAM;QAC1DC,MAAM,EAAE;MACZ,CAAC,CAAC;IACN;EACJ;EACAC,SAASA,CAACC,gBAAgB,EAAE;IACxB,IAAI,CAACC,WAAW,CAAC,uBAAuB,CAAC;IACzC;IACA,IAAI,CAACC,iBAAiB,GAAGnL,GAAG,CAACoL,MAAM,CAACH,gBAAgB,EAAEjL,GAAG,CAACqL,CAAC,CAAC,cAAc,CAAC,CAAC;IAC5ErL,GAAG,CAACsL,IAAI,CAAC,IAAI,CAACH,iBAAiB,CAAC;IAChC,IAAI,CAACpC,UAAU,GAAG,IAAI7I,SAAS,CAAC+K,gBAAgB,EAAE;MAAEM,WAAW,EAAE,CAAC,CAAC;IAA6B,CAAC,CAAC;IAClG;IACA,IAAI,CAACC,iBAAiB,GAAGxL,GAAG,CAACoL,MAAM,CAACH,gBAAgB,EAAEjL,GAAG,CAACqL,CAAC,CAAC,oBAAoB,CAAC,CAAC;IAClF,MAAM7G,OAAO,GAAG;MACZiH,oBAAoB,EAAE,KAAK;MAC3BC,SAAS,EAAE;QACPC,qBAAqB,EAAE,EAAE;QACzBC,UAAU,EAAE,MAAM;QAClBC,UAAU,EAAE,IAAI;QAChBC,iBAAiB,EAAE,KAAK;QACxBC,mBAAmB,EAAE,KAAK;QAC1BC,uBAAuB,EAAE;MAC7B,CAAC;MACDC,kBAAkB,EAAE,CAAC;MACrBC,oBAAoB,EAAE,IAAI;MAC1BC,OAAO,EAAE;QACLC,OAAO,EAAE;MACb;IACJ,CAAC;IACD,IAAI,CAACzD,QAAQ,GAAG,IAAI,CAAC1B,qBAAqB,CAACoF,cAAc,CAAC1L,wBAAwB,EAAE,IAAI,CAAC6K,iBAAiB,EAAEhH,OAAO,EAAE,CAAC,CAAC,EAAE,IAAI,CAACoC,MAAM,CAAC;IACrI5G,GAAG,CAACsL,IAAI,CAAC,IAAI,CAACE,iBAAiB,CAAC;IAChC,IAAI,CAAC5C,2BAA2B,GAAG,IAAI9H,SAAS,CAACa,GAAG,CAAC2K,QAAQ,CAAC,uBAAuB,EAAE,sBAAsB,CAAC,EAAEtL,qBAAqB,EAAEF,SAAS,CAACyL,wBAAwB,EAAE,IAAI,EAAE,IAAI,CAACnF,gBAAgB,EAAE,IAAI,CAACE,gBAAgB,EAAE,IAAI,CAACC,6BAA6B,CAAC;IAClQ;IACA,IAAI,CAACiF,cAAc,GAAGxM,GAAG,CAACoL,MAAM,CAACH,gBAAgB,EAAEjL,GAAG,CAACqL,CAAC,CAAC,qBAAqB,CAAC,CAAC;IAChF,MAAMoB,WAAW,GAAG;MAChBC,eAAe,EAAE,IAAI,CAAC7F,2BAA2B;MACjD8F,qBAAqB,EAAE,IAAIxL,qBAAqB,CAAC,CAAC;MAClDyL,+BAA+B,EAAE,IAAI,CAAC3F,qBAAqB,CAACoF,cAAc,CAAC5K,4BAA4B,CAAC;MACxGoL,gBAAgB,EAAE,IAAItL,gBAAgB,CAAC,CAAC;MACxCuL,iBAAiB,EAAE,IAAI;MACvBC,mBAAmB,EAAE,IAAI;MACzBC,cAAc,EAAE;QACZC,cAAc,EAAEvL,QAAQ,CAACwL;MAC7B;IACJ,CAAC;IACD,IAAI,IAAI,CAACrG,2BAA2B,EAAE;MAClC;MACA,IAAI,CAACjE,cAAc,CAACE,GAAG,CAAC9C,GAAG,CAACmN,6BAA6B,CAAC,IAAI,CAACX,cAAc,EAAE,SAAS,EAAGjC,CAAC,IAAK;QAC7F,IAAIA,CAAC,CAAC6C,MAAM,CAAC,CAAC,CAAC,oBAAoB,CAAC,EAAE;UAClC,IAAI,CAAC/F,kBAAkB,CAACgG,aAAa,CAAC9C,CAAC,EAAEA,CAAC,CAACxL,MAAM,CAAC;UAClDwL,CAAC,CAAC+C,eAAe,CAAC,CAAC;QACvB;MACJ,CAAC,EAAE,IAAI,CAAC,CAAC;IACb;IACA,IAAI,CAACzE,KAAK,GAAG,IAAI,CAAC5B,qBAAqB,CAACoF,cAAc,CAAC5F,cAAc,EAAE,kBAAkB,EAAE,IAAI,CAAC+F,cAAc,EAAE,IAAInL,QAAQ,CAAC,CAAC,EAAE,CAC5H,IAAI,CAAC4F,qBAAqB,CAACoF,cAAc,CAAC/K,sBAAsB,CAAC,EACjE,IAAI,CAAC2F,qBAAqB,CAACoF,cAAc,CAAC7K,oBAAoB,CAAC,CAClE,EAAE,IAAI,CAACyF,qBAAqB,CAACoF,cAAc,CAACjL,UAAU,CAAC,EAAEqL,WAAW,CAAC;IACtE;IACA,IAAI,CAAC1D,UAAU,CAACwE,OAAO,CAAC;MACpBC,WAAW,EAAEnN,KAAK,CAACoN,IAAI;MACvBhD,OAAO,EAAE,IAAI,CAACe,iBAAiB;MAC/BkC,WAAW,EAAE,GAAG;MAChBC,WAAW,EAAEC,MAAM,CAACC,SAAS;MAC7BC,MAAM,EAAGC,KAAK,IAAK;QACf,IAAI,CAACpF,QAAQ,CAACmF,MAAM,CAAC;UAAEE,MAAM,EAAE,IAAI,CAAC/F,IAAI,CAAC+F,MAAM;UAAED;QAAM,CAAC,CAAC;MAC7D;IACJ,CAAC,EAAE9N,MAAM,CAACgO,UAAU,CAAC;IACrB,IAAI,CAAClF,UAAU,CAACwE,OAAO,CAAC;MACpBC,WAAW,EAAEnN,KAAK,CAACoN,IAAI;MACvBhD,OAAO,EAAE,IAAI,CAAC+B,cAAc;MAC5BkB,WAAW,EAAE,GAAG;MAChBC,WAAW,EAAEC,MAAM,CAACC,SAAS;MAC7BC,MAAM,EAAGC,KAAK,IAAK;QACf,IAAI,CAACvB,cAAc,CAACnD,KAAK,CAAC2E,MAAM,GAAI,GAAE,IAAI,CAAC/F,IAAI,CAAC+F,MAAO,IAAG;QAC1D,IAAI,CAACxB,cAAc,CAACnD,KAAK,CAAC0E,KAAK,GAAI,GAAEA,KAAM,IAAG;QAC9C,IAAI,CAAClF,KAAK,CAACiF,MAAM,CAAC,IAAI,CAAC7F,IAAI,CAAC+F,MAAM,EAAED,KAAK,CAAC;MAC9C;IACJ,CAAC,EAAE9N,MAAM,CAACgO,UAAU,CAAC;IACrB,IAAI,CAACC,YAAY,CAACpL,GAAG,CAAC,IAAI,CAACiG,UAAU,CAACoF,eAAe,CAAC,MAAM;MACxD,IAAI,IAAI,CAAClG,IAAI,CAAC8F,KAAK,EAAE;QACjB,IAAI,CAACjH,UAAU,CAACb,KAAK,GAAG,IAAI,CAAC8C,UAAU,CAACqF,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAACnG,IAAI,CAAC8F,KAAK;MAC5E;IACJ,CAAC,EAAErF,SAAS,CAAC,CAAC;IACd;IACA,MAAM2F,OAAO,GAAGA,CAAC5D,OAAO,EAAEE,IAAI,KAAK;MAC/B,IAAIF,OAAO,YAAYtI,YAAY,EAAE;QACjC,IAAIwI,IAAI,KAAK,MAAM,EAAE;UACjB,IAAI,CAAC2D,gBAAgB,CAAC7D,OAAO,EAAE,KAAK,CAAC;QACzC;QACA,IAAI,CAAC3C,qBAAqB,CAAC0C,IAAI,CAAC;UAAEC,OAAO;UAAEE,IAAI;UAAEI,MAAM,EAAE;QAAO,CAAC,CAAC;MACtE;IACJ,CAAC;IACD,IAAI,CAAClC,KAAK,CAAC0F,SAAS,CAAChE,CAAC,IAAI;MACtB,IAAIA,CAAC,CAACiE,UAAU,EAAE;QACdH,OAAO,CAAC9D,CAAC,CAACE,OAAO,EAAE,MAAM,CAAC;MAC9B,CAAC,MACI,IAAIF,CAAC,CAACkE,aAAa,CAACC,MAAM,EAAE;QAC7BL,OAAO,CAAC9D,CAAC,CAACE,OAAO,EAAE,MAAM,CAAC;MAC9B,CAAC,MACI;QACD4D,OAAO,CAAC9D,CAAC,CAACE,OAAO,EAAE,MAAM,CAAC;MAC9B;IACJ,CAAC,CAAC;IACFzK,GAAG,CAACsL,IAAI,CAAC,IAAI,CAACkB,cAAc,CAAC;EACjC;EACAmC,QAAQA,CAACZ,KAAK,EAAE;IACZ,IAAI,IAAI,CAAC9F,IAAI,EAAE;MACX,IAAI,CAAC2G,aAAa,CAAC,IAAI,CAAC3G,IAAI,CAAC+F,MAAM,EAAED,KAAK,CAAC;IAC/C;EACJ;EACAa,aAAaA,CAACC,aAAa,EAAEC,YAAY,EAAE;IACvC,KAAK,CAACF,aAAa,CAACC,aAAa,EAAEC,YAAY,CAAC;IAChD,IAAI,CAAC7G,IAAI,GAAG,IAAIjI,GAAG,CAACkI,SAAS,CAAC4G,YAAY,EAAED,aAAa,CAAC;IAC1D,IAAI,CAAC/H,UAAU,CAACZ,aAAa,GAAG,IAAI,CAAC6I,SAAS,GAAG,IAAI,CAACA,SAAS,CAAC7I,aAAa,GAAG,IAAI,CAACY,UAAU,CAACZ,aAAa;IAC7G,IAAI,CAAC6C,UAAU,CAAC+E,MAAM,CAACgB,YAAY,CAAC;IACpC,IAAI,CAAC/F,UAAU,CAACiG,UAAU,CAAC,CAAC,EAAEF,YAAY,GAAG,IAAI,CAAChI,UAAU,CAACb,KAAK,CAAC;EACvE;EACAgJ,YAAYA,CAACC,SAAS,EAAE;IACpB,OAAO,IAAI,CAACZ,gBAAgB,CAACY,SAAS,EAAE,IAAI,CAAC,CAACC,IAAI,CAAC,MAAM;MACrD,IAAI,CAAC,IAAI,CAAC5M,MAAM,EAAE;QACd;QACA;MACJ;MACA;MACA,IAAI,CAACsG,KAAK,CAACoG,YAAY,CAAC,CAACC,SAAS,CAAC,CAAC;MACpC,IAAI,CAACrG,KAAK,CAACuG,QAAQ,CAAC,CAACF,SAAS,CAAC,CAAC;IACpC,CAAC,CAAC;EACN;EACAzG,QAAQA,CAAC4G,QAAQ,EAAE;IACf;IACA,IAAI,CAACxH,kBAAkB,CAAC3E,KAAK,CAAC,CAAC;IAC/B,IAAI,CAACX,MAAM,GAAG8M,QAAQ;IACtB,IAAI,IAAI,CAAC9M,MAAM,EAAE;MACb,OAAO,IAAI,CAAC+M,WAAW,CAAC,CAAC;IAC7B;IACA,OAAOC,OAAO,CAACC,OAAO,CAAC,CAAC;EAC5B;EACAF,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC,IAAI,CAAC/M,MAAM,EAAE;MACd,OAAOgN,OAAO,CAACC,OAAO,CAAC9G,SAAS,CAAC;IACrC;IACA,IAAI,IAAI,CAACnG,MAAM,CAACkN,OAAO,EAAE;MACrB,IAAI,CAACC,QAAQ,CAAC,EAAE,CAAC;MACjB,IAAI,CAACvE,iBAAiB,CAACwE,SAAS,GAAGhO,GAAG,CAAC2K,QAAQ,CAAC,WAAW,EAAE,YAAY,CAAC;MAC1EtM,GAAG,CAAC8J,IAAI,CAAC,IAAI,CAACqB,iBAAiB,CAAC;MAChC,OAAOoE,OAAO,CAACC,OAAO,CAAC9G,SAAS,CAAC;IACrC;IACA1I,GAAG,CAACsL,IAAI,CAAC,IAAI,CAACH,iBAAiB,CAAC;IAChC,IAAI,CAACyE,mBAAmB,GAAG,IAAIxN,kBAAkB,CAAC,IAAI,CAACuG,QAAQ,EAAE,IAAI,CAACpG,MAAM,CAAC;IAC7E,IAAI,CAACsF,kBAAkB,CAAC/E,GAAG,CAAC,IAAI,CAAC8M,mBAAmB,CAAC;IACrD;IACA,IAAI,CAAC/H,kBAAkB,CAAC/E,GAAG,CAAC,IAAI,CAACP,MAAM,CAACsN,yBAAyB,CAAClM,SAAS,IAAI,IAAI,CAACkF,KAAK,CAACiH,QAAQ,CAACnM,SAAS,CAAC,CAAC,CAAC;IAC/G;IACA,IAAI,CAACkE,kBAAkB,CAAC/E,GAAG,CAAC,IAAI,CAAC6F,QAAQ,CAACoH,WAAW,CAACxF,CAAC,IAAI;MACvD,MAAM;QAAEvC,KAAK;QAAEjJ;MAAO,CAAC,GAAGwL,CAAC;MAC3B,IAAIvC,KAAK,CAACgI,MAAM,KAAK,CAAC,EAAE;QACpB;MACJ;MACA,MAAMvF,OAAO,GAAG,IAAI,CAACC,oBAAoB,CAAC,CAAC;MAC3C,IAAI,CAACD,OAAO,EAAE;QACV;MACJ;MACA,IAAI,CAAC3C,qBAAqB,CAAC0C,IAAI,CAAC;QAC5BC,OAAO,EAAE;UAAElH,GAAG,EAAEkH,OAAO,CAAClH,GAAG;UAAEgB,KAAK,EAAExF,MAAM,CAACwF;QAAM,CAAC;QAClDoG,IAAI,EAAG3C,KAAK,CAAC4C,OAAO,IAAI5C,KAAK,CAAC6C,OAAO,IAAI7C,KAAK,CAAC8C,MAAM,GAAI,MAAM,GAAG,MAAM;QACxEC,MAAM,EAAE;MACZ,CAAC,CAAC;IACN,CAAC,CAAC,CAAC;IACH;IACA,IAAI,CAACkF,SAAS,CAACC,SAAS,CAACpN,GAAG,CAAC,gBAAgB,CAAC;IAC9C9C,GAAG,CAAC8J,IAAI,CAAC,IAAI,CAAC0C,cAAc,CAAC;IAC7BxM,GAAG,CAAC8J,IAAI,CAAC,IAAI,CAAC0B,iBAAiB,CAAC;IAChC,IAAI,CAACzC,UAAU,CAAC+E,MAAM,CAAC,IAAI,CAAC7F,IAAI,CAAC8F,KAAK,CAAC;IACvC,IAAI,CAAC/D,oBAAoB,CAAC,CAAC;IAC3B;IACA,OAAO,IAAI,CAACnB,KAAK,CAACsH,QAAQ,CAAC,IAAI,CAAC5N,MAAM,CAAC6N,MAAM,CAAChR,MAAM,KAAK,CAAC,GAAG,IAAI,CAACmD,MAAM,CAAC6N,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC7N,MAAM,CAAC;EACrG;EACAmI,oBAAoBA,CAAA,EAAG;IACnB,MAAM,CAACD,OAAO,CAAC,GAAG,IAAI,CAAC5B,KAAK,CAACwH,QAAQ,CAAC,CAAC;IACvC,IAAI5F,OAAO,YAAYtI,YAAY,EAAE;MACjC,OAAOsI,OAAO;IAClB,CAAC,MACI,IAAIA,OAAO,YAAYvI,cAAc,EAAE;MACxC,IAAIuI,OAAO,CAACvG,QAAQ,CAAC9E,MAAM,GAAG,CAAC,EAAE;QAC7B,OAAOqL,OAAO,CAACvG,QAAQ,CAAC,CAAC,CAAC;MAC9B;IACJ;IACA,OAAOwE,SAAS;EACpB;EACA,MAAM4H,eAAeA,CAAC3M,SAAS,EAAE;IAC7B,MAAM,IAAI,CAAC2K,gBAAgB,CAAC3K,SAAS,EAAE,KAAK,CAAC;IAC7C,IAAI,CAACmE,qBAAqB,CAAC0C,IAAI,CAAC;MAAEC,OAAO,EAAE9G,SAAS;MAAEgH,IAAI,EAAE,MAAM;MAAEI,MAAM,EAAE;IAAO,CAAC,CAAC;EACzF;EACA,MAAMuD,gBAAgBA,CAAC3K,SAAS,EAAE4M,YAAY,EAAE;IAC5C;IACA,IAAI,IAAI,CAACC,kBAAkB,KAAK7M,SAAS,EAAE;MACvC;IACJ;IACA,IAAI,CAAC6M,kBAAkB,GAAG7M,SAAS;IACnC;IACA,IAAIA,SAAS,CAACJ,GAAG,CAACkN,MAAM,KAAKjQ,OAAO,CAACkQ,QAAQ,EAAE;MAC3C,IAAI,CAAChB,QAAQ,CAACjP,mBAAmB,CAACkD,SAAS,CAACJ,GAAG,CAAC,EAAE,IAAI,CAAC4D,SAAS,CAACwJ,WAAW,CAACjQ,OAAO,CAACiD,SAAS,CAACJ,GAAG,CAAC,CAAC,CAAC;IACzG,CAAC,MACI;MACD,IAAI,CAACmM,QAAQ,CAAC/N,GAAG,CAAC2K,QAAQ,CAAC,yBAAyB,EAAE,YAAY,CAAC,CAAC;IACxE;IACA,MAAMsE,OAAO,GAAG,IAAI,CAAC5J,yBAAyB,CAAC6J,oBAAoB,CAAClN,SAAS,CAACJ,GAAG,CAAC;IAClF,IAAI,IAAI,CAACsF,KAAK,CAACiI,QAAQ,CAAC,CAAC,KAAKnN,SAAS,CAACD,MAAM,EAAE;MAC5C,IAAI,CAACmF,KAAK,CAACkI,MAAM,CAACpN,SAAS,CAAC;IAChC,CAAC,MACI;MACD,IAAI4M,YAAY,EAAE;QACd,IAAI,CAAC1H,KAAK,CAACkI,MAAM,CAACpN,SAAS,CAACD,MAAM,CAAC;MACvC;MACA,MAAM,IAAI,CAACmF,KAAK,CAACmI,MAAM,CAACrN,SAAS,CAACD,MAAM,CAAC;MACzC,IAAI,CAACmF,KAAK,CAACkI,MAAM,CAACpN,SAAS,CAAC;IAChC;IACA,MAAMN,GAAG,GAAG,MAAMuN,OAAO;IACzB,IAAI,CAAC,IAAI,CAACrO,MAAM,EAAE;MACd;MACAc,GAAG,CAAC9C,OAAO,CAAC,CAAC;MACb;IACJ;IACAA,OAAO,CAAC,IAAI,CAACuI,sBAAsB,CAAC;IACpC;IACA,MAAM3F,KAAK,GAAGE,GAAG,CAAC4N,MAAM;IACxB,IAAI9N,KAAK,EAAE;MACP,MAAM+N,UAAU,GAAG,IAAI,CAACvI,QAAQ,CAACvF,QAAQ,CAAC,CAAC,KAAKD,KAAK,CAACgO,eAAe,GAAG,CAAC,CAAC,0BAA0B,CAAC,CAAC;MACtG,MAAMC,GAAG,GAAGxQ,KAAK,CAACyQ,IAAI,CAAC1N,SAAS,CAACY,KAAK,CAAC,CAAC+M,eAAe,CAAC,CAAC;MACzD,IAAI,CAACxI,sBAAsB,GAAGzF,GAAG;MACjC,IAAI,CAACsF,QAAQ,CAACF,QAAQ,CAACtF,KAAK,CAACgO,eAAe,CAAC;MAC7C,IAAI,CAACxI,QAAQ,CAACsG,YAAY,CAACmC,GAAG,CAAC;MAC/B,IAAI,CAACzI,QAAQ,CAAC4I,mBAAmB,CAACH,GAAG,EAAEF,UAAU,CAAC;IACtD,CAAC,MACI;MACD,IAAI,CAACvI,QAAQ,CAACF,QAAQ,CAAC,IAAI,CAACG,2BAA2B,CAAC;MACxDvF,GAAG,CAAC9C,OAAO,CAAC,CAAC;IACjB;EACJ;AACJ,CAAC;AACDmG,eAAe,GAAG7H,UAAU,CAAC,CACzBgB,OAAO,CAAC,CAAC,EAAEmC,aAAa,CAAC,EACzBnC,OAAO,CAAC,CAAC,EAAEqB,iBAAiB,CAAC,EAC7BrB,OAAO,CAAC,CAAC,EAAE+B,qBAAqB,CAAC,EACjC/B,OAAO,CAAC,CAAC,EAAE6B,QAAQ,CAAC8P,gBAAgB,CAAC,EACrC3R,OAAO,CAAC,CAAC,EAAEiC,aAAa,CAAC,EACzBjC,OAAO,CAAC,CAAC,EAAEoC,gBAAgB,CAAC,EAC5BpC,OAAO,CAAC,CAAC,EAAEgC,kBAAkB,CAAC,EAC9BhC,OAAO,CAAC,EAAE,EAAEoB,gBAAgB,CAAC,EAC7BpB,OAAO,CAAC,EAAE,EAAEkB,6BAA6B,CAAC,CAC7C,EAAE2F,eAAe,CAAC;AACnB,SAASA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}