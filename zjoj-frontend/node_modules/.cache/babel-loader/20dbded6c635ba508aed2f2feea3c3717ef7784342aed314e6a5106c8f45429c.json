{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nimport { defineComponent, toRefs, computed, createVNode } from \"vue\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nconst COLORS = [\"red\", \"orangered\", \"orange\", \"gold\", \"lime\", \"green\", \"cyan\", \"arcoblue\", \"purple\", \"pinkpurple\", \"magenta\", \"gray\"];\nconst BADGE_STATUSES = [\"normal\", \"processing\", \"success\", \"warning\", \"danger\"];\nvar _Badge = defineComponent({\n  name: \"Badge\",\n  props: {\n    text: {\n      type: String\n    },\n    dot: {\n      type: Boolean\n    },\n    dotStyle: {\n      type: Object\n    },\n    maxCount: {\n      type: Number,\n      default: 99\n    },\n    offset: {\n      type: Array,\n      default: () => []\n    },\n    color: {\n      type: String\n    },\n    status: {\n      type: String,\n      validator: value => {\n        return BADGE_STATUSES.includes(value);\n      }\n    },\n    count: {\n      type: Number\n    }\n  },\n  setup(props, {\n    slots\n  }) {\n    const {\n      status,\n      color,\n      dotStyle,\n      offset,\n      text,\n      dot,\n      maxCount,\n      count\n    } = toRefs(props);\n    const prefixCls = getPrefixCls(\"badge\");\n    const wrapperClassName = useWrapperClass(prefixCls, status == null ? void 0 : status.value, slots == null ? void 0 : slots.default);\n    const computedStyleRef = computed(() => {\n      const computedDotStyle = __spreadValues({}, (dotStyle == null ? void 0 : dotStyle.value) || {});\n      const [leftOffset, topOffset] = (offset == null ? void 0 : offset.value) || [];\n      if (leftOffset) {\n        computedDotStyle.marginRight = `${-leftOffset}px`;\n      }\n      if (topOffset) {\n        computedDotStyle.marginTop = `${topOffset}px`;\n      }\n      const computedColorStyle = !(color == null ? void 0 : color.value) || COLORS.includes(color == null ? void 0 : color.value) ? {} : {\n        backgroundColor: color.value\n      };\n      const mergedStyle = __spreadValues(__spreadValues({}, computedColorStyle), computedDotStyle);\n      return {\n        mergedStyle,\n        computedDotStyle,\n        computedColorStyle\n      };\n    });\n    const getDot = () => {\n      const textValue = text == null ? void 0 : text.value;\n      const colorValue = color == null ? void 0 : color.value;\n      const statusValue = status == null ? void 0 : status.value;\n      const dotValue = dot == null ? void 0 : dot.value;\n      const countValue = Number(count == null ? void 0 : count.value);\n      const hasCount = (count == null ? void 0 : count.value) != null;\n      const {\n        computedDotStyle,\n        mergedStyle\n      } = computedStyleRef.value;\n      if (slots.content) {\n        return createVNode(\"span\", {\n          \"class\": `${prefixCls}-custom-dot`,\n          \"style\": computedDotStyle\n        }, [slots.content()]);\n      }\n      if (textValue && !colorValue && !statusValue) {\n        return createVNode(\"span\", {\n          \"class\": `${prefixCls}-text`,\n          \"style\": computedDotStyle\n        }, [textValue]);\n      }\n      if (statusValue || colorValue && !hasCount) {\n        return createVNode(\"span\", {\n          \"class\": `${prefixCls}-status-wrapper`\n        }, [createVNode(\"span\", {\n          \"class\": [`${prefixCls}-status-dot`, {\n            [`${prefixCls}-status-${statusValue}`]: statusValue,\n            [`${prefixCls}-color-${colorValue}`]: colorValue\n          }],\n          \"style\": mergedStyle\n        }, null), textValue && createVNode(\"span\", {\n          \"class\": `${prefixCls}-status-text`\n        }, [textValue])]);\n      }\n      if ((dotValue || colorValue) && countValue > 0) {\n        return createVNode(\"span\", {\n          \"class\": [`${prefixCls}-dot`, {\n            [`${prefixCls}-color-${colorValue}`]: colorValue\n          }],\n          \"style\": mergedStyle\n        }, null);\n      }\n      if (countValue === 0) {\n        return null;\n      }\n      return createVNode(\"span\", {\n        \"class\": `${prefixCls}-number`,\n        \"style\": mergedStyle\n      }, [createVNode(\"span\", null, [maxCount.value && countValue > maxCount.value ? `${maxCount.value}+` : countValue])]);\n    };\n    return () => {\n      return createVNode(\"span\", {\n        \"class\": wrapperClassName.value\n      }, [slots.default && slots.default(), getDot()]);\n    };\n  }\n});\nconst useWrapperClass = (prefixCls, status, children) => {\n  return computed(() => [prefixCls, {\n    [`${prefixCls}-status`]: status,\n    [`${prefixCls}-no-children`]: !children\n  }]);\n};\nexport { BADGE_STATUSES, COLORS, _Badge as default };","map":{"version":3,"names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","defineComponent","toRefs","computed","createVNode","getPrefixCls","COLORS","BADGE_STATUSES","_Badge","name","props","text","type","String","dot","Boolean","dotStyle","maxCount","Number","default","offset","Array","color","status","validator","includes","count","setup","slots","prefixCls","wrapperClassName","useWrapperClass","computedStyleRef","computedDotStyle","leftOffset","topOffset","marginRight","marginTop","computedColorStyle","backgroundColor","mergedStyle","getDot","textValue","colorValue","statusValue","dotValue","countValue","hasCount","content","children"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/@arco-design/web-vue/es/badge/badge.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nimport { defineComponent, toRefs, computed, createVNode } from \"vue\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nconst COLORS = [\"red\", \"orangered\", \"orange\", \"gold\", \"lime\", \"green\", \"cyan\", \"arcoblue\", \"purple\", \"pinkpurple\", \"magenta\", \"gray\"];\nconst BADGE_STATUSES = [\"normal\", \"processing\", \"success\", \"warning\", \"danger\"];\nvar _Badge = defineComponent({\n  name: \"Badge\",\n  props: {\n    text: {\n      type: String\n    },\n    dot: {\n      type: Boolean\n    },\n    dotStyle: {\n      type: Object\n    },\n    maxCount: {\n      type: Number,\n      default: 99\n    },\n    offset: {\n      type: Array,\n      default: () => []\n    },\n    color: {\n      type: String\n    },\n    status: {\n      type: String,\n      validator: (value) => {\n        return BADGE_STATUSES.includes(value);\n      }\n    },\n    count: {\n      type: Number\n    }\n  },\n  setup(props, {\n    slots\n  }) {\n    const {\n      status,\n      color,\n      dotStyle,\n      offset,\n      text,\n      dot,\n      maxCount,\n      count\n    } = toRefs(props);\n    const prefixCls = getPrefixCls(\"badge\");\n    const wrapperClassName = useWrapperClass(prefixCls, status == null ? void 0 : status.value, slots == null ? void 0 : slots.default);\n    const computedStyleRef = computed(() => {\n      const computedDotStyle = __spreadValues({}, (dotStyle == null ? void 0 : dotStyle.value) || {});\n      const [leftOffset, topOffset] = (offset == null ? void 0 : offset.value) || [];\n      if (leftOffset) {\n        computedDotStyle.marginRight = `${-leftOffset}px`;\n      }\n      if (topOffset) {\n        computedDotStyle.marginTop = `${topOffset}px`;\n      }\n      const computedColorStyle = !(color == null ? void 0 : color.value) || COLORS.includes(color == null ? void 0 : color.value) ? {} : {\n        backgroundColor: color.value\n      };\n      const mergedStyle = __spreadValues(__spreadValues({}, computedColorStyle), computedDotStyle);\n      return {\n        mergedStyle,\n        computedDotStyle,\n        computedColorStyle\n      };\n    });\n    const getDot = () => {\n      const textValue = text == null ? void 0 : text.value;\n      const colorValue = color == null ? void 0 : color.value;\n      const statusValue = status == null ? void 0 : status.value;\n      const dotValue = dot == null ? void 0 : dot.value;\n      const countValue = Number(count == null ? void 0 : count.value);\n      const hasCount = (count == null ? void 0 : count.value) != null;\n      const {\n        computedDotStyle,\n        mergedStyle\n      } = computedStyleRef.value;\n      if (slots.content) {\n        return createVNode(\"span\", {\n          \"class\": `${prefixCls}-custom-dot`,\n          \"style\": computedDotStyle\n        }, [slots.content()]);\n      }\n      if (textValue && !colorValue && !statusValue) {\n        return createVNode(\"span\", {\n          \"class\": `${prefixCls}-text`,\n          \"style\": computedDotStyle\n        }, [textValue]);\n      }\n      if (statusValue || colorValue && !hasCount) {\n        return createVNode(\"span\", {\n          \"class\": `${prefixCls}-status-wrapper`\n        }, [createVNode(\"span\", {\n          \"class\": [`${prefixCls}-status-dot`, {\n            [`${prefixCls}-status-${statusValue}`]: statusValue,\n            [`${prefixCls}-color-${colorValue}`]: colorValue\n          }],\n          \"style\": mergedStyle\n        }, null), textValue && createVNode(\"span\", {\n          \"class\": `${prefixCls}-status-text`\n        }, [textValue])]);\n      }\n      if ((dotValue || colorValue) && countValue > 0) {\n        return createVNode(\"span\", {\n          \"class\": [`${prefixCls}-dot`, {\n            [`${prefixCls}-color-${colorValue}`]: colorValue\n          }],\n          \"style\": mergedStyle\n        }, null);\n      }\n      if (countValue === 0) {\n        return null;\n      }\n      return createVNode(\"span\", {\n        \"class\": `${prefixCls}-number`,\n        \"style\": mergedStyle\n      }, [createVNode(\"span\", null, [maxCount.value && countValue > maxCount.value ? `${maxCount.value}+` : countValue])]);\n    };\n    return () => {\n      return createVNode(\"span\", {\n        \"class\": wrapperClassName.value\n      }, [slots.default && slots.default(), getDot()]);\n    };\n  }\n});\nconst useWrapperClass = (prefixCls, status, children) => {\n  return computed(() => [prefixCls, {\n    [`${prefixCls}-status`]: status,\n    [`${prefixCls}-no-children`]: !children\n  }]);\n};\nexport { BADGE_STATUSES, COLORS, _Badge as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}