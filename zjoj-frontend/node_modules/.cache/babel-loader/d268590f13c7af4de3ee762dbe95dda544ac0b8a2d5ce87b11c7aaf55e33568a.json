{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.45.0(5e5af013f8d295555a7210df0d5f2cea0bf5dd56)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/objective-c/objective-c.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".objective-c\",\n  keywords: [\"#import\", \"#include\", \"#define\", \"#else\", \"#endif\", \"#if\", \"#ifdef\", \"#ifndef\", \"#ident\", \"#undef\", \"@class\", \"@defs\", \"@dynamic\", \"@encode\", \"@end\", \"@implementation\", \"@interface\", \"@package\", \"@private\", \"@protected\", \"@property\", \"@protocol\", \"@public\", \"@selector\", \"@synthesize\", \"__declspec\", \"assign\", \"auto\", \"BOOL\", \"break\", \"bycopy\", \"byref\", \"case\", \"char\", \"Class\", \"const\", \"copy\", \"continue\", \"default\", \"do\", \"double\", \"else\", \"enum\", \"extern\", \"FALSE\", \"false\", \"float\", \"for\", \"goto\", \"if\", \"in\", \"int\", \"id\", \"inout\", \"IMP\", \"long\", \"nil\", \"nonatomic\", \"NULL\", \"oneway\", \"out\", \"private\", \"public\", \"protected\", \"readwrite\", \"readonly\", \"register\", \"return\", \"SEL\", \"self\", \"short\", \"signed\", \"sizeof\", \"static\", \"struct\", \"super\", \"switch\", \"typedef\", \"TRUE\", \"true\", \"union\", \"unsigned\", \"volatile\", \"void\", \"while\"],\n  decpart: /\\d(_?\\d)*/,\n  decimal: /0|@decpart/,\n  tokenizer: {\n    root: [{\n      include: \"@comments\"\n    }, {\n      include: \"@whitespace\"\n    }, {\n      include: \"@numbers\"\n    }, {\n      include: \"@strings\"\n    }, [/[,:;]/, \"delimiter\"], [/[{}\\[\\]()<>]/, \"@brackets\"], [/[a-zA-Z@#]\\w*/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@default\": \"identifier\"\n      }\n    }], [/[<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,]|and\\\\b|or\\\\b|not\\\\b]/, \"operator\"]],\n    whitespace: [[/\\s+/, \"white\"]],\n    comments: [[\"\\\\/\\\\*\", \"comment\", \"@comment\"], [\"\\\\/\\\\/+.*\", \"comment\"]],\n    comment: [[\"\\\\*\\\\/\", \"comment\", \"@pop\"], [\".\", \"comment\"]],\n    numbers: [[/0[xX][0-9a-fA-F]*(_?[0-9a-fA-F])*/, \"number.hex\"], [/@decimal((\\.@decpart)?([eE][\\-+]?@decpart)?)[fF]*/, {\n      cases: {\n        \"(\\\\d)*\": \"number\",\n        $0: \"number.float\"\n      }\n    }]],\n    strings: [[/'$/, \"string.escape\", \"@popall\"], [/'/, \"string.escape\", \"@stringBody\"], [/\"$/, \"string.escape\", \"@popall\"], [/\"/, \"string.escape\", \"@dblStringBody\"]],\n    stringBody: [[/[^\\\\']+$/, \"string\", \"@popall\"], [/[^\\\\']+/, \"string\"], [/\\\\./, \"string\"], [/'/, \"string.escape\", \"@popall\"], [/\\\\$/, \"string\"]],\n    dblStringBody: [[/[^\\\\\"]+$/, \"string\", \"@popall\"], [/[^\\\\\"]+/, \"string\"], [/\\\\./, \"string\"], [/\"/, \"string.escape\", \"@popall\"], [/\\\\$/, \"string\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","keywords","decpart","decimal","tokenizer","root","include","cases","whitespace","comment","numbers","$0","strings","stringBody","dblStringBody"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/basic-languages/objective-c/objective-c.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.45.0(5e5af013f8d295555a7210df0d5f2cea0bf5dd56)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/objective-c/objective-c.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".objective-c\",\n  keywords: [\n    \"#import\",\n    \"#include\",\n    \"#define\",\n    \"#else\",\n    \"#endif\",\n    \"#if\",\n    \"#ifdef\",\n    \"#ifndef\",\n    \"#ident\",\n    \"#undef\",\n    \"@class\",\n    \"@defs\",\n    \"@dynamic\",\n    \"@encode\",\n    \"@end\",\n    \"@implementation\",\n    \"@interface\",\n    \"@package\",\n    \"@private\",\n    \"@protected\",\n    \"@property\",\n    \"@protocol\",\n    \"@public\",\n    \"@selector\",\n    \"@synthesize\",\n    \"__declspec\",\n    \"assign\",\n    \"auto\",\n    \"BOOL\",\n    \"break\",\n    \"bycopy\",\n    \"byref\",\n    \"case\",\n    \"char\",\n    \"Class\",\n    \"const\",\n    \"copy\",\n    \"continue\",\n    \"default\",\n    \"do\",\n    \"double\",\n    \"else\",\n    \"enum\",\n    \"extern\",\n    \"FALSE\",\n    \"false\",\n    \"float\",\n    \"for\",\n    \"goto\",\n    \"if\",\n    \"in\",\n    \"int\",\n    \"id\",\n    \"inout\",\n    \"IMP\",\n    \"long\",\n    \"nil\",\n    \"nonatomic\",\n    \"NULL\",\n    \"oneway\",\n    \"out\",\n    \"private\",\n    \"public\",\n    \"protected\",\n    \"readwrite\",\n    \"readonly\",\n    \"register\",\n    \"return\",\n    \"SEL\",\n    \"self\",\n    \"short\",\n    \"signed\",\n    \"sizeof\",\n    \"static\",\n    \"struct\",\n    \"super\",\n    \"switch\",\n    \"typedef\",\n    \"TRUE\",\n    \"true\",\n    \"union\",\n    \"unsigned\",\n    \"volatile\",\n    \"void\",\n    \"while\"\n  ],\n  decpart: /\\d(_?\\d)*/,\n  decimal: /0|@decpart/,\n  tokenizer: {\n    root: [\n      { include: \"@comments\" },\n      { include: \"@whitespace\" },\n      { include: \"@numbers\" },\n      { include: \"@strings\" },\n      [/[,:;]/, \"delimiter\"],\n      [/[{}\\[\\]()<>]/, \"@brackets\"],\n      [\n        /[a-zA-Z@#]\\w*/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [/[<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,]|and\\\\b|or\\\\b|not\\\\b]/, \"operator\"]\n    ],\n    whitespace: [[/\\s+/, \"white\"]],\n    comments: [\n      [\"\\\\/\\\\*\", \"comment\", \"@comment\"],\n      [\"\\\\/\\\\/+.*\", \"comment\"]\n    ],\n    comment: [\n      [\"\\\\*\\\\/\", \"comment\", \"@pop\"],\n      [\".\", \"comment\"]\n    ],\n    numbers: [\n      [/0[xX][0-9a-fA-F]*(_?[0-9a-fA-F])*/, \"number.hex\"],\n      [\n        /@decimal((\\.@decpart)?([eE][\\-+]?@decpart)?)[fF]*/,\n        {\n          cases: {\n            \"(\\\\d)*\": \"number\",\n            $0: \"number.float\"\n          }\n        }\n      ]\n    ],\n    strings: [\n      [/'$/, \"string.escape\", \"@popall\"],\n      [/'/, \"string.escape\", \"@stringBody\"],\n      [/\"$/, \"string.escape\", \"@popall\"],\n      [/\"/, \"string.escape\", \"@dblStringBody\"]\n    ],\n    stringBody: [\n      [/[^\\\\']+$/, \"string\", \"@popall\"],\n      [/[^\\\\']+/, \"string\"],\n      [/\\\\./, \"string\"],\n      [/'/, \"string.escape\", \"@popall\"],\n      [/\\\\$/, \"string\"]\n    ],\n    dblStringBody: [\n      [/[^\\\\\"]+$/, \"string\", \"@popall\"],\n      [/[^\\\\\"]+/, \"string\"],\n      [/\\\\./, \"string\"],\n      [/\"/, \"string.escape\", \"@popall\"],\n      [/\\\\$/, \"string\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}