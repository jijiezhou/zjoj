{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { CursorMoveCommands } from '../../../common/cursor/cursorMoveCommands.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nexport class ExpandLineSelectionAction extends EditorAction {\n  constructor() {\n    super({\n      id: 'expandLineSelection',\n      label: nls.localize('expandLineSelection', \"Expand Line Selection\"),\n      alias: 'Expand Line Selection',\n      precondition: undefined,\n      kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 42 /* KeyCode.KeyL */\n      }\n    });\n  }\n  run(_accessor, editor, args) {\n    args = args || {};\n    if (!editor.hasModel()) {\n      return;\n    }\n    const viewModel = editor._getViewModel();\n    viewModel.model.pushStackElement();\n    viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.expandLineSelection(viewModel, viewModel.getCursorStates()));\n    viewModel.revealPrimaryCursor(args.source, true);\n  }\n}\nregisterEditorAction(ExpandLineSelectionAction);","map":{"version":3,"names":["EditorAction","registerEditorAction","CursorMoveCommands","EditorContextKeys","nls","ExpandLineSelectionAction","constructor","id","label","localize","alias","precondition","undefined","kbOpts","weight","kbExpr","textInputFocus","primary","run","_accessor","editor","args","hasModel","viewModel","_getViewModel","model","pushStackElement","setCursorStates","source","expandLineSelection","getCursorStates","revealPrimaryCursor"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/lineSelection/browser/lineSelection.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { CursorMoveCommands } from '../../../common/cursor/cursorMoveCommands.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nexport class ExpandLineSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'expandLineSelection',\n            label: nls.localize('expandLineSelection', \"Expand Line Selection\"),\n            alias: 'Expand Line Selection',\n            precondition: undefined,\n            kbOpts: {\n                weight: 0 /* KeybindingWeight.EditorCore */,\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 42 /* KeyCode.KeyL */\n            },\n        });\n    }\n    run(_accessor, editor, args) {\n        args = args || {};\n        if (!editor.hasModel()) {\n            return;\n        }\n        const viewModel = editor._getViewModel();\n        viewModel.model.pushStackElement();\n        viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.expandLineSelection(viewModel, viewModel.getCursorStates()));\n        viewModel.revealPrimaryCursor(args.source, true);\n    }\n}\nregisterEditorAction(ExpandLineSelectionAction);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,YAAY,EAAEC,oBAAoB,QAAQ,sCAAsC;AACzF,SAASC,kBAAkB,QAAQ,8CAA8C;AACjF,SAASC,iBAAiB,QAAQ,sCAAsC;AACxE,OAAO,KAAKC,GAAG,MAAM,oBAAoB;AACzC,OAAO,MAAMC,yBAAyB,SAASL,YAAY,CAAC;EACxDM,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAE,qBAAqB;MACzBC,KAAK,EAAEJ,GAAG,CAACK,QAAQ,CAAC,qBAAqB,EAAE,uBAAuB,CAAC;MACnEC,KAAK,EAAE,uBAAuB;MAC9BC,YAAY,EAAEC,SAAS;MACvBC,MAAM,EAAE;QACJC,MAAM,EAAE,CAAC,CAAC;QACVC,MAAM,EAAEZ,iBAAiB,CAACa,cAAc;QACxCC,OAAO,EAAE,IAAI,CAAC,uBAAuB,EAAE,CAAC;MAC5C;IACJ,CAAC,CAAC;EACN;EACAC,GAAGA,CAACC,SAAS,EAAEC,MAAM,EAAEC,IAAI,EAAE;IACzBA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;IACjB,IAAI,CAACD,MAAM,CAACE,QAAQ,CAAC,CAAC,EAAE;MACpB;IACJ;IACA,MAAMC,SAAS,GAAGH,MAAM,CAACI,aAAa,CAAC,CAAC;IACxCD,SAAS,CAACE,KAAK,CAACC,gBAAgB,CAAC,CAAC;IAClCH,SAAS,CAACI,eAAe,CAACN,IAAI,CAACO,MAAM,EAAE,CAAC,CAAC,mCAAmC1B,kBAAkB,CAAC2B,mBAAmB,CAACN,SAAS,EAAEA,SAAS,CAACO,eAAe,CAAC,CAAC,CAAC,CAAC;IAC3JP,SAAS,CAACQ,mBAAmB,CAACV,IAAI,CAACO,MAAM,EAAE,IAAI,CAAC;EACpD;AACJ;AACA3B,oBAAoB,CAACI,yBAAyB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}