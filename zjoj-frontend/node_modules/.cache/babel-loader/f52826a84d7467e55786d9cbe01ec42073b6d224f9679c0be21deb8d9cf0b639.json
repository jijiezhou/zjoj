{"ast":null,"code":"import { toRefs, watchEffect } from \"vue\";\nfunction usePopupOverflowHidden(props) {\n  const {\n    container,\n    hidden\n  } = toRefs(props);\n  let needResetContainerStyle = false;\n  let originContainerStyle = {};\n  const getScrollBarWidth = element => {\n    return element.tagName === \"BODY\" ? window.innerWidth - (document.body.clientWidth || document.documentElement.clientWidth) : element.offsetWidth - element.clientWidth;\n  };\n  const setContainerStyle = () => {\n    if (container.value && container.value.style.overflow !== \"hidden\") {\n      const originStyle = container.value.style;\n      needResetContainerStyle = true;\n      const containerScrollBarWidth = getScrollBarWidth(container.value);\n      if (containerScrollBarWidth) {\n        originContainerStyle.width = originStyle.width;\n        container.value.style.width = `calc(${container.value.style.width || \"100%\"} - ${containerScrollBarWidth}px)`;\n      }\n      originContainerStyle.overflow = originStyle.overflow;\n      container.value.style.overflow = \"hidden\";\n    }\n  };\n  const resetContainerStyle = () => {\n    if (container.value && needResetContainerStyle) {\n      const originStyle = originContainerStyle;\n      Object.keys(originStyle).forEach(i => {\n        container.value.style[i] = originStyle[i];\n      });\n    }\n    needResetContainerStyle = false;\n    originContainerStyle = {};\n  };\n  watchEffect(onInvalidate => {\n    hidden.value ? setContainerStyle() : resetContainerStyle();\n    onInvalidate(() => {\n      resetContainerStyle();\n    });\n  });\n  return [resetContainerStyle, setContainerStyle];\n}\nexport { usePopupOverflowHidden as default };","map":{"version":3,"names":["toRefs","watchEffect","usePopupOverflowHidden","props","container","hidden","needResetContainerStyle","originContainerStyle","getScrollBarWidth","element","tagName","window","innerWidth","document","body","clientWidth","documentElement","offsetWidth","setContainerStyle","value","style","overflow","originStyle","containerScrollBarWidth","width","resetContainerStyle","Object","keys","forEach","i","onInvalidate","default"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/@arco-design/web-vue/es/_hooks/use-popup-overflow-hidden.js"],"sourcesContent":["import { toRefs, watchEffect } from \"vue\";\nfunction usePopupOverflowHidden(props) {\n  const { container, hidden } = toRefs(props);\n  let needResetContainerStyle = false;\n  let originContainerStyle = {};\n  const getScrollBarWidth = (element) => {\n    return element.tagName === \"BODY\" ? window.innerWidth - (document.body.clientWidth || document.documentElement.clientWidth) : element.offsetWidth - element.clientWidth;\n  };\n  const setContainerStyle = () => {\n    if (container.value && container.value.style.overflow !== \"hidden\") {\n      const originStyle = container.value.style;\n      needResetContainerStyle = true;\n      const containerScrollBarWidth = getScrollBarWidth(container.value);\n      if (containerScrollBarWidth) {\n        originContainerStyle.width = originStyle.width;\n        container.value.style.width = `calc(${container.value.style.width || \"100%\"} - ${containerScrollBarWidth}px)`;\n      }\n      originContainerStyle.overflow = originStyle.overflow;\n      container.value.style.overflow = \"hidden\";\n    }\n  };\n  const resetContainerStyle = () => {\n    if (container.value && needResetContainerStyle) {\n      const originStyle = originContainerStyle;\n      Object.keys(originStyle).forEach((i) => {\n        container.value.style[i] = originStyle[i];\n      });\n    }\n    needResetContainerStyle = false;\n    originContainerStyle = {};\n  };\n  watchEffect((onInvalidate) => {\n    hidden.value ? setContainerStyle() : resetContainerStyle();\n    onInvalidate(() => {\n      resetContainerStyle();\n    });\n  });\n  return [resetContainerStyle, setContainerStyle];\n}\nexport { usePopupOverflowHidden as default };\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,WAAW,QAAQ,KAAK;AACzC,SAASC,sBAAsBA,CAACC,KAAK,EAAE;EACrC,MAAM;IAAEC,SAAS;IAAEC;EAAO,CAAC,GAAGL,MAAM,CAACG,KAAK,CAAC;EAC3C,IAAIG,uBAAuB,GAAG,KAAK;EACnC,IAAIC,oBAAoB,GAAG,CAAC,CAAC;EAC7B,MAAMC,iBAAiB,GAAIC,OAAO,IAAK;IACrC,OAAOA,OAAO,CAACC,OAAO,KAAK,MAAM,GAAGC,MAAM,CAACC,UAAU,IAAIC,QAAQ,CAACC,IAAI,CAACC,WAAW,IAAIF,QAAQ,CAACG,eAAe,CAACD,WAAW,CAAC,GAAGN,OAAO,CAACQ,WAAW,GAAGR,OAAO,CAACM,WAAW;EACzK,CAAC;EACD,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAId,SAAS,CAACe,KAAK,IAAIf,SAAS,CAACe,KAAK,CAACC,KAAK,CAACC,QAAQ,KAAK,QAAQ,EAAE;MAClE,MAAMC,WAAW,GAAGlB,SAAS,CAACe,KAAK,CAACC,KAAK;MACzCd,uBAAuB,GAAG,IAAI;MAC9B,MAAMiB,uBAAuB,GAAGf,iBAAiB,CAACJ,SAAS,CAACe,KAAK,CAAC;MAClE,IAAII,uBAAuB,EAAE;QAC3BhB,oBAAoB,CAACiB,KAAK,GAAGF,WAAW,CAACE,KAAK;QAC9CpB,SAAS,CAACe,KAAK,CAACC,KAAK,CAACI,KAAK,GAAI,QAAOpB,SAAS,CAACe,KAAK,CAACC,KAAK,CAACI,KAAK,IAAI,MAAO,MAAKD,uBAAwB,KAAI;MAC/G;MACAhB,oBAAoB,CAACc,QAAQ,GAAGC,WAAW,CAACD,QAAQ;MACpDjB,SAAS,CAACe,KAAK,CAACC,KAAK,CAACC,QAAQ,GAAG,QAAQ;IAC3C;EACF,CAAC;EACD,MAAMI,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIrB,SAAS,CAACe,KAAK,IAAIb,uBAAuB,EAAE;MAC9C,MAAMgB,WAAW,GAAGf,oBAAoB;MACxCmB,MAAM,CAACC,IAAI,CAACL,WAAW,CAAC,CAACM,OAAO,CAAEC,CAAC,IAAK;QACtCzB,SAAS,CAACe,KAAK,CAACC,KAAK,CAACS,CAAC,CAAC,GAAGP,WAAW,CAACO,CAAC,CAAC;MAC3C,CAAC,CAAC;IACJ;IACAvB,uBAAuB,GAAG,KAAK;IAC/BC,oBAAoB,GAAG,CAAC,CAAC;EAC3B,CAAC;EACDN,WAAW,CAAE6B,YAAY,IAAK;IAC5BzB,MAAM,CAACc,KAAK,GAAGD,iBAAiB,CAAC,CAAC,GAAGO,mBAAmB,CAAC,CAAC;IAC1DK,YAAY,CAAC,MAAM;MACjBL,mBAAmB,CAAC,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,OAAO,CAACA,mBAAmB,EAAEP,iBAAiB,CAAC;AACjD;AACA,SAAShB,sBAAsB,IAAI6B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}