{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class CopyLinesCommand {\n  constructor(selection, isCopyingDown, noop) {\n    this._selection = selection;\n    this._isCopyingDown = isCopyingDown;\n    this._noop = noop || false;\n    this._selectionDirection = 0 /* SelectionDirection.LTR */;\n    this._selectionId = null;\n    this._startLineNumberDelta = 0;\n    this._endLineNumberDelta = 0;\n  }\n  getEditOperations(model, builder) {\n    let s = this._selection;\n    this._startLineNumberDelta = 0;\n    this._endLineNumberDelta = 0;\n    if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n      this._endLineNumberDelta = 1;\n      s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n    }\n    const sourceLines = [];\n    for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n      sourceLines.push(model.getLineContent(i));\n    }\n    const sourceText = sourceLines.join('\\n');\n    if (sourceText === '') {\n      // Duplicating empty line\n      if (this._isCopyingDown) {\n        this._startLineNumberDelta++;\n        this._endLineNumberDelta++;\n      }\n    }\n    if (this._noop) {\n      builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber + 1, 1), s.endLineNumber === model.getLineCount() ? '' : '\\n');\n    } else {\n      if (!this._isCopyingDown) {\n        builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\n      } else {\n        builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\n      }\n    }\n    this._selectionId = builder.trackSelection(s);\n    this._selectionDirection = this._selection.getDirection();\n  }\n  computeCursorState(model, helper) {\n    let result = helper.getTrackedSelection(this._selectionId);\n    if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\n      let startLineNumber = result.startLineNumber;\n      let startColumn = result.startColumn;\n      let endLineNumber = result.endLineNumber;\n      let endColumn = result.endColumn;\n      if (this._startLineNumberDelta !== 0) {\n        startLineNumber = startLineNumber + this._startLineNumberDelta;\n        startColumn = 1;\n      }\n      if (this._endLineNumberDelta !== 0) {\n        endLineNumber = endLineNumber + this._endLineNumberDelta;\n        endColumn = 1;\n      }\n      result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\n    }\n    return result;\n  }\n}","map":{"version":3,"names":["Range","Selection","CopyLinesCommand","constructor","selection","isCopyingDown","noop","_selection","_isCopyingDown","_noop","_selectionDirection","_selectionId","_startLineNumberDelta","_endLineNumberDelta","getEditOperations","model","builder","s","startLineNumber","endLineNumber","endColumn","setEndPosition","getLineMaxColumn","sourceLines","i","push","getLineContent","sourceText","join","addEditOperation","getLineCount","trackSelection","getDirection","computeCursorState","helper","result","getTrackedSelection","startColumn","createWithDirection"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/copyLinesCommand.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class CopyLinesCommand {\n    constructor(selection, isCopyingDown, noop) {\n        this._selection = selection;\n        this._isCopyingDown = isCopyingDown;\n        this._noop = noop || false;\n        this._selectionDirection = 0 /* SelectionDirection.LTR */;\n        this._selectionId = null;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n    }\n    getEditOperations(model, builder) {\n        let s = this._selection;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._endLineNumberDelta = 1;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const sourceLines = [];\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            sourceLines.push(model.getLineContent(i));\n        }\n        const sourceText = sourceLines.join('\\n');\n        if (sourceText === '') {\n            // Duplicating empty line\n            if (this._isCopyingDown) {\n                this._startLineNumberDelta++;\n                this._endLineNumberDelta++;\n            }\n        }\n        if (this._noop) {\n            builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber + 1, 1), s.endLineNumber === model.getLineCount() ? '' : '\\n');\n        }\n        else {\n            if (!this._isCopyingDown) {\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\n            }\n            else {\n                builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n        this._selectionDirection = this._selection.getDirection();\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\n            let startLineNumber = result.startLineNumber;\n            let startColumn = result.startColumn;\n            let endLineNumber = result.endLineNumber;\n            let endColumn = result.endColumn;\n            if (this._startLineNumberDelta !== 0) {\n                startLineNumber = startLineNumber + this._startLineNumberDelta;\n                startColumn = 1;\n            }\n            if (this._endLineNumberDelta !== 0) {\n                endLineNumber = endLineNumber + this._endLineNumberDelta;\n                endColumn = 1;\n            }\n            result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\n        }\n        return result;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}