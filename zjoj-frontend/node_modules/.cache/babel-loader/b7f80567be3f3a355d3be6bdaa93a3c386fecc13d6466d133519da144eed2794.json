{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindow, runWhenWindowIdle } from '../../../base/browser/dom.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Disposable, DisposableMap } from '../../../base/common/lifecycle.js';\nexport class CodeEditorContributions extends Disposable {\n  constructor() {\n    super();\n    this._editor = null;\n    this._instantiationService = null;\n    /**\n     * Contains all instantiated contributions.\n     */\n    this._instances = this._register(new DisposableMap());\n    /**\n     * Contains contributions which are not yet instantiated.\n     */\n    this._pending = new Map();\n    /**\n     * Tracks which instantiation kinds are still left in `_pending`.\n     */\n    this._finishedInstantiation = [];\n    this._finishedInstantiation[0 /* EditorContributionInstantiation.Eager */] = false;\n    this._finishedInstantiation[1 /* EditorContributionInstantiation.AfterFirstRender */] = false;\n    this._finishedInstantiation[2 /* EditorContributionInstantiation.BeforeFirstInteraction */] = false;\n    this._finishedInstantiation[3 /* EditorContributionInstantiation.Eventually */] = false;\n  }\n  initialize(editor, contributions, instantiationService) {\n    this._editor = editor;\n    this._instantiationService = instantiationService;\n    for (const desc of contributions) {\n      if (this._pending.has(desc.id)) {\n        onUnexpectedError(new Error(`Cannot have two contributions with the same id ${desc.id}`));\n        continue;\n      }\n      this._pending.set(desc.id, desc);\n    }\n    this._instantiateSome(0 /* EditorContributionInstantiation.Eager */);\n    // AfterFirstRender\n    // - these extensions will be instantiated at the latest 50ms after the first render.\n    // - but if there is idle time, we will instantiate them sooner.\n    this._register(runWhenWindowIdle(getWindow(this._editor.getDomNode()), () => {\n      this._instantiateSome(1 /* EditorContributionInstantiation.AfterFirstRender */);\n    }));\n    // BeforeFirstInteraction\n    // - these extensions will be instantiated at the latest before a mouse or a keyboard event.\n    // - but if there is idle time, we will instantiate them sooner.\n    this._register(runWhenWindowIdle(getWindow(this._editor.getDomNode()), () => {\n      this._instantiateSome(2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n    }));\n    // Eventually\n    // - these extensions will only be instantiated when there is idle time.\n    // - since there is no guarantee that there will ever be idle time, we set a timeout of 5s here.\n    this._register(runWhenWindowIdle(getWindow(this._editor.getDomNode()), () => {\n      this._instantiateSome(3 /* EditorContributionInstantiation.Eventually */);\n    }, 5000));\n  }\n  saveViewState() {\n    const contributionsState = {};\n    for (const [id, contribution] of this._instances) {\n      if (typeof contribution.saveViewState === 'function') {\n        contributionsState[id] = contribution.saveViewState();\n      }\n    }\n    return contributionsState;\n  }\n  restoreViewState(contributionsState) {\n    for (const [id, contribution] of this._instances) {\n      if (typeof contribution.restoreViewState === 'function') {\n        contribution.restoreViewState(contributionsState[id]);\n      }\n    }\n  }\n  get(id) {\n    this._instantiateById(id);\n    return this._instances.get(id) || null;\n  }\n  onBeforeInteractionEvent() {\n    // this method is called very often by the editor!\n    this._instantiateSome(2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n  }\n  onAfterModelAttached() {\n    var _a;\n    this._register(runWhenWindowIdle(getWindow((_a = this._editor) === null || _a === void 0 ? void 0 : _a.getDomNode()), () => {\n      this._instantiateSome(1 /* EditorContributionInstantiation.AfterFirstRender */);\n    }, 50));\n  }\n  _instantiateSome(instantiation) {\n    if (this._finishedInstantiation[instantiation]) {\n      // already done with this instantiation!\n      return;\n    }\n    this._finishedInstantiation[instantiation] = true;\n    const contribs = this._findPendingContributionsByInstantiation(instantiation);\n    for (const contrib of contribs) {\n      this._instantiateById(contrib.id);\n    }\n  }\n  _findPendingContributionsByInstantiation(instantiation) {\n    const result = [];\n    for (const [, desc] of this._pending) {\n      if (desc.instantiation === instantiation) {\n        result.push(desc);\n      }\n    }\n    return result;\n  }\n  _instantiateById(id) {\n    const desc = this._pending.get(id);\n    if (!desc) {\n      return;\n    }\n    this._pending.delete(id);\n    if (!this._instantiationService || !this._editor) {\n      throw new Error(`Cannot instantiate contributions before being initialized!`);\n    }\n    try {\n      const instance = this._instantiationService.createInstance(desc.ctor, this._editor);\n      this._instances.set(desc.id, instance);\n      if (typeof instance.restoreViewState === 'function' && desc.instantiation !== 0 /* EditorContributionInstantiation.Eager */) {\n        console.warn(`Editor contribution '${desc.id}' should be eager instantiated because it uses saveViewState / restoreViewState.`);\n      }\n    } catch (err) {\n      onUnexpectedError(err);\n    }\n  }\n}","map":{"version":3,"names":["getWindow","runWhenWindowIdle","onUnexpectedError","Disposable","DisposableMap","CodeEditorContributions","constructor","_editor","_instantiationService","_instances","_register","_pending","Map","_finishedInstantiation","initialize","editor","contributions","instantiationService","desc","has","id","Error","set","_instantiateSome","getDomNode","saveViewState","contributionsState","contribution","restoreViewState","get","_instantiateById","onBeforeInteractionEvent","onAfterModelAttached","_a","instantiation","contribs","_findPendingContributionsByInstantiation","contrib","result","push","delete","instance","createInstance","ctor","console","warn","err"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/browser/widget/codeEditorContributions.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindow, runWhenWindowIdle } from '../../../base/browser/dom.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Disposable, DisposableMap } from '../../../base/common/lifecycle.js';\nexport class CodeEditorContributions extends Disposable {\n    constructor() {\n        super();\n        this._editor = null;\n        this._instantiationService = null;\n        /**\n         * Contains all instantiated contributions.\n         */\n        this._instances = this._register(new DisposableMap());\n        /**\n         * Contains contributions which are not yet instantiated.\n         */\n        this._pending = new Map();\n        /**\n         * Tracks which instantiation kinds are still left in `_pending`.\n         */\n        this._finishedInstantiation = [];\n        this._finishedInstantiation[0 /* EditorContributionInstantiation.Eager */] = false;\n        this._finishedInstantiation[1 /* EditorContributionInstantiation.AfterFirstRender */] = false;\n        this._finishedInstantiation[2 /* EditorContributionInstantiation.BeforeFirstInteraction */] = false;\n        this._finishedInstantiation[3 /* EditorContributionInstantiation.Eventually */] = false;\n    }\n    initialize(editor, contributions, instantiationService) {\n        this._editor = editor;\n        this._instantiationService = instantiationService;\n        for (const desc of contributions) {\n            if (this._pending.has(desc.id)) {\n                onUnexpectedError(new Error(`Cannot have two contributions with the same id ${desc.id}`));\n                continue;\n            }\n            this._pending.set(desc.id, desc);\n        }\n        this._instantiateSome(0 /* EditorContributionInstantiation.Eager */);\n        // AfterFirstRender\n        // - these extensions will be instantiated at the latest 50ms after the first render.\n        // - but if there is idle time, we will instantiate them sooner.\n        this._register(runWhenWindowIdle(getWindow(this._editor.getDomNode()), () => {\n            this._instantiateSome(1 /* EditorContributionInstantiation.AfterFirstRender */);\n        }));\n        // BeforeFirstInteraction\n        // - these extensions will be instantiated at the latest before a mouse or a keyboard event.\n        // - but if there is idle time, we will instantiate them sooner.\n        this._register(runWhenWindowIdle(getWindow(this._editor.getDomNode()), () => {\n            this._instantiateSome(2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n        }));\n        // Eventually\n        // - these extensions will only be instantiated when there is idle time.\n        // - since there is no guarantee that there will ever be idle time, we set a timeout of 5s here.\n        this._register(runWhenWindowIdle(getWindow(this._editor.getDomNode()), () => {\n            this._instantiateSome(3 /* EditorContributionInstantiation.Eventually */);\n        }, 5000));\n    }\n    saveViewState() {\n        const contributionsState = {};\n        for (const [id, contribution] of this._instances) {\n            if (typeof contribution.saveViewState === 'function') {\n                contributionsState[id] = contribution.saveViewState();\n            }\n        }\n        return contributionsState;\n    }\n    restoreViewState(contributionsState) {\n        for (const [id, contribution] of this._instances) {\n            if (typeof contribution.restoreViewState === 'function') {\n                contribution.restoreViewState(contributionsState[id]);\n            }\n        }\n    }\n    get(id) {\n        this._instantiateById(id);\n        return this._instances.get(id) || null;\n    }\n    onBeforeInteractionEvent() {\n        // this method is called very often by the editor!\n        this._instantiateSome(2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n    }\n    onAfterModelAttached() {\n        var _a;\n        this._register(runWhenWindowIdle(getWindow((_a = this._editor) === null || _a === void 0 ? void 0 : _a.getDomNode()), () => {\n            this._instantiateSome(1 /* EditorContributionInstantiation.AfterFirstRender */);\n        }, 50));\n    }\n    _instantiateSome(instantiation) {\n        if (this._finishedInstantiation[instantiation]) {\n            // already done with this instantiation!\n            return;\n        }\n        this._finishedInstantiation[instantiation] = true;\n        const contribs = this._findPendingContributionsByInstantiation(instantiation);\n        for (const contrib of contribs) {\n            this._instantiateById(contrib.id);\n        }\n    }\n    _findPendingContributionsByInstantiation(instantiation) {\n        const result = [];\n        for (const [, desc] of this._pending) {\n            if (desc.instantiation === instantiation) {\n                result.push(desc);\n            }\n        }\n        return result;\n    }\n    _instantiateById(id) {\n        const desc = this._pending.get(id);\n        if (!desc) {\n            return;\n        }\n        this._pending.delete(id);\n        if (!this._instantiationService || !this._editor) {\n            throw new Error(`Cannot instantiate contributions before being initialized!`);\n        }\n        try {\n            const instance = this._instantiationService.createInstance(desc.ctor, this._editor);\n            this._instances.set(desc.id, instance);\n            if (typeof instance.restoreViewState === 'function' && desc.instantiation !== 0 /* EditorContributionInstantiation.Eager */) {\n                console.warn(`Editor contribution '${desc.id}' should be eager instantiated because it uses saveViewState / restoreViewState.`);\n            }\n        }\n        catch (err) {\n            onUnexpectedError(err);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}