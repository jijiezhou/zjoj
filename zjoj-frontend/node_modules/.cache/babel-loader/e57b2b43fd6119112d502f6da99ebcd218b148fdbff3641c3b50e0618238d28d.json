{"ast":null,"code":"/**\n * Creates a virtual file input element (`<input type=\"file\" />`) with options.\n * @param options\n */\nvar createInputFile = function (ref) {\n  if (ref === void 0) ref = {};\n  var accept = ref.accept;\n  if (accept === void 0) accept = '';\n  var capture = ref.capture;\n  if (capture === void 0) capture = false;\n  var multiple = ref.multiple;\n  if (multiple === void 0) multiple = false;\n  var input = document.createElement('input');\n  input.type = 'file';\n  input.accept = accept;\n  input.capture = capture;\n  input.multiple = multiple;\n  return input;\n};\n/**\n * Virtually creates a file input element (`<input type=\"file\" />`), triggers it\n * and returns selected files.\n *\n * @example\n * selectFiles({ accept: 'image/*', multiple: true }).then(files => {\n *   // ...\n * });\n *\n * @param options\n */\n\nvar selectFiles = function (options) {\n  return new Promise(function (resolve) {\n    var input = createInputFile(options);\n    input.addEventListener('change', function () {\n      return resolve(input.files || null);\n    });\n    setTimeout(function () {\n      var event = new MouseEvent('click');\n      input.dispatchEvent(event);\n    }, 0);\n  });\n};\nexport default selectFiles;","map":{"version":3,"names":[],"sources":[],"sourcesContent":["/**\n * Creates a virtual file input element (`<input type=\"file\" />`) with options.\n * @param options\n */\nvar createInputFile = function (ref) {\n  if ( ref === void 0 ) ref = {};\n  var accept = ref.accept; if ( accept === void 0 ) accept = '';\n  var capture = ref.capture; if ( capture === void 0 ) capture = false;\n  var multiple = ref.multiple; if ( multiple === void 0 ) multiple = false;\n\n  var input = document.createElement('input');\n  input.type = 'file';\n  input.accept = accept;\n  input.capture = capture;\n  input.multiple = multiple;\n  return input;\n};\n/**\n * Virtually creates a file input element (`<input type=\"file\" />`), triggers it\n * and returns selected files.\n *\n * @example\n * selectFiles({ accept: 'image/*', multiple: true }).then(files => {\n *   // ...\n * });\n *\n * @param options\n */\n\n\nvar selectFiles = function (options) { return new Promise(function (resolve) {\n  var input = createInputFile(options);\n  input.addEventListener('change', function () { return resolve(input.files || null); });\n  setTimeout(function () {\n    var event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  }, 0);\n}); };\n\nexport default selectFiles;\n//# sourceMappingURL=index.esm.js.map\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}