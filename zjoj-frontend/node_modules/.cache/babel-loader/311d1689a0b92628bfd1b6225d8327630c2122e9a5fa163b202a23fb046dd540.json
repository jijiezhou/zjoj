{"ast":null,"code":"import { defineComponent, inject, createVNode, TransitionGroup, isVNode } from \"vue\";\nimport { configProviderInjectionKey } from \"../config-provider/context.js\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport Empty from \"../empty/index.js\";\nimport Spin from \"../spin/index.js\";\nimport CascaderColumn from \"./cascader-column.js\";\nfunction _isSlot(s) {\n  return typeof s === \"function\" || Object.prototype.toString.call(s) === \"[object Object]\" && !isVNode(s);\n}\nvar BaseCascaderPanel = defineComponent({\n  name: \"BaseCascaderPanel\",\n  props: {\n    displayColumns: {\n      type: Array,\n      required: true\n    },\n    selectedPath: {\n      type: Array,\n      required: true\n    },\n    activeKey: String,\n    totalLevel: {\n      type: Number,\n      required: true\n    },\n    multiple: Boolean,\n    checkStrictly: Boolean,\n    loading: Boolean,\n    dropdown: Boolean,\n    virtualListProps: {\n      type: Object\n    }\n  },\n  setup(props, {\n    slots\n  }) {\n    const prefixCls = getPrefixCls(\"cascader\");\n    const configCtx = inject(configProviderInjectionKey, void 0);\n    const renderEmpty = () => {\n      var _a, _b, _c, _d, _e;\n      return (_e = (_d = (_a = slots.empty) == null ? void 0 : _a.call(slots)) != null ? _d : (_c = configCtx == null ? void 0 : (_b = configCtx.slots).empty) == null ? void 0 : _c.call(_b, {\n        component: \"cascader\"\n      })) != null ? _e : createVNode(Empty, null, null);\n    };\n    const renderContent = () => {\n      if (props.loading) {\n        return createVNode(\"div\", {\n          \"key\": \"panel-column-loading\",\n          \"class\": [`${prefixCls}-panel-column`, `${prefixCls}-panel-column-loading`]\n        }, [createVNode(Spin, null, null)]);\n      }\n      if (props.displayColumns.length === 0) {\n        return createVNode(\"div\", {\n          \"key\": \"panel-column-empty\",\n          \"class\": `${prefixCls}-panel-column`\n        }, [createVNode(\"div\", {\n          \"class\": `${prefixCls}-list-empty`\n        }, [renderEmpty()])]);\n      }\n      return props.displayColumns.map((column, index) => createVNode(CascaderColumn, {\n        \"key\": `column-${index}`,\n        \"column\": column,\n        \"level\": index,\n        \"selectedPath\": props.selectedPath,\n        \"activeKey\": props.activeKey,\n        \"totalLevel\": props.totalLevel,\n        \"multiple\": props.multiple,\n        \"checkStrictly\": props.checkStrictly,\n        \"virtualListProps\": props.virtualListProps\n      }, null));\n    };\n    return () => {\n      let _slot;\n      return createVNode(TransitionGroup, {\n        \"tag\": \"div\",\n        \"name\": \"cascader-slide\",\n        \"class\": [`${prefixCls}-panel`, {\n          [`${prefixCls}-dropdown-panel`]: props.dropdown\n        }]\n      }, _isSlot(_slot = renderContent()) ? _slot : {\n        default: () => [_slot]\n      });\n    };\n  }\n});\nexport { BaseCascaderPanel as default };","map":{"version":3,"names":["defineComponent","inject","createVNode","TransitionGroup","isVNode","configProviderInjectionKey","getPrefixCls","Empty","Spin","CascaderColumn","_isSlot","s","Object","prototype","toString","call","BaseCascaderPanel","name","props","displayColumns","type","Array","required","selectedPath","activeKey","String","totalLevel","Number","multiple","Boolean","checkStrictly","loading","dropdown","virtualListProps","setup","slots","prefixCls","configCtx","renderEmpty","_a","_b","_c","_d","_e","empty","component","renderContent","length","map","column","index","_slot","default"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/@arco-design/web-vue/es/cascader/base-cascader-panel.js"],"sourcesContent":["import { defineComponent, inject, createVNode, TransitionGroup, isVNode } from \"vue\";\nimport { configProviderInjectionKey } from \"../config-provider/context.js\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport Empty from \"../empty/index.js\";\nimport Spin from \"../spin/index.js\";\nimport CascaderColumn from \"./cascader-column.js\";\nfunction _isSlot(s) {\n  return typeof s === \"function\" || Object.prototype.toString.call(s) === \"[object Object]\" && !isVNode(s);\n}\nvar BaseCascaderPanel = defineComponent({\n  name: \"BaseCascaderPanel\",\n  props: {\n    displayColumns: {\n      type: Array,\n      required: true\n    },\n    selectedPath: {\n      type: Array,\n      required: true\n    },\n    activeKey: String,\n    totalLevel: {\n      type: Number,\n      required: true\n    },\n    multiple: Boolean,\n    checkStrictly: Boolean,\n    loading: Boolean,\n    dropdown: Boolean,\n    virtualListProps: {\n      type: Object\n    }\n  },\n  setup(props, {\n    slots\n  }) {\n    const prefixCls = getPrefixCls(\"cascader\");\n    const configCtx = inject(configProviderInjectionKey, void 0);\n    const renderEmpty = () => {\n      var _a, _b, _c, _d, _e;\n      return (_e = (_d = (_a = slots.empty) == null ? void 0 : _a.call(slots)) != null ? _d : (_c = configCtx == null ? void 0 : (_b = configCtx.slots).empty) == null ? void 0 : _c.call(_b, {\n        component: \"cascader\"\n      })) != null ? _e : createVNode(Empty, null, null);\n    };\n    const renderContent = () => {\n      if (props.loading) {\n        return createVNode(\"div\", {\n          \"key\": \"panel-column-loading\",\n          \"class\": [`${prefixCls}-panel-column`, `${prefixCls}-panel-column-loading`]\n        }, [createVNode(Spin, null, null)]);\n      }\n      if (props.displayColumns.length === 0) {\n        return createVNode(\"div\", {\n          \"key\": \"panel-column-empty\",\n          \"class\": `${prefixCls}-panel-column`\n        }, [createVNode(\"div\", {\n          \"class\": `${prefixCls}-list-empty`\n        }, [renderEmpty()])]);\n      }\n      return props.displayColumns.map((column, index) => createVNode(CascaderColumn, {\n        \"key\": `column-${index}`,\n        \"column\": column,\n        \"level\": index,\n        \"selectedPath\": props.selectedPath,\n        \"activeKey\": props.activeKey,\n        \"totalLevel\": props.totalLevel,\n        \"multiple\": props.multiple,\n        \"checkStrictly\": props.checkStrictly,\n        \"virtualListProps\": props.virtualListProps\n      }, null));\n    };\n    return () => {\n      let _slot;\n      return createVNode(TransitionGroup, {\n        \"tag\": \"div\",\n        \"name\": \"cascader-slide\",\n        \"class\": [`${prefixCls}-panel`, {\n          [`${prefixCls}-dropdown-panel`]: props.dropdown\n        }]\n      }, _isSlot(_slot = renderContent()) ? _slot : {\n        default: () => [_slot]\n      });\n    };\n  }\n});\nexport { BaseCascaderPanel as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}