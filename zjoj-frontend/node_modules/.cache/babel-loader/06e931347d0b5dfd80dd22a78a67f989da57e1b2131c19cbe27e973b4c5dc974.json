{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nimport { isUndefined, isArray, isNull } from \"../_utils/is.js\";\nimport \"../_utils/vue-utils.js\";\nconst getDataColumnsNumber = columns => {\n  let count = 0;\n  const travelColumns = columns2 => {\n    if (isArray(columns2) && columns2.length > 0) {\n      for (const item of columns2) {\n        if (!item.children) {\n          count += 1;\n        } else {\n          travelColumns(item.children);\n        }\n      }\n    }\n  };\n  travelColumns(columns);\n  return count;\n};\nconst getTotalHeaderRows = columns => {\n  let count = 0;\n  if (isArray(columns) && columns.length > 0) {\n    count = 1;\n    for (const item of columns) {\n      if (item.children) {\n        const depth = getTotalHeaderRows(item.children);\n        if (depth > 0) {\n          count = Math.max(count, depth + 1);\n        }\n      }\n    }\n  }\n  return count;\n};\nconst setParentFixed = (column, fixed) => {\n  let {\n    parent\n  } = column;\n  while (parent) {\n    if (parent.fixed === fixed) {\n      if (fixed === \"left\") {\n        parent.isLastLeftFixed = true;\n      } else {\n        parent.isFirstRightFixed = true;\n      }\n    }\n    parent = parent.parent;\n  }\n};\nconst getGroupColumns = (columns, columnMap, columnWidth) => {\n  const totalHeaderRows = getTotalHeaderRows(columns);\n  columnMap.clear();\n  const dataColumns = [];\n  const groupColumns = [...Array(totalHeaderRows)].map(() => []);\n  let lastLeftFixedIndex;\n  let firstRightFixedIndex;\n  const travelColumns = (columns2, {\n    level = 0,\n    parent,\n    fixed\n  } = {}) => {\n    var _a;\n    for (const item of columns2) {\n      const cell = __spreadProps(__spreadValues({}, item), {\n        parent\n      });\n      if (isArray(cell.children)) {\n        const colSpan = getDataColumnsNumber(cell.children);\n        if (colSpan > 1) {\n          cell.colSpan = colSpan;\n        }\n        groupColumns[level].push(cell);\n        travelColumns(cell.children, {\n          level: level + 1,\n          parent: cell,\n          fixed: cell.fixed\n        });\n      } else {\n        const rowSpan = totalHeaderRows - level;\n        if (rowSpan > 1) {\n          cell.rowSpan = rowSpan;\n        }\n        if (fixed || cell.fixed) {\n          cell.fixed = (_a = cell.fixed) != null ? _a : fixed;\n          if (cell.fixed === \"left\") {\n            lastLeftFixedIndex = dataColumns.length;\n          } else if (isUndefined(firstRightFixedIndex)) {\n            firstRightFixedIndex = dataColumns.length;\n          }\n        }\n        if (isUndefined(cell.dataIndex) || isNull(cell.dataIndex)) {\n          cell.dataIndex = `__arco_data_index_${dataColumns.length}`;\n        }\n        if (columnWidth[cell.dataIndex]) {\n          cell._resizeWidth = columnWidth[cell.dataIndex];\n        }\n        columnMap.set(cell.dataIndex, cell);\n        dataColumns.push(cell);\n        groupColumns[level].push(cell);\n      }\n    }\n  };\n  travelColumns(columns);\n  if (!isUndefined(lastLeftFixedIndex)) {\n    dataColumns[lastLeftFixedIndex].isLastLeftFixed = true;\n    setParentFixed(dataColumns[lastLeftFixedIndex], \"left\");\n  }\n  if (!isUndefined(firstRightFixedIndex)) {\n    dataColumns[firstRightFixedIndex].isFirstRightFixed = true;\n    setParentFixed(dataColumns[firstRightFixedIndex], \"right\");\n  }\n  return {\n    dataColumns,\n    groupColumns\n  };\n};\nconst getOperationColumnIndex = (operations, name) => {\n  for (let i = 0; i < operations.length; i++) {\n    if (operations[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\nconst getOperationFixedNumber = (column, operations) => {\n  var _a;\n  const index = getOperationColumnIndex(operations, column.name);\n  if (index <= 0) {\n    return 0;\n  }\n  let count = 0;\n  const _operations = operations.slice(0, index);\n  for (const item of _operations) {\n    count += (_a = item.width) != null ? _a : 0;\n  }\n  return count;\n};\nconst getFirstDataColumn = column => {\n  if (column.children && column.children.length > 0) return getFirstDataColumn(column.children[0]);\n  return column;\n};\nconst getLastDataColumn = column => {\n  if (column.children && column.children.length > 0) return getFirstDataColumn(column.children[column.children.length - 1]);\n  return column;\n};\nconst getFixedNumber = (column, {\n  dataColumns,\n  operations\n}) => {\n  var _a, _b, _c;\n  let count = 0;\n  if (column.fixed === \"left\") {\n    for (const item of operations) {\n      count += (_a = item.width) != null ? _a : 40;\n    }\n    const first = getFirstDataColumn(column);\n    for (const item of dataColumns) {\n      if (first.dataIndex === item.dataIndex) {\n        break;\n      }\n      count += (_c = (_b = item._resizeWidth) != null ? _b : item.width) != null ? _c : 0;\n    }\n    return count;\n  }\n  const last = getLastDataColumn(column);\n  for (let i = dataColumns.length - 1; i > 0; i--) {\n    const item = dataColumns[i];\n    if (last.dataIndex === item.dataIndex) {\n      break;\n    }\n    if (item.fixed === \"right\") {\n      count += item.width;\n    }\n  }\n  return count;\n};\nconst getOperationFixedCls = (prefixCls, column) => {\n  if (column.fixed) {\n    return [`${prefixCls}-col-fixed-left`, {\n      [`${prefixCls}-col-fixed-left-last`]: column.isLastLeftFixed\n    }];\n  }\n  return [];\n};\nconst getFixedCls = (prefixCls, column) => {\n  if (column.fixed === \"left\") {\n    return [`${prefixCls}-col-fixed-left`, {\n      [`${prefixCls}-col-fixed-left-last`]: column.isLastLeftFixed\n    }];\n  }\n  if (column.fixed === \"right\") {\n    return [`${prefixCls}-col-fixed-right`, {\n      [`${prefixCls}-col-fixed-right-first`]: column.isFirstRightFixed\n    }];\n  }\n  return [];\n};\nconst getStyle = (column, {\n  dataColumns,\n  operations\n}) => {\n  if (column.fixed) {\n    const offset = `${getFixedNumber(column, {\n      dataColumns,\n      operations\n    })}px`;\n    if (column.fixed === \"left\") {\n      return {\n        left: offset\n      };\n    }\n    return {\n      right: offset\n    };\n  }\n  return {};\n};\nconst getOperationStyle = (column, operations) => {\n  if (column.fixed) {\n    return {\n      left: `${getOperationFixedNumber(column, operations)}px`\n    };\n  }\n  return {};\n};\nfunction mapArrayWithChildren(arr) {\n  return arr.map(item => {\n    const newItem = __spreadValues({}, item);\n    if (newItem.children) {\n      newItem.children = mapArrayWithChildren(newItem.children);\n    }\n    return newItem;\n  });\n}\nfunction mapRawTableData(arr) {\n  return arr.map(item => {\n    const rawItem = item.raw;\n    if (item.children && rawItem.children) {\n      rawItem.children = mapRawTableData(item.children);\n    }\n    return item.raw;\n  });\n}\nconst getLeafKeys = record => {\n  const keys = [];\n  if (record.children) {\n    for (const item of record.children) {\n      if (item.isLeaf) {\n        keys.push(item.key);\n      } else {\n        keys.push(...getLeafKeys(item));\n      }\n    }\n  }\n  return keys;\n};\nconst getSelectionStatus = (selectedRowKeys, leafKeys) => {\n  let checked = false;\n  let indeterminate = false;\n  const selectedLeafKeys = leafKeys.filter(key => selectedRowKeys.includes(key));\n  if (selectedLeafKeys.length > 0) {\n    if (selectedLeafKeys.length >= leafKeys.length) {\n      checked = true;\n    } else {\n      indeterminate = true;\n    }\n  }\n  return {\n    checked,\n    indeterminate\n  };\n};\nexport { getFixedCls, getFixedNumber, getGroupColumns, getLeafKeys, getOperationFixedCls, getOperationFixedNumber, getOperationStyle, getSelectionStatus, getStyle, mapArrayWithChildren, mapRawTableData };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","isUndefined","isArray","isNull","getDataColumnsNumber","columns","count","travelColumns","columns2","length","item","children","getTotalHeaderRows","depth","Math","max","setParentFixed","column","fixed","parent","isLastLeftFixed","isFirstRightFixed","getGroupColumns","columnMap","columnWidth","totalHeaderRows","clear","dataColumns","groupColumns","Array","map","lastLeftFixedIndex","firstRightFixedIndex","level","_a","cell","colSpan","push","rowSpan","dataIndex","_resizeWidth","set","getOperationColumnIndex","operations","name","i","getOperationFixedNumber","index","_operations","slice","width","getFirstDataColumn","getLastDataColumn","getFixedNumber","_b","_c","first","last","getOperationFixedCls","prefixCls","getFixedCls","getStyle","offset","left","right","getOperationStyle","mapArrayWithChildren","arr","newItem","mapRawTableData","rawItem","raw","getLeafKeys","record","keys","isLeaf","getSelectionStatus","selectedRowKeys","leafKeys","checked","indeterminate","selectedLeafKeys","filter","includes"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/@arco-design/web-vue/es/table/utils.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nimport { isUndefined, isArray, isNull } from \"../_utils/is.js\";\nimport \"../_utils/vue-utils.js\";\nconst getDataColumnsNumber = (columns) => {\n  let count = 0;\n  const travelColumns = (columns2) => {\n    if (isArray(columns2) && columns2.length > 0) {\n      for (const item of columns2) {\n        if (!item.children) {\n          count += 1;\n        } else {\n          travelColumns(item.children);\n        }\n      }\n    }\n  };\n  travelColumns(columns);\n  return count;\n};\nconst getTotalHeaderRows = (columns) => {\n  let count = 0;\n  if (isArray(columns) && columns.length > 0) {\n    count = 1;\n    for (const item of columns) {\n      if (item.children) {\n        const depth = getTotalHeaderRows(item.children);\n        if (depth > 0) {\n          count = Math.max(count, depth + 1);\n        }\n      }\n    }\n  }\n  return count;\n};\nconst setParentFixed = (column, fixed) => {\n  let { parent } = column;\n  while (parent) {\n    if (parent.fixed === fixed) {\n      if (fixed === \"left\") {\n        parent.isLastLeftFixed = true;\n      } else {\n        parent.isFirstRightFixed = true;\n      }\n    }\n    parent = parent.parent;\n  }\n};\nconst getGroupColumns = (columns, columnMap, columnWidth) => {\n  const totalHeaderRows = getTotalHeaderRows(columns);\n  columnMap.clear();\n  const dataColumns = [];\n  const groupColumns = [...Array(totalHeaderRows)].map(() => []);\n  let lastLeftFixedIndex;\n  let firstRightFixedIndex;\n  const travelColumns = (columns2, {\n    level = 0,\n    parent,\n    fixed\n  } = {}) => {\n    var _a;\n    for (const item of columns2) {\n      const cell = __spreadProps(__spreadValues({}, item), { parent });\n      if (isArray(cell.children)) {\n        const colSpan = getDataColumnsNumber(cell.children);\n        if (colSpan > 1) {\n          cell.colSpan = colSpan;\n        }\n        groupColumns[level].push(cell);\n        travelColumns(cell.children, {\n          level: level + 1,\n          parent: cell,\n          fixed: cell.fixed\n        });\n      } else {\n        const rowSpan = totalHeaderRows - level;\n        if (rowSpan > 1) {\n          cell.rowSpan = rowSpan;\n        }\n        if (fixed || cell.fixed) {\n          cell.fixed = (_a = cell.fixed) != null ? _a : fixed;\n          if (cell.fixed === \"left\") {\n            lastLeftFixedIndex = dataColumns.length;\n          } else if (isUndefined(firstRightFixedIndex)) {\n            firstRightFixedIndex = dataColumns.length;\n          }\n        }\n        if (isUndefined(cell.dataIndex) || isNull(cell.dataIndex)) {\n          cell.dataIndex = `__arco_data_index_${dataColumns.length}`;\n        }\n        if (columnWidth[cell.dataIndex]) {\n          cell._resizeWidth = columnWidth[cell.dataIndex];\n        }\n        columnMap.set(cell.dataIndex, cell);\n        dataColumns.push(cell);\n        groupColumns[level].push(cell);\n      }\n    }\n  };\n  travelColumns(columns);\n  if (!isUndefined(lastLeftFixedIndex)) {\n    dataColumns[lastLeftFixedIndex].isLastLeftFixed = true;\n    setParentFixed(dataColumns[lastLeftFixedIndex], \"left\");\n  }\n  if (!isUndefined(firstRightFixedIndex)) {\n    dataColumns[firstRightFixedIndex].isFirstRightFixed = true;\n    setParentFixed(dataColumns[firstRightFixedIndex], \"right\");\n  }\n  return { dataColumns, groupColumns };\n};\nconst getOperationColumnIndex = (operations, name) => {\n  for (let i = 0; i < operations.length; i++) {\n    if (operations[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\nconst getOperationFixedNumber = (column, operations) => {\n  var _a;\n  const index = getOperationColumnIndex(operations, column.name);\n  if (index <= 0) {\n    return 0;\n  }\n  let count = 0;\n  const _operations = operations.slice(0, index);\n  for (const item of _operations) {\n    count += (_a = item.width) != null ? _a : 0;\n  }\n  return count;\n};\nconst getFirstDataColumn = (column) => {\n  if (column.children && column.children.length > 0)\n    return getFirstDataColumn(column.children[0]);\n  return column;\n};\nconst getLastDataColumn = (column) => {\n  if (column.children && column.children.length > 0)\n    return getFirstDataColumn(column.children[column.children.length - 1]);\n  return column;\n};\nconst getFixedNumber = (column, {\n  dataColumns,\n  operations\n}) => {\n  var _a, _b, _c;\n  let count = 0;\n  if (column.fixed === \"left\") {\n    for (const item of operations) {\n      count += (_a = item.width) != null ? _a : 40;\n    }\n    const first = getFirstDataColumn(column);\n    for (const item of dataColumns) {\n      if (first.dataIndex === item.dataIndex) {\n        break;\n      }\n      count += (_c = (_b = item._resizeWidth) != null ? _b : item.width) != null ? _c : 0;\n    }\n    return count;\n  }\n  const last = getLastDataColumn(column);\n  for (let i = dataColumns.length - 1; i > 0; i--) {\n    const item = dataColumns[i];\n    if (last.dataIndex === item.dataIndex) {\n      break;\n    }\n    if (item.fixed === \"right\") {\n      count += item.width;\n    }\n  }\n  return count;\n};\nconst getOperationFixedCls = (prefixCls, column) => {\n  if (column.fixed) {\n    return [\n      `${prefixCls}-col-fixed-left`,\n      {\n        [`${prefixCls}-col-fixed-left-last`]: column.isLastLeftFixed\n      }\n    ];\n  }\n  return [];\n};\nconst getFixedCls = (prefixCls, column) => {\n  if (column.fixed === \"left\") {\n    return [\n      `${prefixCls}-col-fixed-left`,\n      {\n        [`${prefixCls}-col-fixed-left-last`]: column.isLastLeftFixed\n      }\n    ];\n  }\n  if (column.fixed === \"right\") {\n    return [\n      `${prefixCls}-col-fixed-right`,\n      {\n        [`${prefixCls}-col-fixed-right-first`]: column.isFirstRightFixed\n      }\n    ];\n  }\n  return [];\n};\nconst getStyle = (column, {\n  dataColumns,\n  operations\n}) => {\n  if (column.fixed) {\n    const offset = `${getFixedNumber(column, { dataColumns, operations })}px`;\n    if (column.fixed === \"left\") {\n      return {\n        left: offset\n      };\n    }\n    return {\n      right: offset\n    };\n  }\n  return {};\n};\nconst getOperationStyle = (column, operations) => {\n  if (column.fixed) {\n    return {\n      left: `${getOperationFixedNumber(column, operations)}px`\n    };\n  }\n  return {};\n};\nfunction mapArrayWithChildren(arr) {\n  return arr.map((item) => {\n    const newItem = __spreadValues({}, item);\n    if (newItem.children) {\n      newItem.children = mapArrayWithChildren(newItem.children);\n    }\n    return newItem;\n  });\n}\nfunction mapRawTableData(arr) {\n  return arr.map((item) => {\n    const rawItem = item.raw;\n    if (item.children && rawItem.children) {\n      rawItem.children = mapRawTableData(item.children);\n    }\n    return item.raw;\n  });\n}\nconst getLeafKeys = (record) => {\n  const keys = [];\n  if (record.children) {\n    for (const item of record.children) {\n      if (item.isLeaf) {\n        keys.push(item.key);\n      } else {\n        keys.push(...getLeafKeys(item));\n      }\n    }\n  }\n  return keys;\n};\nconst getSelectionStatus = (selectedRowKeys, leafKeys) => {\n  let checked = false;\n  let indeterminate = false;\n  const selectedLeafKeys = leafKeys.filter((key) => selectedRowKeys.includes(key));\n  if (selectedLeafKeys.length > 0) {\n    if (selectedLeafKeys.length >= leafKeys.length) {\n      checked = true;\n    } else {\n      indeterminate = true;\n    }\n  }\n  return {\n    checked,\n    indeterminate\n  };\n};\nexport { getFixedCls, getFixedNumber, getGroupColumns, getLeafKeys, getOperationFixedCls, getOperationFixedNumber, getOperationStyle, getSelectionStatus, getStyle, mapArrayWithChildren, mapRawTableData };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}