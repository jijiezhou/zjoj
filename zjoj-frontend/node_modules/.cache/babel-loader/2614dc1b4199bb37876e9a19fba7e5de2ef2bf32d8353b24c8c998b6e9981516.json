{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n  constructor(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n    super(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n    this.selectionStartLineNumber = selectionStartLineNumber;\n    this.selectionStartColumn = selectionStartColumn;\n    this.positionLineNumber = positionLineNumber;\n    this.positionColumn = positionColumn;\n  }\n  /**\n   * Transform to a human-readable representation.\n   */\n  toString() {\n    return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n  }\n  /**\n   * Test if equals other selection.\n   */\n  equalsSelection(other) {\n    return Selection.selectionsEqual(this, other);\n  }\n  /**\n   * Test if the two selections are equal.\n   */\n  static selectionsEqual(a, b) {\n    return a.selectionStartLineNumber === b.selectionStartLineNumber && a.selectionStartColumn === b.selectionStartColumn && a.positionLineNumber === b.positionLineNumber && a.positionColumn === b.positionColumn;\n  }\n  /**\n   * Get directions (LTR or RTL).\n   */\n  getDirection() {\n    if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n      return 0 /* SelectionDirection.LTR */;\n    }\n    return 1 /* SelectionDirection.RTL */;\n  }\n  /**\n   * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n   */\n  setEndPosition(endLineNumber, endColumn) {\n    if (this.getDirection() === 0 /* SelectionDirection.LTR */) {\n      return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    }\n    return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n  }\n  /**\n   * Get the position at `positionLineNumber` and `positionColumn`.\n   */\n  getPosition() {\n    return new Position(this.positionLineNumber, this.positionColumn);\n  }\n  /**\n   * Get the position at the start of the selection.\n  */\n  getSelectionStart() {\n    return new Position(this.selectionStartLineNumber, this.selectionStartColumn);\n  }\n  /**\n   * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n   */\n  setStartPosition(startLineNumber, startColumn) {\n    if (this.getDirection() === 0 /* SelectionDirection.LTR */) {\n      return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    }\n    return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n  }\n  // ----\n  /**\n   * Create a `Selection` from one or two positions\n   */\n  static fromPositions(start, end = start) {\n    return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n  }\n  /**\n   * Creates a `Selection` from a range, given a direction.\n   */\n  static fromRange(range, direction) {\n    if (direction === 0 /* SelectionDirection.LTR */) {\n      return new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    } else {\n      return new Selection(range.endLineNumber, range.endColumn, range.startLineNumber, range.startColumn);\n    }\n  }\n  /**\n   * Create a `Selection` from an `ISelection`.\n   */\n  static liftSelection(sel) {\n    return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n  }\n  /**\n   * `a` equals `b`.\n   */\n  static selectionsArrEqual(a, b) {\n    if (a && !b || !a && b) {\n      return false;\n    }\n    if (!a && !b) {\n      return true;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0, len = a.length; i < len; i++) {\n      if (!this.selectionsEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Test if `obj` is an `ISelection`.\n   */\n  static isISelection(obj) {\n    return obj && typeof obj.selectionStartLineNumber === 'number' && typeof obj.selectionStartColumn === 'number' && typeof obj.positionLineNumber === 'number' && typeof obj.positionColumn === 'number';\n  }\n  /**\n   * Create with a direction.\n   */\n  static createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n    if (direction === 0 /* SelectionDirection.LTR */) {\n      return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n    }\n    return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n  }\n}","map":{"version":3,"names":["Position","Range","Selection","constructor","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","toString","equalsSelection","other","selectionsEqual","a","b","getDirection","startLineNumber","startColumn","setEndPosition","endLineNumber","endColumn","getPosition","getSelectionStart","setStartPosition","fromPositions","start","end","lineNumber","column","fromRange","range","direction","liftSelection","sel","selectionsArrEqual","length","i","len","isISelection","obj","createWithDirection"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/common/core/selection.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n    constructor(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        super(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n        this.selectionStartLineNumber = selectionStartLineNumber;\n        this.selectionStartColumn = selectionStartColumn;\n        this.positionLineNumber = positionLineNumber;\n        this.positionColumn = positionColumn;\n    }\n    /**\n     * Transform to a human-readable representation.\n     */\n    toString() {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    }\n    /**\n     * Test if equals other selection.\n     */\n    equalsSelection(other) {\n        return (Selection.selectionsEqual(this, other));\n    }\n    /**\n     * Test if the two selections are equal.\n     */\n    static selectionsEqual(a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    }\n    /**\n     * Get directions (LTR or RTL).\n     */\n    getDirection() {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 /* SelectionDirection.LTR */;\n        }\n        return 1 /* SelectionDirection.RTL */;\n    }\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        if (this.getDirection() === 0 /* SelectionDirection.LTR */) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    }\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    getPosition() {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    }\n    /**\n     * Get the position at the start of the selection.\n    */\n    getSelectionStart() {\n        return new Position(this.selectionStartLineNumber, this.selectionStartColumn);\n    }\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        if (this.getDirection() === 0 /* SelectionDirection.LTR */) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    }\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    static fromPositions(start, end = start) {\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    /**\n     * Creates a `Selection` from a range, given a direction.\n     */\n    static fromRange(range, direction) {\n        if (direction === 0 /* SelectionDirection.LTR */) {\n            return new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n        }\n        else {\n            return new Selection(range.endLineNumber, range.endColumn, range.startLineNumber, range.startColumn);\n        }\n    }\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    static liftSelection(sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    }\n    /**\n     * `a` equals `b`.\n     */\n    static selectionsArrEqual(a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    static isISelection(obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    }\n    /**\n     * Create with a direction.\n     */\n    static createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 /* SelectionDirection.LTR */) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}