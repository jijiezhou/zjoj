{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ColorScheme } from './theme.js';\nexport const IThemeService = createDecorator('themeService');\nexport function themeColorFromId(id) {\n  return {\n    id\n  };\n}\nexport function getThemeTypeSelector(type) {\n  switch (type) {\n    case ColorScheme.DARK:\n      return 'vs-dark';\n    case ColorScheme.HIGH_CONTRAST_DARK:\n      return 'hc-black';\n    case ColorScheme.HIGH_CONTRAST_LIGHT:\n      return 'hc-light';\n    default:\n      return 'vs';\n  }\n}\n// static theming participant\nexport const Extensions = {\n  ThemingContribution: 'base.contributions.theming'\n};\nclass ThemingRegistry {\n  constructor() {\n    this.themingParticipants = [];\n    this.themingParticipants = [];\n    this.onThemingParticipantAddedEmitter = new Emitter();\n  }\n  onColorThemeChange(participant) {\n    this.themingParticipants.push(participant);\n    this.onThemingParticipantAddedEmitter.fire(participant);\n    return toDisposable(() => {\n      const idx = this.themingParticipants.indexOf(participant);\n      this.themingParticipants.splice(idx, 1);\n    });\n  }\n  getThemingParticipants() {\n    return this.themingParticipants;\n  }\n}\nconst themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\nexport function registerThemingParticipant(participant) {\n  return themingRegistry.onColorThemeChange(participant);\n}\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n  constructor(themeService) {\n    super();\n    this.themeService = themeService;\n    this.theme = themeService.getColorTheme();\n    // Hook up to theme changes\n    this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n  }\n  onThemeChange(theme) {\n    this.theme = theme;\n    this.updateStyles();\n  }\n  updateStyles() {\n    // Subclasses to override\n  }\n}","map":{"version":3,"names":["Emitter","Disposable","toDisposable","createDecorator","platform","ColorScheme","IThemeService","themeColorFromId","id","getThemeTypeSelector","type","DARK","HIGH_CONTRAST_DARK","HIGH_CONTRAST_LIGHT","Extensions","ThemingContribution","ThemingRegistry","constructor","themingParticipants","onThemingParticipantAddedEmitter","onColorThemeChange","participant","push","fire","idx","indexOf","splice","getThemingParticipants","themingRegistry","Registry","add","registerThemingParticipant","Themable","themeService","theme","getColorTheme","_register","onDidColorThemeChange","onThemeChange","updateStyles"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/platform/theme/common/themeService.js"],"sourcesContent":["import { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ColorScheme } from './theme.js';\nexport const IThemeService = createDecorator('themeService');\nexport function themeColorFromId(id) {\n    return { id };\n}\nexport function getThemeTypeSelector(type) {\n    switch (type) {\n        case ColorScheme.DARK: return 'vs-dark';\n        case ColorScheme.HIGH_CONTRAST_DARK: return 'hc-black';\n        case ColorScheme.HIGH_CONTRAST_LIGHT: return 'hc-light';\n        default: return 'vs';\n    }\n}\n// static theming participant\nexport const Extensions = {\n    ThemingContribution: 'base.contributions.theming'\n};\nclass ThemingRegistry {\n    constructor() {\n        this.themingParticipants = [];\n        this.themingParticipants = [];\n        this.onThemingParticipantAddedEmitter = new Emitter();\n    }\n    onColorThemeChange(participant) {\n        this.themingParticipants.push(participant);\n        this.onThemingParticipantAddedEmitter.fire(participant);\n        return toDisposable(() => {\n            const idx = this.themingParticipants.indexOf(participant);\n            this.themingParticipants.splice(idx, 1);\n        });\n    }\n    getThemingParticipants() {\n        return this.themingParticipants;\n    }\n}\nconst themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\nexport function registerThemingParticipant(participant) {\n    return themingRegistry.onColorThemeChange(participant);\n}\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n    constructor(themeService) {\n        super();\n        this.themeService = themeService;\n        this.theme = themeService.getColorTheme();\n        // Hook up to theme changes\n        this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n    }\n    onThemeChange(theme) {\n        this.theme = theme;\n        this.updateStyles();\n    }\n    updateStyles() {\n        // Subclasses to override\n    }\n}\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,+BAA+B;AACvD,SAASC,UAAU,EAAEC,YAAY,QAAQ,mCAAmC;AAC5E,SAASC,eAAe,QAAQ,6CAA6C;AAC7E,OAAO,KAAKC,QAAQ,MAAM,mCAAmC;AAC7D,SAASC,WAAW,QAAQ,YAAY;AACxC,OAAO,MAAMC,aAAa,GAAGH,eAAe,CAAC,cAAc,CAAC;AAC5D,OAAO,SAASI,gBAAgBA,CAACC,EAAE,EAAE;EACjC,OAAO;IAAEA;EAAG,CAAC;AACjB;AACA,OAAO,SAASC,oBAAoBA,CAACC,IAAI,EAAE;EACvC,QAAQA,IAAI;IACR,KAAKL,WAAW,CAACM,IAAI;MAAE,OAAO,SAAS;IACvC,KAAKN,WAAW,CAACO,kBAAkB;MAAE,OAAO,UAAU;IACtD,KAAKP,WAAW,CAACQ,mBAAmB;MAAE,OAAO,UAAU;IACvD;MAAS,OAAO,IAAI;EACxB;AACJ;AACA;AACA,OAAO,MAAMC,UAAU,GAAG;EACtBC,mBAAmB,EAAE;AACzB,CAAC;AACD,MAAMC,eAAe,CAAC;EAClBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,mBAAmB,GAAG,EAAE;IAC7B,IAAI,CAACA,mBAAmB,GAAG,EAAE;IAC7B,IAAI,CAACC,gCAAgC,GAAG,IAAInB,OAAO,CAAC,CAAC;EACzD;EACAoB,kBAAkBA,CAACC,WAAW,EAAE;IAC5B,IAAI,CAACH,mBAAmB,CAACI,IAAI,CAACD,WAAW,CAAC;IAC1C,IAAI,CAACF,gCAAgC,CAACI,IAAI,CAACF,WAAW,CAAC;IACvD,OAAOnB,YAAY,CAAC,MAAM;MACtB,MAAMsB,GAAG,GAAG,IAAI,CAACN,mBAAmB,CAACO,OAAO,CAACJ,WAAW,CAAC;MACzD,IAAI,CAACH,mBAAmB,CAACQ,MAAM,CAACF,GAAG,EAAE,CAAC,CAAC;IAC3C,CAAC,CAAC;EACN;EACAG,sBAAsBA,CAAA,EAAG;IACrB,OAAO,IAAI,CAACT,mBAAmB;EACnC;AACJ;AACA,MAAMU,eAAe,GAAG,IAAIZ,eAAe,CAAC,CAAC;AAC7CZ,QAAQ,CAACyB,QAAQ,CAACC,GAAG,CAAChB,UAAU,CAACC,mBAAmB,EAAEa,eAAe,CAAC;AACtE,OAAO,SAASG,0BAA0BA,CAACV,WAAW,EAAE;EACpD,OAAOO,eAAe,CAACR,kBAAkB,CAACC,WAAW,CAAC;AAC1D;AACA;AACA;AACA;AACA,OAAO,MAAMW,QAAQ,SAAS/B,UAAU,CAAC;EACrCgB,WAAWA,CAACgB,YAAY,EAAE;IACtB,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,KAAK,GAAGD,YAAY,CAACE,aAAa,CAAC,CAAC;IACzC;IACA,IAAI,CAACC,SAAS,CAAC,IAAI,CAACH,YAAY,CAACI,qBAAqB,CAACH,KAAK,IAAI,IAAI,CAACI,aAAa,CAACJ,KAAK,CAAC,CAAC,CAAC;EAC/F;EACAI,aAAaA,CAACJ,KAAK,EAAE;IACjB,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACK,YAAY,CAAC,CAAC;EACvB;EACAA,YAAYA,CAAA,EAAG;IACX;EAAA;AAER"},"metadata":{},"sourceType":"module","externalDependencies":[]}