{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nconst {\n  DOCUMENT_MODE\n} = require('../common/html');\n\n//Node construction\nexports.createDocument = function () {\n  return {\n    nodeName: '#document',\n    mode: DOCUMENT_MODE.NO_QUIRKS,\n    childNodes: []\n  };\n};\nexports.createDocumentFragment = function () {\n  return {\n    nodeName: '#document-fragment',\n    childNodes: []\n  };\n};\nexports.createElement = function (tagName, namespaceURI, attrs) {\n  return {\n    nodeName: tagName,\n    tagName: tagName,\n    attrs: attrs,\n    namespaceURI: namespaceURI,\n    childNodes: [],\n    parentNode: null\n  };\n};\nexports.createCommentNode = function (data) {\n  return {\n    nodeName: '#comment',\n    data: data,\n    parentNode: null\n  };\n};\nconst createTextNode = function (value) {\n  return {\n    nodeName: '#text',\n    value: value,\n    parentNode: null\n  };\n};\n\n//Tree mutation\nconst appendChild = exports.appendChild = function (parentNode, newNode) {\n  parentNode.childNodes.push(newNode);\n  newNode.parentNode = parentNode;\n};\nconst insertBefore = exports.insertBefore = function (parentNode, newNode, referenceNode) {\n  const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n  parentNode.childNodes.splice(insertionIdx, 0, newNode);\n  newNode.parentNode = parentNode;\n};\nexports.setTemplateContent = function (templateElement, contentElement) {\n  templateElement.content = contentElement;\n};\nexports.getTemplateContent = function (templateElement) {\n  return templateElement.content;\n};\nexports.setDocumentType = function (document, name, publicId, systemId) {\n  let doctypeNode = null;\n  for (let i = 0; i < document.childNodes.length; i++) {\n    if (document.childNodes[i].nodeName === '#documentType') {\n      doctypeNode = document.childNodes[i];\n      break;\n    }\n  }\n  if (doctypeNode) {\n    doctypeNode.name = name;\n    doctypeNode.publicId = publicId;\n    doctypeNode.systemId = systemId;\n  } else {\n    appendChild(document, {\n      nodeName: '#documentType',\n      name: name,\n      publicId: publicId,\n      systemId: systemId\n    });\n  }\n};\nexports.setDocumentMode = function (document, mode) {\n  document.mode = mode;\n};\nexports.getDocumentMode = function (document) {\n  return document.mode;\n};\nexports.detachNode = function (node) {\n  if (node.parentNode) {\n    const idx = node.parentNode.childNodes.indexOf(node);\n    node.parentNode.childNodes.splice(idx, 1);\n    node.parentNode = null;\n  }\n};\nexports.insertText = function (parentNode, text) {\n  if (parentNode.childNodes.length) {\n    const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n    if (prevNode.nodeName === '#text') {\n      prevNode.value += text;\n      return;\n    }\n  }\n  appendChild(parentNode, createTextNode(text));\n};\nexports.insertTextBefore = function (parentNode, text, referenceNode) {\n  const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n  if (prevNode && prevNode.nodeName === '#text') {\n    prevNode.value += text;\n  } else {\n    insertBefore(parentNode, createTextNode(text), referenceNode);\n  }\n};\nexports.adoptAttributes = function (recipient, attrs) {\n  const recipientAttrsMap = [];\n  for (let i = 0; i < recipient.attrs.length; i++) {\n    recipientAttrsMap.push(recipient.attrs[i].name);\n  }\n  for (let j = 0; j < attrs.length; j++) {\n    if (recipientAttrsMap.indexOf(attrs[j].name) === -1) {\n      recipient.attrs.push(attrs[j]);\n    }\n  }\n};\n\n//Tree traversing\nexports.getFirstChild = function (node) {\n  return node.childNodes[0];\n};\nexports.getChildNodes = function (node) {\n  return node.childNodes;\n};\nexports.getParentNode = function (node) {\n  return node.parentNode;\n};\nexports.getAttrList = function (element) {\n  return element.attrs;\n};\n\n//Node data\nexports.getTagName = function (element) {\n  return element.tagName;\n};\nexports.getNamespaceURI = function (element) {\n  return element.namespaceURI;\n};\nexports.getTextNodeContent = function (textNode) {\n  return textNode.value;\n};\nexports.getCommentNodeContent = function (commentNode) {\n  return commentNode.data;\n};\nexports.getDocumentTypeNodeName = function (doctypeNode) {\n  return doctypeNode.name;\n};\nexports.getDocumentTypeNodePublicId = function (doctypeNode) {\n  return doctypeNode.publicId;\n};\nexports.getDocumentTypeNodeSystemId = function (doctypeNode) {\n  return doctypeNode.systemId;\n};\n\n//Node types\nexports.isTextNode = function (node) {\n  return node.nodeName === '#text';\n};\nexports.isCommentNode = function (node) {\n  return node.nodeName === '#comment';\n};\nexports.isDocumentTypeNode = function (node) {\n  return node.nodeName === '#documentType';\n};\nexports.isElementNode = function (node) {\n  return !!node.tagName;\n};\n\n// Source code location\nexports.setNodeSourceCodeLocation = function (node, location) {\n  node.sourceCodeLocation = location;\n};\nexports.getNodeSourceCodeLocation = function (node) {\n  return node.sourceCodeLocation;\n};\nexports.updateNodeSourceCodeLocation = function (node, endLocation) {\n  node.sourceCodeLocation = Object.assign(node.sourceCodeLocation, endLocation);\n};","map":{"version":3,"names":["require","DOCUMENT_MODE","exports","createDocument","nodeName","mode","NO_QUIRKS","childNodes","createDocumentFragment","createElement","tagName","namespaceURI","attrs","parentNode","createCommentNode","data","createTextNode","value","appendChild","newNode","push","insertBefore","referenceNode","insertionIdx","indexOf","splice","setTemplateContent","templateElement","contentElement","content","getTemplateContent","setDocumentType","document","name","publicId","systemId","doctypeNode","i","length","setDocumentMode","getDocumentMode","detachNode","node","idx","insertText","text","prevNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","j","getFirstChild","getChildNodes","getParentNode","getAttrList","element","getTagName","getNamespaceURI","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isTextNode","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","location","sourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","Object","assign"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/hast-util-raw/node_modules/parse5/lib/tree-adapters/default.js"],"sourcesContent":["'use strict';\n\nconst { DOCUMENT_MODE } = require('../common/html');\n\n//Node construction\nexports.createDocument = function() {\n    return {\n        nodeName: '#document',\n        mode: DOCUMENT_MODE.NO_QUIRKS,\n        childNodes: []\n    };\n};\n\nexports.createDocumentFragment = function() {\n    return {\n        nodeName: '#document-fragment',\n        childNodes: []\n    };\n};\n\nexports.createElement = function(tagName, namespaceURI, attrs) {\n    return {\n        nodeName: tagName,\n        tagName: tagName,\n        attrs: attrs,\n        namespaceURI: namespaceURI,\n        childNodes: [],\n        parentNode: null\n    };\n};\n\nexports.createCommentNode = function(data) {\n    return {\n        nodeName: '#comment',\n        data: data,\n        parentNode: null\n    };\n};\n\nconst createTextNode = function(value) {\n    return {\n        nodeName: '#text',\n        value: value,\n        parentNode: null\n    };\n};\n\n//Tree mutation\nconst appendChild = (exports.appendChild = function(parentNode, newNode) {\n    parentNode.childNodes.push(newNode);\n    newNode.parentNode = parentNode;\n});\n\nconst insertBefore = (exports.insertBefore = function(parentNode, newNode, referenceNode) {\n    const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n\n    parentNode.childNodes.splice(insertionIdx, 0, newNode);\n    newNode.parentNode = parentNode;\n});\n\nexports.setTemplateContent = function(templateElement, contentElement) {\n    templateElement.content = contentElement;\n};\n\nexports.getTemplateContent = function(templateElement) {\n    return templateElement.content;\n};\n\nexports.setDocumentType = function(document, name, publicId, systemId) {\n    let doctypeNode = null;\n\n    for (let i = 0; i < document.childNodes.length; i++) {\n        if (document.childNodes[i].nodeName === '#documentType') {\n            doctypeNode = document.childNodes[i];\n            break;\n        }\n    }\n\n    if (doctypeNode) {\n        doctypeNode.name = name;\n        doctypeNode.publicId = publicId;\n        doctypeNode.systemId = systemId;\n    } else {\n        appendChild(document, {\n            nodeName: '#documentType',\n            name: name,\n            publicId: publicId,\n            systemId: systemId\n        });\n    }\n};\n\nexports.setDocumentMode = function(document, mode) {\n    document.mode = mode;\n};\n\nexports.getDocumentMode = function(document) {\n    return document.mode;\n};\n\nexports.detachNode = function(node) {\n    if (node.parentNode) {\n        const idx = node.parentNode.childNodes.indexOf(node);\n\n        node.parentNode.childNodes.splice(idx, 1);\n        node.parentNode = null;\n    }\n};\n\nexports.insertText = function(parentNode, text) {\n    if (parentNode.childNodes.length) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n\n        if (prevNode.nodeName === '#text') {\n            prevNode.value += text;\n            return;\n        }\n    }\n\n    appendChild(parentNode, createTextNode(text));\n};\n\nexports.insertTextBefore = function(parentNode, text, referenceNode) {\n    const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n\n    if (prevNode && prevNode.nodeName === '#text') {\n        prevNode.value += text;\n    } else {\n        insertBefore(parentNode, createTextNode(text), referenceNode);\n    }\n};\n\nexports.adoptAttributes = function(recipient, attrs) {\n    const recipientAttrsMap = [];\n\n    for (let i = 0; i < recipient.attrs.length; i++) {\n        recipientAttrsMap.push(recipient.attrs[i].name);\n    }\n\n    for (let j = 0; j < attrs.length; j++) {\n        if (recipientAttrsMap.indexOf(attrs[j].name) === -1) {\n            recipient.attrs.push(attrs[j]);\n        }\n    }\n};\n\n//Tree traversing\nexports.getFirstChild = function(node) {\n    return node.childNodes[0];\n};\n\nexports.getChildNodes = function(node) {\n    return node.childNodes;\n};\n\nexports.getParentNode = function(node) {\n    return node.parentNode;\n};\n\nexports.getAttrList = function(element) {\n    return element.attrs;\n};\n\n//Node data\nexports.getTagName = function(element) {\n    return element.tagName;\n};\n\nexports.getNamespaceURI = function(element) {\n    return element.namespaceURI;\n};\n\nexports.getTextNodeContent = function(textNode) {\n    return textNode.value;\n};\n\nexports.getCommentNodeContent = function(commentNode) {\n    return commentNode.data;\n};\n\nexports.getDocumentTypeNodeName = function(doctypeNode) {\n    return doctypeNode.name;\n};\n\nexports.getDocumentTypeNodePublicId = function(doctypeNode) {\n    return doctypeNode.publicId;\n};\n\nexports.getDocumentTypeNodeSystemId = function(doctypeNode) {\n    return doctypeNode.systemId;\n};\n\n//Node types\nexports.isTextNode = function(node) {\n    return node.nodeName === '#text';\n};\n\nexports.isCommentNode = function(node) {\n    return node.nodeName === '#comment';\n};\n\nexports.isDocumentTypeNode = function(node) {\n    return node.nodeName === '#documentType';\n};\n\nexports.isElementNode = function(node) {\n    return !!node.tagName;\n};\n\n// Source code location\nexports.setNodeSourceCodeLocation = function(node, location) {\n    node.sourceCodeLocation = location;\n};\n\nexports.getNodeSourceCodeLocation = function(node) {\n    return node.sourceCodeLocation;\n};\n\nexports.updateNodeSourceCodeLocation = function(node, endLocation) {\n    node.sourceCodeLocation = Object.assign(node.sourceCodeLocation, endLocation);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}