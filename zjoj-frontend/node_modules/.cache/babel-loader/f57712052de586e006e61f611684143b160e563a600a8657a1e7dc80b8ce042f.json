{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Codicon, getCodiconFontCharacters } from '../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { isString } from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\n//  ------ API types\n// icon registry\nexport const Extensions = {\n  IconContribution: 'base.contributions.icons'\n};\nexport var IconContribution;\n(function (IconContribution) {\n  function getDefinition(contribution, registry) {\n    let definition = contribution.defaults;\n    while (ThemeIcon.isThemeIcon(definition)) {\n      const c = iconRegistry.getIcon(definition.id);\n      if (!c) {\n        return undefined;\n      }\n      definition = c.defaults;\n    }\n    return definition;\n  }\n  IconContribution.getDefinition = getDefinition;\n})(IconContribution || (IconContribution = {}));\nexport var IconFontDefinition;\n(function (IconFontDefinition) {\n  function toJSONObject(iconFont) {\n    return {\n      weight: iconFont.weight,\n      style: iconFont.style,\n      src: iconFont.src.map(s => ({\n        format: s.format,\n        location: s.location.toString()\n      }))\n    };\n  }\n  IconFontDefinition.toJSONObject = toJSONObject;\n  function fromJSONObject(json) {\n    const stringOrUndef = s => isString(s) ? s : undefined;\n    if (json && Array.isArray(json.src) && json.src.every(s => isString(s.format) && isString(s.location))) {\n      return {\n        weight: stringOrUndef(json.weight),\n        style: stringOrUndef(json.style),\n        src: json.src.map(s => ({\n          format: s.format,\n          location: URI.parse(s.location)\n        }))\n      };\n    }\n    return undefined;\n  }\n  IconFontDefinition.fromJSONObject = fromJSONObject;\n})(IconFontDefinition || (IconFontDefinition = {}));\nclass IconRegistry {\n  constructor() {\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n    this.iconSchema = {\n      definitions: {\n        icons: {\n          type: 'object',\n          properties: {\n            fontId: {\n              type: 'string',\n              description: localize('iconDefinition.fontId', 'The id of the font to use. If not set, the font that is defined first is used.')\n            },\n            fontCharacter: {\n              type: 'string',\n              description: localize('iconDefinition.fontCharacter', 'The font character associated with the icon definition.')\n            }\n          },\n          additionalProperties: false,\n          defaultSnippets: [{\n            body: {\n              fontCharacter: '\\\\\\\\e030'\n            }\n          }]\n        }\n      },\n      type: 'object',\n      properties: {}\n    };\n    this.iconReferenceSchema = {\n      type: 'string',\n      pattern: `^${ThemeIcon.iconNameExpression}$`,\n      enum: [],\n      enumDescriptions: []\n    };\n    this.iconsById = {};\n    this.iconFontsById = {};\n  }\n  registerIcon(id, defaults, description, deprecationMessage) {\n    const existing = this.iconsById[id];\n    if (existing) {\n      if (description && !existing.description) {\n        existing.description = description;\n        this.iconSchema.properties[id].markdownDescription = `${description} $(${id})`;\n        const enumIndex = this.iconReferenceSchema.enum.indexOf(id);\n        if (enumIndex !== -1) {\n          this.iconReferenceSchema.enumDescriptions[enumIndex] = description;\n        }\n        this._onDidChange.fire();\n      }\n      return existing;\n    }\n    const iconContribution = {\n      id,\n      description,\n      defaults,\n      deprecationMessage\n    };\n    this.iconsById[id] = iconContribution;\n    const propertySchema = {\n      $ref: '#/definitions/icons'\n    };\n    if (deprecationMessage) {\n      propertySchema.deprecationMessage = deprecationMessage;\n    }\n    if (description) {\n      propertySchema.markdownDescription = `${description}: $(${id})`;\n    }\n    this.iconSchema.properties[id] = propertySchema;\n    this.iconReferenceSchema.enum.push(id);\n    this.iconReferenceSchema.enumDescriptions.push(description || '');\n    this._onDidChange.fire();\n    return {\n      id\n    };\n  }\n  getIcons() {\n    return Object.keys(this.iconsById).map(id => this.iconsById[id]);\n  }\n  getIcon(id) {\n    return this.iconsById[id];\n  }\n  getIconSchema() {\n    return this.iconSchema;\n  }\n  toString() {\n    const sorter = (i1, i2) => {\n      return i1.id.localeCompare(i2.id);\n    };\n    const classNames = i => {\n      while (ThemeIcon.isThemeIcon(i.defaults)) {\n        i = this.iconsById[i.defaults.id];\n      }\n      return `codicon codicon-${i ? i.id : ''}`;\n    };\n    const reference = [];\n    reference.push(`| preview     | identifier                        | default codicon ID                | description`);\n    reference.push(`| ----------- | --------------------------------- | --------------------------------- | --------------------------------- |`);\n    const contributions = Object.keys(this.iconsById).map(key => this.iconsById[key]);\n    for (const i of contributions.filter(i => !!i.description).sort(sorter)) {\n      reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|${ThemeIcon.isThemeIcon(i.defaults) ? i.defaults.id : i.id}|${i.description || ''}|`);\n    }\n    reference.push(`| preview     | identifier                        `);\n    reference.push(`| ----------- | --------------------------------- |`);\n    for (const i of contributions.filter(i => !ThemeIcon.isThemeIcon(i.defaults)).sort(sorter)) {\n      reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|`);\n    }\n    return reference.join('\\n');\n  }\n}\nconst iconRegistry = new IconRegistry();\nplatform.Registry.add(Extensions.IconContribution, iconRegistry);\nexport function registerIcon(id, defaults, description, deprecationMessage) {\n  return iconRegistry.registerIcon(id, defaults, description, deprecationMessage);\n}\nexport function getIconRegistry() {\n  return iconRegistry;\n}\nfunction initialize() {\n  const codiconFontCharacters = getCodiconFontCharacters();\n  for (const icon in codiconFontCharacters) {\n    const fontCharacter = '\\\\' + codiconFontCharacters[icon].toString(16);\n    iconRegistry.registerIcon(icon, {\n      fontCharacter\n    });\n  }\n}\ninitialize();\nexport const iconsSchemaId = 'vscode://schemas/icons';\nconst schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(iconsSchemaId, iconRegistry.getIconSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(iconsSchemaId), 200);\niconRegistry.onDidChange(() => {\n  if (!delayer.isScheduled()) {\n    delayer.schedule();\n  }\n});\n//setTimeout(_ => console.log(iconRegistry.toString()), 5000);\n// common icons\nexport const widgetClose = registerIcon('widget-close', Codicon.close, localize('widgetClose', 'Icon for the close action in widgets.'));\nexport const gotoPreviousLocation = registerIcon('goto-previous-location', Codicon.arrowUp, localize('previousChangeIcon', 'Icon for goto previous editor location.'));\nexport const gotoNextLocation = registerIcon('goto-next-location', Codicon.arrowDown, localize('nextChangeIcon', 'Icon for goto next editor location.'));\nexport const syncing = ThemeIcon.modify(Codicon.sync, 'spin');\nexport const spinningLoading = ThemeIcon.modify(Codicon.loading, 'spin');","map":{"version":3,"names":["RunOnceScheduler","Codicon","getCodiconFontCharacters","ThemeIcon","Emitter","isString","URI","localize","Extensions","JSONExtensions","platform","IconContribution","getDefinition","contribution","registry","definition","defaults","isThemeIcon","c","iconRegistry","getIcon","id","undefined","IconFontDefinition","toJSONObject","iconFont","weight","style","src","map","s","format","location","toString","fromJSONObject","json","stringOrUndef","Array","isArray","every","parse","IconRegistry","constructor","_onDidChange","onDidChange","event","iconSchema","definitions","icons","type","properties","fontId","description","fontCharacter","additionalProperties","defaultSnippets","body","iconReferenceSchema","pattern","iconNameExpression","enum","enumDescriptions","iconsById","iconFontsById","registerIcon","deprecationMessage","existing","markdownDescription","enumIndex","indexOf","fire","iconContribution","propertySchema","$ref","push","getIcons","Object","keys","getIconSchema","sorter","i1","i2","localeCompare","classNames","i","reference","contributions","key","filter","sort","join","Registry","add","getIconRegistry","initialize","codiconFontCharacters","icon","iconsSchemaId","schemaRegistry","as","JSONContribution","registerSchema","delayer","notifySchemaChanged","isScheduled","schedule","widgetClose","close","gotoPreviousLocation","arrowUp","gotoNextLocation","arrowDown","syncing","modify","sync","spinningLoading","loading"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/platform/theme/common/iconRegistry.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Codicon, getCodiconFontCharacters } from '../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { isString } from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\n//  ------ API types\n// icon registry\nexport const Extensions = {\n    IconContribution: 'base.contributions.icons'\n};\nexport var IconContribution;\n(function (IconContribution) {\n    function getDefinition(contribution, registry) {\n        let definition = contribution.defaults;\n        while (ThemeIcon.isThemeIcon(definition)) {\n            const c = iconRegistry.getIcon(definition.id);\n            if (!c) {\n                return undefined;\n            }\n            definition = c.defaults;\n        }\n        return definition;\n    }\n    IconContribution.getDefinition = getDefinition;\n})(IconContribution || (IconContribution = {}));\nexport var IconFontDefinition;\n(function (IconFontDefinition) {\n    function toJSONObject(iconFont) {\n        return {\n            weight: iconFont.weight,\n            style: iconFont.style,\n            src: iconFont.src.map(s => ({ format: s.format, location: s.location.toString() }))\n        };\n    }\n    IconFontDefinition.toJSONObject = toJSONObject;\n    function fromJSONObject(json) {\n        const stringOrUndef = (s) => isString(s) ? s : undefined;\n        if (json && Array.isArray(json.src) && json.src.every((s) => isString(s.format) && isString(s.location))) {\n            return {\n                weight: stringOrUndef(json.weight),\n                style: stringOrUndef(json.style),\n                src: json.src.map((s) => ({ format: s.format, location: URI.parse(s.location) }))\n            };\n        }\n        return undefined;\n    }\n    IconFontDefinition.fromJSONObject = fromJSONObject;\n})(IconFontDefinition || (IconFontDefinition = {}));\nclass IconRegistry {\n    constructor() {\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.iconSchema = {\n            definitions: {\n                icons: {\n                    type: 'object',\n                    properties: {\n                        fontId: { type: 'string', description: localize('iconDefinition.fontId', 'The id of the font to use. If not set, the font that is defined first is used.') },\n                        fontCharacter: { type: 'string', description: localize('iconDefinition.fontCharacter', 'The font character associated with the icon definition.') }\n                    },\n                    additionalProperties: false,\n                    defaultSnippets: [{ body: { fontCharacter: '\\\\\\\\e030' } }]\n                }\n            },\n            type: 'object',\n            properties: {}\n        };\n        this.iconReferenceSchema = { type: 'string', pattern: `^${ThemeIcon.iconNameExpression}$`, enum: [], enumDescriptions: [] };\n        this.iconsById = {};\n        this.iconFontsById = {};\n    }\n    registerIcon(id, defaults, description, deprecationMessage) {\n        const existing = this.iconsById[id];\n        if (existing) {\n            if (description && !existing.description) {\n                existing.description = description;\n                this.iconSchema.properties[id].markdownDescription = `${description} $(${id})`;\n                const enumIndex = this.iconReferenceSchema.enum.indexOf(id);\n                if (enumIndex !== -1) {\n                    this.iconReferenceSchema.enumDescriptions[enumIndex] = description;\n                }\n                this._onDidChange.fire();\n            }\n            return existing;\n        }\n        const iconContribution = { id, description, defaults, deprecationMessage };\n        this.iconsById[id] = iconContribution;\n        const propertySchema = { $ref: '#/definitions/icons' };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        if (description) {\n            propertySchema.markdownDescription = `${description}: $(${id})`;\n        }\n        this.iconSchema.properties[id] = propertySchema;\n        this.iconReferenceSchema.enum.push(id);\n        this.iconReferenceSchema.enumDescriptions.push(description || '');\n        this._onDidChange.fire();\n        return { id };\n    }\n    getIcons() {\n        return Object.keys(this.iconsById).map(id => this.iconsById[id]);\n    }\n    getIcon(id) {\n        return this.iconsById[id];\n    }\n    getIconSchema() {\n        return this.iconSchema;\n    }\n    toString() {\n        const sorter = (i1, i2) => {\n            return i1.id.localeCompare(i2.id);\n        };\n        const classNames = (i) => {\n            while (ThemeIcon.isThemeIcon(i.defaults)) {\n                i = this.iconsById[i.defaults.id];\n            }\n            return `codicon codicon-${i ? i.id : ''}`;\n        };\n        const reference = [];\n        reference.push(`| preview     | identifier                        | default codicon ID                | description`);\n        reference.push(`| ----------- | --------------------------------- | --------------------------------- | --------------------------------- |`);\n        const contributions = Object.keys(this.iconsById).map(key => this.iconsById[key]);\n        for (const i of contributions.filter(i => !!i.description).sort(sorter)) {\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|${ThemeIcon.isThemeIcon(i.defaults) ? i.defaults.id : i.id}|${i.description || ''}|`);\n        }\n        reference.push(`| preview     | identifier                        `);\n        reference.push(`| ----------- | --------------------------------- |`);\n        for (const i of contributions.filter(i => !ThemeIcon.isThemeIcon(i.defaults)).sort(sorter)) {\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|`);\n        }\n        return reference.join('\\n');\n    }\n}\nconst iconRegistry = new IconRegistry();\nplatform.Registry.add(Extensions.IconContribution, iconRegistry);\nexport function registerIcon(id, defaults, description, deprecationMessage) {\n    return iconRegistry.registerIcon(id, defaults, description, deprecationMessage);\n}\nexport function getIconRegistry() {\n    return iconRegistry;\n}\nfunction initialize() {\n    const codiconFontCharacters = getCodiconFontCharacters();\n    for (const icon in codiconFontCharacters) {\n        const fontCharacter = '\\\\' + codiconFontCharacters[icon].toString(16);\n        iconRegistry.registerIcon(icon, { fontCharacter });\n    }\n}\ninitialize();\nexport const iconsSchemaId = 'vscode://schemas/icons';\nconst schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(iconsSchemaId, iconRegistry.getIconSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(iconsSchemaId), 200);\niconRegistry.onDidChange(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n//setTimeout(_ => console.log(iconRegistry.toString()), 5000);\n// common icons\nexport const widgetClose = registerIcon('widget-close', Codicon.close, localize('widgetClose', 'Icon for the close action in widgets.'));\nexport const gotoPreviousLocation = registerIcon('goto-previous-location', Codicon.arrowUp, localize('previousChangeIcon', 'Icon for goto previous editor location.'));\nexport const gotoNextLocation = registerIcon('goto-next-location', Codicon.arrowDown, localize('nextChangeIcon', 'Icon for goto next editor location.'));\nexport const syncing = ThemeIcon.modify(Codicon.sync, 'spin');\nexport const spinningLoading = ThemeIcon.modify(Codicon.loading, 'spin');\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}