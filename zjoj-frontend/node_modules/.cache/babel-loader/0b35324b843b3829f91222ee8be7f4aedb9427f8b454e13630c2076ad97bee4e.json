{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../base/common/event.js';\nimport { Disposable } from '../../base/common/lifecycle.js';\nexport class ViewModelEventDispatcher extends Disposable {\n  constructor() {\n    super();\n    this._onEvent = this._register(new Emitter());\n    this.onEvent = this._onEvent.event;\n    this._eventHandlers = [];\n    this._viewEventQueue = null;\n    this._isConsumingViewEventQueue = false;\n    this._collector = null;\n    this._collectorCnt = 0;\n    this._outgoingEvents = [];\n  }\n  emitOutgoingEvent(e) {\n    this._addOutgoingEvent(e);\n    this._emitOutgoingEvents();\n  }\n  _addOutgoingEvent(e) {\n    for (let i = 0, len = this._outgoingEvents.length; i < len; i++) {\n      const mergeResult = this._outgoingEvents[i].kind === e.kind ? this._outgoingEvents[i].attemptToMerge(e) : null;\n      if (mergeResult) {\n        this._outgoingEvents[i] = mergeResult;\n        return;\n      }\n    }\n    // not merged\n    this._outgoingEvents.push(e);\n  }\n  _emitOutgoingEvents() {\n    while (this._outgoingEvents.length > 0) {\n      if (this._collector || this._isConsumingViewEventQueue) {\n        // right now collecting or emitting view events, so let's postpone emitting\n        return;\n      }\n      const event = this._outgoingEvents.shift();\n      if (event.isNoOp()) {\n        continue;\n      }\n      this._onEvent.fire(event);\n    }\n  }\n  addViewEventHandler(eventHandler) {\n    for (let i = 0, len = this._eventHandlers.length; i < len; i++) {\n      if (this._eventHandlers[i] === eventHandler) {\n        console.warn('Detected duplicate listener in ViewEventDispatcher', eventHandler);\n      }\n    }\n    this._eventHandlers.push(eventHandler);\n  }\n  removeViewEventHandler(eventHandler) {\n    for (let i = 0; i < this._eventHandlers.length; i++) {\n      if (this._eventHandlers[i] === eventHandler) {\n        this._eventHandlers.splice(i, 1);\n        break;\n      }\n    }\n  }\n  beginEmitViewEvents() {\n    this._collectorCnt++;\n    if (this._collectorCnt === 1) {\n      this._collector = new ViewModelEventsCollector();\n    }\n    return this._collector;\n  }\n  endEmitViewEvents() {\n    this._collectorCnt--;\n    if (this._collectorCnt === 0) {\n      const outgoingEvents = this._collector.outgoingEvents;\n      const viewEvents = this._collector.viewEvents;\n      this._collector = null;\n      for (const outgoingEvent of outgoingEvents) {\n        this._addOutgoingEvent(outgoingEvent);\n      }\n      if (viewEvents.length > 0) {\n        this._emitMany(viewEvents);\n      }\n    }\n    this._emitOutgoingEvents();\n  }\n  emitSingleViewEvent(event) {\n    try {\n      const eventsCollector = this.beginEmitViewEvents();\n      eventsCollector.emitViewEvent(event);\n    } finally {\n      this.endEmitViewEvents();\n    }\n  }\n  _emitMany(events) {\n    if (this._viewEventQueue) {\n      this._viewEventQueue = this._viewEventQueue.concat(events);\n    } else {\n      this._viewEventQueue = events;\n    }\n    if (!this._isConsumingViewEventQueue) {\n      this._consumeViewEventQueue();\n    }\n  }\n  _consumeViewEventQueue() {\n    try {\n      this._isConsumingViewEventQueue = true;\n      this._doConsumeQueue();\n    } finally {\n      this._isConsumingViewEventQueue = false;\n    }\n  }\n  _doConsumeQueue() {\n    while (this._viewEventQueue) {\n      // Empty event queue, as events might come in while sending these off\n      const events = this._viewEventQueue;\n      this._viewEventQueue = null;\n      // Use a clone of the event handlers list, as they might remove themselves\n      const eventHandlers = this._eventHandlers.slice(0);\n      for (const eventHandler of eventHandlers) {\n        eventHandler.handleEvents(events);\n      }\n    }\n  }\n}\nexport class ViewModelEventsCollector {\n  constructor() {\n    this.viewEvents = [];\n    this.outgoingEvents = [];\n  }\n  emitViewEvent(event) {\n    this.viewEvents.push(event);\n  }\n  emitOutgoingEvent(e) {\n    this.outgoingEvents.push(e);\n  }\n}\nexport class ContentSizeChangedEvent {\n  constructor(oldContentWidth, oldContentHeight, contentWidth, contentHeight) {\n    this.kind = 0 /* OutgoingViewModelEventKind.ContentSizeChanged */;\n    this._oldContentWidth = oldContentWidth;\n    this._oldContentHeight = oldContentHeight;\n    this.contentWidth = contentWidth;\n    this.contentHeight = contentHeight;\n    this.contentWidthChanged = this._oldContentWidth !== this.contentWidth;\n    this.contentHeightChanged = this._oldContentHeight !== this.contentHeight;\n  }\n  isNoOp() {\n    return !this.contentWidthChanged && !this.contentHeightChanged;\n  }\n  attemptToMerge(other) {\n    if (other.kind !== this.kind) {\n      return null;\n    }\n    return new ContentSizeChangedEvent(this._oldContentWidth, this._oldContentHeight, other.contentWidth, other.contentHeight);\n  }\n}\nexport class FocusChangedEvent {\n  constructor(oldHasFocus, hasFocus) {\n    this.kind = 1 /* OutgoingViewModelEventKind.FocusChanged */;\n    this.oldHasFocus = oldHasFocus;\n    this.hasFocus = hasFocus;\n  }\n  isNoOp() {\n    return this.oldHasFocus === this.hasFocus;\n  }\n  attemptToMerge(other) {\n    if (other.kind !== this.kind) {\n      return null;\n    }\n    return new FocusChangedEvent(this.oldHasFocus, other.hasFocus);\n  }\n}\nexport class ScrollChangedEvent {\n  constructor(oldScrollWidth, oldScrollLeft, oldScrollHeight, oldScrollTop, scrollWidth, scrollLeft, scrollHeight, scrollTop) {\n    this.kind = 2 /* OutgoingViewModelEventKind.ScrollChanged */;\n    this._oldScrollWidth = oldScrollWidth;\n    this._oldScrollLeft = oldScrollLeft;\n    this._oldScrollHeight = oldScrollHeight;\n    this._oldScrollTop = oldScrollTop;\n    this.scrollWidth = scrollWidth;\n    this.scrollLeft = scrollLeft;\n    this.scrollHeight = scrollHeight;\n    this.scrollTop = scrollTop;\n    this.scrollWidthChanged = this._oldScrollWidth !== this.scrollWidth;\n    this.scrollLeftChanged = this._oldScrollLeft !== this.scrollLeft;\n    this.scrollHeightChanged = this._oldScrollHeight !== this.scrollHeight;\n    this.scrollTopChanged = this._oldScrollTop !== this.scrollTop;\n  }\n  isNoOp() {\n    return !this.scrollWidthChanged && !this.scrollLeftChanged && !this.scrollHeightChanged && !this.scrollTopChanged;\n  }\n  attemptToMerge(other) {\n    if (other.kind !== this.kind) {\n      return null;\n    }\n    return new ScrollChangedEvent(this._oldScrollWidth, this._oldScrollLeft, this._oldScrollHeight, this._oldScrollTop, other.scrollWidth, other.scrollLeft, other.scrollHeight, other.scrollTop);\n  }\n}\nexport class ViewZonesChangedEvent {\n  constructor() {\n    this.kind = 3 /* OutgoingViewModelEventKind.ViewZonesChanged */;\n  }\n  isNoOp() {\n    return false;\n  }\n  attemptToMerge(other) {\n    if (other.kind !== this.kind) {\n      return null;\n    }\n    return this;\n  }\n}\nexport class HiddenAreasChangedEvent {\n  constructor() {\n    this.kind = 4 /* OutgoingViewModelEventKind.HiddenAreasChanged */;\n  }\n  isNoOp() {\n    return false;\n  }\n  attemptToMerge(other) {\n    if (other.kind !== this.kind) {\n      return null;\n    }\n    return this;\n  }\n}\nexport class CursorStateChangedEvent {\n  constructor(oldSelections, selections, oldModelVersionId, modelVersionId, source, reason, reachedMaxCursorCount) {\n    this.kind = 6 /* OutgoingViewModelEventKind.CursorStateChanged */;\n    this.oldSelections = oldSelections;\n    this.selections = selections;\n    this.oldModelVersionId = oldModelVersionId;\n    this.modelVersionId = modelVersionId;\n    this.source = source;\n    this.reason = reason;\n    this.reachedMaxCursorCount = reachedMaxCursorCount;\n  }\n  static _selectionsAreEqual(a, b) {\n    if (!a && !b) {\n      return true;\n    }\n    if (!a || !b) {\n      return false;\n    }\n    const aLen = a.length;\n    const bLen = b.length;\n    if (aLen !== bLen) {\n      return false;\n    }\n    for (let i = 0; i < aLen; i++) {\n      if (!a[i].equalsSelection(b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  isNoOp() {\n    return CursorStateChangedEvent._selectionsAreEqual(this.oldSelections, this.selections) && this.oldModelVersionId === this.modelVersionId;\n  }\n  attemptToMerge(other) {\n    if (other.kind !== this.kind) {\n      return null;\n    }\n    return new CursorStateChangedEvent(this.oldSelections, other.selections, this.oldModelVersionId, other.modelVersionId, other.source, other.reason, this.reachedMaxCursorCount || other.reachedMaxCursorCount);\n  }\n}\nexport class ReadOnlyEditAttemptEvent {\n  constructor() {\n    this.kind = 5 /* OutgoingViewModelEventKind.ReadOnlyEditAttempt */;\n  }\n  isNoOp() {\n    return false;\n  }\n  attemptToMerge(other) {\n    if (other.kind !== this.kind) {\n      return null;\n    }\n    return this;\n  }\n}\nexport class ModelDecorationsChangedEvent {\n  constructor(event) {\n    this.event = event;\n    this.kind = 7 /* OutgoingViewModelEventKind.ModelDecorationsChanged */;\n  }\n  isNoOp() {\n    return false;\n  }\n  attemptToMerge(other) {\n    return null;\n  }\n}\nexport class ModelLanguageChangedEvent {\n  constructor(event) {\n    this.event = event;\n    this.kind = 8 /* OutgoingViewModelEventKind.ModelLanguageChanged */;\n  }\n  isNoOp() {\n    return false;\n  }\n  attemptToMerge(other) {\n    return null;\n  }\n}\nexport class ModelLanguageConfigurationChangedEvent {\n  constructor(event) {\n    this.event = event;\n    this.kind = 9 /* OutgoingViewModelEventKind.ModelLanguageConfigurationChanged */;\n  }\n  isNoOp() {\n    return false;\n  }\n  attemptToMerge(other) {\n    return null;\n  }\n}\nexport class ModelContentChangedEvent {\n  constructor(event) {\n    this.event = event;\n    this.kind = 10 /* OutgoingViewModelEventKind.ModelContentChanged */;\n  }\n  isNoOp() {\n    return false;\n  }\n  attemptToMerge(other) {\n    return null;\n  }\n}\nexport class ModelOptionsChangedEvent {\n  constructor(event) {\n    this.event = event;\n    this.kind = 11 /* OutgoingViewModelEventKind.ModelOptionsChanged */;\n  }\n  isNoOp() {\n    return false;\n  }\n  attemptToMerge(other) {\n    return null;\n  }\n}\nexport class ModelTokensChangedEvent {\n  constructor(event) {\n    this.event = event;\n    this.kind = 12 /* OutgoingViewModelEventKind.ModelTokensChanged */;\n  }\n  isNoOp() {\n    return false;\n  }\n  attemptToMerge(other) {\n    return null;\n  }\n}","map":{"version":3,"names":["Emitter","Disposable","ViewModelEventDispatcher","constructor","_onEvent","_register","onEvent","event","_eventHandlers","_viewEventQueue","_isConsumingViewEventQueue","_collector","_collectorCnt","_outgoingEvents","emitOutgoingEvent","e","_addOutgoingEvent","_emitOutgoingEvents","i","len","length","mergeResult","kind","attemptToMerge","push","shift","isNoOp","fire","addViewEventHandler","eventHandler","console","warn","removeViewEventHandler","splice","beginEmitViewEvents","ViewModelEventsCollector","endEmitViewEvents","outgoingEvents","viewEvents","outgoingEvent","_emitMany","emitSingleViewEvent","eventsCollector","emitViewEvent","events","concat","_consumeViewEventQueue","_doConsumeQueue","eventHandlers","slice","handleEvents","ContentSizeChangedEvent","oldContentWidth","oldContentHeight","contentWidth","contentHeight","_oldContentWidth","_oldContentHeight","contentWidthChanged","contentHeightChanged","other","FocusChangedEvent","oldHasFocus","hasFocus","ScrollChangedEvent","oldScrollWidth","oldScrollLeft","oldScrollHeight","oldScrollTop","scrollWidth","scrollLeft","scrollHeight","scrollTop","_oldScrollWidth","_oldScrollLeft","_oldScrollHeight","_oldScrollTop","scrollWidthChanged","scrollLeftChanged","scrollHeightChanged","scrollTopChanged","ViewZonesChangedEvent","HiddenAreasChangedEvent","CursorStateChangedEvent","oldSelections","selections","oldModelVersionId","modelVersionId","source","reason","reachedMaxCursorCount","_selectionsAreEqual","a","b","aLen","bLen","equalsSelection","ReadOnlyEditAttemptEvent","ModelDecorationsChangedEvent","ModelLanguageChangedEvent","ModelLanguageConfigurationChangedEvent","ModelContentChangedEvent","ModelOptionsChangedEvent","ModelTokensChangedEvent"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/common/viewModelEventDispatcher.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../base/common/event.js';\nimport { Disposable } from '../../base/common/lifecycle.js';\nexport class ViewModelEventDispatcher extends Disposable {\n    constructor() {\n        super();\n        this._onEvent = this._register(new Emitter());\n        this.onEvent = this._onEvent.event;\n        this._eventHandlers = [];\n        this._viewEventQueue = null;\n        this._isConsumingViewEventQueue = false;\n        this._collector = null;\n        this._collectorCnt = 0;\n        this._outgoingEvents = [];\n    }\n    emitOutgoingEvent(e) {\n        this._addOutgoingEvent(e);\n        this._emitOutgoingEvents();\n    }\n    _addOutgoingEvent(e) {\n        for (let i = 0, len = this._outgoingEvents.length; i < len; i++) {\n            const mergeResult = (this._outgoingEvents[i].kind === e.kind ? this._outgoingEvents[i].attemptToMerge(e) : null);\n            if (mergeResult) {\n                this._outgoingEvents[i] = mergeResult;\n                return;\n            }\n        }\n        // not merged\n        this._outgoingEvents.push(e);\n    }\n    _emitOutgoingEvents() {\n        while (this._outgoingEvents.length > 0) {\n            if (this._collector || this._isConsumingViewEventQueue) {\n                // right now collecting or emitting view events, so let's postpone emitting\n                return;\n            }\n            const event = this._outgoingEvents.shift();\n            if (event.isNoOp()) {\n                continue;\n            }\n            this._onEvent.fire(event);\n        }\n    }\n    addViewEventHandler(eventHandler) {\n        for (let i = 0, len = this._eventHandlers.length; i < len; i++) {\n            if (this._eventHandlers[i] === eventHandler) {\n                console.warn('Detected duplicate listener in ViewEventDispatcher', eventHandler);\n            }\n        }\n        this._eventHandlers.push(eventHandler);\n    }\n    removeViewEventHandler(eventHandler) {\n        for (let i = 0; i < this._eventHandlers.length; i++) {\n            if (this._eventHandlers[i] === eventHandler) {\n                this._eventHandlers.splice(i, 1);\n                break;\n            }\n        }\n    }\n    beginEmitViewEvents() {\n        this._collectorCnt++;\n        if (this._collectorCnt === 1) {\n            this._collector = new ViewModelEventsCollector();\n        }\n        return this._collector;\n    }\n    endEmitViewEvents() {\n        this._collectorCnt--;\n        if (this._collectorCnt === 0) {\n            const outgoingEvents = this._collector.outgoingEvents;\n            const viewEvents = this._collector.viewEvents;\n            this._collector = null;\n            for (const outgoingEvent of outgoingEvents) {\n                this._addOutgoingEvent(outgoingEvent);\n            }\n            if (viewEvents.length > 0) {\n                this._emitMany(viewEvents);\n            }\n        }\n        this._emitOutgoingEvents();\n    }\n    emitSingleViewEvent(event) {\n        try {\n            const eventsCollector = this.beginEmitViewEvents();\n            eventsCollector.emitViewEvent(event);\n        }\n        finally {\n            this.endEmitViewEvents();\n        }\n    }\n    _emitMany(events) {\n        if (this._viewEventQueue) {\n            this._viewEventQueue = this._viewEventQueue.concat(events);\n        }\n        else {\n            this._viewEventQueue = events;\n        }\n        if (!this._isConsumingViewEventQueue) {\n            this._consumeViewEventQueue();\n        }\n    }\n    _consumeViewEventQueue() {\n        try {\n            this._isConsumingViewEventQueue = true;\n            this._doConsumeQueue();\n        }\n        finally {\n            this._isConsumingViewEventQueue = false;\n        }\n    }\n    _doConsumeQueue() {\n        while (this._viewEventQueue) {\n            // Empty event queue, as events might come in while sending these off\n            const events = this._viewEventQueue;\n            this._viewEventQueue = null;\n            // Use a clone of the event handlers list, as they might remove themselves\n            const eventHandlers = this._eventHandlers.slice(0);\n            for (const eventHandler of eventHandlers) {\n                eventHandler.handleEvents(events);\n            }\n        }\n    }\n}\nexport class ViewModelEventsCollector {\n    constructor() {\n        this.viewEvents = [];\n        this.outgoingEvents = [];\n    }\n    emitViewEvent(event) {\n        this.viewEvents.push(event);\n    }\n    emitOutgoingEvent(e) {\n        this.outgoingEvents.push(e);\n    }\n}\nexport class ContentSizeChangedEvent {\n    constructor(oldContentWidth, oldContentHeight, contentWidth, contentHeight) {\n        this.kind = 0 /* OutgoingViewModelEventKind.ContentSizeChanged */;\n        this._oldContentWidth = oldContentWidth;\n        this._oldContentHeight = oldContentHeight;\n        this.contentWidth = contentWidth;\n        this.contentHeight = contentHeight;\n        this.contentWidthChanged = (this._oldContentWidth !== this.contentWidth);\n        this.contentHeightChanged = (this._oldContentHeight !== this.contentHeight);\n    }\n    isNoOp() {\n        return (!this.contentWidthChanged && !this.contentHeightChanged);\n    }\n    attemptToMerge(other) {\n        if (other.kind !== this.kind) {\n            return null;\n        }\n        return new ContentSizeChangedEvent(this._oldContentWidth, this._oldContentHeight, other.contentWidth, other.contentHeight);\n    }\n}\nexport class FocusChangedEvent {\n    constructor(oldHasFocus, hasFocus) {\n        this.kind = 1 /* OutgoingViewModelEventKind.FocusChanged */;\n        this.oldHasFocus = oldHasFocus;\n        this.hasFocus = hasFocus;\n    }\n    isNoOp() {\n        return (this.oldHasFocus === this.hasFocus);\n    }\n    attemptToMerge(other) {\n        if (other.kind !== this.kind) {\n            return null;\n        }\n        return new FocusChangedEvent(this.oldHasFocus, other.hasFocus);\n    }\n}\nexport class ScrollChangedEvent {\n    constructor(oldScrollWidth, oldScrollLeft, oldScrollHeight, oldScrollTop, scrollWidth, scrollLeft, scrollHeight, scrollTop) {\n        this.kind = 2 /* OutgoingViewModelEventKind.ScrollChanged */;\n        this._oldScrollWidth = oldScrollWidth;\n        this._oldScrollLeft = oldScrollLeft;\n        this._oldScrollHeight = oldScrollHeight;\n        this._oldScrollTop = oldScrollTop;\n        this.scrollWidth = scrollWidth;\n        this.scrollLeft = scrollLeft;\n        this.scrollHeight = scrollHeight;\n        this.scrollTop = scrollTop;\n        this.scrollWidthChanged = (this._oldScrollWidth !== this.scrollWidth);\n        this.scrollLeftChanged = (this._oldScrollLeft !== this.scrollLeft);\n        this.scrollHeightChanged = (this._oldScrollHeight !== this.scrollHeight);\n        this.scrollTopChanged = (this._oldScrollTop !== this.scrollTop);\n    }\n    isNoOp() {\n        return (!this.scrollWidthChanged && !this.scrollLeftChanged && !this.scrollHeightChanged && !this.scrollTopChanged);\n    }\n    attemptToMerge(other) {\n        if (other.kind !== this.kind) {\n            return null;\n        }\n        return new ScrollChangedEvent(this._oldScrollWidth, this._oldScrollLeft, this._oldScrollHeight, this._oldScrollTop, other.scrollWidth, other.scrollLeft, other.scrollHeight, other.scrollTop);\n    }\n}\nexport class ViewZonesChangedEvent {\n    constructor() {\n        this.kind = 3 /* OutgoingViewModelEventKind.ViewZonesChanged */;\n    }\n    isNoOp() {\n        return false;\n    }\n    attemptToMerge(other) {\n        if (other.kind !== this.kind) {\n            return null;\n        }\n        return this;\n    }\n}\nexport class HiddenAreasChangedEvent {\n    constructor() {\n        this.kind = 4 /* OutgoingViewModelEventKind.HiddenAreasChanged */;\n    }\n    isNoOp() {\n        return false;\n    }\n    attemptToMerge(other) {\n        if (other.kind !== this.kind) {\n            return null;\n        }\n        return this;\n    }\n}\nexport class CursorStateChangedEvent {\n    constructor(oldSelections, selections, oldModelVersionId, modelVersionId, source, reason, reachedMaxCursorCount) {\n        this.kind = 6 /* OutgoingViewModelEventKind.CursorStateChanged */;\n        this.oldSelections = oldSelections;\n        this.selections = selections;\n        this.oldModelVersionId = oldModelVersionId;\n        this.modelVersionId = modelVersionId;\n        this.source = source;\n        this.reason = reason;\n        this.reachedMaxCursorCount = reachedMaxCursorCount;\n    }\n    static _selectionsAreEqual(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        const aLen = a.length;\n        const bLen = b.length;\n        if (aLen !== bLen) {\n            return false;\n        }\n        for (let i = 0; i < aLen; i++) {\n            if (!a[i].equalsSelection(b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    isNoOp() {\n        return (CursorStateChangedEvent._selectionsAreEqual(this.oldSelections, this.selections)\n            && this.oldModelVersionId === this.modelVersionId);\n    }\n    attemptToMerge(other) {\n        if (other.kind !== this.kind) {\n            return null;\n        }\n        return new CursorStateChangedEvent(this.oldSelections, other.selections, this.oldModelVersionId, other.modelVersionId, other.source, other.reason, this.reachedMaxCursorCount || other.reachedMaxCursorCount);\n    }\n}\nexport class ReadOnlyEditAttemptEvent {\n    constructor() {\n        this.kind = 5 /* OutgoingViewModelEventKind.ReadOnlyEditAttempt */;\n    }\n    isNoOp() {\n        return false;\n    }\n    attemptToMerge(other) {\n        if (other.kind !== this.kind) {\n            return null;\n        }\n        return this;\n    }\n}\nexport class ModelDecorationsChangedEvent {\n    constructor(event) {\n        this.event = event;\n        this.kind = 7 /* OutgoingViewModelEventKind.ModelDecorationsChanged */;\n    }\n    isNoOp() {\n        return false;\n    }\n    attemptToMerge(other) {\n        return null;\n    }\n}\nexport class ModelLanguageChangedEvent {\n    constructor(event) {\n        this.event = event;\n        this.kind = 8 /* OutgoingViewModelEventKind.ModelLanguageChanged */;\n    }\n    isNoOp() {\n        return false;\n    }\n    attemptToMerge(other) {\n        return null;\n    }\n}\nexport class ModelLanguageConfigurationChangedEvent {\n    constructor(event) {\n        this.event = event;\n        this.kind = 9 /* OutgoingViewModelEventKind.ModelLanguageConfigurationChanged */;\n    }\n    isNoOp() {\n        return false;\n    }\n    attemptToMerge(other) {\n        return null;\n    }\n}\nexport class ModelContentChangedEvent {\n    constructor(event) {\n        this.event = event;\n        this.kind = 10 /* OutgoingViewModelEventKind.ModelContentChanged */;\n    }\n    isNoOp() {\n        return false;\n    }\n    attemptToMerge(other) {\n        return null;\n    }\n}\nexport class ModelOptionsChangedEvent {\n    constructor(event) {\n        this.event = event;\n        this.kind = 11 /* OutgoingViewModelEventKind.ModelOptionsChanged */;\n    }\n    isNoOp() {\n        return false;\n    }\n    attemptToMerge(other) {\n        return null;\n    }\n}\nexport class ModelTokensChangedEvent {\n    constructor(event) {\n        this.event = event;\n        this.kind = 12 /* OutgoingViewModelEventKind.ModelTokensChanged */;\n    }\n    isNoOp() {\n        return false;\n    }\n    attemptToMerge(other) {\n        return null;\n    }\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA,SAASA,OAAO,QAAQ,4BAA4B;AACpD,SAASC,UAAU,QAAQ,gCAAgC;AAC3D,OAAO,MAAMC,wBAAwB,SAASD,UAAU,CAAC;EACrDE,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,SAAS,CAAC,IAAIL,OAAO,CAAC,CAAC,CAAC;IAC7C,IAAI,CAACM,OAAO,GAAG,IAAI,CAACF,QAAQ,CAACG,KAAK;IAClC,IAAI,CAACC,cAAc,GAAG,EAAE;IACxB,IAAI,CAACC,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACC,0BAA0B,GAAG,KAAK;IACvC,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,aAAa,GAAG,CAAC;IACtB,IAAI,CAACC,eAAe,GAAG,EAAE;EAC7B;EACAC,iBAAiBA,CAACC,CAAC,EAAE;IACjB,IAAI,CAACC,iBAAiB,CAACD,CAAC,CAAC;IACzB,IAAI,CAACE,mBAAmB,CAAC,CAAC;EAC9B;EACAD,iBAAiBA,CAACD,CAAC,EAAE;IACjB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,CAACN,eAAe,CAACO,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MAC7D,MAAMG,WAAW,GAAI,IAAI,CAACR,eAAe,CAACK,CAAC,CAAC,CAACI,IAAI,KAAKP,CAAC,CAACO,IAAI,GAAG,IAAI,CAACT,eAAe,CAACK,CAAC,CAAC,CAACK,cAAc,CAACR,CAAC,CAAC,GAAG,IAAK;MAChH,IAAIM,WAAW,EAAE;QACb,IAAI,CAACR,eAAe,CAACK,CAAC,CAAC,GAAGG,WAAW;QACrC;MACJ;IACJ;IACA;IACA,IAAI,CAACR,eAAe,CAACW,IAAI,CAACT,CAAC,CAAC;EAChC;EACAE,mBAAmBA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACJ,eAAe,CAACO,MAAM,GAAG,CAAC,EAAE;MACpC,IAAI,IAAI,CAACT,UAAU,IAAI,IAAI,CAACD,0BAA0B,EAAE;QACpD;QACA;MACJ;MACA,MAAMH,KAAK,GAAG,IAAI,CAACM,eAAe,CAACY,KAAK,CAAC,CAAC;MAC1C,IAAIlB,KAAK,CAACmB,MAAM,CAAC,CAAC,EAAE;QAChB;MACJ;MACA,IAAI,CAACtB,QAAQ,CAACuB,IAAI,CAACpB,KAAK,CAAC;IAC7B;EACJ;EACAqB,mBAAmBA,CAACC,YAAY,EAAE;IAC9B,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,CAACX,cAAc,CAACY,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MAC5D,IAAI,IAAI,CAACV,cAAc,CAACU,CAAC,CAAC,KAAKW,YAAY,EAAE;QACzCC,OAAO,CAACC,IAAI,CAAC,oDAAoD,EAAEF,YAAY,CAAC;MACpF;IACJ;IACA,IAAI,CAACrB,cAAc,CAACgB,IAAI,CAACK,YAAY,CAAC;EAC1C;EACAG,sBAAsBA,CAACH,YAAY,EAAE;IACjC,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACV,cAAc,CAACY,MAAM,EAAEF,CAAC,EAAE,EAAE;MACjD,IAAI,IAAI,CAACV,cAAc,CAACU,CAAC,CAAC,KAAKW,YAAY,EAAE;QACzC,IAAI,CAACrB,cAAc,CAACyB,MAAM,CAACf,CAAC,EAAE,CAAC,CAAC;QAChC;MACJ;IACJ;EACJ;EACAgB,mBAAmBA,CAAA,EAAG;IAClB,IAAI,CAACtB,aAAa,EAAE;IACpB,IAAI,IAAI,CAACA,aAAa,KAAK,CAAC,EAAE;MAC1B,IAAI,CAACD,UAAU,GAAG,IAAIwB,wBAAwB,CAAC,CAAC;IACpD;IACA,OAAO,IAAI,CAACxB,UAAU;EAC1B;EACAyB,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACxB,aAAa,EAAE;IACpB,IAAI,IAAI,CAACA,aAAa,KAAK,CAAC,EAAE;MAC1B,MAAMyB,cAAc,GAAG,IAAI,CAAC1B,UAAU,CAAC0B,cAAc;MACrD,MAAMC,UAAU,GAAG,IAAI,CAAC3B,UAAU,CAAC2B,UAAU;MAC7C,IAAI,CAAC3B,UAAU,GAAG,IAAI;MACtB,KAAK,MAAM4B,aAAa,IAAIF,cAAc,EAAE;QACxC,IAAI,CAACrB,iBAAiB,CAACuB,aAAa,CAAC;MACzC;MACA,IAAID,UAAU,CAAClB,MAAM,GAAG,CAAC,EAAE;QACvB,IAAI,CAACoB,SAAS,CAACF,UAAU,CAAC;MAC9B;IACJ;IACA,IAAI,CAACrB,mBAAmB,CAAC,CAAC;EAC9B;EACAwB,mBAAmBA,CAAClC,KAAK,EAAE;IACvB,IAAI;MACA,MAAMmC,eAAe,GAAG,IAAI,CAACR,mBAAmB,CAAC,CAAC;MAClDQ,eAAe,CAACC,aAAa,CAACpC,KAAK,CAAC;IACxC,CAAC,SACO;MACJ,IAAI,CAAC6B,iBAAiB,CAAC,CAAC;IAC5B;EACJ;EACAI,SAASA,CAACI,MAAM,EAAE;IACd,IAAI,IAAI,CAACnC,eAAe,EAAE;MACtB,IAAI,CAACA,eAAe,GAAG,IAAI,CAACA,eAAe,CAACoC,MAAM,CAACD,MAAM,CAAC;IAC9D,CAAC,MACI;MACD,IAAI,CAACnC,eAAe,GAAGmC,MAAM;IACjC;IACA,IAAI,CAAC,IAAI,CAAClC,0BAA0B,EAAE;MAClC,IAAI,CAACoC,sBAAsB,CAAC,CAAC;IACjC;EACJ;EACAA,sBAAsBA,CAAA,EAAG;IACrB,IAAI;MACA,IAAI,CAACpC,0BAA0B,GAAG,IAAI;MACtC,IAAI,CAACqC,eAAe,CAAC,CAAC;IAC1B,CAAC,SACO;MACJ,IAAI,CAACrC,0BAA0B,GAAG,KAAK;IAC3C;EACJ;EACAqC,eAAeA,CAAA,EAAG;IACd,OAAO,IAAI,CAACtC,eAAe,EAAE;MACzB;MACA,MAAMmC,MAAM,GAAG,IAAI,CAACnC,eAAe;MACnC,IAAI,CAACA,eAAe,GAAG,IAAI;MAC3B;MACA,MAAMuC,aAAa,GAAG,IAAI,CAACxC,cAAc,CAACyC,KAAK,CAAC,CAAC,CAAC;MAClD,KAAK,MAAMpB,YAAY,IAAImB,aAAa,EAAE;QACtCnB,YAAY,CAACqB,YAAY,CAACN,MAAM,CAAC;MACrC;IACJ;EACJ;AACJ;AACA,OAAO,MAAMT,wBAAwB,CAAC;EAClChC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACmC,UAAU,GAAG,EAAE;IACpB,IAAI,CAACD,cAAc,GAAG,EAAE;EAC5B;EACAM,aAAaA,CAACpC,KAAK,EAAE;IACjB,IAAI,CAAC+B,UAAU,CAACd,IAAI,CAACjB,KAAK,CAAC;EAC/B;EACAO,iBAAiBA,CAACC,CAAC,EAAE;IACjB,IAAI,CAACsB,cAAc,CAACb,IAAI,CAACT,CAAC,CAAC;EAC/B;AACJ;AACA,OAAO,MAAMoC,uBAAuB,CAAC;EACjChD,WAAWA,CAACiD,eAAe,EAAEC,gBAAgB,EAAEC,YAAY,EAAEC,aAAa,EAAE;IACxE,IAAI,CAACjC,IAAI,GAAG,CAAC,CAAC;IACd,IAAI,CAACkC,gBAAgB,GAAGJ,eAAe;IACvC,IAAI,CAACK,iBAAiB,GAAGJ,gBAAgB;IACzC,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACG,mBAAmB,GAAI,IAAI,CAACF,gBAAgB,KAAK,IAAI,CAACF,YAAa;IACxE,IAAI,CAACK,oBAAoB,GAAI,IAAI,CAACF,iBAAiB,KAAK,IAAI,CAACF,aAAc;EAC/E;EACA7B,MAAMA,CAAA,EAAG;IACL,OAAQ,CAAC,IAAI,CAACgC,mBAAmB,IAAI,CAAC,IAAI,CAACC,oBAAoB;EACnE;EACApC,cAAcA,CAACqC,KAAK,EAAE;IAClB,IAAIA,KAAK,CAACtC,IAAI,KAAK,IAAI,CAACA,IAAI,EAAE;MAC1B,OAAO,IAAI;IACf;IACA,OAAO,IAAI6B,uBAAuB,CAAC,IAAI,CAACK,gBAAgB,EAAE,IAAI,CAACC,iBAAiB,EAAEG,KAAK,CAACN,YAAY,EAAEM,KAAK,CAACL,aAAa,CAAC;EAC9H;AACJ;AACA,OAAO,MAAMM,iBAAiB,CAAC;EAC3B1D,WAAWA,CAAC2D,WAAW,EAAEC,QAAQ,EAAE;IAC/B,IAAI,CAACzC,IAAI,GAAG,CAAC,CAAC;IACd,IAAI,CAACwC,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC5B;EACArC,MAAMA,CAAA,EAAG;IACL,OAAQ,IAAI,CAACoC,WAAW,KAAK,IAAI,CAACC,QAAQ;EAC9C;EACAxC,cAAcA,CAACqC,KAAK,EAAE;IAClB,IAAIA,KAAK,CAACtC,IAAI,KAAK,IAAI,CAACA,IAAI,EAAE;MAC1B,OAAO,IAAI;IACf;IACA,OAAO,IAAIuC,iBAAiB,CAAC,IAAI,CAACC,WAAW,EAAEF,KAAK,CAACG,QAAQ,CAAC;EAClE;AACJ;AACA,OAAO,MAAMC,kBAAkB,CAAC;EAC5B7D,WAAWA,CAAC8D,cAAc,EAAEC,aAAa,EAAEC,eAAe,EAAEC,YAAY,EAAEC,WAAW,EAAEC,UAAU,EAAEC,YAAY,EAAEC,SAAS,EAAE;IACxH,IAAI,CAAClD,IAAI,GAAG,CAAC,CAAC;IACd,IAAI,CAACmD,eAAe,GAAGR,cAAc;IACrC,IAAI,CAACS,cAAc,GAAGR,aAAa;IACnC,IAAI,CAACS,gBAAgB,GAAGR,eAAe;IACvC,IAAI,CAACS,aAAa,GAAGR,YAAY;IACjC,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACK,kBAAkB,GAAI,IAAI,CAACJ,eAAe,KAAK,IAAI,CAACJ,WAAY;IACrE,IAAI,CAACS,iBAAiB,GAAI,IAAI,CAACJ,cAAc,KAAK,IAAI,CAACJ,UAAW;IAClE,IAAI,CAACS,mBAAmB,GAAI,IAAI,CAACJ,gBAAgB,KAAK,IAAI,CAACJ,YAAa;IACxE,IAAI,CAACS,gBAAgB,GAAI,IAAI,CAACJ,aAAa,KAAK,IAAI,CAACJ,SAAU;EACnE;EACA9C,MAAMA,CAAA,EAAG;IACL,OAAQ,CAAC,IAAI,CAACmD,kBAAkB,IAAI,CAAC,IAAI,CAACC,iBAAiB,IAAI,CAAC,IAAI,CAACC,mBAAmB,IAAI,CAAC,IAAI,CAACC,gBAAgB;EACtH;EACAzD,cAAcA,CAACqC,KAAK,EAAE;IAClB,IAAIA,KAAK,CAACtC,IAAI,KAAK,IAAI,CAACA,IAAI,EAAE;MAC1B,OAAO,IAAI;IACf;IACA,OAAO,IAAI0C,kBAAkB,CAAC,IAAI,CAACS,eAAe,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAACC,gBAAgB,EAAE,IAAI,CAACC,aAAa,EAAEhB,KAAK,CAACS,WAAW,EAAET,KAAK,CAACU,UAAU,EAAEV,KAAK,CAACW,YAAY,EAAEX,KAAK,CAACY,SAAS,CAAC;EACjM;AACJ;AACA,OAAO,MAAMS,qBAAqB,CAAC;EAC/B9E,WAAWA,CAAA,EAAG;IACV,IAAI,CAACmB,IAAI,GAAG,CAAC,CAAC;EAClB;EACAI,MAAMA,CAAA,EAAG;IACL,OAAO,KAAK;EAChB;EACAH,cAAcA,CAACqC,KAAK,EAAE;IAClB,IAAIA,KAAK,CAACtC,IAAI,KAAK,IAAI,CAACA,IAAI,EAAE;MAC1B,OAAO,IAAI;IACf;IACA,OAAO,IAAI;EACf;AACJ;AACA,OAAO,MAAM4D,uBAAuB,CAAC;EACjC/E,WAAWA,CAAA,EAAG;IACV,IAAI,CAACmB,IAAI,GAAG,CAAC,CAAC;EAClB;EACAI,MAAMA,CAAA,EAAG;IACL,OAAO,KAAK;EAChB;EACAH,cAAcA,CAACqC,KAAK,EAAE;IAClB,IAAIA,KAAK,CAACtC,IAAI,KAAK,IAAI,CAACA,IAAI,EAAE;MAC1B,OAAO,IAAI;IACf;IACA,OAAO,IAAI;EACf;AACJ;AACA,OAAO,MAAM6D,uBAAuB,CAAC;EACjChF,WAAWA,CAACiF,aAAa,EAAEC,UAAU,EAAEC,iBAAiB,EAAEC,cAAc,EAAEC,MAAM,EAAEC,MAAM,EAAEC,qBAAqB,EAAE;IAC7G,IAAI,CAACpE,IAAI,GAAG,CAAC,CAAC;IACd,IAAI,CAAC8D,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,qBAAqB,GAAGA,qBAAqB;EACtD;EACA,OAAOC,mBAAmBA,CAACC,CAAC,EAAEC,CAAC,EAAE;IAC7B,IAAI,CAACD,CAAC,IAAI,CAACC,CAAC,EAAE;MACV,OAAO,IAAI;IACf;IACA,IAAI,CAACD,CAAC,IAAI,CAACC,CAAC,EAAE;MACV,OAAO,KAAK;IAChB;IACA,MAAMC,IAAI,GAAGF,CAAC,CAACxE,MAAM;IACrB,MAAM2E,IAAI,GAAGF,CAAC,CAACzE,MAAM;IACrB,IAAI0E,IAAI,KAAKC,IAAI,EAAE;MACf,OAAO,KAAK;IAChB;IACA,KAAK,IAAI7E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4E,IAAI,EAAE5E,CAAC,EAAE,EAAE;MAC3B,IAAI,CAAC0E,CAAC,CAAC1E,CAAC,CAAC,CAAC8E,eAAe,CAACH,CAAC,CAAC3E,CAAC,CAAC,CAAC,EAAE;QAC7B,OAAO,KAAK;MAChB;IACJ;IACA,OAAO,IAAI;EACf;EACAQ,MAAMA,CAAA,EAAG;IACL,OAAQyD,uBAAuB,CAACQ,mBAAmB,CAAC,IAAI,CAACP,aAAa,EAAE,IAAI,CAACC,UAAU,CAAC,IACjF,IAAI,CAACC,iBAAiB,KAAK,IAAI,CAACC,cAAc;EACzD;EACAhE,cAAcA,CAACqC,KAAK,EAAE;IAClB,IAAIA,KAAK,CAACtC,IAAI,KAAK,IAAI,CAACA,IAAI,EAAE;MAC1B,OAAO,IAAI;IACf;IACA,OAAO,IAAI6D,uBAAuB,CAAC,IAAI,CAACC,aAAa,EAAExB,KAAK,CAACyB,UAAU,EAAE,IAAI,CAACC,iBAAiB,EAAE1B,KAAK,CAAC2B,cAAc,EAAE3B,KAAK,CAAC4B,MAAM,EAAE5B,KAAK,CAAC6B,MAAM,EAAE,IAAI,CAACC,qBAAqB,IAAI9B,KAAK,CAAC8B,qBAAqB,CAAC;EACjN;AACJ;AACA,OAAO,MAAMO,wBAAwB,CAAC;EAClC9F,WAAWA,CAAA,EAAG;IACV,IAAI,CAACmB,IAAI,GAAG,CAAC,CAAC;EAClB;EACAI,MAAMA,CAAA,EAAG;IACL,OAAO,KAAK;EAChB;EACAH,cAAcA,CAACqC,KAAK,EAAE;IAClB,IAAIA,KAAK,CAACtC,IAAI,KAAK,IAAI,CAACA,IAAI,EAAE;MAC1B,OAAO,IAAI;IACf;IACA,OAAO,IAAI;EACf;AACJ;AACA,OAAO,MAAM4E,4BAA4B,CAAC;EACtC/F,WAAWA,CAACI,KAAK,EAAE;IACf,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACe,IAAI,GAAG,CAAC,CAAC;EAClB;EACAI,MAAMA,CAAA,EAAG;IACL,OAAO,KAAK;EAChB;EACAH,cAAcA,CAACqC,KAAK,EAAE;IAClB,OAAO,IAAI;EACf;AACJ;AACA,OAAO,MAAMuC,yBAAyB,CAAC;EACnChG,WAAWA,CAACI,KAAK,EAAE;IACf,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACe,IAAI,GAAG,CAAC,CAAC;EAClB;EACAI,MAAMA,CAAA,EAAG;IACL,OAAO,KAAK;EAChB;EACAH,cAAcA,CAACqC,KAAK,EAAE;IAClB,OAAO,IAAI;EACf;AACJ;AACA,OAAO,MAAMwC,sCAAsC,CAAC;EAChDjG,WAAWA,CAACI,KAAK,EAAE;IACf,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACe,IAAI,GAAG,CAAC,CAAC;EAClB;EACAI,MAAMA,CAAA,EAAG;IACL,OAAO,KAAK;EAChB;EACAH,cAAcA,CAACqC,KAAK,EAAE;IAClB,OAAO,IAAI;EACf;AACJ;AACA,OAAO,MAAMyC,wBAAwB,CAAC;EAClClG,WAAWA,CAACI,KAAK,EAAE;IACf,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACe,IAAI,GAAG,EAAE,CAAC;EACnB;EACAI,MAAMA,CAAA,EAAG;IACL,OAAO,KAAK;EAChB;EACAH,cAAcA,CAACqC,KAAK,EAAE;IAClB,OAAO,IAAI;EACf;AACJ;AACA,OAAO,MAAM0C,wBAAwB,CAAC;EAClCnG,WAAWA,CAACI,KAAK,EAAE;IACf,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACe,IAAI,GAAG,EAAE,CAAC;EACnB;EACAI,MAAMA,CAAA,EAAG;IACL,OAAO,KAAK;EAChB;EACAH,cAAcA,CAACqC,KAAK,EAAE;IAClB,OAAO,IAAI;EACf;AACJ;AACA,OAAO,MAAM2C,uBAAuB,CAAC;EACjCpG,WAAWA,CAACI,KAAK,EAAE;IACf,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACe,IAAI,GAAG,EAAE,CAAC;EACnB;EACAI,MAAMA,CAAA,EAAG;IACL,OAAO,KAAK;EAChB;EACAH,cAAcA,CAACqC,KAAK,EAAE;IAClB,OAAO,IAAI;EACf;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}