{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n */\nexport class TokenMetadata {\n  static getLanguageId(metadata) {\n    return (metadata & 255 /* MetadataConsts.LANGUAGEID_MASK */) >>> 0 /* MetadataConsts.LANGUAGEID_OFFSET */;\n  }\n  static getTokenType(metadata) {\n    return (metadata & 768 /* MetadataConsts.TOKEN_TYPE_MASK */) >>> 8 /* MetadataConsts.TOKEN_TYPE_OFFSET */;\n  }\n  static containsBalancedBrackets(metadata) {\n    return (metadata & 1024 /* MetadataConsts.BALANCED_BRACKETS_MASK */) !== 0;\n  }\n  static getFontStyle(metadata) {\n    return (metadata & 30720 /* MetadataConsts.FONT_STYLE_MASK */) >>> 11 /* MetadataConsts.FONT_STYLE_OFFSET */;\n  }\n  static getForeground(metadata) {\n    return (metadata & 16744448 /* MetadataConsts.FOREGROUND_MASK */) >>> 15 /* MetadataConsts.FOREGROUND_OFFSET */;\n  }\n  static getBackground(metadata) {\n    return (metadata & 4278190080 /* MetadataConsts.BACKGROUND_MASK */) >>> 24 /* MetadataConsts.BACKGROUND_OFFSET */;\n  }\n  static getClassNameFromMetadata(metadata) {\n    const foreground = this.getForeground(metadata);\n    let className = 'mtk' + foreground;\n    const fontStyle = this.getFontStyle(metadata);\n    if (fontStyle & 1 /* FontStyle.Italic */) {\n      className += ' mtki';\n    }\n    if (fontStyle & 2 /* FontStyle.Bold */) {\n      className += ' mtkb';\n    }\n    if (fontStyle & 4 /* FontStyle.Underline */) {\n      className += ' mtku';\n    }\n    if (fontStyle & 8 /* FontStyle.Strikethrough */) {\n      className += ' mtks';\n    }\n    return className;\n  }\n  static getInlineStyleFromMetadata(metadata, colorMap) {\n    const foreground = this.getForeground(metadata);\n    const fontStyle = this.getFontStyle(metadata);\n    let result = `color: ${colorMap[foreground]};`;\n    if (fontStyle & 1 /* FontStyle.Italic */) {\n      result += 'font-style: italic;';\n    }\n    if (fontStyle & 2 /* FontStyle.Bold */) {\n      result += 'font-weight: bold;';\n    }\n    let textDecoration = '';\n    if (fontStyle & 4 /* FontStyle.Underline */) {\n      textDecoration += ' underline';\n    }\n    if (fontStyle & 8 /* FontStyle.Strikethrough */) {\n      textDecoration += ' line-through';\n    }\n    if (textDecoration) {\n      result += `text-decoration:${textDecoration};`;\n    }\n    return result;\n  }\n  static getPresentationFromMetadata(metadata) {\n    const foreground = this.getForeground(metadata);\n    const fontStyle = this.getFontStyle(metadata);\n    return {\n      foreground: foreground,\n      italic: Boolean(fontStyle & 1 /* FontStyle.Italic */),\n      bold: Boolean(fontStyle & 2 /* FontStyle.Bold */),\n      underline: Boolean(fontStyle & 4 /* FontStyle.Underline */),\n      strikethrough: Boolean(fontStyle & 8 /* FontStyle.Strikethrough */)\n    };\n  }\n}","map":{"version":3,"names":["TokenMetadata","getLanguageId","metadata","getTokenType","containsBalancedBrackets","getFontStyle","getForeground","getBackground","getClassNameFromMetadata","foreground","className","fontStyle","getInlineStyleFromMetadata","colorMap","result","textDecoration","getPresentationFromMetadata","italic","Boolean","bold","underline","strikethrough"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/common/encodedTokenAttributes.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n */\nexport class TokenMetadata {\n    static getLanguageId(metadata) {\n        return (metadata & 255 /* MetadataConsts.LANGUAGEID_MASK */) >>> 0 /* MetadataConsts.LANGUAGEID_OFFSET */;\n    }\n    static getTokenType(metadata) {\n        return (metadata & 768 /* MetadataConsts.TOKEN_TYPE_MASK */) >>> 8 /* MetadataConsts.TOKEN_TYPE_OFFSET */;\n    }\n    static containsBalancedBrackets(metadata) {\n        return (metadata & 1024 /* MetadataConsts.BALANCED_BRACKETS_MASK */) !== 0;\n    }\n    static getFontStyle(metadata) {\n        return (metadata & 30720 /* MetadataConsts.FONT_STYLE_MASK */) >>> 11 /* MetadataConsts.FONT_STYLE_OFFSET */;\n    }\n    static getForeground(metadata) {\n        return (metadata & 16744448 /* MetadataConsts.FOREGROUND_MASK */) >>> 15 /* MetadataConsts.FOREGROUND_OFFSET */;\n    }\n    static getBackground(metadata) {\n        return (metadata & 4278190080 /* MetadataConsts.BACKGROUND_MASK */) >>> 24 /* MetadataConsts.BACKGROUND_OFFSET */;\n    }\n    static getClassNameFromMetadata(metadata) {\n        const foreground = this.getForeground(metadata);\n        let className = 'mtk' + foreground;\n        const fontStyle = this.getFontStyle(metadata);\n        if (fontStyle & 1 /* FontStyle.Italic */) {\n            className += ' mtki';\n        }\n        if (fontStyle & 2 /* FontStyle.Bold */) {\n            className += ' mtkb';\n        }\n        if (fontStyle & 4 /* FontStyle.Underline */) {\n            className += ' mtku';\n        }\n        if (fontStyle & 8 /* FontStyle.Strikethrough */) {\n            className += ' mtks';\n        }\n        return className;\n    }\n    static getInlineStyleFromMetadata(metadata, colorMap) {\n        const foreground = this.getForeground(metadata);\n        const fontStyle = this.getFontStyle(metadata);\n        let result = `color: ${colorMap[foreground]};`;\n        if (fontStyle & 1 /* FontStyle.Italic */) {\n            result += 'font-style: italic;';\n        }\n        if (fontStyle & 2 /* FontStyle.Bold */) {\n            result += 'font-weight: bold;';\n        }\n        let textDecoration = '';\n        if (fontStyle & 4 /* FontStyle.Underline */) {\n            textDecoration += ' underline';\n        }\n        if (fontStyle & 8 /* FontStyle.Strikethrough */) {\n            textDecoration += ' line-through';\n        }\n        if (textDecoration) {\n            result += `text-decoration:${textDecoration};`;\n        }\n        return result;\n    }\n    static getPresentationFromMetadata(metadata) {\n        const foreground = this.getForeground(metadata);\n        const fontStyle = this.getFontStyle(metadata);\n        return {\n            foreground: foreground,\n            italic: Boolean(fontStyle & 1 /* FontStyle.Italic */),\n            bold: Boolean(fontStyle & 2 /* FontStyle.Bold */),\n            underline: Boolean(fontStyle & 4 /* FontStyle.Underline */),\n            strikethrough: Boolean(fontStyle & 8 /* FontStyle.Strikethrough */),\n        };\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}