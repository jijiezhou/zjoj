{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { addDisposableListener, addStandardDisposableListener, reset } from '../../../../base/browser/dom.js';\nimport { createTrustedTypesPolicy } from '../../../../base/browser/trustedTypes.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { DomScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { Action } from '../../../../base/common/actions.js';\nimport { forEachAdjacent, groupAdjacentBy } from '../../../../base/common/arrays.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, derivedWithStore, observableValue, subtransaction, transaction } from '../../../../base/common/observable.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { applyStyle } from './utils.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nimport { LineRange } from '../../../common/core/lineRange.js';\nimport { OffsetRange } from '../../../common/core/offsetRange.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { LineRangeMapping } from '../../../common/diff/rangeMapping.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { LineTokens } from '../../../common/tokens/lineTokens.js';\nimport { RenderLineInput, renderViewLine2 } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../../common/viewModel.js';\nimport { localize } from '../../../../nls.js';\nimport { AudioCue, IAudioCueService } from '../../../../platform/audioCues/browser/audioCueService.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport './accessibleDiffViewer.css';\nconst accessibleDiffViewerInsertIcon = registerIcon('diff-review-insert', Codicon.add, localize('accessibleDiffViewerInsertIcon', 'Icon for \\'Insert\\' in accessible diff viewer.'));\nconst accessibleDiffViewerRemoveIcon = registerIcon('diff-review-remove', Codicon.remove, localize('accessibleDiffViewerRemoveIcon', 'Icon for \\'Remove\\' in accessible diff viewer.'));\nconst accessibleDiffViewerCloseIcon = registerIcon('diff-review-close', Codicon.close, localize('accessibleDiffViewerCloseIcon', 'Icon for \\'Close\\' in accessible diff viewer.'));\nlet AccessibleDiffViewer = class AccessibleDiffViewer extends Disposable {\n  constructor(_parentNode, _visible, _setVisible, _canClose, _width, _height, _diffs, _editors, _instantiationService) {\n    super();\n    this._parentNode = _parentNode;\n    this._visible = _visible;\n    this._setVisible = _setVisible;\n    this._canClose = _canClose;\n    this._width = _width;\n    this._height = _height;\n    this._diffs = _diffs;\n    this._editors = _editors;\n    this._instantiationService = _instantiationService;\n    this._state = derivedWithStore(this, (reader, store) => {\n      const visible = this._visible.read(reader);\n      this._parentNode.style.visibility = visible ? 'visible' : 'hidden';\n      if (!visible) {\n        return null;\n      }\n      const model = store.add(this._instantiationService.createInstance(ViewModel, this._diffs, this._editors, this._setVisible, this._canClose));\n      const view = store.add(this._instantiationService.createInstance(View, this._parentNode, model, this._width, this._height, this._editors));\n      return {\n        model,\n        view\n      };\n    }).recomputeInitiallyAndOnChange(this._store);\n  }\n  next() {\n    transaction(tx => {\n      const isVisible = this._visible.get();\n      this._setVisible(true, tx);\n      if (isVisible) {\n        this._state.get().model.nextGroup(tx);\n      }\n    });\n  }\n  prev() {\n    transaction(tx => {\n      this._setVisible(true, tx);\n      this._state.get().model.previousGroup(tx);\n    });\n  }\n  close() {\n    transaction(tx => {\n      this._setVisible(false, tx);\n    });\n  }\n};\nAccessibleDiffViewer._ttPolicy = createTrustedTypesPolicy('diffReview', {\n  createHTML: value => value\n});\nAccessibleDiffViewer = __decorate([__param(8, IInstantiationService)], AccessibleDiffViewer);\nexport { AccessibleDiffViewer };\nlet ViewModel = class ViewModel extends Disposable {\n  constructor(_diffs, _editors, _setVisible, canClose, _audioCueService) {\n    super();\n    this._diffs = _diffs;\n    this._editors = _editors;\n    this._setVisible = _setVisible;\n    this.canClose = canClose;\n    this._audioCueService = _audioCueService;\n    this._groups = observableValue(this, []);\n    this._currentGroupIdx = observableValue(this, 0);\n    this._currentElementIdx = observableValue(this, 0);\n    this.groups = this._groups;\n    this.currentGroup = this._currentGroupIdx.map((idx, r) => this._groups.read(r)[idx]);\n    this.currentGroupIndex = this._currentGroupIdx;\n    this.currentElement = this._currentElementIdx.map((idx, r) => {\n      var _a;\n      return (_a = this.currentGroup.read(r)) === null || _a === void 0 ? void 0 : _a.lines[idx];\n    });\n    this._register(autorun(reader => {\n      /** @description update groups */\n      const diffs = this._diffs.read(reader);\n      if (!diffs) {\n        this._groups.set([], undefined);\n        return;\n      }\n      const groups = computeViewElementGroups(diffs, this._editors.original.getModel().getLineCount(), this._editors.modified.getModel().getLineCount());\n      transaction(tx => {\n        const p = this._editors.modified.getPosition();\n        if (p) {\n          const nextGroup = groups.findIndex(g => (p === null || p === void 0 ? void 0 : p.lineNumber) < g.range.modified.endLineNumberExclusive);\n          if (nextGroup !== -1) {\n            this._currentGroupIdx.set(nextGroup, tx);\n          }\n        }\n        this._groups.set(groups, tx);\n      });\n    }));\n    this._register(autorun(reader => {\n      /** @description play audio-cue for diff */\n      const currentViewItem = this.currentElement.read(reader);\n      if ((currentViewItem === null || currentViewItem === void 0 ? void 0 : currentViewItem.type) === LineType.Deleted) {\n        this._audioCueService.playAudioCue(AudioCue.diffLineDeleted, {\n          source: 'accessibleDiffViewer.currentElementChanged'\n        });\n      } else if ((currentViewItem === null || currentViewItem === void 0 ? void 0 : currentViewItem.type) === LineType.Added) {\n        this._audioCueService.playAudioCue(AudioCue.diffLineInserted, {\n          source: 'accessibleDiffViewer.currentElementChanged'\n        });\n      }\n    }));\n    this._register(autorun(reader => {\n      var _a;\n      /** @description select lines in editor */\n      // This ensures editor commands (like revert/stage) work\n      const currentViewItem = this.currentElement.read(reader);\n      if (currentViewItem && currentViewItem.type !== LineType.Header) {\n        const lineNumber = (_a = currentViewItem.modifiedLineNumber) !== null && _a !== void 0 ? _a : currentViewItem.diff.modified.startLineNumber;\n        this._editors.modified.setSelection(Range.fromPositions(new Position(lineNumber, 1)));\n      }\n    }));\n  }\n  _goToGroupDelta(delta, tx) {\n    const groups = this.groups.get();\n    if (!groups || groups.length <= 1) {\n      return;\n    }\n    subtransaction(tx, tx => {\n      this._currentGroupIdx.set(OffsetRange.ofLength(groups.length).clipCyclic(this._currentGroupIdx.get() + delta), tx);\n      this._currentElementIdx.set(0, tx);\n    });\n  }\n  nextGroup(tx) {\n    this._goToGroupDelta(1, tx);\n  }\n  previousGroup(tx) {\n    this._goToGroupDelta(-1, tx);\n  }\n  _goToLineDelta(delta) {\n    const group = this.currentGroup.get();\n    if (!group || group.lines.length <= 1) {\n      return;\n    }\n    transaction(tx => {\n      this._currentElementIdx.set(OffsetRange.ofLength(group.lines.length).clip(this._currentElementIdx.get() + delta), tx);\n    });\n  }\n  goToNextLine() {\n    this._goToLineDelta(1);\n  }\n  goToPreviousLine() {\n    this._goToLineDelta(-1);\n  }\n  goToLine(line) {\n    const group = this.currentGroup.get();\n    if (!group) {\n      return;\n    }\n    const idx = group.lines.indexOf(line);\n    if (idx === -1) {\n      return;\n    }\n    transaction(tx => {\n      this._currentElementIdx.set(idx, tx);\n    });\n  }\n  revealCurrentElementInEditor() {\n    this._setVisible(false, undefined);\n    const curElem = this.currentElement.get();\n    if (curElem) {\n      if (curElem.type === LineType.Deleted) {\n        this._editors.original.setSelection(Range.fromPositions(new Position(curElem.originalLineNumber, 1)));\n        this._editors.original.revealLine(curElem.originalLineNumber);\n        this._editors.original.focus();\n      } else {\n        if (curElem.type !== LineType.Header) {\n          this._editors.modified.setSelection(Range.fromPositions(new Position(curElem.modifiedLineNumber, 1)));\n          this._editors.modified.revealLine(curElem.modifiedLineNumber);\n        }\n        this._editors.modified.focus();\n      }\n    }\n  }\n  close() {\n    this._setVisible(false, undefined);\n    this._editors.modified.focus();\n  }\n};\nViewModel = __decorate([__param(4, IAudioCueService)], ViewModel);\nconst viewElementGroupLineMargin = 3;\nfunction computeViewElementGroups(diffs, originalLineCount, modifiedLineCount) {\n  const result = [];\n  for (const g of groupAdjacentBy(diffs, (a, b) => b.modified.startLineNumber - a.modified.endLineNumberExclusive < 2 * viewElementGroupLineMargin)) {\n    const viewElements = [];\n    viewElements.push(new HeaderViewElement());\n    const origFullRange = new LineRange(Math.max(1, g[0].original.startLineNumber - viewElementGroupLineMargin), Math.min(g[g.length - 1].original.endLineNumberExclusive + viewElementGroupLineMargin, originalLineCount + 1));\n    const modifiedFullRange = new LineRange(Math.max(1, g[0].modified.startLineNumber - viewElementGroupLineMargin), Math.min(g[g.length - 1].modified.endLineNumberExclusive + viewElementGroupLineMargin, modifiedLineCount + 1));\n    forEachAdjacent(g, (a, b) => {\n      const origRange = new LineRange(a ? a.original.endLineNumberExclusive : origFullRange.startLineNumber, b ? b.original.startLineNumber : origFullRange.endLineNumberExclusive);\n      const modifiedRange = new LineRange(a ? a.modified.endLineNumberExclusive : modifiedFullRange.startLineNumber, b ? b.modified.startLineNumber : modifiedFullRange.endLineNumberExclusive);\n      origRange.forEach(origLineNumber => {\n        viewElements.push(new UnchangedLineViewElement(origLineNumber, modifiedRange.startLineNumber + (origLineNumber - origRange.startLineNumber)));\n      });\n      if (b) {\n        b.original.forEach(origLineNumber => {\n          viewElements.push(new DeletedLineViewElement(b, origLineNumber));\n        });\n        b.modified.forEach(modifiedLineNumber => {\n          viewElements.push(new AddedLineViewElement(b, modifiedLineNumber));\n        });\n      }\n    });\n    const modifiedRange = g[0].modified.join(g[g.length - 1].modified);\n    const originalRange = g[0].original.join(g[g.length - 1].original);\n    result.push(new ViewElementGroup(new LineRangeMapping(modifiedRange, originalRange), viewElements));\n  }\n  return result;\n}\nvar LineType;\n(function (LineType) {\n  LineType[LineType[\"Header\"] = 0] = \"Header\";\n  LineType[LineType[\"Unchanged\"] = 1] = \"Unchanged\";\n  LineType[LineType[\"Deleted\"] = 2] = \"Deleted\";\n  LineType[LineType[\"Added\"] = 3] = \"Added\";\n})(LineType || (LineType = {}));\nclass ViewElementGroup {\n  constructor(range, lines) {\n    this.range = range;\n    this.lines = lines;\n  }\n}\nclass HeaderViewElement {\n  constructor() {\n    this.type = LineType.Header;\n  }\n}\nclass DeletedLineViewElement {\n  constructor(diff, originalLineNumber) {\n    this.diff = diff;\n    this.originalLineNumber = originalLineNumber;\n    this.type = LineType.Deleted;\n    this.modifiedLineNumber = undefined;\n  }\n}\nclass AddedLineViewElement {\n  constructor(diff, modifiedLineNumber) {\n    this.diff = diff;\n    this.modifiedLineNumber = modifiedLineNumber;\n    this.type = LineType.Added;\n    this.originalLineNumber = undefined;\n  }\n}\nclass UnchangedLineViewElement {\n  constructor(originalLineNumber, modifiedLineNumber) {\n    this.originalLineNumber = originalLineNumber;\n    this.modifiedLineNumber = modifiedLineNumber;\n    this.type = LineType.Unchanged;\n  }\n}\nlet View = class View extends Disposable {\n  constructor(_element, _model, _width, _height, _editors, _languageService) {\n    super();\n    this._element = _element;\n    this._model = _model;\n    this._width = _width;\n    this._height = _height;\n    this._editors = _editors;\n    this._languageService = _languageService;\n    this.domNode = this._element;\n    this.domNode.className = 'diff-review monaco-editor-background';\n    const actionBarContainer = document.createElement('div');\n    actionBarContainer.className = 'diff-review-actions';\n    this._actionBar = this._register(new ActionBar(actionBarContainer));\n    this._register(autorun(reader => {\n      /** @description update actions */\n      this._actionBar.clear();\n      if (this._model.canClose.read(reader)) {\n        this._actionBar.push(new Action('diffreview.close', localize('label.close', \"Close\"), 'close-diff-review ' + ThemeIcon.asClassName(accessibleDiffViewerCloseIcon), true, async () => _model.close()), {\n          label: false,\n          icon: true\n        });\n      }\n    }));\n    this._content = document.createElement('div');\n    this._content.className = 'diff-review-content';\n    this._content.setAttribute('role', 'code');\n    this._scrollbar = this._register(new DomScrollableElement(this._content, {}));\n    reset(this.domNode, this._scrollbar.getDomNode(), actionBarContainer);\n    this._register(toDisposable(() => {\n      reset(this.domNode);\n    }));\n    this._register(applyStyle(this.domNode, {\n      width: this._width,\n      height: this._height\n    }));\n    this._register(applyStyle(this._content, {\n      width: this._width,\n      height: this._height\n    }));\n    this._register(autorunWithStore((reader, store) => {\n      /** @description render */\n      this._model.currentGroup.read(reader);\n      this._render(store);\n    }));\n    // TODO@hediet use commands\n    this._register(addStandardDisposableListener(this.domNode, 'keydown', e => {\n      if (e.equals(18 /* KeyCode.DownArrow */) || e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */) || e.equals(512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */)) {\n        e.preventDefault();\n        this._model.goToNextLine();\n      }\n      if (e.equals(16 /* KeyCode.UpArrow */) || e.equals(2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */) || e.equals(512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */)) {\n        e.preventDefault();\n        this._model.goToPreviousLine();\n      }\n      if (e.equals(9 /* KeyCode.Escape */) || e.equals(2048 /* KeyMod.CtrlCmd */ | 9 /* KeyCode.Escape */) || e.equals(512 /* KeyMod.Alt */ | 9 /* KeyCode.Escape */) || e.equals(1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */)) {\n        e.preventDefault();\n        this._model.close();\n      }\n      if (e.equals(10 /* KeyCode.Space */) || e.equals(3 /* KeyCode.Enter */)) {\n        e.preventDefault();\n        this._model.revealCurrentElementInEditor();\n      }\n    }));\n  }\n  _render(store) {\n    const originalOptions = this._editors.original.getOptions();\n    const modifiedOptions = this._editors.modified.getOptions();\n    const container = document.createElement('div');\n    container.className = 'diff-review-table';\n    container.setAttribute('role', 'list');\n    container.setAttribute('aria-label', localize('ariaLabel', 'Accessible Diff Viewer. Use arrow up and down to navigate.'));\n    applyFontInfo(container, modifiedOptions.get(50 /* EditorOption.fontInfo */));\n    reset(this._content, container);\n    const originalModel = this._editors.original.getModel();\n    const modifiedModel = this._editors.modified.getModel();\n    if (!originalModel || !modifiedModel) {\n      return;\n    }\n    const originalModelOpts = originalModel.getOptions();\n    const modifiedModelOpts = modifiedModel.getOptions();\n    const lineHeight = modifiedOptions.get(66 /* EditorOption.lineHeight */);\n    const group = this._model.currentGroup.get();\n    for (const viewItem of (group === null || group === void 0 ? void 0 : group.lines) || []) {\n      if (!group) {\n        break;\n      }\n      let row;\n      if (viewItem.type === LineType.Header) {\n        const header = document.createElement('div');\n        header.className = 'diff-review-row';\n        header.setAttribute('role', 'listitem');\n        const r = group.range;\n        const diffIndex = this._model.currentGroupIndex.get();\n        const diffsLength = this._model.groups.get().length;\n        const getAriaLines = lines => lines === 0 ? localize('no_lines_changed', \"no lines changed\") : lines === 1 ? localize('one_line_changed', \"1 line changed\") : localize('more_lines_changed', \"{0} lines changed\", lines);\n        const originalChangedLinesCntAria = getAriaLines(r.original.length);\n        const modifiedChangedLinesCntAria = getAriaLines(r.modified.length);\n        header.setAttribute('aria-label', localize({\n          key: 'header',\n          comment: ['This is the ARIA label for a git diff header.', 'A git diff header looks like this: @@ -154,12 +159,39 @@.', 'That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.', 'Variables 0 and 1 refer to the diff index out of total number of diffs.', 'Variables 2 and 4 will be numbers (a line number).', 'Variables 3 and 5 will be \"no lines changed\", \"1 line changed\" or \"X lines changed\", localized separately.']\n        }, \"Difference {0} of {1}: original line {2}, {3}, modified line {4}, {5}\", diffIndex + 1, diffsLength, r.original.startLineNumber, originalChangedLinesCntAria, r.modified.startLineNumber, modifiedChangedLinesCntAria));\n        const cell = document.createElement('div');\n        cell.className = 'diff-review-cell diff-review-summary';\n        // e.g.: `1/10: @@ -504,7 +517,7 @@`\n        cell.appendChild(document.createTextNode(`${diffIndex + 1}/${diffsLength}: @@ -${r.original.startLineNumber},${r.original.length} +${r.modified.startLineNumber},${r.modified.length} @@`));\n        header.appendChild(cell);\n        row = header;\n      } else {\n        row = this._createRow(viewItem, lineHeight, this._width.get(), originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts);\n      }\n      container.appendChild(row);\n      const isSelectedObs = derived(reader => /** @description isSelected */this._model.currentElement.read(reader) === viewItem);\n      store.add(autorun(reader => {\n        /** @description update tab index */\n        const isSelected = isSelectedObs.read(reader);\n        row.tabIndex = isSelected ? 0 : -1;\n        if (isSelected) {\n          row.focus();\n        }\n      }));\n      store.add(addDisposableListener(row, 'focus', () => {\n        this._model.goToLine(viewItem);\n      }));\n    }\n    this._scrollbar.scanDomNode();\n  }\n  _createRow(item, lineHeight, width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts) {\n    const originalLayoutInfo = originalOptions.get(143 /* EditorOption.layoutInfo */);\n    const originalLineNumbersWidth = originalLayoutInfo.glyphMarginWidth + originalLayoutInfo.lineNumbersWidth;\n    const modifiedLayoutInfo = modifiedOptions.get(143 /* EditorOption.layoutInfo */);\n    const modifiedLineNumbersWidth = 10 + modifiedLayoutInfo.glyphMarginWidth + modifiedLayoutInfo.lineNumbersWidth;\n    let rowClassName = 'diff-review-row';\n    let lineNumbersExtraClassName = '';\n    const spacerClassName = 'diff-review-spacer';\n    let spacerIcon = null;\n    switch (item.type) {\n      case LineType.Added:\n        rowClassName = 'diff-review-row line-insert';\n        lineNumbersExtraClassName = ' char-insert';\n        spacerIcon = accessibleDiffViewerInsertIcon;\n        break;\n      case LineType.Deleted:\n        rowClassName = 'diff-review-row line-delete';\n        lineNumbersExtraClassName = ' char-delete';\n        spacerIcon = accessibleDiffViewerRemoveIcon;\n        break;\n    }\n    const row = document.createElement('div');\n    row.style.minWidth = width + 'px';\n    row.className = rowClassName;\n    row.setAttribute('role', 'listitem');\n    row.ariaLevel = '';\n    const cell = document.createElement('div');\n    cell.className = 'diff-review-cell';\n    cell.style.height = `${lineHeight}px`;\n    row.appendChild(cell);\n    const originalLineNumber = document.createElement('span');\n    originalLineNumber.style.width = originalLineNumbersWidth + 'px';\n    originalLineNumber.style.minWidth = originalLineNumbersWidth + 'px';\n    originalLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n    if (item.originalLineNumber !== undefined) {\n      originalLineNumber.appendChild(document.createTextNode(String(item.originalLineNumber)));\n    } else {\n      originalLineNumber.innerText = '\\u00a0';\n    }\n    cell.appendChild(originalLineNumber);\n    const modifiedLineNumber = document.createElement('span');\n    modifiedLineNumber.style.width = modifiedLineNumbersWidth + 'px';\n    modifiedLineNumber.style.minWidth = modifiedLineNumbersWidth + 'px';\n    modifiedLineNumber.style.paddingRight = '10px';\n    modifiedLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n    if (item.modifiedLineNumber !== undefined) {\n      modifiedLineNumber.appendChild(document.createTextNode(String(item.modifiedLineNumber)));\n    } else {\n      modifiedLineNumber.innerText = '\\u00a0';\n    }\n    cell.appendChild(modifiedLineNumber);\n    const spacer = document.createElement('span');\n    spacer.className = spacerClassName;\n    if (spacerIcon) {\n      const spacerCodicon = document.createElement('span');\n      spacerCodicon.className = ThemeIcon.asClassName(spacerIcon);\n      spacerCodicon.innerText = '\\u00a0\\u00a0';\n      spacer.appendChild(spacerCodicon);\n    } else {\n      spacer.innerText = '\\u00a0\\u00a0';\n    }\n    cell.appendChild(spacer);\n    let lineContent;\n    if (item.modifiedLineNumber !== undefined) {\n      let html = this._getLineHtml(modifiedModel, modifiedOptions, modifiedModelOpts.tabSize, item.modifiedLineNumber, this._languageService.languageIdCodec);\n      if (AccessibleDiffViewer._ttPolicy) {\n        html = AccessibleDiffViewer._ttPolicy.createHTML(html);\n      }\n      cell.insertAdjacentHTML('beforeend', html);\n      lineContent = modifiedModel.getLineContent(item.modifiedLineNumber);\n    } else {\n      let html = this._getLineHtml(originalModel, originalOptions, originalModelOpts.tabSize, item.originalLineNumber, this._languageService.languageIdCodec);\n      if (AccessibleDiffViewer._ttPolicy) {\n        html = AccessibleDiffViewer._ttPolicy.createHTML(html);\n      }\n      cell.insertAdjacentHTML('beforeend', html);\n      lineContent = originalModel.getLineContent(item.originalLineNumber);\n    }\n    if (lineContent.length === 0) {\n      lineContent = localize('blankLine', \"blank\");\n    }\n    let ariaLabel = '';\n    switch (item.type) {\n      case LineType.Unchanged:\n        if (item.originalLineNumber === item.modifiedLineNumber) {\n          ariaLabel = localize({\n            key: 'unchangedLine',\n            comment: ['The placeholders are contents of the line and should not be translated.']\n          }, \"{0} unchanged line {1}\", lineContent, item.originalLineNumber);\n        } else {\n          ariaLabel = localize('equalLine', \"{0} original line {1} modified line {2}\", lineContent, item.originalLineNumber, item.modifiedLineNumber);\n        }\n        break;\n      case LineType.Added:\n        ariaLabel = localize('insertLine', \"+ {0} modified line {1}\", lineContent, item.modifiedLineNumber);\n        break;\n      case LineType.Deleted:\n        ariaLabel = localize('deleteLine', \"- {0} original line {1}\", lineContent, item.originalLineNumber);\n        break;\n    }\n    row.setAttribute('aria-label', ariaLabel);\n    return row;\n  }\n  _getLineHtml(model, options, tabSize, lineNumber, languageIdCodec) {\n    const lineContent = model.getLineContent(lineNumber);\n    const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n    const lineTokens = LineTokens.createEmpty(lineContent, languageIdCodec);\n    const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, model.mightContainNonBasicASCII());\n    const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, model.mightContainRTL());\n    const r = renderViewLine2(new RenderLineInput(fontInfo.isMonospace && !options.get(33 /* EditorOption.disableMonospaceOptimizations */), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, options.get(116 /* EditorOption.stopRenderingLineAfter */), options.get(98 /* EditorOption.renderWhitespace */), options.get(93 /* EditorOption.renderControlCharacters */), options.get(51 /* EditorOption.fontLigatures */) !== EditorFontLigatures.OFF, null));\n    return r.html;\n  }\n};\nView = __decorate([__param(5, ILanguageService)], View);","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","addDisposableListener","addStandardDisposableListener","reset","createTrustedTypesPolicy","ActionBar","DomScrollableElement","Action","forEachAdjacent","groupAdjacentBy","Codicon","Disposable","toDisposable","autorun","autorunWithStore","derived","derivedWithStore","observableValue","subtransaction","transaction","ThemeIcon","applyFontInfo","applyStyle","EditorFontLigatures","LineRange","OffsetRange","Position","Range","LineRangeMapping","ILanguageService","LineTokens","RenderLineInput","renderViewLine2","ViewLineRenderingData","localize","AudioCue","IAudioCueService","IInstantiationService","registerIcon","accessibleDiffViewerInsertIcon","add","accessibleDiffViewerRemoveIcon","remove","accessibleDiffViewerCloseIcon","close","AccessibleDiffViewer","constructor","_parentNode","_visible","_setVisible","_canClose","_width","_height","_diffs","_editors","_instantiationService","_state","reader","store","visible","read","style","visibility","model","createInstance","ViewModel","view","View","recomputeInitiallyAndOnChange","_store","next","tx","isVisible","get","nextGroup","prev","previousGroup","_ttPolicy","createHTML","value","canClose","_audioCueService","_groups","_currentGroupIdx","_currentElementIdx","groups","currentGroup","map","idx","currentGroupIndex","currentElement","_a","lines","_register","diffs","set","undefined","computeViewElementGroups","original","getModel","getLineCount","modified","p","getPosition","findIndex","g","lineNumber","range","endLineNumberExclusive","currentViewItem","type","LineType","Deleted","playAudioCue","diffLineDeleted","source","Added","diffLineInserted","Header","modifiedLineNumber","diff","startLineNumber","setSelection","fromPositions","_goToGroupDelta","delta","ofLength","clipCyclic","_goToLineDelta","group","clip","goToNextLine","goToPreviousLine","goToLine","line","indexOf","revealCurrentElementInEditor","curElem","originalLineNumber","revealLine","focus","viewElementGroupLineMargin","originalLineCount","modifiedLineCount","result","a","b","viewElements","push","HeaderViewElement","origFullRange","Math","max","min","modifiedFullRange","origRange","modifiedRange","forEach","origLineNumber","UnchangedLineViewElement","DeletedLineViewElement","AddedLineViewElement","join","originalRange","ViewElementGroup","Unchanged","_element","_model","_languageService","domNode","className","actionBarContainer","document","createElement","_actionBar","clear","asClassName","label","icon","_content","setAttribute","_scrollbar","getDomNode","width","height","_render","e","equals","preventDefault","originalOptions","getOptions","modifiedOptions","container","originalModel","modifiedModel","originalModelOpts","modifiedModelOpts","lineHeight","viewItem","row","header","diffIndex","diffsLength","getAriaLines","originalChangedLinesCntAria","modifiedChangedLinesCntAria","comment","cell","appendChild","createTextNode","_createRow","isSelectedObs","isSelected","tabIndex","scanDomNode","item","originalLayoutInfo","originalLineNumbersWidth","glyphMarginWidth","lineNumbersWidth","modifiedLayoutInfo","modifiedLineNumbersWidth","rowClassName","lineNumbersExtraClassName","spacerClassName","spacerIcon","minWidth","ariaLevel","String","innerText","paddingRight","spacer","spacerCodicon","lineContent","html","_getLineHtml","tabSize","languageIdCodec","insertAdjacentHTML","getLineContent","ariaLabel","options","fontInfo","lineTokens","createEmpty","isBasicASCII","mightContainNonBasicASCII","containsRTL","mightContainRTL","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","OFF"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/accessibleDiffViewer.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { addDisposableListener, addStandardDisposableListener, reset } from '../../../../base/browser/dom.js';\nimport { createTrustedTypesPolicy } from '../../../../base/browser/trustedTypes.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { DomScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { Action } from '../../../../base/common/actions.js';\nimport { forEachAdjacent, groupAdjacentBy } from '../../../../base/common/arrays.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, derivedWithStore, observableValue, subtransaction, transaction } from '../../../../base/common/observable.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { applyStyle } from './utils.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nimport { LineRange } from '../../../common/core/lineRange.js';\nimport { OffsetRange } from '../../../common/core/offsetRange.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { LineRangeMapping } from '../../../common/diff/rangeMapping.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { LineTokens } from '../../../common/tokens/lineTokens.js';\nimport { RenderLineInput, renderViewLine2 } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../../common/viewModel.js';\nimport { localize } from '../../../../nls.js';\nimport { AudioCue, IAudioCueService } from '../../../../platform/audioCues/browser/audioCueService.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport './accessibleDiffViewer.css';\nconst accessibleDiffViewerInsertIcon = registerIcon('diff-review-insert', Codicon.add, localize('accessibleDiffViewerInsertIcon', 'Icon for \\'Insert\\' in accessible diff viewer.'));\nconst accessibleDiffViewerRemoveIcon = registerIcon('diff-review-remove', Codicon.remove, localize('accessibleDiffViewerRemoveIcon', 'Icon for \\'Remove\\' in accessible diff viewer.'));\nconst accessibleDiffViewerCloseIcon = registerIcon('diff-review-close', Codicon.close, localize('accessibleDiffViewerCloseIcon', 'Icon for \\'Close\\' in accessible diff viewer.'));\nlet AccessibleDiffViewer = class AccessibleDiffViewer extends Disposable {\n    constructor(_parentNode, _visible, _setVisible, _canClose, _width, _height, _diffs, _editors, _instantiationService) {\n        super();\n        this._parentNode = _parentNode;\n        this._visible = _visible;\n        this._setVisible = _setVisible;\n        this._canClose = _canClose;\n        this._width = _width;\n        this._height = _height;\n        this._diffs = _diffs;\n        this._editors = _editors;\n        this._instantiationService = _instantiationService;\n        this._state = derivedWithStore(this, (reader, store) => {\n            const visible = this._visible.read(reader);\n            this._parentNode.style.visibility = visible ? 'visible' : 'hidden';\n            if (!visible) {\n                return null;\n            }\n            const model = store.add(this._instantiationService.createInstance(ViewModel, this._diffs, this._editors, this._setVisible, this._canClose));\n            const view = store.add(this._instantiationService.createInstance(View, this._parentNode, model, this._width, this._height, this._editors));\n            return { model, view, };\n        }).recomputeInitiallyAndOnChange(this._store);\n    }\n    next() {\n        transaction(tx => {\n            const isVisible = this._visible.get();\n            this._setVisible(true, tx);\n            if (isVisible) {\n                this._state.get().model.nextGroup(tx);\n            }\n        });\n    }\n    prev() {\n        transaction(tx => {\n            this._setVisible(true, tx);\n            this._state.get().model.previousGroup(tx);\n        });\n    }\n    close() {\n        transaction(tx => {\n            this._setVisible(false, tx);\n        });\n    }\n};\nAccessibleDiffViewer._ttPolicy = createTrustedTypesPolicy('diffReview', { createHTML: value => value });\nAccessibleDiffViewer = __decorate([\n    __param(8, IInstantiationService)\n], AccessibleDiffViewer);\nexport { AccessibleDiffViewer };\nlet ViewModel = class ViewModel extends Disposable {\n    constructor(_diffs, _editors, _setVisible, canClose, _audioCueService) {\n        super();\n        this._diffs = _diffs;\n        this._editors = _editors;\n        this._setVisible = _setVisible;\n        this.canClose = canClose;\n        this._audioCueService = _audioCueService;\n        this._groups = observableValue(this, []);\n        this._currentGroupIdx = observableValue(this, 0);\n        this._currentElementIdx = observableValue(this, 0);\n        this.groups = this._groups;\n        this.currentGroup = this._currentGroupIdx.map((idx, r) => this._groups.read(r)[idx]);\n        this.currentGroupIndex = this._currentGroupIdx;\n        this.currentElement = this._currentElementIdx.map((idx, r) => { var _a; return (_a = this.currentGroup.read(r)) === null || _a === void 0 ? void 0 : _a.lines[idx]; });\n        this._register(autorun(reader => {\n            /** @description update groups */\n            const diffs = this._diffs.read(reader);\n            if (!diffs) {\n                this._groups.set([], undefined);\n                return;\n            }\n            const groups = computeViewElementGroups(diffs, this._editors.original.getModel().getLineCount(), this._editors.modified.getModel().getLineCount());\n            transaction(tx => {\n                const p = this._editors.modified.getPosition();\n                if (p) {\n                    const nextGroup = groups.findIndex(g => (p === null || p === void 0 ? void 0 : p.lineNumber) < g.range.modified.endLineNumberExclusive);\n                    if (nextGroup !== -1) {\n                        this._currentGroupIdx.set(nextGroup, tx);\n                    }\n                }\n                this._groups.set(groups, tx);\n            });\n        }));\n        this._register(autorun(reader => {\n            /** @description play audio-cue for diff */\n            const currentViewItem = this.currentElement.read(reader);\n            if ((currentViewItem === null || currentViewItem === void 0 ? void 0 : currentViewItem.type) === LineType.Deleted) {\n                this._audioCueService.playAudioCue(AudioCue.diffLineDeleted, { source: 'accessibleDiffViewer.currentElementChanged' });\n            }\n            else if ((currentViewItem === null || currentViewItem === void 0 ? void 0 : currentViewItem.type) === LineType.Added) {\n                this._audioCueService.playAudioCue(AudioCue.diffLineInserted, { source: 'accessibleDiffViewer.currentElementChanged' });\n            }\n        }));\n        this._register(autorun(reader => {\n            var _a;\n            /** @description select lines in editor */\n            // This ensures editor commands (like revert/stage) work\n            const currentViewItem = this.currentElement.read(reader);\n            if (currentViewItem && currentViewItem.type !== LineType.Header) {\n                const lineNumber = (_a = currentViewItem.modifiedLineNumber) !== null && _a !== void 0 ? _a : currentViewItem.diff.modified.startLineNumber;\n                this._editors.modified.setSelection(Range.fromPositions(new Position(lineNumber, 1)));\n            }\n        }));\n    }\n    _goToGroupDelta(delta, tx) {\n        const groups = this.groups.get();\n        if (!groups || groups.length <= 1) {\n            return;\n        }\n        subtransaction(tx, tx => {\n            this._currentGroupIdx.set(OffsetRange.ofLength(groups.length).clipCyclic(this._currentGroupIdx.get() + delta), tx);\n            this._currentElementIdx.set(0, tx);\n        });\n    }\n    nextGroup(tx) { this._goToGroupDelta(1, tx); }\n    previousGroup(tx) { this._goToGroupDelta(-1, tx); }\n    _goToLineDelta(delta) {\n        const group = this.currentGroup.get();\n        if (!group || group.lines.length <= 1) {\n            return;\n        }\n        transaction(tx => {\n            this._currentElementIdx.set(OffsetRange.ofLength(group.lines.length).clip(this._currentElementIdx.get() + delta), tx);\n        });\n    }\n    goToNextLine() { this._goToLineDelta(1); }\n    goToPreviousLine() { this._goToLineDelta(-1); }\n    goToLine(line) {\n        const group = this.currentGroup.get();\n        if (!group) {\n            return;\n        }\n        const idx = group.lines.indexOf(line);\n        if (idx === -1) {\n            return;\n        }\n        transaction(tx => {\n            this._currentElementIdx.set(idx, tx);\n        });\n    }\n    revealCurrentElementInEditor() {\n        this._setVisible(false, undefined);\n        const curElem = this.currentElement.get();\n        if (curElem) {\n            if (curElem.type === LineType.Deleted) {\n                this._editors.original.setSelection(Range.fromPositions(new Position(curElem.originalLineNumber, 1)));\n                this._editors.original.revealLine(curElem.originalLineNumber);\n                this._editors.original.focus();\n            }\n            else {\n                if (curElem.type !== LineType.Header) {\n                    this._editors.modified.setSelection(Range.fromPositions(new Position(curElem.modifiedLineNumber, 1)));\n                    this._editors.modified.revealLine(curElem.modifiedLineNumber);\n                }\n                this._editors.modified.focus();\n            }\n        }\n    }\n    close() {\n        this._setVisible(false, undefined);\n        this._editors.modified.focus();\n    }\n};\nViewModel = __decorate([\n    __param(4, IAudioCueService)\n], ViewModel);\nconst viewElementGroupLineMargin = 3;\nfunction computeViewElementGroups(diffs, originalLineCount, modifiedLineCount) {\n    const result = [];\n    for (const g of groupAdjacentBy(diffs, (a, b) => (b.modified.startLineNumber - a.modified.endLineNumberExclusive < 2 * viewElementGroupLineMargin))) {\n        const viewElements = [];\n        viewElements.push(new HeaderViewElement());\n        const origFullRange = new LineRange(Math.max(1, g[0].original.startLineNumber - viewElementGroupLineMargin), Math.min(g[g.length - 1].original.endLineNumberExclusive + viewElementGroupLineMargin, originalLineCount + 1));\n        const modifiedFullRange = new LineRange(Math.max(1, g[0].modified.startLineNumber - viewElementGroupLineMargin), Math.min(g[g.length - 1].modified.endLineNumberExclusive + viewElementGroupLineMargin, modifiedLineCount + 1));\n        forEachAdjacent(g, (a, b) => {\n            const origRange = new LineRange(a ? a.original.endLineNumberExclusive : origFullRange.startLineNumber, b ? b.original.startLineNumber : origFullRange.endLineNumberExclusive);\n            const modifiedRange = new LineRange(a ? a.modified.endLineNumberExclusive : modifiedFullRange.startLineNumber, b ? b.modified.startLineNumber : modifiedFullRange.endLineNumberExclusive);\n            origRange.forEach(origLineNumber => {\n                viewElements.push(new UnchangedLineViewElement(origLineNumber, modifiedRange.startLineNumber + (origLineNumber - origRange.startLineNumber)));\n            });\n            if (b) {\n                b.original.forEach(origLineNumber => {\n                    viewElements.push(new DeletedLineViewElement(b, origLineNumber));\n                });\n                b.modified.forEach(modifiedLineNumber => {\n                    viewElements.push(new AddedLineViewElement(b, modifiedLineNumber));\n                });\n            }\n        });\n        const modifiedRange = g[0].modified.join(g[g.length - 1].modified);\n        const originalRange = g[0].original.join(g[g.length - 1].original);\n        result.push(new ViewElementGroup(new LineRangeMapping(modifiedRange, originalRange), viewElements));\n    }\n    return result;\n}\nvar LineType;\n(function (LineType) {\n    LineType[LineType[\"Header\"] = 0] = \"Header\";\n    LineType[LineType[\"Unchanged\"] = 1] = \"Unchanged\";\n    LineType[LineType[\"Deleted\"] = 2] = \"Deleted\";\n    LineType[LineType[\"Added\"] = 3] = \"Added\";\n})(LineType || (LineType = {}));\nclass ViewElementGroup {\n    constructor(range, lines) {\n        this.range = range;\n        this.lines = lines;\n    }\n}\nclass HeaderViewElement {\n    constructor() {\n        this.type = LineType.Header;\n    }\n}\nclass DeletedLineViewElement {\n    constructor(diff, originalLineNumber) {\n        this.diff = diff;\n        this.originalLineNumber = originalLineNumber;\n        this.type = LineType.Deleted;\n        this.modifiedLineNumber = undefined;\n    }\n}\nclass AddedLineViewElement {\n    constructor(diff, modifiedLineNumber) {\n        this.diff = diff;\n        this.modifiedLineNumber = modifiedLineNumber;\n        this.type = LineType.Added;\n        this.originalLineNumber = undefined;\n    }\n}\nclass UnchangedLineViewElement {\n    constructor(originalLineNumber, modifiedLineNumber) {\n        this.originalLineNumber = originalLineNumber;\n        this.modifiedLineNumber = modifiedLineNumber;\n        this.type = LineType.Unchanged;\n    }\n}\nlet View = class View extends Disposable {\n    constructor(_element, _model, _width, _height, _editors, _languageService) {\n        super();\n        this._element = _element;\n        this._model = _model;\n        this._width = _width;\n        this._height = _height;\n        this._editors = _editors;\n        this._languageService = _languageService;\n        this.domNode = this._element;\n        this.domNode.className = 'diff-review monaco-editor-background';\n        const actionBarContainer = document.createElement('div');\n        actionBarContainer.className = 'diff-review-actions';\n        this._actionBar = this._register(new ActionBar(actionBarContainer));\n        this._register(autorun(reader => {\n            /** @description update actions */\n            this._actionBar.clear();\n            if (this._model.canClose.read(reader)) {\n                this._actionBar.push(new Action('diffreview.close', localize('label.close', \"Close\"), 'close-diff-review ' + ThemeIcon.asClassName(accessibleDiffViewerCloseIcon), true, async () => _model.close()), { label: false, icon: true });\n            }\n        }));\n        this._content = document.createElement('div');\n        this._content.className = 'diff-review-content';\n        this._content.setAttribute('role', 'code');\n        this._scrollbar = this._register(new DomScrollableElement(this._content, {}));\n        reset(this.domNode, this._scrollbar.getDomNode(), actionBarContainer);\n        this._register(toDisposable(() => { reset(this.domNode); }));\n        this._register(applyStyle(this.domNode, { width: this._width, height: this._height }));\n        this._register(applyStyle(this._content, { width: this._width, height: this._height }));\n        this._register(autorunWithStore((reader, store) => {\n            /** @description render */\n            this._model.currentGroup.read(reader);\n            this._render(store);\n        }));\n        // TODO@hediet use commands\n        this._register(addStandardDisposableListener(this.domNode, 'keydown', (e) => {\n            if (e.equals(18 /* KeyCode.DownArrow */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)\n                || e.equals(512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */)) {\n                e.preventDefault();\n                this._model.goToNextLine();\n            }\n            if (e.equals(16 /* KeyCode.UpArrow */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */)\n                || e.equals(512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */)) {\n                e.preventDefault();\n                this._model.goToPreviousLine();\n            }\n            if (e.equals(9 /* KeyCode.Escape */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 9 /* KeyCode.Escape */)\n                || e.equals(512 /* KeyMod.Alt */ | 9 /* KeyCode.Escape */)\n                || e.equals(1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */)) {\n                e.preventDefault();\n                this._model.close();\n            }\n            if (e.equals(10 /* KeyCode.Space */)\n                || e.equals(3 /* KeyCode.Enter */)) {\n                e.preventDefault();\n                this._model.revealCurrentElementInEditor();\n            }\n        }));\n    }\n    _render(store) {\n        const originalOptions = this._editors.original.getOptions();\n        const modifiedOptions = this._editors.modified.getOptions();\n        const container = document.createElement('div');\n        container.className = 'diff-review-table';\n        container.setAttribute('role', 'list');\n        container.setAttribute('aria-label', localize('ariaLabel', 'Accessible Diff Viewer. Use arrow up and down to navigate.'));\n        applyFontInfo(container, modifiedOptions.get(50 /* EditorOption.fontInfo */));\n        reset(this._content, container);\n        const originalModel = this._editors.original.getModel();\n        const modifiedModel = this._editors.modified.getModel();\n        if (!originalModel || !modifiedModel) {\n            return;\n        }\n        const originalModelOpts = originalModel.getOptions();\n        const modifiedModelOpts = modifiedModel.getOptions();\n        const lineHeight = modifiedOptions.get(66 /* EditorOption.lineHeight */);\n        const group = this._model.currentGroup.get();\n        for (const viewItem of (group === null || group === void 0 ? void 0 : group.lines) || []) {\n            if (!group) {\n                break;\n            }\n            let row;\n            if (viewItem.type === LineType.Header) {\n                const header = document.createElement('div');\n                header.className = 'diff-review-row';\n                header.setAttribute('role', 'listitem');\n                const r = group.range;\n                const diffIndex = this._model.currentGroupIndex.get();\n                const diffsLength = this._model.groups.get().length;\n                const getAriaLines = (lines) => lines === 0 ? localize('no_lines_changed', \"no lines changed\")\n                    : lines === 1 ? localize('one_line_changed', \"1 line changed\")\n                        : localize('more_lines_changed', \"{0} lines changed\", lines);\n                const originalChangedLinesCntAria = getAriaLines(r.original.length);\n                const modifiedChangedLinesCntAria = getAriaLines(r.modified.length);\n                header.setAttribute('aria-label', localize({\n                    key: 'header',\n                    comment: [\n                        'This is the ARIA label for a git diff header.',\n                        'A git diff header looks like this: @@ -154,12 +159,39 @@.',\n                        'That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.',\n                        'Variables 0 and 1 refer to the diff index out of total number of diffs.',\n                        'Variables 2 and 4 will be numbers (a line number).',\n                        'Variables 3 and 5 will be \"no lines changed\", \"1 line changed\" or \"X lines changed\", localized separately.'\n                    ]\n                }, \"Difference {0} of {1}: original line {2}, {3}, modified line {4}, {5}\", (diffIndex + 1), diffsLength, r.original.startLineNumber, originalChangedLinesCntAria, r.modified.startLineNumber, modifiedChangedLinesCntAria));\n                const cell = document.createElement('div');\n                cell.className = 'diff-review-cell diff-review-summary';\n                // e.g.: `1/10: @@ -504,7 +517,7 @@`\n                cell.appendChild(document.createTextNode(`${diffIndex + 1}/${diffsLength}: @@ -${r.original.startLineNumber},${r.original.length} +${r.modified.startLineNumber},${r.modified.length} @@`));\n                header.appendChild(cell);\n                row = header;\n            }\n            else {\n                row = this._createRow(viewItem, lineHeight, this._width.get(), originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts);\n            }\n            container.appendChild(row);\n            const isSelectedObs = derived(reader => /** @description isSelected */ this._model.currentElement.read(reader) === viewItem);\n            store.add(autorun(reader => {\n                /** @description update tab index */\n                const isSelected = isSelectedObs.read(reader);\n                row.tabIndex = isSelected ? 0 : -1;\n                if (isSelected) {\n                    row.focus();\n                }\n            }));\n            store.add(addDisposableListener(row, 'focus', () => {\n                this._model.goToLine(viewItem);\n            }));\n        }\n        this._scrollbar.scanDomNode();\n    }\n    _createRow(item, lineHeight, width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts) {\n        const originalLayoutInfo = originalOptions.get(143 /* EditorOption.layoutInfo */);\n        const originalLineNumbersWidth = originalLayoutInfo.glyphMarginWidth + originalLayoutInfo.lineNumbersWidth;\n        const modifiedLayoutInfo = modifiedOptions.get(143 /* EditorOption.layoutInfo */);\n        const modifiedLineNumbersWidth = 10 + modifiedLayoutInfo.glyphMarginWidth + modifiedLayoutInfo.lineNumbersWidth;\n        let rowClassName = 'diff-review-row';\n        let lineNumbersExtraClassName = '';\n        const spacerClassName = 'diff-review-spacer';\n        let spacerIcon = null;\n        switch (item.type) {\n            case LineType.Added:\n                rowClassName = 'diff-review-row line-insert';\n                lineNumbersExtraClassName = ' char-insert';\n                spacerIcon = accessibleDiffViewerInsertIcon;\n                break;\n            case LineType.Deleted:\n                rowClassName = 'diff-review-row line-delete';\n                lineNumbersExtraClassName = ' char-delete';\n                spacerIcon = accessibleDiffViewerRemoveIcon;\n                break;\n        }\n        const row = document.createElement('div');\n        row.style.minWidth = width + 'px';\n        row.className = rowClassName;\n        row.setAttribute('role', 'listitem');\n        row.ariaLevel = '';\n        const cell = document.createElement('div');\n        cell.className = 'diff-review-cell';\n        cell.style.height = `${lineHeight}px`;\n        row.appendChild(cell);\n        const originalLineNumber = document.createElement('span');\n        originalLineNumber.style.width = (originalLineNumbersWidth + 'px');\n        originalLineNumber.style.minWidth = (originalLineNumbersWidth + 'px');\n        originalLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n        if (item.originalLineNumber !== undefined) {\n            originalLineNumber.appendChild(document.createTextNode(String(item.originalLineNumber)));\n        }\n        else {\n            originalLineNumber.innerText = '\\u00a0';\n        }\n        cell.appendChild(originalLineNumber);\n        const modifiedLineNumber = document.createElement('span');\n        modifiedLineNumber.style.width = (modifiedLineNumbersWidth + 'px');\n        modifiedLineNumber.style.minWidth = (modifiedLineNumbersWidth + 'px');\n        modifiedLineNumber.style.paddingRight = '10px';\n        modifiedLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n        if (item.modifiedLineNumber !== undefined) {\n            modifiedLineNumber.appendChild(document.createTextNode(String(item.modifiedLineNumber)));\n        }\n        else {\n            modifiedLineNumber.innerText = '\\u00a0';\n        }\n        cell.appendChild(modifiedLineNumber);\n        const spacer = document.createElement('span');\n        spacer.className = spacerClassName;\n        if (spacerIcon) {\n            const spacerCodicon = document.createElement('span');\n            spacerCodicon.className = ThemeIcon.asClassName(spacerIcon);\n            spacerCodicon.innerText = '\\u00a0\\u00a0';\n            spacer.appendChild(spacerCodicon);\n        }\n        else {\n            spacer.innerText = '\\u00a0\\u00a0';\n        }\n        cell.appendChild(spacer);\n        let lineContent;\n        if (item.modifiedLineNumber !== undefined) {\n            let html = this._getLineHtml(modifiedModel, modifiedOptions, modifiedModelOpts.tabSize, item.modifiedLineNumber, this._languageService.languageIdCodec);\n            if (AccessibleDiffViewer._ttPolicy) {\n                html = AccessibleDiffViewer._ttPolicy.createHTML(html);\n            }\n            cell.insertAdjacentHTML('beforeend', html);\n            lineContent = modifiedModel.getLineContent(item.modifiedLineNumber);\n        }\n        else {\n            let html = this._getLineHtml(originalModel, originalOptions, originalModelOpts.tabSize, item.originalLineNumber, this._languageService.languageIdCodec);\n            if (AccessibleDiffViewer._ttPolicy) {\n                html = AccessibleDiffViewer._ttPolicy.createHTML(html);\n            }\n            cell.insertAdjacentHTML('beforeend', html);\n            lineContent = originalModel.getLineContent(item.originalLineNumber);\n        }\n        if (lineContent.length === 0) {\n            lineContent = localize('blankLine', \"blank\");\n        }\n        let ariaLabel = '';\n        switch (item.type) {\n            case LineType.Unchanged:\n                if (item.originalLineNumber === item.modifiedLineNumber) {\n                    ariaLabel = localize({ key: 'unchangedLine', comment: ['The placeholders are contents of the line and should not be translated.'] }, \"{0} unchanged line {1}\", lineContent, item.originalLineNumber);\n                }\n                else {\n                    ariaLabel = localize('equalLine', \"{0} original line {1} modified line {2}\", lineContent, item.originalLineNumber, item.modifiedLineNumber);\n                }\n                break;\n            case LineType.Added:\n                ariaLabel = localize('insertLine', \"+ {0} modified line {1}\", lineContent, item.modifiedLineNumber);\n                break;\n            case LineType.Deleted:\n                ariaLabel = localize('deleteLine', \"- {0} original line {1}\", lineContent, item.originalLineNumber);\n                break;\n        }\n        row.setAttribute('aria-label', ariaLabel);\n        return row;\n    }\n    _getLineHtml(model, options, tabSize, lineNumber, languageIdCodec) {\n        const lineContent = model.getLineContent(lineNumber);\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const lineTokens = LineTokens.createEmpty(lineContent, languageIdCodec);\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, model.mightContainNonBasicASCII());\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, model.mightContainRTL());\n        const r = renderViewLine2(new RenderLineInput((fontInfo.isMonospace && !options.get(33 /* EditorOption.disableMonospaceOptimizations */)), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, options.get(116 /* EditorOption.stopRenderingLineAfter */), options.get(98 /* EditorOption.renderWhitespace */), options.get(93 /* EditorOption.renderControlCharacters */), options.get(51 /* EditorOption.fontLigatures */) !== EditorFontLigatures.OFF, null));\n        return r.html;\n    }\n};\nView = __decorate([\n    __param(5, ILanguageService)\n], View);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}