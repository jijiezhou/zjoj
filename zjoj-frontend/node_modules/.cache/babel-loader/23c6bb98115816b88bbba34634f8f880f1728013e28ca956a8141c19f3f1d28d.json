{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { Emitter } from '../../../../base/common/event.js';\nimport { combinedDisposable, DisposableStore, dispose } from '../../../../base/common/lifecycle.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { EditorCommand, registerEditorCommand } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Range } from '../../../common/core/range.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { KeybindingsRegistry } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nexport const ctxHasSymbols = new RawContextKey('hasSymbols', false, localize('hasSymbols', \"Whether there are symbol locations that can be navigated via keyboard-only.\"));\nexport const ISymbolNavigationService = createDecorator('ISymbolNavigationService');\nlet SymbolNavigationService = class SymbolNavigationService {\n  constructor(contextKeyService, _editorService, _notificationService, _keybindingService) {\n    this._editorService = _editorService;\n    this._notificationService = _notificationService;\n    this._keybindingService = _keybindingService;\n    this._currentModel = undefined;\n    this._currentIdx = -1;\n    this._ignoreEditorChange = false;\n    this._ctxHasSymbols = ctxHasSymbols.bindTo(contextKeyService);\n  }\n  reset() {\n    var _a, _b;\n    this._ctxHasSymbols.reset();\n    (_a = this._currentState) === null || _a === void 0 ? void 0 : _a.dispose();\n    (_b = this._currentMessage) === null || _b === void 0 ? void 0 : _b.dispose();\n    this._currentModel = undefined;\n    this._currentIdx = -1;\n  }\n  put(anchor) {\n    const refModel = anchor.parent.parent;\n    if (refModel.references.length <= 1) {\n      this.reset();\n      return;\n    }\n    this._currentModel = refModel;\n    this._currentIdx = refModel.references.indexOf(anchor);\n    this._ctxHasSymbols.set(true);\n    this._showMessage();\n    const editorState = new EditorState(this._editorService);\n    const listener = editorState.onDidChange(_ => {\n      if (this._ignoreEditorChange) {\n        return;\n      }\n      const editor = this._editorService.getActiveCodeEditor();\n      if (!editor) {\n        return;\n      }\n      const model = editor.getModel();\n      const position = editor.getPosition();\n      if (!model || !position) {\n        return;\n      }\n      let seenUri = false;\n      let seenPosition = false;\n      for (const reference of refModel.references) {\n        if (isEqual(reference.uri, model.uri)) {\n          seenUri = true;\n          seenPosition = seenPosition || Range.containsPosition(reference.range, position);\n        } else if (seenUri) {\n          break;\n        }\n      }\n      if (!seenUri || !seenPosition) {\n        this.reset();\n      }\n    });\n    this._currentState = combinedDisposable(editorState, listener);\n  }\n  revealNext(source) {\n    if (!this._currentModel) {\n      return Promise.resolve();\n    }\n    // get next result and advance\n    this._currentIdx += 1;\n    this._currentIdx %= this._currentModel.references.length;\n    const reference = this._currentModel.references[this._currentIdx];\n    // status\n    this._showMessage();\n    // open editor, ignore events while that happens\n    this._ignoreEditorChange = true;\n    return this._editorService.openCodeEditor({\n      resource: reference.uri,\n      options: {\n        selection: Range.collapseToStart(reference.range),\n        selectionRevealType: 3 /* TextEditorSelectionRevealType.NearTopIfOutsideViewport */\n      }\n    }, source).finally(() => {\n      this._ignoreEditorChange = false;\n    });\n  }\n  _showMessage() {\n    var _a;\n    (_a = this._currentMessage) === null || _a === void 0 ? void 0 : _a.dispose();\n    const kb = this._keybindingService.lookupKeybinding('editor.gotoNextSymbolFromResult');\n    const message = kb ? localize('location.kb', \"Symbol {0} of {1}, {2} for next\", this._currentIdx + 1, this._currentModel.references.length, kb.getLabel()) : localize('location', \"Symbol {0} of {1}\", this._currentIdx + 1, this._currentModel.references.length);\n    this._currentMessage = this._notificationService.status(message);\n  }\n};\nSymbolNavigationService = __decorate([__param(0, IContextKeyService), __param(1, ICodeEditorService), __param(2, INotificationService), __param(3, IKeybindingService)], SymbolNavigationService);\nregisterSingleton(ISymbolNavigationService, SymbolNavigationService, 1 /* InstantiationType.Delayed */);\nregisterEditorCommand(new class extends EditorCommand {\n  constructor() {\n    super({\n      id: 'editor.gotoNextSymbolFromResult',\n      precondition: ctxHasSymbols,\n      kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */,\n        primary: 70 /* KeyCode.F12 */\n      }\n    });\n  }\n  runEditorCommand(accessor, editor) {\n    return accessor.get(ISymbolNavigationService).revealNext(editor);\n  }\n}());\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'editor.gotoNextSymbolFromResult.cancel',\n  weight: 100 /* KeybindingWeight.EditorContrib */,\n  when: ctxHasSymbols,\n  primary: 9 /* KeyCode.Escape */,\n  handler(accessor) {\n    accessor.get(ISymbolNavigationService).reset();\n  }\n});\n//\nlet EditorState = class EditorState {\n  constructor(editorService) {\n    this._listener = new Map();\n    this._disposables = new DisposableStore();\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n    this._disposables.add(editorService.onCodeEditorRemove(this._onDidRemoveEditor, this));\n    this._disposables.add(editorService.onCodeEditorAdd(this._onDidAddEditor, this));\n    editorService.listCodeEditors().forEach(this._onDidAddEditor, this);\n  }\n  dispose() {\n    this._disposables.dispose();\n    this._onDidChange.dispose();\n    dispose(this._listener.values());\n  }\n  _onDidAddEditor(editor) {\n    this._listener.set(editor, combinedDisposable(editor.onDidChangeCursorPosition(_ => this._onDidChange.fire({\n      editor\n    })), editor.onDidChangeModelContent(_ => this._onDidChange.fire({\n      editor\n    }))));\n  }\n  _onDidRemoveEditor(editor) {\n    var _a;\n    (_a = this._listener.get(editor)) === null || _a === void 0 ? void 0 : _a.dispose();\n    this._listener.delete(editor);\n  }\n};\nEditorState = __decorate([__param(0, ICodeEditorService)], EditorState);","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","Emitter","combinedDisposable","DisposableStore","dispose","isEqual","EditorCommand","registerEditorCommand","ICodeEditorService","Range","localize","IContextKeyService","RawContextKey","registerSingleton","createDecorator","IKeybindingService","KeybindingsRegistry","INotificationService","ctxHasSymbols","ISymbolNavigationService","SymbolNavigationService","constructor","contextKeyService","_editorService","_notificationService","_keybindingService","_currentModel","undefined","_currentIdx","_ignoreEditorChange","_ctxHasSymbols","bindTo","reset","_a","_b","_currentState","_currentMessage","put","anchor","refModel","parent","references","indexOf","set","_showMessage","editorState","EditorState","listener","onDidChange","_","editor","getActiveCodeEditor","model","getModel","position","getPosition","seenUri","seenPosition","reference","uri","containsPosition","range","revealNext","source","Promise","resolve","openCodeEditor","resource","options","selection","collapseToStart","selectionRevealType","finally","kb","lookupKeybinding","message","getLabel","status","id","precondition","kbOpts","weight","primary","runEditorCommand","accessor","get","registerCommandAndKeybindingRule","when","handler","editorService","_listener","Map","_disposables","_onDidChange","event","add","onCodeEditorRemove","_onDidRemoveEditor","onCodeEditorAdd","_onDidAddEditor","listCodeEditors","forEach","values","onDidChangeCursorPosition","fire","onDidChangeModelContent","delete"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/symbolNavigation.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Emitter } from '../../../../base/common/event.js';\nimport { combinedDisposable, DisposableStore, dispose } from '../../../../base/common/lifecycle.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { EditorCommand, registerEditorCommand } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Range } from '../../../common/core/range.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { KeybindingsRegistry } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nexport const ctxHasSymbols = new RawContextKey('hasSymbols', false, localize('hasSymbols', \"Whether there are symbol locations that can be navigated via keyboard-only.\"));\nexport const ISymbolNavigationService = createDecorator('ISymbolNavigationService');\nlet SymbolNavigationService = class SymbolNavigationService {\n    constructor(contextKeyService, _editorService, _notificationService, _keybindingService) {\n        this._editorService = _editorService;\n        this._notificationService = _notificationService;\n        this._keybindingService = _keybindingService;\n        this._currentModel = undefined;\n        this._currentIdx = -1;\n        this._ignoreEditorChange = false;\n        this._ctxHasSymbols = ctxHasSymbols.bindTo(contextKeyService);\n    }\n    reset() {\n        var _a, _b;\n        this._ctxHasSymbols.reset();\n        (_a = this._currentState) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this._currentMessage) === null || _b === void 0 ? void 0 : _b.dispose();\n        this._currentModel = undefined;\n        this._currentIdx = -1;\n    }\n    put(anchor) {\n        const refModel = anchor.parent.parent;\n        if (refModel.references.length <= 1) {\n            this.reset();\n            return;\n        }\n        this._currentModel = refModel;\n        this._currentIdx = refModel.references.indexOf(anchor);\n        this._ctxHasSymbols.set(true);\n        this._showMessage();\n        const editorState = new EditorState(this._editorService);\n        const listener = editorState.onDidChange(_ => {\n            if (this._ignoreEditorChange) {\n                return;\n            }\n            const editor = this._editorService.getActiveCodeEditor();\n            if (!editor) {\n                return;\n            }\n            const model = editor.getModel();\n            const position = editor.getPosition();\n            if (!model || !position) {\n                return;\n            }\n            let seenUri = false;\n            let seenPosition = false;\n            for (const reference of refModel.references) {\n                if (isEqual(reference.uri, model.uri)) {\n                    seenUri = true;\n                    seenPosition = seenPosition || Range.containsPosition(reference.range, position);\n                }\n                else if (seenUri) {\n                    break;\n                }\n            }\n            if (!seenUri || !seenPosition) {\n                this.reset();\n            }\n        });\n        this._currentState = combinedDisposable(editorState, listener);\n    }\n    revealNext(source) {\n        if (!this._currentModel) {\n            return Promise.resolve();\n        }\n        // get next result and advance\n        this._currentIdx += 1;\n        this._currentIdx %= this._currentModel.references.length;\n        const reference = this._currentModel.references[this._currentIdx];\n        // status\n        this._showMessage();\n        // open editor, ignore events while that happens\n        this._ignoreEditorChange = true;\n        return this._editorService.openCodeEditor({\n            resource: reference.uri,\n            options: {\n                selection: Range.collapseToStart(reference.range),\n                selectionRevealType: 3 /* TextEditorSelectionRevealType.NearTopIfOutsideViewport */\n            }\n        }, source).finally(() => {\n            this._ignoreEditorChange = false;\n        });\n    }\n    _showMessage() {\n        var _a;\n        (_a = this._currentMessage) === null || _a === void 0 ? void 0 : _a.dispose();\n        const kb = this._keybindingService.lookupKeybinding('editor.gotoNextSymbolFromResult');\n        const message = kb\n            ? localize('location.kb', \"Symbol {0} of {1}, {2} for next\", this._currentIdx + 1, this._currentModel.references.length, kb.getLabel())\n            : localize('location', \"Symbol {0} of {1}\", this._currentIdx + 1, this._currentModel.references.length);\n        this._currentMessage = this._notificationService.status(message);\n    }\n};\nSymbolNavigationService = __decorate([\n    __param(0, IContextKeyService),\n    __param(1, ICodeEditorService),\n    __param(2, INotificationService),\n    __param(3, IKeybindingService)\n], SymbolNavigationService);\nregisterSingleton(ISymbolNavigationService, SymbolNavigationService, 1 /* InstantiationType.Delayed */);\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: 'editor.gotoNextSymbolFromResult',\n            precondition: ctxHasSymbols,\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 70 /* KeyCode.F12 */\n            }\n        });\n    }\n    runEditorCommand(accessor, editor) {\n        return accessor.get(ISymbolNavigationService).revealNext(editor);\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'editor.gotoNextSymbolFromResult.cancel',\n    weight: 100 /* KeybindingWeight.EditorContrib */,\n    when: ctxHasSymbols,\n    primary: 9 /* KeyCode.Escape */,\n    handler(accessor) {\n        accessor.get(ISymbolNavigationService).reset();\n    }\n});\n//\nlet EditorState = class EditorState {\n    constructor(editorService) {\n        this._listener = new Map();\n        this._disposables = new DisposableStore();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._disposables.add(editorService.onCodeEditorRemove(this._onDidRemoveEditor, this));\n        this._disposables.add(editorService.onCodeEditorAdd(this._onDidAddEditor, this));\n        editorService.listCodeEditors().forEach(this._onDidAddEditor, this);\n    }\n    dispose() {\n        this._disposables.dispose();\n        this._onDidChange.dispose();\n        dispose(this._listener.values());\n    }\n    _onDidAddEditor(editor) {\n        this._listener.set(editor, combinedDisposable(editor.onDidChangeCursorPosition(_ => this._onDidChange.fire({ editor })), editor.onDidChangeModelContent(_ => this._onDidChange.fire({ editor }))));\n    }\n    _onDidRemoveEditor(editor) {\n        var _a;\n        (_a = this._listener.get(editor)) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._listener.delete(editor);\n    }\n};\nEditorState = __decorate([\n    __param(0, ICodeEditorService)\n], EditorState);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}