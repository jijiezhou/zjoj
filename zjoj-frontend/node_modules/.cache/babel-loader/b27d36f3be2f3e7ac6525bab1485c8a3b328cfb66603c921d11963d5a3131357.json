{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { CursorColumns } from './cursorColumns.js';\nfunction _normalizeIndentationFromWhitespace(str, indentSize, insertSpaces) {\n  let spacesCnt = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str.charAt(i) === '\\t') {\n      spacesCnt = CursorColumns.nextIndentTabStop(spacesCnt, indentSize);\n    } else {\n      spacesCnt++;\n    }\n  }\n  let result = '';\n  if (!insertSpaces) {\n    const tabsCnt = Math.floor(spacesCnt / indentSize);\n    spacesCnt = spacesCnt % indentSize;\n    for (let i = 0; i < tabsCnt; i++) {\n      result += '\\t';\n    }\n  }\n  for (let i = 0; i < spacesCnt; i++) {\n    result += ' ';\n  }\n  return result;\n}\nexport function normalizeIndentation(str, indentSize, insertSpaces) {\n  let firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(str);\n  if (firstNonWhitespaceIndex === -1) {\n    firstNonWhitespaceIndex = str.length;\n  }\n  return _normalizeIndentationFromWhitespace(str.substring(0, firstNonWhitespaceIndex), indentSize, insertSpaces) + str.substring(firstNonWhitespaceIndex);\n}","map":{"version":3,"names":["strings","CursorColumns","_normalizeIndentationFromWhitespace","str","indentSize","insertSpaces","spacesCnt","i","length","charAt","nextIndentTabStop","result","tabsCnt","Math","floor","normalizeIndentation","firstNonWhitespaceIndex","substring"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/common/core/indentation.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { CursorColumns } from './cursorColumns.js';\nfunction _normalizeIndentationFromWhitespace(str, indentSize, insertSpaces) {\n    let spacesCnt = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) === '\\t') {\n            spacesCnt = CursorColumns.nextIndentTabStop(spacesCnt, indentSize);\n        }\n        else {\n            spacesCnt++;\n        }\n    }\n    let result = '';\n    if (!insertSpaces) {\n        const tabsCnt = Math.floor(spacesCnt / indentSize);\n        spacesCnt = spacesCnt % indentSize;\n        for (let i = 0; i < tabsCnt; i++) {\n            result += '\\t';\n        }\n    }\n    for (let i = 0; i < spacesCnt; i++) {\n        result += ' ';\n    }\n    return result;\n}\nexport function normalizeIndentation(str, indentSize, insertSpaces) {\n    let firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(str);\n    if (firstNonWhitespaceIndex === -1) {\n        firstNonWhitespaceIndex = str.length;\n    }\n    return _normalizeIndentationFromWhitespace(str.substring(0, firstNonWhitespaceIndex), indentSize, insertSpaces) + str.substring(firstNonWhitespaceIndex);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,OAAO,MAAM,iCAAiC;AAC1D,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,mCAAmCA,CAACC,GAAG,EAAEC,UAAU,EAAEC,YAAY,EAAE;EACxE,IAAIC,SAAS,GAAG,CAAC;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,GAAG,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACjC,IAAIJ,GAAG,CAACM,MAAM,CAACF,CAAC,CAAC,KAAK,IAAI,EAAE;MACxBD,SAAS,GAAGL,aAAa,CAACS,iBAAiB,CAACJ,SAAS,EAAEF,UAAU,CAAC;IACtE,CAAC,MACI;MACDE,SAAS,EAAE;IACf;EACJ;EACA,IAAIK,MAAM,GAAG,EAAE;EACf,IAAI,CAACN,YAAY,EAAE;IACf,MAAMO,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACR,SAAS,GAAGF,UAAU,CAAC;IAClDE,SAAS,GAAGA,SAAS,GAAGF,UAAU;IAClC,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGK,OAAO,EAAEL,CAAC,EAAE,EAAE;MAC9BI,MAAM,IAAI,IAAI;IAClB;EACJ;EACA,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,SAAS,EAAEC,CAAC,EAAE,EAAE;IAChCI,MAAM,IAAI,GAAG;EACjB;EACA,OAAOA,MAAM;AACjB;AACA,OAAO,SAASI,oBAAoBA,CAACZ,GAAG,EAAEC,UAAU,EAAEC,YAAY,EAAE;EAChE,IAAIW,uBAAuB,GAAGhB,OAAO,CAACgB,uBAAuB,CAACb,GAAG,CAAC;EAClE,IAAIa,uBAAuB,KAAK,CAAC,CAAC,EAAE;IAChCA,uBAAuB,GAAGb,GAAG,CAACK,MAAM;EACxC;EACA,OAAON,mCAAmC,CAACC,GAAG,CAACc,SAAS,CAAC,CAAC,EAAED,uBAAuB,CAAC,EAAEZ,UAAU,EAAEC,YAAY,CAAC,GAAGF,GAAG,CAACc,SAAS,CAACD,uBAAuB,CAAC;AAC5J"},"metadata":{},"sourceType":"module","externalDependencies":[]}