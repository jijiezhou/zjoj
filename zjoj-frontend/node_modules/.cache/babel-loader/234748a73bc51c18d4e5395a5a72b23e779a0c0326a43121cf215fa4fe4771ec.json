{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../base/common/lifecycle.js';\nexport class TokenizationRegistry {\n  constructor() {\n    this._tokenizationSupports = new Map();\n    this._factories = new Map();\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n    this._colorMap = null;\n  }\n  handleChange(languageIds) {\n    this._onDidChange.fire({\n      changedLanguages: languageIds,\n      changedColorMap: false\n    });\n  }\n  register(languageId, support) {\n    this._tokenizationSupports.set(languageId, support);\n    this.handleChange([languageId]);\n    return toDisposable(() => {\n      if (this._tokenizationSupports.get(languageId) !== support) {\n        return;\n      }\n      this._tokenizationSupports.delete(languageId);\n      this.handleChange([languageId]);\n    });\n  }\n  get(languageId) {\n    return this._tokenizationSupports.get(languageId) || null;\n  }\n  registerFactory(languageId, factory) {\n    var _a;\n    (_a = this._factories.get(languageId)) === null || _a === void 0 ? void 0 : _a.dispose();\n    const myData = new TokenizationSupportFactoryData(this, languageId, factory);\n    this._factories.set(languageId, myData);\n    return toDisposable(() => {\n      const v = this._factories.get(languageId);\n      if (!v || v !== myData) {\n        return;\n      }\n      this._factories.delete(languageId);\n      v.dispose();\n    });\n  }\n  async getOrCreate(languageId) {\n    // check first if the support is already set\n    const tokenizationSupport = this.get(languageId);\n    if (tokenizationSupport) {\n      return tokenizationSupport;\n    }\n    const factory = this._factories.get(languageId);\n    if (!factory || factory.isResolved) {\n      // no factory or factory.resolve already finished\n      return null;\n    }\n    await factory.resolve();\n    return this.get(languageId);\n  }\n  isResolved(languageId) {\n    const tokenizationSupport = this.get(languageId);\n    if (tokenizationSupport) {\n      return true;\n    }\n    const factory = this._factories.get(languageId);\n    if (!factory || factory.isResolved) {\n      return true;\n    }\n    return false;\n  }\n  setColorMap(colorMap) {\n    this._colorMap = colorMap;\n    this._onDidChange.fire({\n      changedLanguages: Array.from(this._tokenizationSupports.keys()),\n      changedColorMap: true\n    });\n  }\n  getColorMap() {\n    return this._colorMap;\n  }\n  getDefaultBackground() {\n    if (this._colorMap && this._colorMap.length > 2 /* ColorId.DefaultBackground */) {\n      return this._colorMap[2 /* ColorId.DefaultBackground */];\n    }\n    return null;\n  }\n}\nclass TokenizationSupportFactoryData extends Disposable {\n  get isResolved() {\n    return this._isResolved;\n  }\n  constructor(_registry, _languageId, _factory) {\n    super();\n    this._registry = _registry;\n    this._languageId = _languageId;\n    this._factory = _factory;\n    this._isDisposed = false;\n    this._resolvePromise = null;\n    this._isResolved = false;\n  }\n  dispose() {\n    this._isDisposed = true;\n    super.dispose();\n  }\n  async resolve() {\n    if (!this._resolvePromise) {\n      this._resolvePromise = this._create();\n    }\n    return this._resolvePromise;\n  }\n  async _create() {\n    const value = await this._factory.tokenizationSupport;\n    this._isResolved = true;\n    if (value && !this._isDisposed) {\n      this._register(this._registry.register(this._languageId, value));\n    }\n  }\n}","map":{"version":3,"names":["Emitter","Disposable","toDisposable","TokenizationRegistry","constructor","_tokenizationSupports","Map","_factories","_onDidChange","onDidChange","event","_colorMap","handleChange","languageIds","fire","changedLanguages","changedColorMap","register","languageId","support","set","get","delete","registerFactory","factory","_a","dispose","myData","TokenizationSupportFactoryData","v","getOrCreate","tokenizationSupport","isResolved","resolve","setColorMap","colorMap","Array","from","keys","getColorMap","getDefaultBackground","length","_isResolved","_registry","_languageId","_factory","_isDisposed","_resolvePromise","_create","value","_register"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/common/tokenizationRegistry.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../base/common/lifecycle.js';\nexport class TokenizationRegistry {\n    constructor() {\n        this._tokenizationSupports = new Map();\n        this._factories = new Map();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._colorMap = null;\n    }\n    handleChange(languageIds) {\n        this._onDidChange.fire({\n            changedLanguages: languageIds,\n            changedColorMap: false\n        });\n    }\n    register(languageId, support) {\n        this._tokenizationSupports.set(languageId, support);\n        this.handleChange([languageId]);\n        return toDisposable(() => {\n            if (this._tokenizationSupports.get(languageId) !== support) {\n                return;\n            }\n            this._tokenizationSupports.delete(languageId);\n            this.handleChange([languageId]);\n        });\n    }\n    get(languageId) {\n        return this._tokenizationSupports.get(languageId) || null;\n    }\n    registerFactory(languageId, factory) {\n        var _a;\n        (_a = this._factories.get(languageId)) === null || _a === void 0 ? void 0 : _a.dispose();\n        const myData = new TokenizationSupportFactoryData(this, languageId, factory);\n        this._factories.set(languageId, myData);\n        return toDisposable(() => {\n            const v = this._factories.get(languageId);\n            if (!v || v !== myData) {\n                return;\n            }\n            this._factories.delete(languageId);\n            v.dispose();\n        });\n    }\n    async getOrCreate(languageId) {\n        // check first if the support is already set\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return tokenizationSupport;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            // no factory or factory.resolve already finished\n            return null;\n        }\n        await factory.resolve();\n        return this.get(languageId);\n    }\n    isResolved(languageId) {\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return true;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            return true;\n        }\n        return false;\n    }\n    setColorMap(colorMap) {\n        this._colorMap = colorMap;\n        this._onDidChange.fire({\n            changedLanguages: Array.from(this._tokenizationSupports.keys()),\n            changedColorMap: true\n        });\n    }\n    getColorMap() {\n        return this._colorMap;\n    }\n    getDefaultBackground() {\n        if (this._colorMap && this._colorMap.length > 2 /* ColorId.DefaultBackground */) {\n            return this._colorMap[2 /* ColorId.DefaultBackground */];\n        }\n        return null;\n    }\n}\nclass TokenizationSupportFactoryData extends Disposable {\n    get isResolved() {\n        return this._isResolved;\n    }\n    constructor(_registry, _languageId, _factory) {\n        super();\n        this._registry = _registry;\n        this._languageId = _languageId;\n        this._factory = _factory;\n        this._isDisposed = false;\n        this._resolvePromise = null;\n        this._isResolved = false;\n    }\n    dispose() {\n        this._isDisposed = true;\n        super.dispose();\n    }\n    async resolve() {\n        if (!this._resolvePromise) {\n            this._resolvePromise = this._create();\n        }\n        return this._resolvePromise;\n    }\n    async _create() {\n        const value = await this._factory.tokenizationSupport;\n        this._isResolved = true;\n        if (value && !this._isDisposed) {\n            this._register(this._registry.register(this._languageId, value));\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}