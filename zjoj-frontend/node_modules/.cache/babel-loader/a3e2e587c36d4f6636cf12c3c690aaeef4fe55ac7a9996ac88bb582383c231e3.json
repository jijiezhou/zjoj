{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DataTransfers } from '../../base/browser/dnd.js';\nimport { createFileDataTransferItem, createStringDataTransferItem, UriList, VSDataTransfer } from '../../base/common/dataTransfer.js';\nimport { Mimes } from '../../base/common/mime.js';\nimport { URI } from '../../base/common/uri.js';\nimport { CodeDataTransfers } from '../../platform/dnd/browser/dnd.js';\nexport function toVSDataTransfer(dataTransfer) {\n  const vsDataTransfer = new VSDataTransfer();\n  for (const item of dataTransfer.items) {\n    const type = item.type;\n    if (item.kind === 'string') {\n      const asStringValue = new Promise(resolve => item.getAsString(resolve));\n      vsDataTransfer.append(type, createStringDataTransferItem(asStringValue));\n    } else if (item.kind === 'file') {\n      const file = item.getAsFile();\n      if (file) {\n        vsDataTransfer.append(type, createFileDataTransferItemFromFile(file));\n      }\n    }\n  }\n  return vsDataTransfer;\n}\nfunction createFileDataTransferItemFromFile(file) {\n  const uri = file.path ? URI.parse(file.path) : undefined;\n  return createFileDataTransferItem(file.name, uri, async () => {\n    return new Uint8Array(await file.arrayBuffer());\n  });\n}\nconst INTERNAL_DND_MIME_TYPES = Object.freeze([CodeDataTransfers.EDITORS, CodeDataTransfers.FILES, DataTransfers.RESOURCES, DataTransfers.INTERNAL_URI_LIST]);\nexport function toExternalVSDataTransfer(sourceDataTransfer, overwriteUriList = false) {\n  const vsDataTransfer = toVSDataTransfer(sourceDataTransfer);\n  // Try to expose the internal uri-list type as the standard type\n  const uriList = vsDataTransfer.get(DataTransfers.INTERNAL_URI_LIST);\n  if (uriList) {\n    vsDataTransfer.replace(Mimes.uriList, uriList);\n  } else {\n    if (overwriteUriList || !vsDataTransfer.has(Mimes.uriList)) {\n      // Otherwise, fallback to adding dragged resources to the uri list\n      const editorData = [];\n      for (const item of sourceDataTransfer.items) {\n        const file = item.getAsFile();\n        if (file) {\n          const path = file.path;\n          try {\n            if (path) {\n              editorData.push(URI.file(path).toString());\n            } else {\n              editorData.push(URI.parse(file.name, true).toString());\n            }\n          } catch (_a) {\n            // Parsing failed. Leave out from list\n          }\n        }\n      }\n      if (editorData.length) {\n        vsDataTransfer.replace(Mimes.uriList, createStringDataTransferItem(UriList.create(editorData)));\n      }\n    }\n  }\n  for (const internal of INTERNAL_DND_MIME_TYPES) {\n    vsDataTransfer.delete(internal);\n  }\n  return vsDataTransfer;\n}","map":{"version":3,"names":["DataTransfers","createFileDataTransferItem","createStringDataTransferItem","UriList","VSDataTransfer","Mimes","URI","CodeDataTransfers","toVSDataTransfer","dataTransfer","vsDataTransfer","item","items","type","kind","asStringValue","Promise","resolve","getAsString","append","file","getAsFile","createFileDataTransferItemFromFile","uri","path","parse","undefined","name","Uint8Array","arrayBuffer","INTERNAL_DND_MIME_TYPES","Object","freeze","EDITORS","FILES","RESOURCES","INTERNAL_URI_LIST","toExternalVSDataTransfer","sourceDataTransfer","overwriteUriList","uriList","get","replace","has","editorData","push","toString","_a","length","create","internal","delete"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/browser/dnd.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DataTransfers } from '../../base/browser/dnd.js';\nimport { createFileDataTransferItem, createStringDataTransferItem, UriList, VSDataTransfer } from '../../base/common/dataTransfer.js';\nimport { Mimes } from '../../base/common/mime.js';\nimport { URI } from '../../base/common/uri.js';\nimport { CodeDataTransfers } from '../../platform/dnd/browser/dnd.js';\nexport function toVSDataTransfer(dataTransfer) {\n    const vsDataTransfer = new VSDataTransfer();\n    for (const item of dataTransfer.items) {\n        const type = item.type;\n        if (item.kind === 'string') {\n            const asStringValue = new Promise(resolve => item.getAsString(resolve));\n            vsDataTransfer.append(type, createStringDataTransferItem(asStringValue));\n        }\n        else if (item.kind === 'file') {\n            const file = item.getAsFile();\n            if (file) {\n                vsDataTransfer.append(type, createFileDataTransferItemFromFile(file));\n            }\n        }\n    }\n    return vsDataTransfer;\n}\nfunction createFileDataTransferItemFromFile(file) {\n    const uri = file.path ? URI.parse(file.path) : undefined;\n    return createFileDataTransferItem(file.name, uri, async () => {\n        return new Uint8Array(await file.arrayBuffer());\n    });\n}\nconst INTERNAL_DND_MIME_TYPES = Object.freeze([\n    CodeDataTransfers.EDITORS,\n    CodeDataTransfers.FILES,\n    DataTransfers.RESOURCES,\n    DataTransfers.INTERNAL_URI_LIST,\n]);\nexport function toExternalVSDataTransfer(sourceDataTransfer, overwriteUriList = false) {\n    const vsDataTransfer = toVSDataTransfer(sourceDataTransfer);\n    // Try to expose the internal uri-list type as the standard type\n    const uriList = vsDataTransfer.get(DataTransfers.INTERNAL_URI_LIST);\n    if (uriList) {\n        vsDataTransfer.replace(Mimes.uriList, uriList);\n    }\n    else {\n        if (overwriteUriList || !vsDataTransfer.has(Mimes.uriList)) {\n            // Otherwise, fallback to adding dragged resources to the uri list\n            const editorData = [];\n            for (const item of sourceDataTransfer.items) {\n                const file = item.getAsFile();\n                if (file) {\n                    const path = file.path;\n                    try {\n                        if (path) {\n                            editorData.push(URI.file(path).toString());\n                        }\n                        else {\n                            editorData.push(URI.parse(file.name, true).toString());\n                        }\n                    }\n                    catch (_a) {\n                        // Parsing failed. Leave out from list\n                    }\n                }\n            }\n            if (editorData.length) {\n                vsDataTransfer.replace(Mimes.uriList, createStringDataTransferItem(UriList.create(editorData)));\n            }\n        }\n    }\n    for (const internal of INTERNAL_DND_MIME_TYPES) {\n        vsDataTransfer.delete(internal);\n    }\n    return vsDataTransfer;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}