{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { EditorZoom } from '../../../common/config/editorZoom.js';\nimport * as nls from '../../../../nls.js';\nclass EditorFontZoomIn extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.fontZoomIn',\n      label: nls.localize('EditorFontZoomIn.label', \"Editor Font Zoom In\"),\n      alias: 'Editor Font Zoom In',\n      precondition: undefined\n    });\n  }\n  run(accessor, editor) {\n    EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() + 1);\n  }\n}\nclass EditorFontZoomOut extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.fontZoomOut',\n      label: nls.localize('EditorFontZoomOut.label', \"Editor Font Zoom Out\"),\n      alias: 'Editor Font Zoom Out',\n      precondition: undefined\n    });\n  }\n  run(accessor, editor) {\n    EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() - 1);\n  }\n}\nclass EditorFontZoomReset extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.fontZoomReset',\n      label: nls.localize('EditorFontZoomReset.label', \"Editor Font Zoom Reset\"),\n      alias: 'Editor Font Zoom Reset',\n      precondition: undefined\n    });\n  }\n  run(accessor, editor) {\n    EditorZoom.setZoomLevel(0);\n  }\n}\nregisterEditorAction(EditorFontZoomIn);\nregisterEditorAction(EditorFontZoomOut);\nregisterEditorAction(EditorFontZoomReset);","map":{"version":3,"names":["EditorAction","registerEditorAction","EditorZoom","nls","EditorFontZoomIn","constructor","id","label","localize","alias","precondition","undefined","run","accessor","editor","setZoomLevel","getZoomLevel","EditorFontZoomOut","EditorFontZoomReset"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/editor/contrib/fontZoom/browser/fontZoom.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { EditorZoom } from '../../../common/config/editorZoom.js';\nimport * as nls from '../../../../nls.js';\nclass EditorFontZoomIn extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.fontZoomIn',\n            label: nls.localize('EditorFontZoomIn.label', \"Editor Font Zoom In\"),\n            alias: 'Editor Font Zoom In',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() + 1);\n    }\n}\nclass EditorFontZoomOut extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.fontZoomOut',\n            label: nls.localize('EditorFontZoomOut.label', \"Editor Font Zoom Out\"),\n            alias: 'Editor Font Zoom Out',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() - 1);\n    }\n}\nclass EditorFontZoomReset extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.fontZoomReset',\n            label: nls.localize('EditorFontZoomReset.label', \"Editor Font Zoom Reset\"),\n            alias: 'Editor Font Zoom Reset',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        EditorZoom.setZoomLevel(0);\n    }\n}\nregisterEditorAction(EditorFontZoomIn);\nregisterEditorAction(EditorFontZoomOut);\nregisterEditorAction(EditorFontZoomReset);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,YAAY,EAAEC,oBAAoB,QAAQ,sCAAsC;AACzF,SAASC,UAAU,QAAQ,sCAAsC;AACjE,OAAO,KAAKC,GAAG,MAAM,oBAAoB;AACzC,MAAMC,gBAAgB,SAASJ,YAAY,CAAC;EACxCK,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAE,0BAA0B;MAC9BC,KAAK,EAAEJ,GAAG,CAACK,QAAQ,CAAC,wBAAwB,EAAE,qBAAqB,CAAC;MACpEC,KAAK,EAAE,qBAAqB;MAC5BC,YAAY,EAAEC;IAClB,CAAC,CAAC;EACN;EACAC,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAE;IAClBZ,UAAU,CAACa,YAAY,CAACb,UAAU,CAACc,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1D;AACJ;AACA,MAAMC,iBAAiB,SAASjB,YAAY,CAAC;EACzCK,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAE,2BAA2B;MAC/BC,KAAK,EAAEJ,GAAG,CAACK,QAAQ,CAAC,yBAAyB,EAAE,sBAAsB,CAAC;MACtEC,KAAK,EAAE,sBAAsB;MAC7BC,YAAY,EAAEC;IAClB,CAAC,CAAC;EACN;EACAC,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAE;IAClBZ,UAAU,CAACa,YAAY,CAACb,UAAU,CAACc,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1D;AACJ;AACA,MAAME,mBAAmB,SAASlB,YAAY,CAAC;EAC3CK,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAE,6BAA6B;MACjCC,KAAK,EAAEJ,GAAG,CAACK,QAAQ,CAAC,2BAA2B,EAAE,wBAAwB,CAAC;MAC1EC,KAAK,EAAE,wBAAwB;MAC/BC,YAAY,EAAEC;IAClB,CAAC,CAAC;EACN;EACAC,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAE;IAClBZ,UAAU,CAACa,YAAY,CAAC,CAAC,CAAC;EAC9B;AACJ;AACAd,oBAAoB,CAACG,gBAAgB,CAAC;AACtCH,oBAAoB,CAACgB,iBAAiB,CAAC;AACvChB,oBAAoB,CAACiB,mBAAmB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}