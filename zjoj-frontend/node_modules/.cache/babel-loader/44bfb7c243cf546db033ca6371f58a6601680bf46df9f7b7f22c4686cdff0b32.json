{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { env } from '../../../base/common/process.js';\n/**\n * @deprecated You MUST use `IProductService` if possible.\n */\nlet product;\n// Native sandbox environment\nconst vscodeGlobal = globalThis.vscode;\nif (typeof vscodeGlobal !== 'undefined' && typeof vscodeGlobal.context !== 'undefined') {\n  const configuration = vscodeGlobal.context.configuration();\n  if (configuration) {\n    product = configuration.product;\n  } else {\n    throw new Error('Sandbox: unable to resolve product configuration from preload script.');\n  }\n}\n// _VSCODE environment\nelse if (globalThis._VSCODE_PRODUCT_JSON && globalThis._VSCODE_PACKAGE_JSON) {\n  // Obtain values from product.json and package.json-data\n  product = globalThis._VSCODE_PRODUCT_JSON;\n  // Running out of sources\n  if (env['VSCODE_DEV']) {\n    Object.assign(product, {\n      nameShort: `${product.nameShort} Dev`,\n      nameLong: `${product.nameLong} Dev`,\n      dataFolderName: `${product.dataFolderName}-dev`,\n      serverDataFolderName: product.serverDataFolderName ? `${product.serverDataFolderName}-dev` : undefined\n    });\n  }\n  // Version is added during built time, but we still\n  // want to have it running out of sources so we\n  // read it from package.json only when we need it.\n  if (!product.version) {\n    const pkg = globalThis._VSCODE_PACKAGE_JSON;\n    Object.assign(product, {\n      version: pkg.version\n    });\n  }\n}\n// Web environment or unknown\nelse {\n  // Built time configuration (do NOT modify)\n  product = {/*BUILD->INSERT_PRODUCT_CONFIGURATION*/};\n  // Running out of sources\n  if (Object.keys(product).length === 0) {\n    Object.assign(product, {\n      version: '1.82.0-dev',\n      nameShort: 'Code - OSS Dev',\n      nameLong: 'Code - OSS Dev',\n      applicationName: 'code-oss',\n      dataFolderName: '.vscode-oss',\n      urlProtocol: 'code-oss',\n      reportIssueUrl: 'https://github.com/microsoft/vscode/issues/new',\n      licenseName: 'MIT',\n      licenseUrl: 'https://github.com/microsoft/vscode/blob/main/LICENSE.txt',\n      serverLicenseUrl: 'https://github.com/microsoft/vscode/blob/main/LICENSE.txt'\n    });\n  }\n}\n/**\n * @deprecated You MUST use `IProductService` if possible.\n */\nexport default product;","map":{"version":3,"names":["env","product","vscodeGlobal","globalThis","vscode","context","configuration","Error","_VSCODE_PRODUCT_JSON","_VSCODE_PACKAGE_JSON","Object","assign","nameShort","nameLong","dataFolderName","serverDataFolderName","undefined","version","pkg","keys","length","applicationName","urlProtocol","reportIssueUrl","licenseName","licenseUrl","serverLicenseUrl"],"sources":["/Users/zj/projects/zjoj/zjoj-frontend/node_modules/monaco-editor/esm/vs/platform/product/common/product.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { env } from '../../../base/common/process.js';\n/**\n * @deprecated You MUST use `IProductService` if possible.\n */\nlet product;\n// Native sandbox environment\nconst vscodeGlobal = globalThis.vscode;\nif (typeof vscodeGlobal !== 'undefined' && typeof vscodeGlobal.context !== 'undefined') {\n    const configuration = vscodeGlobal.context.configuration();\n    if (configuration) {\n        product = configuration.product;\n    }\n    else {\n        throw new Error('Sandbox: unable to resolve product configuration from preload script.');\n    }\n}\n// _VSCODE environment\nelse if (globalThis._VSCODE_PRODUCT_JSON && globalThis._VSCODE_PACKAGE_JSON) {\n    // Obtain values from product.json and package.json-data\n    product = globalThis._VSCODE_PRODUCT_JSON;\n    // Running out of sources\n    if (env['VSCODE_DEV']) {\n        Object.assign(product, {\n            nameShort: `${product.nameShort} Dev`,\n            nameLong: `${product.nameLong} Dev`,\n            dataFolderName: `${product.dataFolderName}-dev`,\n            serverDataFolderName: product.serverDataFolderName ? `${product.serverDataFolderName}-dev` : undefined\n        });\n    }\n    // Version is added during built time, but we still\n    // want to have it running out of sources so we\n    // read it from package.json only when we need it.\n    if (!product.version) {\n        const pkg = globalThis._VSCODE_PACKAGE_JSON;\n        Object.assign(product, {\n            version: pkg.version\n        });\n    }\n}\n// Web environment or unknown\nelse {\n    // Built time configuration (do NOT modify)\n    product = { /*BUILD->INSERT_PRODUCT_CONFIGURATION*/};\n    // Running out of sources\n    if (Object.keys(product).length === 0) {\n        Object.assign(product, {\n            version: '1.82.0-dev',\n            nameShort: 'Code - OSS Dev',\n            nameLong: 'Code - OSS Dev',\n            applicationName: 'code-oss',\n            dataFolderName: '.vscode-oss',\n            urlProtocol: 'code-oss',\n            reportIssueUrl: 'https://github.com/microsoft/vscode/issues/new',\n            licenseName: 'MIT',\n            licenseUrl: 'https://github.com/microsoft/vscode/blob/main/LICENSE.txt',\n            serverLicenseUrl: 'https://github.com/microsoft/vscode/blob/main/LICENSE.txt'\n        });\n    }\n}\n/**\n * @deprecated You MUST use `IProductService` if possible.\n */\nexport default product;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,GAAG,QAAQ,iCAAiC;AACrD;AACA;AACA;AACA,IAAIC,OAAO;AACX;AACA,MAAMC,YAAY,GAAGC,UAAU,CAACC,MAAM;AACtC,IAAI,OAAOF,YAAY,KAAK,WAAW,IAAI,OAAOA,YAAY,CAACG,OAAO,KAAK,WAAW,EAAE;EACpF,MAAMC,aAAa,GAAGJ,YAAY,CAACG,OAAO,CAACC,aAAa,CAAC,CAAC;EAC1D,IAAIA,aAAa,EAAE;IACfL,OAAO,GAAGK,aAAa,CAACL,OAAO;EACnC,CAAC,MACI;IACD,MAAM,IAAIM,KAAK,CAAC,uEAAuE,CAAC;EAC5F;AACJ;AACA;AAAA,KACK,IAAIJ,UAAU,CAACK,oBAAoB,IAAIL,UAAU,CAACM,oBAAoB,EAAE;EACzE;EACAR,OAAO,GAAGE,UAAU,CAACK,oBAAoB;EACzC;EACA,IAAIR,GAAG,CAAC,YAAY,CAAC,EAAE;IACnBU,MAAM,CAACC,MAAM,CAACV,OAAO,EAAE;MACnBW,SAAS,EAAG,GAAEX,OAAO,CAACW,SAAU,MAAK;MACrCC,QAAQ,EAAG,GAAEZ,OAAO,CAACY,QAAS,MAAK;MACnCC,cAAc,EAAG,GAAEb,OAAO,CAACa,cAAe,MAAK;MAC/CC,oBAAoB,EAAEd,OAAO,CAACc,oBAAoB,GAAI,GAAEd,OAAO,CAACc,oBAAqB,MAAK,GAAGC;IACjG,CAAC,CAAC;EACN;EACA;EACA;EACA;EACA,IAAI,CAACf,OAAO,CAACgB,OAAO,EAAE;IAClB,MAAMC,GAAG,GAAGf,UAAU,CAACM,oBAAoB;IAC3CC,MAAM,CAACC,MAAM,CAACV,OAAO,EAAE;MACnBgB,OAAO,EAAEC,GAAG,CAACD;IACjB,CAAC,CAAC;EACN;AACJ;AACA;AAAA,KACK;EACD;EACAhB,OAAO,GAAG,CAAE,wCAAwC;EACpD;EACA,IAAIS,MAAM,CAACS,IAAI,CAAClB,OAAO,CAAC,CAACmB,MAAM,KAAK,CAAC,EAAE;IACnCV,MAAM,CAACC,MAAM,CAACV,OAAO,EAAE;MACnBgB,OAAO,EAAE,YAAY;MACrBL,SAAS,EAAE,gBAAgB;MAC3BC,QAAQ,EAAE,gBAAgB;MAC1BQ,eAAe,EAAE,UAAU;MAC3BP,cAAc,EAAE,aAAa;MAC7BQ,WAAW,EAAE,UAAU;MACvBC,cAAc,EAAE,gDAAgD;MAChEC,WAAW,EAAE,KAAK;MAClBC,UAAU,EAAE,2DAA2D;MACvEC,gBAAgB,EAAE;IACtB,CAAC,CAAC;EACN;AACJ;AACA;AACA;AACA;AACA,eAAezB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}